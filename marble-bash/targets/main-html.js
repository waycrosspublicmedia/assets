/**
 * Cooked with Flambe
 * https://github.com/aduros/flambe
 */
'use strict';
(function() {
    var ka, Ba, g, o, p, i, $, G, y, k, za, t, na, e, H, M, D, q, O, V, A, ha, ja, B, L, u, ra, v, x, N, K, Z, ta, oa, sa, ua, xa, ba, R, W, ma, E, m, h, fa, z, Q, X, da, ga, ca, U, Aa;

    function C(a, b) {
        function c() {}
        c.prototype = a;
        var d = new c,
            f;
        for (f in b) d[f] = b[f];
        return d
    }

    function Da(a) {
        return a instanceof Array ? function() {
            return S.iter(a)
        } : "function" == typeof a.iterator ? w(a, a.iterator) : a.iterator
    }

    function w(a, b) {
        var c = function() {
            return c.method.apply(c.scope, arguments)
        };
        c.scope = a;
        c.method = b;
        return c
    }
    var j = {},
        J = function() {
            return ba.__string_rec(this,
                "")
        },
        wa = function(a, b) {
            b = b.split("u").join("");
            this.r = RegExp(a, b)
        };
    j.EReg = wa;
    wa.__name__ = ["EReg"];
    wa.prototype = {
        matchedPos: function() {
            if (null == this.r.m) throw "No string matched";
            return {
                pos: this.r.m.index,
                len: this.r.m[0].length
            }
        },
        matched: function(a) {
            if (null != this.r.m && 0 <= a && a < this.r.m.length) a = this.r.m[a];
            else throw "EReg::matched";
            return a
        },
        match: function(a) {
            this.r.global && (this.r.lastIndex = 0);
            this.r.m = this.r.exec(a);
            this.r.s = a;
            return null != this.r.m
        },
        __class__: wa
    };
    var T = function() {
        this.h = {}
    };
    j.Hash =
        T;
    T.__name__ = ["Hash"];
    T.prototype = {
        iterator: function() {
            return {
                ref: this.h,
                it: this.keys(),
                hasNext: function() {
                    return this.it.hasNext()
                },
                next: function() {
                    return this.ref["$" + this.it.next()]
                }
            }
        },
        keys: function() {
            var a = [],
                b;
            for (b in this.h) this.h.hasOwnProperty(b) && a.push(b.substr(1));
            return S.iter(a)
        },
        remove: function(a) {
            a = "$" + a;
            if (!this.h.hasOwnProperty(a)) return !1;
            delete this.h[a];
            return !0
        },
        exists: function(a) {
            return this.h.hasOwnProperty("$" + a)
        },
        get: function(a) {
            return this.h["$" + a]
        },
        set: function(a, b) {
            this.h["$" +
                a] = b
        },
        __class__: T
    };
    var S = function() {};
    j.HxOverrides = S;
    S.__name__ = ["HxOverrides"];
    S.dateStr = function(a) {
        var b = a.getMonth() + 1,
            c = a.getDate(),
            d = a.getHours(),
            f = a.getMinutes(),
            n = a.getSeconds();
        return a.getFullYear() + "-" + (10 > b ? "0" + b : "" + b) + "-" + (10 > c ? "0" + c : "" + c) + " " + (10 > d ? "0" + d : "" + d) + ":" + (10 > f ? "0" + f : "" + f) + ":" + (10 > n ? "0" + n : "" + n)
    };
    S.strDate = function(a) {
        switch (a.length) {
            case 8:
                var a = a.split(":"),
                    b = new Date;
                b.setTime(0);
                b.setUTCHours(a[0]);
                b.setUTCMinutes(a[1]);
                b.setUTCSeconds(a[2]);
                return b;
            case 10:
                return a = a.split("-"),
                    new Date(a[0], a[1] - 1, a[2], 0, 0, 0);
            case 19:
                return a = a.split(" "), b = a[0].split("-"), a = a[1].split(":"), new Date(b[0], b[1] - 1, b[2], a[0], a[1], a[2]);
            default:
                throw "Invalid date format : " + a;
        }
    };
    S.cca = function(a, b) {
        var c = a.charCodeAt(b);
        return c != c ? void 0 : c
    };
    S.substr = function(a, b, c) {
        if (null != b && 0 != b && null != c && 0 > c) return "";
        null == c && (c = a.length);
        0 > b ? (b = a.length + b, 0 > b && (b = 0)) : 0 > c && (c = a.length + c - b);
        return a.substr(b, c)
    };
    S.remove = function(a, b) {
        for (var c = 0, d = a.length; c < d;) {
            if (a[c] == b) return a.splice(c, 1), !0;
            c++
        }
        return !1
    };
    S.iter = function(a) {
        return {
            cur: 0,
            arr: a,
            hasNext: function() {
                return this.cur < this.arr.length
            },
            next: function() {
                return this.arr[this.cur++]
            }
        }
    };
    var va = function() {
        this.h = {}
    };
    j.IntHash = va;
    va.__name__ = ["IntHash"];
    va.prototype = {
        keys: function() {
            var a = [],
                b;
            for (b in this.h) this.h.hasOwnProperty(b) && a.push(b | 0);
            return S.iter(a)
        },
        remove: function(a) {
            if (!this.h.hasOwnProperty(a)) return !1;
            delete this.h[a];
            return !0
        },
        exists: function(a) {
            return this.h.hasOwnProperty(a)
        },
        get: function(a) {
            return this.h[a]
        },
        set: function(a,
            b) {
            this.h[a] = b
        },
        __class__: va
    };
    var pa = function() {};
    j.Lambda = pa;
    pa.__name__ = ["Lambda"];
    pa.array = function(a) {
        for (var b = [], a = Da(a)(); a.hasNext();) {
            var c = a.next();
            b.push(c)
        }
        return b
    };
    pa.has = function(a, b, c) {
        if (null == c)
            for (c = Da(a)(); c.hasNext();) {
                if (a = c.next(), a == b) return !0
            } else
                for (var d = Da(a)(); d.hasNext();)
                    if (a = d.next(), c(a, b)) return !0;
        return !1
    };
    pa.count = function(a, b) {
        var c = 0;
        if (null == b)
            for (var d = Da(a)(); d.hasNext();) d.next(), c++;
        else
            for (d = Da(a)(); d.hasNext();) {
                var f = d.next();
                b(f) && c++
            }
        return c
    };
    pa.indexOf =
        function(a, b) {
            for (var c = 0, d = Da(a)(); d.hasNext();) {
                var f = d.next();
                if (b == f) return c;
                c++
            }
            return -1
        };
    var Ca = function() {
        this.length = 0
    };
    j.List = Ca;
    Ca.__name__ = ["List"];
    Ca.prototype = {
        iterator: function() {
            return {
                h: this.h,
                hasNext: function() {
                    return null != this.h
                },
                next: function() {
                    if (null == this.h) return null;
                    var a = this.h[0];
                    this.h = this.h[1];
                    return a
                }
            }
        },
        add: function(a) {
            a = [a];
            null == this.h ? this.h = a : this.q[1] = a;
            this.q = a;
            this.length++
        },
        __class__: Ca
    };
    var ia = function() {};
    j.Reflect = ia;
    ia.__name__ = ["Reflect"];
    ia.field = function(a,
        b) {
        var c = null;
        try {
            c = a[b]
        } catch (d) {}
        return c
    };
    ia.setProperty = function(a, b, c) {
        var d;
        if (a.__properties__ && (d = a.__properties__["set_" + b])) a[d](c);
        else a[b] = c
    };
    ia.fields = function(a) {
        var b = [];
        if (null != a) {
            var c = Object.prototype.hasOwnProperty,
                d;
            for (d in a) c.call(a, d) && b.push(d)
        }
        return b
    };
    ia.isFunction = function(a) {
        return "function" == typeof a && !(a.__name__ || a.__ename__)
    };
    ia.compareMethods = function(a, b) {
        return a == b ? !0 : !ia.isFunction(a) || !ia.isFunction(b) ? !1 : a.scope == b.scope && a.method == b.method && null != a.method
    };
    var I = function() {};
    j.Std = I;
    I.__name__ = ["Std"];
    I.string = function(a) {
        return ba.__string_rec(a, "")
    };
    I.parseInt = function(a) {
        var b = parseInt(a, 10);
        if (0 == b && (120 == S.cca(a, 1) || 88 == S.cca(a, 1))) b = parseInt(a);
        return isNaN(b) ? null : b
    };
    I.parseFloat = function(a) {
        return parseFloat(a)
    };
    var ya = function() {
        this.b = ""
    };
    j.StringBuf = ya;
    ya.__name__ = ["StringBuf"];
    ya.prototype = {
        __class__: ya
    };
    var qa = function() {};
    j.StringTools = qa;
    qa.__name__ = ["StringTools"];
    qa.urlEncode = function(a) {
        return encodeURIComponent(a)
    };
    qa.urlDecode = function(a) {
        return decodeURIComponent(a.split("+").join(" "))
    };
    qa.startsWith = function(a, b) {
        return a.length >= b.length && S.substr(a, 0, b.length) == b
    };
    qa.isSpace = function(a, b) {
        var c = S.cca(a, b);
        return 9 <= c && 13 >= c || 32 == c
    };
    qa.ltrim = function(a) {
        for (var b = a.length, c = 0; c < b && qa.isSpace(a, c);) c++;
        return 0 < c ? S.substr(a, c, b - c) : a
    };
    qa.rtrim = function(a) {
        for (var b = a.length, c = 0; c < b && qa.isSpace(a, b - c - 1);) c++;
        return 0 < c ? S.substr(a, 0, b - c) : a
    };
    qa.trim = function(a) {
        return qa.ltrim(qa.rtrim(a))
    };
    qa.replace = function(a, b, c) {
        return a.split(b).join(c)
    };
    var aa = j.ValueType = {
        __ename__: ["ValueType"],
        __constructs__: "TNull,TInt,TFloat,TBool,TObject,TFunction,TClass,TEnum,TUnknown".split(",")
    };
    aa.TNull = ["TNull", 0];
    aa.TNull.toString = J;
    aa.TNull.__enum__ = aa;
    aa.TInt = ["TInt", 1];
    aa.TInt.toString = J;
    aa.TInt.__enum__ = aa;
    aa.TFloat = ["TFloat", 2];
    aa.TFloat.toString = J;
    aa.TFloat.__enum__ = aa;
    aa.TBool = ["TBool", 3];
    aa.TBool.toString = J;
    aa.TBool.__enum__ = aa;
    aa.TObject = ["TObject", 4];
    aa.TObject.toString = J;
    aa.TObject.__enum__ = aa;
    aa.TFunction = ["TFunction", 5];
    aa.TFunction.toString = J;
    aa.TFunction.__enum__ = aa;
    aa.TClass = function(a) {
        a = ["TClass", 6, a];
        a.__enum__ = aa;
        a.toString = J;
        return a
    };
    aa.TEnum = function(a) {
        a = ["TEnum", 7, a];
        a.__enum__ = aa;
        a.toString = J;
        return a
    };
    aa.TUnknown = ["TUnknown", 8];
    aa.TUnknown.toString = J;
    aa.TUnknown.__enum__ = aa;
    var la = function() {};
    j.Type = la;
    la.__name__ = ["Type"];
    la.getClassName = function(a) {
        return a.__name__.join(".")
    };
    la.getEnumName = function(a) {
        return a.__ename__.join(".")
    };
    la.resolveClass = function(a) {
        a = j[a];
        return null == a || !a.__name__ ? null : a
    };
    la.resolveEnum = function(a) {
        a = j[a];
        return null == a || !a.__ename__ ? null :
            a
    };
    la.createInstance = function(a, b) {
        switch (b.length) {
            case 0:
                return new a;
            case 1:
                return new a(b[0]);
            case 2:
                return new a(b[0], b[1]);
            case 3:
                return new a(b[0], b[1], b[2]);
            case 4:
                return new a(b[0], b[1], b[2], b[3]);
            case 5:
                return new a(b[0], b[1], b[2], b[3], b[4]);
            case 6:
                return new a(b[0], b[1], b[2], b[3], b[4], b[5]);
            case 7:
                return new a(b[0], b[1], b[2], b[3], b[4], b[5], b[6]);
            case 8:
                return new a(b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7]);
            default:
                throw "Too many arguments";
        }
    };
    la.createEmptyInstance = function(a) {
        function b() {}
        b.prototype = a.prototype;
        return new b
    };
    la.createEnum = function(a, b, c) {
        var d = ia.field(a, b);
        if (null == d) throw "No such constructor " + b;
        if (ia.isFunction(d)) {
            if (null == c) throw "Constructor " + b + " need parameters";
            return d.apply(a, c)
        }
        if (null != c && 0 != c.length) throw "Constructor " + b + " does not need parameters";
        return d
    };
    la.getEnumConstructs = function(a) {
        return a.__constructs__.slice()
    };
    la["typeof"] = function(a) {
        switch (typeof a) {
            case "boolean":
                return aa.TBool;
            case "string":
                return aa.TClass(String);
            case "number":
                return Math.ceil(a) ==
                    a % 2147483648 ? aa.TInt : aa.TFloat;
            case "object":
                if (null == a) return aa.TNull;
                var b = a.__enum__;
                if (null != b) return aa.TEnum(b);
                a = a.__class__;
                return null != a ? aa.TClass(a) : aa.TObject;
            case "function":
                return a.__name__ || a.__ename__ ? aa.TObject : aa.TFunction;
            case "undefined":
                return aa.TNull;
            default:
                return aa.TUnknown
        }
    };
    var P = function() {};
    j.Xml = P;
    P.__name__ = ["Xml"];
    P.parse = function(a) {
        return Z.Parser.parse(a)
    };
    P.createElement = function(a) {
        var b = new P;
        b.nodeType = P.Element;
        b._children = [];
        b._attributes = new T;
        b.setNodeName(a);
        return b
    };
    P.createPCData = function(a) {
        var b = new P;
        b.nodeType = P.PCData;
        b.setNodeValue(a);
        return b
    };
    P.createCData = function(a) {
        var b = new P;
        b.nodeType = P.CData;
        b.setNodeValue(a);
        return b
    };
    P.createComment = function(a) {
        var b = new P;
        b.nodeType = P.Comment;
        b.setNodeValue(a);
        return b
    };
    P.createDocType = function(a) {
        var b = new P;
        b.nodeType = P.DocType;
        b.setNodeValue(a);
        return b
    };
    P.createProlog = function(a) {
        var b = new P;
        b.nodeType = P.Prolog;
        b.setNodeValue(a);
        return b
    };
    P.createDocument = function() {
        var a = new P;
        a.nodeType = P.Document;
        a._children = [];
        return a
    };
    P.prototype = {
        toString: function() {
            if (this.nodeType == P.PCData) return this._nodeValue;
            if (this.nodeType == P.CData) return "<![CDATA[" + this._nodeValue + "]]\>";
            if (this.nodeType == P.Comment) return "<\!--" + this._nodeValue + "--\>";
            if (this.nodeType == P.DocType) return "<!DOCTYPE " + this._nodeValue + ">";
            if (this.nodeType == P.Prolog) return "<?" + this._nodeValue + "?>";
            var a = new ya;
            if (this.nodeType == P.Element) {
                a.b += I.string("<");
                a.b += I.string(this._nodeName);
                for (var b = this._attributes.keys(); b.hasNext();) {
                    var c =
                        b.next();
                    a.b += I.string(" ");
                    a.b += I.string(c);
                    a.b += I.string('="');
                    a.b += I.string(this._attributes.get(c));
                    a.b += I.string('"')
                }
                if (0 == this._children.length) return a.b += I.string("/>"), a.b;
                a.b += I.string(">")
            }
            for (b = this.iterator(); b.hasNext();) c = b.next(), a.b += I.string(c.toString());
            this.nodeType == P.Element && (a.b += I.string("</"), a.b += I.string(this._nodeName), a.b += I.string(">"));
            return a.b
        },
        addChild: function(a) {
            if (null == this._children) throw "bad nodetype";
            null != a._parent && S.remove(a._parent._children, a);
            a._parent =
                this;
            this._children.push(a)
        },
        firstElement: function() {
            if (null == this._children) throw "bad nodetype";
            for (var a = 0, b = this._children.length; a < b;) {
                var c = this._children[a];
                if (c.nodeType == P.Element) return c;
                a++
            }
            return null
        },
        elementsNamed: function(a) {
            if (null == this._children) throw "bad nodetype";
            return {
                cur: 0,
                x: this._children,
                hasNext: function() {
                    for (var b = this.cur, c = this.x.length; b < c;) {
                        var d = this.x[b];
                        if (d.nodeType == P.Element && d._nodeName == a) break;
                        b++
                    }
                    this.cur = b;
                    return b < c
                },
                next: function() {
                    for (var b = this.cur, c =
                            this.x.length; b < c;) {
                        var d = this.x[b];
                        b++;
                        if (d.nodeType == P.Element && d._nodeName == a) return this.cur = b, d
                    }
                    return null
                }
            }
        },
        elements: function() {
            if (null == this._children) throw "bad nodetype";
            return {
                cur: 0,
                x: this._children,
                hasNext: function() {
                    for (var a = this.cur, b = this.x.length; a < b && !(this.x[a].nodeType == P.Element);) a += 1;
                    this.cur = a;
                    return a < b
                },
                next: function() {
                    for (var a = this.cur, b = this.x.length; a < b;) {
                        var c = this.x[a],
                            a = a + 1;
                        if (c.nodeType == P.Element) return this.cur = a, c
                    }
                    return null
                }
            }
        },
        iterator: function() {
            if (null == this._children) throw "bad nodetype";
            return {
                cur: 0,
                x: this._children,
                hasNext: function() {
                    return this.cur < this.x.length
                },
                next: function() {
                    return this.x[this.cur++]
                }
            }
        },
        exists: function(a) {
            if (this.nodeType != P.Element) throw "bad nodeType";
            return this._attributes.exists(a)
        },
        set: function(a, b) {
            if (this.nodeType != P.Element) throw "bad nodeType";
            this._attributes.set(a, b)
        },
        get: function(a) {
            if (this.nodeType != P.Element) throw "bad nodeType";
            return this._attributes.get(a)
        },
        getParent: function() {
            return this._parent
        },
        setNodeValue: function(a) {
            if (this.nodeType ==
                P.Element || this.nodeType == P.Document) throw "bad nodeType";
            return this._nodeValue = a
        },
        getNodeValue: function() {
            if (this.nodeType == P.Element || this.nodeType == P.Document) throw "bad nodeType";
            return this._nodeValue
        },
        setNodeName: function(a) {
            if (this.nodeType != P.Element) throw "bad nodeType";
            return this._nodeName = a
        },
        getNodeName: function() {
            if (this.nodeType != P.Element) throw "bad nodeType";
            return this._nodeName
        },
        __class__: P,
        __properties__: {
            set_nodeName: "setNodeName",
            get_nodeName: "getNodeName",
            set_nodeValue: "setNodeValue",
            get_nodeValue: "getNodeValue"
        }
    };
    ka = function() {};
    Ba = void 0;
    g = void 0;
    o = void 0;
    p = void 0;
    j["com.nick.spongebob.marble_bash.DocumentApp"] = ka;
    ka.__name__ = ["com", "nick", "spongebob", "marble_bash", "DocumentApp"];
    ka.main = function() {
        W.init();
        ka._fillEntity = new ma;
        ka._fillSprite = new E.FillSprite(0, 960, 560);
        ka._fillEntity.add(ka._fillSprite);
        W.root.addChild(ka._fillEntity);
        i.JSEmbedProxy.getIsCrossdomain() ? i.WorkinCloud.instance._getAssets().setCrossdomainBaseUrl(ka.appendAssetsToUrl(i.JSEmbedProxy.getBase())) :
            i.WorkinCloud.instance._getAssets()._setBaseUrl(ka.trimUrl(i.JSEmbedProxy.getBase()));
        i.WorkinCloud.instance._getDispatcher().addEventListener($.ConstantsCloud.EVENT_FILES_LOADED, ka._onBootstrapLoad);
        i.WorkinCloud.instance._getAssets().addPackDef("bootstrap");
        i.WorkinCloud.instance._getAssets().loadPack("bootstrap")
    };
    ka._onBootstrapLoad = function() {
        i.WorkinCloud.instance._getDispatcher().removeEventListener($.ConstantsCloud.EVENT_FILES_LOADED, ka._onBootstrapLoad);
        ka._initServices();
        ta.delay(ka._initMain,
            800)
    };
    ka._initMain = function() {
        ka._main = new Ba
    };
    ka._initServices = function() {
        for (var a = i.WorkinCloud.instance._getAssets().getXML(g.ConstantsApp.CONFIG_XML_PATH).node.resolve("services").nodes.resolve("service").iterator(); a.hasNext();) {
            var b = a.next();
            switch (b.att.resolve("type").toString()) {
                case "analytics":
                    "true" == b.att.resolve("enabled").toString() && (i.WorkinCloud.instance.log("[DocumentApp](_initServices) initAnalytics"), G.ServiceAnalytics.init(b.att.resolve("id").toString()));
                    break;
                case "canadaTracking":
                    "true" ==
                    b.att.resolve("enabled").toString() && (i.WorkinCloud.instance.log("[DocumentApp](_initServices) initCanadaTracking"), G.ServiceAnalytics.enableCanadaTracking(b.att.resolve("showGameTitle").toString()));
                    break;
                case "nickavatar":
                    "true" == b.att.resolve("enabled").toString() ? (i.WorkinCloud.instance.log("[DocumentApp](_initServices) initNickAvatar"), G.ServiceNickAvatar._getInstance().enable(b.att.resolve("url").toString())) : G.ServiceNickAvatar._getInstance().disable();
                    break;
                case "leaderboard":
                    "true" == b.att.resolve("enabled").toString() ?
                        (i.WorkinCloud.instance.log("[DocumentApp](_initServices) initLeaderboard"), G.ServiceNickLeaderboard._getInstance().enable(b.att.resolve("url").toString(), b.att.resolve("keyword").toString())) : G.ServiceNickLeaderboard._getInstance().disable()
            }
        }
    };
    ka.trimUrl = function(a) {
        if ("" == a) return "";
        if (0 > a.indexOf("http")) return "/" == a.charAt(0) && (a = S.substr(a, 1, a.length - 1)), a;
        var b = a.indexOf("http://");
        0 > b ? (b = a.indexOf("https://"), b = 0 > b ? 0 : b + 8) : b += 7;
        b = a.indexOf("/", b);
        a = S.substr(a, b, a.length - b);
        return a = ka.appendAssetsToUrl(a)
    };
    ka.appendAssetsToUrl = function(a) {
        if (0 == a.length) return a;
        "/" != a.charAt(a.length - 1) && (a += "/");
        a.indexOf("/assets") < a.length - 9 && (a += "assets/");
        return a
    };
    Ba = function() {
        this._RATE_REFRESH_SCALE = 0.4;
        i.WorkinCloud.instance.log("[Main] Constructed");
        this._timeline = W.root;
        W.uncaughtError.connect(w(this, this.errorHandler));
        i.WorkinCloud.instance._getInput().prime();
        this._scaleSprite = new E.Sprite;
        this._timeline.add(this._scaleSprite);
        this._layerWorld = new ma;
        this._layerUI = new ma;
        this._timeline.addChild(this._layerWorld);
        this._timeline.addChild(this._layerUI);
        this._dt = 0;
        this._timerRefreshScale = 0.0010;
        this._isUIActive = this._isWorldActive = !1;
        this._flagFirstPlay = !0;
        this._flagInitialLoadComplete = this._flagWebAudioUnlocked = !1;
        this._flagGameplayPaused = !0;
        this._flagJSEmbedExists = this._flagJSEmbedPauseState = !1;
        ba.__instanceof(W._platform.getStage(), m.html.HtmlStage) && (g.ConstantsApp.scaleFactor = ba.__cast(W._platform.getStage(), m.html.HtmlStage).scaleFactor);
        this._flagJSEmbedExists = i.JSEmbedProxy.getExists();
        this._changeActions = [];
        this._flowstack = [];
        this._addEventListeners();
        this._beginEngine()
    };
    j["com.nick.spongebob.marble_bash.Main"] = Ba;
    Ba.__name__ = ["com", "nick", "spongebob", "marble_bash", "Main"];
    Ba.prototype = {
        _disposeWorld: function() {
            this._isWorldActive && (this._isWorldActive = !1, this._world.dispose(), this._world = null)
        },
        _onEventInterfaceChange: function(a) {
            this._executeInterfaceChange(a.flowId, a.screenId)
        },
        _handleWebAudioUnlock: function() {
            this._flagWebAudioUnlocked || (this._flagWebAudioUnlocked = !0, i.WorkinCloud.instance._getSound().playSound("audio/silent"))
        },
        _onEventFilesLoading: function(a) {
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_LOADING_PROGRESS, a._getData().value)
        },
        _onEventInput: function(a) {
            this._handleWebAudioUnlock();
            i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_ORIENTATION_ALERT) || this._ui.handleInput(a) && this._isWorldActive && this._world.handleInput(a)
        },
        _onFlowEvent: function(a) {
            this._addFlowEvent(a.flowId)
        },
        _onMuteToggle: function() {
            i.WorkinCloud.instance._getSound().setMute(!i.WorkinCloud.instance._getSound().getMute())
        },
        _enableInput: function() {
            i.WorkinCloud.instance._getDispatcher().addEventListener(y.WMEventInput.EVENT_INPUT,
                w(this, this._onEventInput))
        },
        _addEventListeners: function() {
            i.WorkinCloud.instance._getDispatcher().addEventListener(y.WMEventUpdate.EVENT_UPDATE, w(this, this._onEventUpdate));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_MUTE_TOGGLE, w(this, this._onMuteToggle));
            i.WorkinCloud.instance._getDispatcher().addEventListener(y.WMEventFlow.EVENT_FLOW, w(this, this._onFlowEvent));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_WORLD_GENERATION_COMPLETE,
                w(this, this._onWorldGenerationComplete));
            i.WorkinCloud.instance._getDispatcher().addEventListener($.ConstantsCloud.EVENT_FILES_LOADING, w(this, this._onEventFilesLoading))
        },
        _executeInterfaceChange: function(a, b) {
            for (var c = this._changeActions.length; 0 < c;) c--, this._changeActions[c]._getScreenId() == b && this._changeActions[c]._getChangeEvent() == a && (this._changeActions[c]._getAction()(), this._changeActions.splice(c, 1))
        },
        _unpauseGameplay: function(a) {
            null == a && (a = !0);
            a && (this._flagGameplayPaused = !1);
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_UNPAUSE))
        },
        _pauseGameplay: function(a) {
            null == a && (a = !0);
            a && (this._flagGameplayPaused = !0);
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_PAUSE))
        },
        _executeFlowStack: function(a) {
            if (!this._ui._getHasTransition()) switch (i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_INPUT_LOCK, !1), a) {
                case g.ConstantsScreen.FLOW_START:
                    i.WorkinCloud.instance._getSound().playMusicLoop(["sbmb_gamemusicloop_v8a", "sbmb_gamemusicloop_v8b"]);
                    this._ui.changeScreenTo(g.ConstantsScreen.SCREEN_START, !1);
                    break;
                case g.ConstantsScreen.FLOW_LEVEL_SELECT:
                    this._ui.openScreen(g.ConstantsScreen.SCREEN_LEVEL_SELECT, !1);
                    break;
                case g.ConstantsScreen.FLOW_LEVEL_SELECT_CLOSE:
                    this._ui.closeScreen(g.ConstantsScreen.SCREEN_LEVEL_SELECT);
                    break;
                case g.ConstantsScreen.FLOW_SPLASH_PLAY:
                    G.ServiceAnalytics.sendCanadaTrackingCall("play");
                    this._gotoAndPlayGame();
                    break;
                case g.ConstantsScreen.FLOW_GAMEPLAY_MENU_HELP:
                    this._ui.openScreen(g.ConstantsScreen.SCREEN_HELP, !1);
                    G.ServiceAnalytics.sendMilestone("custom3");
                    break;
                case g.ConstantsScreen.FLOW_HELP_CLOSE:
                    this._ui.closeScreen(g.ConstantsScreen.SCREEN_HELP);
                    break;
                case g.ConstantsScreen.FLOW_GAMEPLAY_MENU:
                    i.WorkinCloud.instance.log("[Main] Main Menu Flow Click");
                    this._pauseGameplay();
                    this._ui.openScreen(g.ConstantsScreen.SCREEN_GAMEPLAY_MENU, !1);
                    break;
                case g.ConstantsScreen.FLOW_GAMEPLAY_MENU_CLOSE:
                    this._unpauseGameplay();
                    this._ui.closeScreen(g.ConstantsScreen.SCREEN_GAMEPLAY_MENU);
                    break;
                case g.ConstantsScreen.FLOW_GAMEPLAY_MENU_SOUND:
                    this._ui.openScreen(g.ConstantsScreen.SCREEN_SOUND, !1);
                    break;
                case g.ConstantsScreen.FLOW_GAMEPLAY_MENU_SOUND_CLOSE:
                    this._ui.closeScreen(g.ConstantsScreen.SCREEN_SOUND);
                    break;
                case g.ConstantsScreen.FLOW_GAMEPLAY_MENU_QUIT:
                    this._ui.openScreen(g.ConstantsScreen.SCREEN_QUIT_CONFIRM, !1);
                    break;
                case g.ConstantsScreen.FLOW_GAMEPLAY_QUIT_YES:
                    i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_SAVE));
                    this._ui.closeScreen(g.ConstantsScreen.SCREEN_QUIT_CONFIRM);
                    this._ui.closeScreen(g.ConstantsScreen.SCREEN_GAMEPLAY_MENU);
                    this._resetFlagsResults();
                    i.WorkinCloud.instance._getSound().stopMusic();
                    i.WorkinCloud.instance._getSound().playSound("sbmsg_transitionv3");
                    this._gotoEndGame(!1);
                    break;
                case g.ConstantsScreen.FLOW_GAMEPLAY_QUIT_NO:
                    this._ui.closeScreen(g.ConstantsScreen.SCREEN_QUIT_CONFIRM);
                    break;
                case g.ConstantsScreen.FLOW_BRANCH_GAME_WIN:
                    this._pauseGameplay();
                    this._resetFlagsResults();
                    this._gotoEndGame(!0);
                    break;
                case g.ConstantsScreen.FLOW_BRANCH_GAME_LOSE:
                    i.WorkinCloud.instance._getSound().stopMusic();
                    i.WorkinCloud.instance._getSound().playSound("sbmsg_transitionv3");
                    this._pauseGameplay();
                    this._resetFlagsResults();
                    this._gotoEndGame(!1);
                    break;
                case g.ConstantsScreen.FLOW_END_GAME_START:
                    this._disposeWorld();
                    this._onGameNew();
                    i.WorkinCloud.instance._getSound().playMusicLoop(["sbmb_gamemusicloop_v8a", "sbmb_gamemusicloop_v8b"]);
                    this._ui.changeScreenTo(g.ConstantsScreen.SCREEN_START, !1);
                    break;
                case g.ConstantsScreen.FLOW_END_GAME_PLAY_AGAIN:
                    this._disposeWorld(), G.ServiceAnalytics.sendCanadaTrackingCall("replay"), this._onGameNew(), this._gotoAndPlayGame()
            }
        },
        _runFlowStack: function() {
            if (0 !=
                this._flowstack.length)
                for (; 0 < this._flowstack.length;) this._executeFlowStack(this._flowstack[0]), this._flowstack.shift()
        },
        _addFlowEvent: function(a) {
            this._flowstack.push(a)
        },
        _hideOrientationAlert: function() {
            i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_ORIENTATION_ALERT) && (i.WorkinCloud.instance.log("[Main](_showOrientationAlert) Back to landscape."), i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_ORIENTATION_ALERT, !1), i.JSEmbedProxy.unpause(), i.JSEmbedProxy.alertOff())
        },
        _showOrientationAlert: function() {
            i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_ORIENTATION_ALERT) ||
                (i.WorkinCloud.instance.log("[Main](_showOrientationAlert) Portrait mode!"), i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_ORIENTATION_ALERT, !0), i.JSEmbedProxy.pause(), i.JSEmbedProxy.alertOn(i.WorkinCloud.instance._getLocalize().getData("orientation_landscape")._getString()))
        },
        _onEventUpdate: function(a) {
            this._dt = a.getDt();
            0.12 < this._dt && (this._dt = 0.12);
            if (this._flagJSEmbedExists && (i.JSEmbedProxy.getIsPaused() != this._flagJSEmbedPauseState && ((this._flagJSEmbedPauseState = i.JSEmbedProxy.getIsPaused()) ?
                    this._pauseGameplay(!1) : this._flagGameplayPaused || this._unpauseGameplay()), this._timerRefreshScale -= this._dt, 0 >= this._timerRefreshScale)) {
                this._timerRefreshScale = this._RATE_REFRESH_SCALE;
                if (this._flagInitialLoadComplete && i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TOUCH_DEVICE)) {
                    if (i.JSEmbedProxy.getCanvasHeight() > i.JSEmbedProxy.getCanvasWidth()) {
                        this._showOrientationAlert();
                        return
                    }
                    if (i.WorkinCloud.instance.getValue(g.ConstantsApp.BOOL_ORIENTATION_ALERT)) {
                        this._hideOrientationAlert();
                        return
                    }
                }
                this._flagJSEmbedExists &&
                    (a = i.JSEmbedProxy.getCanvasScale() * g.ConstantsApp.scaleFactor, a != this._scaleSprite.scaleX._value && (this._scaleSprite.scaleX.set__(this._scaleSprite.scaleY.set__(a)), i.WorkinCloud.instance._getInput()._setScale(a)))
            }
            k.tween.WorkinTweener._getInstance().update(this._dt);
            i.WorkinCloud.instance.update(this._dt);
            this._isUIActive && this._ui.update(this._dt);
            this._isWorldActive && (this._world.update(this._dt), this._world.render());
            i.WorkinCloud.instance._getSound().update(this._dt);
            i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_GAME_LOSE) ?
                this._onFlowEvent(new y.WMEventFlow(g.ConstantsScreen.FLOW_BRANCH_GAME_LOSE)) : i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_GAME_WIN) ? this._onFlowEvent(new y.WMEventFlow(g.ConstantsScreen.FLOW_BRANCH_GAME_WIN)) : i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_LEVEL_LOSE) ? this._onFlowEvent(new y.WMEventFlow(g.ConstantsScreen.FLOW_BRANCH_LEVEL_LOSE)) : i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_LEVEL_WIN) && this._onFlowEvent(new y.WMEventFlow(g.ConstantsScreen.FLOW_BRANCH_LEVEL_WIN));
            this._runFlowStack()
        },
        _generateWorld: function() {
            this._isWorldActive && this._disposeWorld();
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_INPUT_LOCK, !0);
            this._isWorldActive = !0;
            this._world = new o.World(this._layerWorld)
        },
        _resetFlagsResults: function() {
            i.WorkinCloud.instance.resetValue(g.ConstantsApp.BOOL_GAME_WIN);
            i.WorkinCloud.instance.resetValue(g.ConstantsApp.BOOL_GAME_LOSE);
            i.WorkinCloud.instance.resetValue(g.ConstantsApp.BOOL_LEVEL_WIN);
            i.WorkinCloud.instance.resetValue(g.ConstantsApp.BOOL_LEVEL_LOSE)
        },
        _onGameNew: function() {
            this._resetFlagsResults();
            i.WorkinCloud.instance.sharedObjectDelete(g.ConstantsApp.SAVE_LEVEL);
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_RESUME, !1);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_LEVEL, 1);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_SCORE, 0);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_LEVEL_PROGRESS, 0);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_MULTIPLIER, 0);
            i.WorkinCloud.instance.setString(g.ConstantsApp.STRING_BONUS, "");
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_CLEAR_ALL_HIDE));
            this._disposeWorld()
        },
        _gotoEndGame: function(a) {
            this._flagWonPreviousGame = a;
            this._ui.openScreen(g.ConstantsScreen.SCREEN_END_GAME, !1);
            G.ServiceAnalytics.sendMilestone("custom7")
        },
        _gotoSplash: function() {
            this._enableInput();
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_INPUT_LOCK, !1);
            this._ui.changeScreenTo(g.ConstantsScreen.SCREEN_SPLASH, !1, g.ConstantsScreen.TRANSITION_SCROLL_DOWN);
            G.ServiceAnalytics.sendMilestone("custom2")
        },
        _onWorldGenerationComplete: function() {
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_INPUT_LOCK, !1);
            this._world.start();
            this._ui.changeScreenTo(g.ConstantsScreen.SCREEN_GAMEPLAY_HUD, !1);
            this._unpauseGameplay();
            G.ServiceAnalytics.sendMilestone("custom6")
        },
        _gotoAndPlayGame: function() {
            this._loadChunks(["gameplay"], w(this, this._eventLoadCompleteGameplay), 1200) && (this._isWorldActive ? i.WorkinCloud.instance.log("[Main](_gotoAndPlayGame) World already exists. Using existing world instead of creating new one.") : this._generateWorld())
        },
        _generateUI: function() {
            this._isUIActive = !0;
            this._ui.addScreen(g.ConstantsScreen.SCREEN_LEVEL_SELECT,
                p.screens.ScreenLevelSelect);
            this._ui.addScreen(g.ConstantsScreen.SCREEN_LOADING, p.screens.ScreenLoading);
            this._ui.addScreen(g.ConstantsScreen.SCREEN_SPLASH, p.screens.ScreenSplash, "ui/splash/splash_bg");
            this._ui.addScreen(g.ConstantsScreen.SCREEN_HELP, p.screens.ScreenHelp);
            this._ui.addScreen(g.ConstantsScreen.SCREEN_GAMEPLAY_MENU, p.screens.ScreenGameplayMenu);
            this._ui.addScreen(g.ConstantsScreen.SCREEN_QUIT_CONFIRM, p.screens.ScreenQuitConfirm);
            this._ui.addScreen(g.ConstantsScreen.SCREEN_GAMEPLAY_HUD,
                p.screens.ScreenGameplayHUD);
            this._ui.addScreen(g.ConstantsScreen.SCREEN_END_GAME, p.screens.ScreenEndGame);
            this._ui.addScreen(g.ConstantsScreen.SCREEN_PAUSE_ALERT, p.screens.ScreenPauseAlert);
            this._ui.addScreen(g.ConstantsScreen.SCREEN_SOUND, p.screens.ScreenSound);
            this._ui.addScreen(g.ConstantsScreen.SCREEN_START, p.screens.ScreenStart, "ui/splash/splash_bg");
            this._ui.addEventListener(y.WMEventInterfaceChange.EVENT_INTERFACE_OUTPUT, w(this, this._onEventInterfaceChange))
        },
        _registerInput: function() {
            i.WorkinCloud.instance._getInput().registerInput(g.ConstantsApp.INPUT_SPACE, [h.Key.Space]);
            i.WorkinCloud.instance._getInput().registerInput(g.ConstantsApp.INPUT_LEFT, [h.Key.Left, h.Key.A]);
            i.WorkinCloud.instance._getInput().registerInput(g.ConstantsApp.INPUT_RIGHT, [h.Key.Right, h.Key.D]);
            i.WorkinCloud.instance._getInput().registerInput(g.ConstantsApp.INPUT_UP, [h.Key.Up, h.Key.W]);
            i.WorkinCloud.instance._getInput().registerInput(g.ConstantsApp.INPUT_DOWN, [h.Key.Down, h.Key.S]);
            i.WorkinCloud.instance._getInput().registerInput(g.ConstantsApp.INPUT_Z, [h.Key.Z]);
            i.WorkinCloud.instance._getInput().registerInput(g.ConstantsApp.INPUT_X, [h.Key.X]);
            i.WorkinCloud.instance._getInput().registerInput(g.ConstantsApp.INPUT_C, [h.Key.C]);
            i.WorkinCloud.instance._getInput().registerInput(g.ConstantsApp.INPUT_P, [h.Key.P])
        },
        _setDefaults: function() {
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_PAUSED, !1);
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_GAME_WIN, !1);
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_GAME_LOSE, !1);
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_LEVEL_WIN, !1);
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_LEVEL_LOSE, !1);
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_INPUT_LOCK, !1);
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_ORIENTATION_ALERT, !1);
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_TOUCH_DEVICE, W._platform.getTouch().get_supported());
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_RESUME, !1);
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_TUTORIAL, !0);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_LEVEL, 1);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_HEALTH, 3);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_LIVES,
                3);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_SCORE, 0);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_LOADING_PROGRESS, 0);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_MULTIPLIER, 0);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_LEVEL_PROGRESS, 0);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_NOTE_TYPE, 0);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_TUTORIAL_STEP, 0);
            i.WorkinCloud.instance.setFloat(g.ConstantsApp.FLOAT_VOLUME_MUSIC, 0.5);
            i.WorkinCloud.instance.setFloat(g.ConstantsApp.FLOAT_VOLUME_SOUND,
                1);
            i.WorkinCloud.instance.setFloat(g.ConstantsApp.FLOAT_TIMER, 120);
            i.WorkinCloud.instance.setString(g.ConstantsApp.STRING_BONUS, "");
            i.WorkinCloud.instance._getSound().setMute(g.ConstantsApp.OPTION_SILENCE_AUDIO)
        },
        _beginEngine: function() {
            i.WorkinCloud.instance.log("[Main](_beginEngine)");
            this._timeline.add(new za.ComponentUpdater);
            this._parseConfigXML();
            this._ui = new p.ScreenManager(this._layerUI);
            this._setDefaults();
            this._generateUI();
            this._registerInput();
            this._beginInitialLoad()
        },
        _eventLoadCompleteInitial: function() {
            i.WorkinCloud.instance._getDispatcher().removeEventListener($.ConstantsCloud.EVENT_FILES_LOADED,
                this._loadCallbackMethod);
            this._flagInitialLoadComplete = !0;
            ta.delay(w(this, this._gotoSplash), 1200)
        },
        _eventLoadCompleteGameplay: function() {
            i.WorkinCloud.instance._getDispatcher().removeEventListener($.ConstantsCloud.EVENT_FILES_LOADED, this._loadCallbackMethod);
            ta.delay(w(this, this._gotoAndPlayGame), 1200)
        },
        _loadChunksDelayCallback: function() {
            this._loadChunks(this._loadChunksCurrent, this._loadCallbackMethod, 0)
        },
        _loadChunks: function(a, b, c) {
            null == c && (c = 0);
            for (var d = 0, f = !0; d < a.length;) i.WorkinCloud.instance._getAssets().isChunkLoaded(a[d]) ||
                (f = !1), d++;
            if (f) return !0;
            i.WorkinCloud.instance._getAssets().isLoading() || i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_LOADING_PROGRESS, 0);
            this._loadChunksCurrent = a;
            this._loadCallbackMethod = b;
            if (0 < c) return ta.delay(w(this, this._loadChunksDelayCallback), c), this._ui.changeScreenTo(g.ConstantsScreen.SCREEN_LOADING, !1, g.ConstantsScreen.TRANSITION_SCROLL_UP), !1;
            i.WorkinCloud.instance._getDispatcher().addEventListener($.ConstantsCloud.EVENT_FILES_LOADED, this._loadCallbackMethod);
            for (d = 0; d < a.length;) i.WorkinCloud.instance._getAssets().isChunkLoaded(a[d]) ||
                i.WorkinCloud.instance._getAssets().loadChunk(a[d]), d++;
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_INPUT_LOCK, !0);
            this._ui.changeScreenTo(g.ConstantsScreen.SCREEN_LOADING, !1, g.ConstantsScreen.TRANSITION_SCROLL_UP);
            return !1
        },
        _beginInitialLoad: function() {
            this._loadChunks(["initial"], w(this, this._eventLoadCompleteInitial), 1200);
            i.WorkinCloud.instance._getAssets().loadFolder("fonts_" + i.WorkinCloud.instance.getString($.ConstantsCloud.STRING_REGION_ID))
        },
        _parseConfigXML: function() {
            i.WorkinCloud.instance.log("[Main](_parseConfigXML) Parse Config XML: " +
                g.ConstantsApp.CONFIG_XML_PATH);
            for (var a = i.WorkinCloud.instance._getAssets().getXML(g.ConstantsApp.CONFIG_XML_PATH), b = a.node.resolve("packs").nodes.resolve("pack").iterator(); b.hasNext();) {
                for (var c = b.next(), d = [], f = c.nodes.resolve("flump").iterator(); f.hasNext();) {
                    var n = f.next();
                    d.push(n.att.resolve("id").toString())
                }
                f = [];
                for (n = c.nodes.resolve("tiles").iterator(); n.hasNext();) {
                    var e = n.next();
                    f.push(e.att.resolve("id").toString())
                }
                i.WorkinCloud.instance._getAssets().addPackDef(c.att.resolve("id").toString(),
                    d, f)
            }
            for (b = a.node.resolve("chunks").nodes.resolve("chunk").iterator(); b.hasNext();) c = b.next(), i.WorkinCloud.instance._getAssets().addChunk(c.att.resolve("id").toString(), c);
            i.WorkinCloud.instance.setString($.ConstantsCloud.STRING_REGION_ID, I.string(a.node.resolve("localization").node.resolve("region").getInnerData()));
            i.WorkinCloud.instance.log("[Main] Localization : Set Region: " + i.WorkinCloud.instance.getString($.ConstantsCloud.STRING_REGION_ID))
        },
        errorHandler: function(a) {
            i.WorkinCloud.instance.log("Error:" +
                a)
        },
        __class__: Ba
    };
    g = {
        ConstantsApp: function() {}
    };
    j["com.nick.spongebob.marble_bash.data.ConstantsApp"] = g.ConstantsApp;
    g.ConstantsApp.__name__ = "com,nick,spongebob,marble_bash,data,ConstantsApp".split(",");
    g.ConstantsScreen = function() {};
    j["com.nick.spongebob.marble_bash.data.ConstantsScreen"] = g.ConstantsScreen;
    g.ConstantsScreen.__name__ = "com,nick,spongebob,marble_bash,data,ConstantsScreen".split(",");
    y = {};
    i = void 0;
    $ = void 0;
    G = void 0;
    k = void 0;
    za = void 0;
    t = void 0;
    na = void 0;
    y.WMEventDispatcher = function() {
        this._signals =
            new T
    };
    j["com.workinman.events.WMEventDispatcher"] = y.WMEventDispatcher;
    y.WMEventDispatcher.__name__ = ["com", "workinman", "events", "WMEventDispatcher"];
    y.WMEventDispatcher.prototype = {
        dispose: function() {
            for (var a = this._signals.iterator(); a.hasNext();) a.next().dispose();
            this._signals = null
        },
        dispatchEvent: function(a) {
            this._signals.exists(a.getEventId()) && this._signals.get(a.getEventId()).dispatchEvent(a)
        },
        removeEventListener: function(a, b) {
            this._signals.exists(a) && (this._signals.get(a).removeEventListener(b),
                this._signals.get(a).isEmtpy() && (this._signals.get(a).dispose(), this._signals.remove(a)))
        },
        addEventListener: function(a, b) {
            this._signals.exists(a) || this._signals.set(a, new y._WMEventDispatcher.WMEventTracker);
            this._signals.get(a).addEventListener(b)
        },
        __class__: y.WMEventDispatcher
    };
    p = {
        ScreenManager: function(a) {
            y.WMEventDispatcher.call(this);
            this._container = a;
            this._layerScreen = new ma;
            this._layerTransition = new ma;
            this._container.addChild(this._layerScreen);
            this._container.addChild(this._layerTransition);
            this._isPaused = !1;
            this._screens = [];
            this._screensOpen = [];
            this._screensQueue = [];
            this._transitionType = -1;
            this._flagCloseAllScreensWhenBottomCloses = this._flagHasScreenshot = this._flagOpenScreenAfterTransition = this._flagCloseScreenAfterTransition = this._flagHasTransition = !1;
            this._camera = new k.WorkinCamera(g.ConstantsApp.STAGE_CENTER_X, g.ConstantsApp.STAGE_CENTER_Y)
        }
    };
    j["com.nick.spongebob.marble_bash.ui.ScreenManager"] = p.ScreenManager;
    p.ScreenManager.__name__ = "com,nick,spongebob,marble_bash,ui,ScreenManager".split(",");
    p.ScreenManager.__super__ = y.WMEventDispatcher;
    p.ScreenManager.prototype = C(y.WMEventDispatcher.prototype, {
        _transitionPlay: function() {
            this._transition.show();
            this._transition.start()
        },
        _removeTransition: function() {
            this._flagHasTransition && (this._layerTransition.removeChild(this._transition._getEntity()), this._transition._getDispatcher().removeEventListener(y.WMEventScreenOut.EVENT_SCREEN_OUTPUT, w(this, this._onEventTransitionOutput)), this._transition.dispose(), this._transition = null, this._flagHasTransition = !1)
        },
        _addTransition: function(a, b) {
            null == b && (b = !0);
            if (this._flagHasTransition) {
                if (!b) return;
                this._removeTransition()
            }
            this._transition = new p.transitions.TransitionBase(a);
            this._transition.hide();
            this._transition._getDispatcher().addEventListener(y.WMEventScreenOut.EVENT_SCREEN_OUTPUT, w(this, this._onEventTransitionOutput));
            this._layerTransition.addChild(this._transition._getEntity());
            this._flagHasTransition = !0
        },
        _updateTransition: function(a) {
            switch (this._transitionType) {
                case g.ConstantsScreen.TRANSITION_SCROLL:
                    this._transitionScreenHeadedOut._getPos().x -=
                        3E3 * a;
                    this._transitionScreenHeadedIn._getPos().x -= 3E3 * a;
                    0 >= this._transitionScreenHeadedIn._getPos().x && (this._transitionScreenHeadedIn._getPos().x = 0, this._flagHasTransition = !1, this._onTransitionCloseScreen(), this._onQueueConditionMet(g.ConstantsScreen.CONDITION_TRANSITION_COMPLETE));
                    break;
                case g.ConstantsScreen.TRANSITION_SCROLL_UP:
                    this._transitionScreenHeadedOut._getPos().y -= 2E3 * a;
                    this._transitionScreenHeadedIn._getPos().y -= 2E3 * a;
                    0 >= this._transitionScreenHeadedIn._getPos().y && (this._transitionScreenHeadedIn._getPos().y =
                        0, this._flagHasTransition = !1, this._onTransitionCloseScreen(), this._onQueueConditionMet(g.ConstantsScreen.CONDITION_TRANSITION_COMPLETE));
                    break;
                case g.ConstantsScreen.TRANSITION_SCROLL_DOWN:
                    this._transitionScreenHeadedOut._getPos().y += 2E3 * a;
                    this._transitionScreenHeadedIn._getPos().y += 2E3 * a;
                    0 <= this._transitionScreenHeadedIn._getPos().y && (this._transitionScreenHeadedIn._getPos().y = 0, this._flagHasTransition = !1, this._onTransitionCloseScreen(), this._onQueueConditionMet(g.ConstantsScreen.CONDITION_TRANSITION_COMPLETE));
                    break;
                case g.ConstantsScreen.TRANSITION_FADE:
                    this._transition.update(a), this._transition.flagDispose && this._removeTransition()
            }
        },
        _removeScreenDisplay: function(a) {
            this._layerScreen.removeChild(a)
        },
        _addScreenDisplay: function(a) {
            this._layerScreen.addChild(a)
        },
        _dispatchEventChange: function(a, b) {
            this.dispatchEvent(new y.WMEventInterfaceChange(a, b))
        },
        _onQueueConditionMet: function(a, b) {
            null == b && (b = "");
            for (var c = 0; c < this._screensQueue.length;) this._screensQueue[c].validateCondition(a, b) && (this._generateScreen(this._screensQueue[c].screenData),
                this._screensQueue.splice(c, 1)), c++
        },
        dispose: function() {
            for (var a = 0; a < this._screensOpen.length;) this._disposeScreen(this._screensOpen[a].id), a++;
            this._screens = this._screensQueue = null;
            this._removeTransition();
            this._container.removeChild(this._layerScreen);
            this._container.removeChild(this._layerTransition);
            this._layerTransition = this._layerScreen = null;
            y.WMEventDispatcher.prototype.dispose.call(this)
        },
        _getScreenData: function(a) {
            for (var b = this._screens.length - 1; 0 <= b;) {
                if (this._screens[b].id == a) return this._screens[b];
                b--
            }
            i.WorkinCloud.instance.log("[ScreenManager](_getScreenData) ERROR: Screen >" + a + "< idoes not exist. getScreenData() returning NULL.");
            return null
        },
        _hasScreenData: function(a) {
            for (var b = this._screens.length - 1; 0 <= b;) {
                if (this._screens[b].id == a) return !0;
                b--
            }
            return !1
        },
        _removeScreenshot: function() {
            this._flagHasScreenshot && (this._layerScreen.removeChild(this._screenshot._getEntity()), this._screenshot.dispose(), this._screenshot = null, this._flagHasScreenshot = !1)
        },
        _addScreenshot: function() {
            i.WorkinCloud.instance.log("[ScreenManager](_addScreenshot) ERROR: Screenshots not supported in HTML5 yet.")
        },
        _onTransitionCloseScreen: function() {
            this._flagCloseScreenAfterTransition && (this.closeScreen(this._screenIdToCloseAfterTransition, !1), this._flagCloseScreenAfterTransition = !1);
            this._flagOpenScreenAfterTransition && (this.openScreen(this._screenIdToOpenDuringTransition, !1), this._flagOpenScreenAfterTransition = !1)
        },
        _onEventTransitionOutput: function(a) {
            a.flowId == g.ConstantsScreen.OUTPUT_OPENED ? (i.WorkinCloud.instance.log("[ScreenManager] Transition Midway..."), this._onTransitionCloseScreen(), this._removeScreenshot(),
                this._onQueueConditionMet(g.ConstantsScreen.CONDITION_TRANSITION_MIDWAY)) : a.flowId == g.ConstantsScreen.OUTPUT_CLOSED && (i.WorkinCloud.instance.log("[ScreenManager] Transition Complete."), this._removeScreenshot(), this._onQueueConditionMet(g.ConstantsScreen.CONDITION_TRANSITION_COMPLETE))
        },
        _onEventScreenOutput: function(a) {
            a.flowId == g.ConstantsScreen.OUTPUT_OPENED ? this._dispatchEventChange(g.ConstantsScreen.CHANGE_OPEN_COMPLETE, a.screenId) : a.flowId == g.ConstantsScreen.OUTPUT_CLOSED && (this._dispatchEventChange(g.ConstantsScreen.CHANGE_CLOSE_COMPLETE,
                a.screenId), this._onQueueConditionMet(g.ConstantsScreen.CONDITION_CLOSED_SPECIFIC, a.screenId), this._flagHasTransition && this._transitionType == g.ConstantsScreen.TRANSITION_STAGED && this._transitionPlay())
        },
        _disposeScreen: function(a) {
            for (var b = 0; b < this._screensOpen.length;) {
                if (this._screensOpen[b].id == a) {
                    this._screensOpen[b]._getDispatcher().removeEventListener(y.WMEventScreenOut.EVENT_SCREEN_OUTPUT, w(this, this._onEventScreenOutput));
                    this._removeScreenDisplay(this._screensOpen[b]._getEntity());
                    this._screensOpen[b].dispose();
                    this._screensOpen.splice(b, 1);
                    break
                }
                b++
            }
        },
        _generateScreen: function(a) {
            if (this.isScreenOpen(a.id)) this.getScreen(a.id).reset(), this._dispatchEventChange(g.ConstantsScreen.CHANGE_OPEN_BEGIN, a.id);
            else {
                var b = la.createInstance(a.screenClass, [a.id, a.assetClassName, a.data]);
                if (null == b) i.WorkinCloud.instance.log("[ScreenManager](_generateScreen) ERROR: Screen Class for >" + a.id + "< not found.");
                else {
                    if (this._flagHasTransition) switch (this._transitionScreenHeadedIn = b, this._transitionType) {
                        case g.ConstantsScreen.TRANSITION_SCROLL:
                            b._getPos().x =
                                g.ConstantsApp.STAGE_WIDTH;
                            break;
                        case g.ConstantsScreen.TRANSITION_SCROLL_UP:
                            b._getPos().y = g.ConstantsApp.STAGE_HEIGHT;
                            break;
                        case g.ConstantsScreen.TRANSITION_SCROLL_DOWN:
                            b._getPos().y = -g.ConstantsApp.STAGE_HEIGHT
                    }
                    this._screensOpen.push(b);
                    b.renderPosition(this._camera);
                    this._addScreenDisplay(b._getEntity());
                    b._getDispatcher().addEventListener(y.WMEventScreenOut.EVENT_SCREEN_OUTPUT, w(this, this._onEventScreenOutput));
                    b.open(!0);
                    this._dispatchEventChange(g.ConstantsScreen.CHANGE_OPEN_BEGIN, a.id)
                }
            }
        },
        _addScreenToQueue: function(a, b, c) {
            null == c && (c = "");
            this.hasQueuedScreen(a.id) || this._screensQueue.push(new p.screens.data.ScreenQueueData(a, b, c))
        },
        removeAllQueuedScreens: function() {
            for (var a = this._screensQueue.length - 1; 0 <= a;) this._screensQueue.splice(a, 1), a--
        },
        removeQueuedScreen: function(a) {
            for (var b = this._screensQueue.length - 1; 0 <= b;) {
                if (this._screensQueue[b].screenData.id == a) {
                    this._screensQueue.splice(b, 1);
                    break
                }
                b--
            }
        },
        hasQueuedScreen: function(a) {
            for (var b = this._screensQueue.length - 1; 0 <= b;) {
                if (this._screensQueue[b].screenData.id ==
                    a) return !0;
                b--
            }
            return !1
        },
        isScreenOpen: function(a) {
            for (var b = this._screensOpen.length - 1; 0 <= b;) {
                if (this._screensOpen[b].id == a) return !0;
                b--
            }
            return !1
        },
        getScreen: function(a) {
            null == a && (a = "");
            if (0 == this._screensOpen.length) return i.WorkinCloud.instance.log("[ScreenManager](getScreen) ERROR: no screens are open. Unable to getScreen()"), null;
            if ("" == a) return this._screensOpen[this._screensOpen.length - 1];
            for (var b = this._screensOpen.length - 1; 0 <= b;) {
                if (this._screensOpen[b].id == a) return this._screensOpen[b];
                b--
            }
            i.WorkinCloud.instance.log("[ScreenManager](getScreen) ERROR: Screen >" +
                a + "< is not open or does not exist. getScreen() returning NULL.");
            return null
        },
        update: function(a) {
            if (!this._isPaused) {
                0.15 < a && (a = 0.15);
                this._flagHasTransition && this._updateTransition(a);
                for (this._loop = this._screensOpen.length - 1; 0 <= this._loop;) this._screensOpen[this._loop].update(a), this._screensOpen[this._loop].renderPosition(this._camera), this._screensOpen[this._loop].flagDispose && (this._disposeScreen(this._screensOpen[this._loop].id), 0 == this._screensOpen.length && this._onQueueConditionMet(g.ConstantsScreen.CONDITION_CLOSED_ALL)),
                    this._loop--
            }
        },
        _getHasTransition: function() {
            return this._flagHasTransition
        },
        changeScreenTo: function(a, b, c, d) {
            null == d && (d = "");
            null == c && (c = -1);
            null == b && (b = !1);
            i.WorkinCloud.instance.log("[ScreenManager](changeTo) " + a);
            this.removeAllQueuedScreens();
            if (this.isScreenOpen(a)) {
                i.WorkinCloud.instance.log("[ScreenManager](changeTo) Screen is already open.");
                for (b = this._screensOpen.length - 1; 0 <= b;) this._screensOpen[b].id != a && this.closeScreen(this._screensOpen[b].id, !1, b), b--;
                this._dispatchEventChange(g.ConstantsScreen.CHANGE_OPEN_BEGIN,
                    a);
                this._dispatchEventChange(g.ConstantsScreen.CHANGE_OPEN_COMPLETE, a)
            } else if (this._flagOpenScreenAfterTransition = this._flagCloseScreenAfterTransition = !1, 0 < this._screensOpen.length) {
                i.WorkinCloud.instance.log("[ScreenManager](changeFrom) " + this._screensOpen[0].id);
                this._screensOpen[0].suspend();
                var f = g.ConstantsScreen.CONDITION_CLOSED_ALL;
                if (-1 < c) switch (this._transitionType = c, this._transitionType) {
                    case g.ConstantsScreen.TRANSITION_SCREENSHOT:
                        this._flagOpenScreenAfterTransition = !0;
                        b = !1;
                        this._addScreenshot();
                        this._transitionPlay();
                        break;
                    case g.ConstantsScreen.TRANSITION_SCROLL:
                        this._flagHasTransition = !0;
                        this._flagOpenScreenAfterTransition = !1;
                        this._flagCloseScreenAfterTransition = !0;
                        b = !1;
                        this._transitionScreenHeadedOut = this._screensOpen[0];
                        f = g.ConstantsScreen.CONDITION_IMMEDIATE;
                        break;
                    case g.ConstantsScreen.TRANSITION_SCROLL_UP:
                        this._flagHasTransition = !0;
                        this._flagOpenScreenAfterTransition = !1;
                        this._flagCloseScreenAfterTransition = !0;
                        b = !1;
                        this._transitionScreenHeadedOut = this._screensOpen[0];
                        f = g.ConstantsScreen.CONDITION_IMMEDIATE;
                        break;
                    case g.ConstantsScreen.TRANSITION_SCROLL_DOWN:
                        this._flagHasTransition = !0;
                        this._flagOpenScreenAfterTransition = !1;
                        this._flagCloseScreenAfterTransition = !0;
                        b = !1;
                        this._transitionScreenHeadedOut = this._screensOpen[0];
                        f = g.ConstantsScreen.CONDITION_IMMEDIATE;
                        break;
                    case g.ConstantsScreen.TRANSITION_SCROLL:
                        this._flagHasTransition = !0;
                        this._flagOpenScreenAfterTransition = !1;
                        this._flagCloseScreenAfterTransition = !0;
                        b = !1;
                        this._transitionScreenHeadedOut = this._screensOpen[0];
                        f = g.ConstantsScreen.CONDITION_IMMEDIATE;
                        break;
                    case g.ConstantsScreen.TRANSITION_FADE:
                        this._addTransition(d, this._flagHasTransition ? this._transition._getIsOutro() ? !0 : !1 : !1), this._flagCloseScreenAfterTransition = !0, b = !1, this._transitionPlay(), f = g.ConstantsScreen.CONDITION_TRANSITION_MIDWAY
                }
                if (0 < this._screensOpen.length && (this._flagCloseScreenAfterTransition ? this._screenIdToCloseAfterTransition = this._screensOpen[0].id : this.closeScreen(this._screensOpen[0].id, b, 0), 1 < this._screensOpen.length))
                    for (b = 1; b < this._screensOpen.length;) this.closeScreen(this._screensOpen[b].id, !1, this._screensOpen.length), b++;
                this._flagOpenScreenAfterTransition ? (i.WorkinCloud.instance.log("[ScreenManager] Store Screen to open at transition midway: " + a), this._screenIdToOpenDuringTransition = a) : this.openScreen(a, !0, f)
            } else this.openScreen(a, !1)
        },
        _moveScreenToTop: function(a) {
            var b = this.getScreen(a);
            if (null == b) i.WorkinCloud.instance.log("[ScreenManager](_moveScreenToTop) ERROR: Screen >" + a + "< is not open or does not exist. Cancelling move.");
            else {
                b.isClosing() && b.open(!1);
                for (var c = this._screensOpen.length -
                        1; 0 <= c && !(this._screensOpen[c].id == a);) c--;
                this._screensOpen.splice(c, 1);
                b.reset();
                this._removeScreenDisplay(b._getEntity());
                this._addScreenDisplay(b._getEntity());
                this._screensOpen.push(b)
            }
        },
        openScreen: function(a, b, c, d) {
            null == d && (d = "");
            null == c && (c = 0);
            null == b && (b = !0);
            i.WorkinCloud.instance.log("[ScreenManager](openScreen) " + a);
            if (this._hasScreenData(a))
                if (this.isScreenOpen(a)) this._moveScreenToTop(a);
                else {
                    if (c != g.ConstantsScreen.CONDITION_IMMEDIATE && b) {
                        if (0 < this._screensOpen.length) {
                            this._addScreenToQueue(this._getScreenData(a),
                                c, d);
                            return
                        }
                        if ((c == g.ConstantsScreen.CONDITION_TRANSITION_COMPLETE || c == g.ConstantsScreen.CONDITION_TRANSITION_MIDWAY) && this._flagHasTransition) {
                            this._addScreenToQueue(this._getScreenData(a), c, d);
                            return
                        }
                    }
                    this._generateScreen(this._getScreenData(a))
                }
            else i.WorkinCloud.instance.log("[ScreenManager](closeScreen) ERROR: Screen >" + a + "< does not exist. Cancelling open().")
        },
        closeScreen: function(a, b, c) {
            null == c && (c = -1);
            null == b && (b = !0);
            null == a && (a = "");
            if (0 == this._screensOpen.length) this.removeQueuedScreen(a);
            else {
                if ("" == a) c = this._screensOpen[this._screensOpen.length - 1];
                else if (0 <= c && c < this._screensOpen.length) c = this._screensOpen[c];
                else if (c = this.getScreen(a), null == c) {
                    this.removeQueuedScreen(a);
                    return
                }
                c.close(b);
                this._dispatchEventChange(g.ConstantsScreen.CHANGE_CLOSE_BEGIN, a)
            }
        },
        handleInput: function(a) {
            for (var b = !0, c = this._screensOpen.length - 1; 0 <= c && b;) this._screensOpen[c].handleInput(a, c == this._screensOpen.length - 1) || (b = !1), c--;
            return b
        },
        addScreen: function(a, b, c, d, f) {
            null == d && (d = 0);
            null == c && (c = "");
            this._screens.push(new p.screens.data.ScreenData(a,
                b, c, d, f))
        },
        __class__: p.ScreenManager,
        __properties__: {
            get_isTransition: "_getHasTransition"
        }
    });
    t = {
        IPoolable: function() {}
    };
    j["com.workinman.display.IPoolable"] = t.IPoolable;
    t.IPoolable.__name__ = ["com", "workinman", "display", "IPoolable"];
    t.IPoolable.prototype = {
        __class__: t.IPoolable,
        __properties__: {
            set_isPooled: "_setIsPooled",
            get_isPooled: "_getIsPooled",
            set_isActive: "_setIsActive",
            get_isActive: "_getIsActive"
        }
    };
    t.Poolable = function() {
        this._flagPooled = !0;
        this._flagActive = !1
    };
    j["com.workinman.display.Poolable"] =
        t.Poolable;
    t.Poolable.__name__ = ["com", "workinman", "display", "Poolable"];
    t.Poolable.__interfaces__ = [t.IPoolable];
    t.Poolable.prototype = {
        _setIsActive: function(a) {
            return this._flagActive = a
        },
        _getIsActive: function() {
            return this._flagActive
        },
        _setIsPooled: function(a) {
            return this._flagPooled = a
        },
        _getIsPooled: function() {
            return this._flagPooled
        },
        dispose: function() {
            this.release()
        },
        release: function() {
            this._flagActive = !1
        },
        renew: function() {
            this._flagActive = !0
        },
        __class__: t.Poolable,
        __properties__: {
            set_isPooled: "_setIsPooled",
            get_isPooled: "_getIsPooled",
            set_isActive: "_setIsActive",
            get_isActive: "_getIsActive"
        }
    };
    t.Element = function(a) {
        t.Poolable.call(this, a);
        this._entity = new ma;
        this._display = new E.Sprite;
        this._entity.add(this._display);
        this._elements = [];
        this._textureEntity = new ma;
        this._entity.addChild(this._textureEntity);
        this._texture = new E.Sprite;
        this._textureEntity.add(this._texture);
        this._dispatcher = new y.WMEventDispatcher;
        this._pos = new k.WorkinPoint;
        this._velocity = new k.WorkinPoint;
        this._renderOffset = new k.WorkinPoint;
        this._renderOrigin = new k.WorkinPoint;
        this._render = new t.Renderable;
        this._tweener = new k.tween.WorkinTween;
        this._uniqueId = $.ConstantsCloud.getUniqueId();
        this._layer = this._assetId = "";
        this._useCamera = !0;
        this._doDelete = !1;
        !0 == a.pooled ? this._setIsPooled(!0) : (this._setIsPooled(!1), this.renew(a));
        this._addEventListeners()
    };
    j["com.workinman.display.Element"] = t.Element;
    t.Element.__name__ = ["com", "workinman", "display", "Element"];
    t.Element.__super__ = t.Poolable;
    t.Element.prototype = C(t.Poolable.prototype, {
        _removeEventListeners: function() {},
        _addEventListeners: function() {},
        setOrigin: function(a) {
            this._renderOrigin.toPoint(a);
            this._render.width = this._texture.getNaturalWidth();
            this._render.height = this._texture.getNaturalHeight();
            this._texture.x.set__(-(this._renderOrigin.x * this._render.width));
            this._texture.y.set__(-(this._renderOrigin.y * this._render.height))
        },
        applyRenderable: function() {
            this._display.x.set__(this._render.x);
            this._display.y.set__(this._render.y);
            this._display.scaleX.set__(this._render.scaleX);
            this._display.scaleY.set__(this._render.scaleY);
            this._display.rotation.set__(this._render.rotation);
            this._display.alpha.set__(this._render.alpha);
            this._display.set_visible(this._render.visible)
        },
        renderPositionWithoutCamera: function() {
            this._render.x = this._pos.x + this._renderOffset.x;
            this._render.y = this._pos.y + this._renderOffset.y;
            this.applyRenderable()
        },
        renderPosition: function(a) {
            null == a || !1 == this._useCamera ? (this._render.x = this._pos.x + this._renderOffset.x, this._render.y = this._pos.y + this._renderOffset.y) : (this._render.x = this._pos.x - a._getPos().x +
                a._getScreenCenterX() + this._renderOffset.x, this._render.y = this._pos.y - a._getPos().y + a._getScreenCenterY() + this._renderOffset.y);
            for (var b = 0, c = this._elements; b < c.length;) {
                var d = c[b];
                ++b;
                d.renderPosition(a)
            }
            this.applyRenderable()
        },
        _removeElement: function(a) {
            S.remove(this._elements, a);
            this._entity.removeChild(a._getEntity())
        },
        _addElement: function(a) {
            this._elements.push(a);
            this._entity.addChild(a._getEntity());
            return a
        },
        update: function(a) {
            for (var b = 0, c = this._elements; b < c.length;) {
                var d = c[b];
                ++b;
                d.update(a)
            }
        },
        swapTexture: function(a) {
            this._textureEntity.remove(this._texture);
            this._texture.dispose();
            this._texture = a;
            this._render.width = this._texture.getNaturalWidth();
            this._render.height = this._texture.getNaturalHeight();
            this._texture.x.set__(-(this._renderOrigin.x * this._render.width));
            this._texture.y.set__(-(this._renderOrigin.y * this._render.height));
            this._textureEntity.add(this._texture)
        },
        setTexture: function(a) {
            "" != a && (!1 == i.WorkinCloud.instance._getAssets().hasAsset(a) ? i.WorkinCloud.instance.log("[Element](setTexture) No asset named " +
                a + " exists!") : this.swapTexture(new E.ImageSprite(i.WorkinCloud.instance._getAssets().getTexture(a))))
        },
        _getUniqueId: function() {
            return this._uniqueId
        },
        _setLayer: function(a) {
            return this._layer = a
        },
        _getLayer: function() {
            return this._layer
        },
        _getDepth: function() {
            return this._pos.z
        },
        _getDispatcher: function() {
            return this._dispatcher
        },
        _getEntity: function() {
            return this._entity
        },
        _getRenderable: function() {
            return this._render
        },
        _setDoDelete: function(a) {
            return this._doDelete = a
        },
        _getDoDelete: function() {
            return this._doDelete
        },
        _setPos: function(a) {
            this._pos.toPoint(a);
            return this._pos
        },
        _getPos: function() {
            return this._pos
        },
        dispose: function() {
            if (this._getIsPooled()) this.release();
            else {
                for (var a = 0, b = this._elements; a < b.length;) {
                    var c = b[a];
                    ++a;
                    c.dispose()
                }
                this._elements = null;
                this._removeEventListeners();
                this._dispatcher.dispose();
                this._dispatcher = null;
                this._entity.dispose();
                this._velocity = this._pos = this._entity = null;
                this._texture.dispose();
                this._display = this._texture = null;
                this._textureEntity.dispose();
                this._renderOrigin = this._renderOffset =
                    this._render = this._textureEntity = null;
                this._tweener.dispose();
                this._tweener = null
            }
        },
        release: function() {
            this._getIsPooled() && t.Poolable.prototype.release.call(this)
        },
        renew: function(a) {
            a.asset && (this._assetId = a.asset, this.setTexture(this._assetId));
            this._doDelete = !1;
            a.layer && (this._layer = a.layer);
            a.x && (this._pos.x = a.x);
            a.y && (this._pos.y = a.y);
            a.rot && (this._render.rotation = a.rot);
            a.scale && (this._render.scaleX = this._render.scaleY = a.scale);
            null != a.useCamera && (this._useCamera = a.useCamera);
            a.origin ? this.setOrigin(a.origin) :
                this.setOrigin(new k.WorkinPoint(0, 0))
        },
        __class__: t.Element,
        __properties__: C(t.Poolable.prototype.__properties__, {
            set_pos: "_setPos",
            get_pos: "_getPos",
            set_doDelete: "_setDoDelete",
            get_doDelete: "_getDoDelete",
            get_renderable: "_getRenderable",
            get_entity: "_getEntity",
            get_dispatcher: "_getDispatcher",
            set_layer: "_setLayer",
            get_layer: "_getLayer"
        })
    });
    p.buttons = {};
    p.buttons.ButtonBase = function(a, b, c, d, f, n, e) {
        null == e && (e = "");
        null == n && (n = "");
        null == f && (f = "");
        null == d && (d = "");
        this._DEBUG_SHOW_HITBOX = !1;
        null == c && (c =
            new k.WorkinPoint(0.5, 0.5));
        t.Element.call(this, {
            x: a,
            y: b,
            asset: this._assetUp,
            origin: c
        });
        this._assetUp = "" == d ? this._getDefaultAssetUp() : d;
        this._assetOver = "" == f ? this._getDefaultAssetOver() : f;
        this._assetDown = "" == n ? this._getDefaultAssetDown() : n;
        this._assetDisabled = "" == e ? this._getDefaultAssetDisabled() : e;
        this._flagDragged = this._flagClickTransition = this._flagDown = !1;
        this.enable();
        this._buildHitBox();
        this._buttonScaleBase = new k.WorkinPoint(1, 1);
        this._soundId = null
    };
    j["com.nick.spongebob.marble_bash.ui.buttons.ButtonBase"] =
        p.buttons.ButtonBase;
    p.buttons.ButtonBase.__name__ = "com,nick,spongebob,marble_bash,ui,buttons,ButtonBase".split(",");
    p.buttons.ButtonBase.__super__ = t.Element;
    p.buttons.ButtonBase.prototype = C(t.Element.prototype, {
        _renderDisabled: function() {
            "" != this._assetDisabled && this.setTexture(this._assetDisabled)
        },
        _renderReturnUp: function() {
            this._flagClickTransition || (k.tween.WorkinTweener._getInstance().tween(this._render, 0.15, {
                    scaleX: this._buttonScaleBase.x,
                    scaleY: this._buttonScaleBase.y
                }).ease(k.tween.PennerManager.EASE_QUAD_OUT),
                this._renderUp())
        },
        _renderDown: function() {
            this._flagClickTransition || (k.tween.WorkinTweener._getInstance().tween(this._render, 0.15, {
                scaleX: 1.04 * this._buttonScaleBase.x,
                scaleY: 1.04 * this._buttonScaleBase.y
            }).ease(k.tween.PennerManager.EASE_QUAD_OUT), "" != this._assetDown && this.setTexture(this._assetDown))
        },
        _renderUp: function() {
            "" != this._assetUp && this.setTexture(this._assetUp)
        },
        setSound: function(a) {
            this._soundId = a
        },
        setScale: function(a, b) {
            this._buttonScaleBase.x = a;
            this._buttonScaleBase.y = b;
            this._render.scaleX =
                this._buttonScaleBase.x;
            this._render.scaleY = this._buttonScaleBase.y
        },
        _playSoundDown: function() {
            null != this._soundId && i.WorkinCloud.instance._getSound().playSoundRand(this._soundId)
        },
        _playSoundClick: function() {},
        update: function(a) {
            t.Element.prototype.update.call(this, a);
            this._flagDown && !1 == i.WorkinCloud.instance._getInput().getInput(g.ConstantsApp.INPUT_CLICK) && (this._upConnection.dispose(), this._renderReturnUp())
        },
        _onCancelDrag: function() {
            this._flagDragged = !1;
            this._dispatch(p.buttons.ButtonBase.CANCEL_DRAG)
        },
        _onUp: function() {
            !i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_ORIENTATION_ALERT) && this._flagDown && (this._upConnection.dispose(), this._upConnection = null, this._flagDown = !1, this._renderReturnUp(), this._click(), this._flagDragged && this._onCancelDrag(), this._dispatch(p.buttons.ButtonBase.UP))
        },
        _onDown: function() {
            i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_ORIENTATION_ALERT) || (this._flagDown = !0, this._renderDown(), this._upConnection = this._hitBox.get_pointerUp().connect(w(this, this._onUpEvent)),
                this._dispatch(p.buttons.ButtonBase.DOWN), this._playSoundDown())
        },
        _onClickTransitionComplete: function() {
            this._flagClickTransition = !1;
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_INPUT_LOCK, !1);
            this._dispatch(p.buttons.ButtonBase.CLICK);
            "" != this._getClickFlow() && i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventFlow(this._getClickFlow()));
            "" != this._getClickEvent() && i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(this._getClickEvent()));
            k.tween.WorkinTweener._getInstance().stop(this._render);
            this._render.scaleX = this._buttonScaleBase.x;
            this._render.scaleY = this._buttonScaleBase.y
        },
        _click: function() {
            !i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_INPUT_LOCK) && !i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_ORIENTATION_ALERT) && (this._flagClickTransition = !0, this._playSoundClick(), k.tween.WorkinTweener._getInstance().tween(this._render, 0.25, {
                scaleX: 0.96 * this._buttonScaleBase.x,
                scaleY: 0.96 * this._buttonScaleBase.y
            }).ease(k.tween.PennerManager.EASE_QUAD_OUT), k.tween.WorkinTweener._getInstance().tween(this._render,
                0.25, {
                    scaleX: 0.99 * this._buttonScaleBase.x,
                    scaleY: 0.99 * this._buttonScaleBase.y
                }, null, null, !1).ease(k.tween.PennerManager.EASE_ELASTIC_OUT).delay(0.25).onComplete(w(this, this._onClickTransitionComplete)), i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_INPUT_LOCK, !0))
        },
        _dispatch: function(a) {
            this._GET_DO_DISPATCH() && this._dispatcher.dispatchEvent(new y.WMEvent(a))
        },
        _onUpEvent: function(a) {
            this._onUp(a.viewX, a.viewY)
        },
        _onDownEvent: function(a) {
            this._onDown(a.viewX, a.viewY)
        },
        _getClickFlow: function() {
            return ""
        },
        _getClickEvent: function() {
            return ""
        },
        _GET_DISABLE_FRAME: function() {
            return 1
        },
        _GET_CUSTOM_HIT_BOX: function() {
            return new fa.Point(0, 0)
        },
        _GET_DO_DISPATCH: function() {
            return !0
        },
        _getDefaultAssetDisabled: function() {
            return ""
        },
        _getDefaultAssetDown: function() {
            return ""
        },
        _getDefaultAssetOver: function() {
            return ""
        },
        _getDefaultAssetUp: function() {
            return ""
        },
        dispose: function() {
            this.disable();
            this._downConnection.dispose();
            this._downConnection = null;
            this._flagDown && (this._upConnection.dispose(), this._upConnection = null);
            this._hitBox.dispose();
            this._buttonScaleBase = null;
            t.Element.prototype.dispose.call(this)
        },
        _buildHitBox: function() {
            this._DEBUG_SHOW_HITBOX ? this._hitBox = new E.FillSprite(16711680, this._render.width | 0, this._render.height | 0) : (this._hitBox = new E.ImageSprite(W.createTexture(this._render.width | 0, this._render.height | 0)), this._hitBox.alpha.set__(0));
            var a = new ma;
            a.add(this._hitBox);
            this._textureEntity.addChild(a);
            this._downConnection = this._hitBox.get_pointerDown().connect(w(this, this._onDownEvent))
        },
        disable: function() {
            this._flagEnabled = !1;
            this._renderDisabled()
        },
        enable: function() {
            this._flagEnabled = !0;
            this._renderUp()
        },
        __class__: p.buttons.ButtonBase,
        __properties__: C(t.Element.prototype.__properties__, {
            get__DO_DISPATCH: "_GET_DO_DISPATCH",
            get__clickEvent: "_getClickEvent",
            get__clickFlow: "_getClickFlow"
        })
    });
    p.buttons.ButtonSlider = function(a, b, c, d, f, n, e, s) {
        null == e && (e = "");
        null == n && (n = "");
        null == f && (f = "");
        null == d && (d = "");
        p.buttons.ButtonBase.call(this, a, b, c, d, f, n, e);
        this._min = s.min;
        this._max = s.max;
        this._segments = s.segments;
        this._update =
            s.update;
        this._selected = !1;
        this._getDispatcher().addEventListener(p.buttons.ButtonBase.DOWN, w(this, this._onDownClick));
        this._getPos().x = i.WorkinCloud.instance.getFloat(this._update) * (this._max - this._min) + this._min
    };
    j["com.nick.spongebob.marble_bash.ui.buttons.ButtonSlider"] = p.buttons.ButtonSlider;
    p.buttons.ButtonSlider.__name__ = "com,nick,spongebob,marble_bash,ui,buttons,ButtonSlider".split(",");
    p.buttons.ButtonSlider.__super__ = p.buttons.ButtonBase;
    p.buttons.ButtonSlider.prototype = C(p.buttons.ButtonBase.prototype, {
        handleInput: function(a) {
            switch (a.input) {
                case g.ConstantsApp.INPUT_CLICK:
                    switch (a.phase) {
                        case y.WMEventInput.PHASE_MOVE:
                            this._selected && (a = a.x, a >= this._min && a <= this._max && (this._getPos().x = a));
                            break;
                        case y.WMEventInput.PHASE_UP:
                            this._selected && this._onUpClick()
                    }
            }
        },
        _onUpClick: function() {
            for (var a = (this._max - this._min) / this._segments, b = 0, c = 1E3, d = 0; d <= this._segments;) {
                var f = Math.abs(this._getPos().x - (this._min + d * a));
                f < c && (b = d, c = f);
                d++
            }
            this._getPos().x = this._min + a * b;
            i.WorkinCloud.instance.setFloat(this._update,
                (this._getPos().x - this._min) / (this._max - this._min));
            this._selected = !1;
            switch (this._update) {
                case g.ConstantsApp.FLOAT_VOLUME_MUSIC:
                    i.WorkinCloud.instance._getSound().setMuteMusic(0 == i.WorkinCloud.instance.getFloat(this._update));
                    break;
                case g.ConstantsApp.FLOAT_VOLUME_SOUND:
                    i.WorkinCloud.instance._getSound().setMuteSound(0 == i.WorkinCloud.instance.getFloat(this._update))
            }
        },
        _onDownClick: function() {
            this._selected = !0
        },
        __class__: p.buttons.ButtonSlider
    });
    p.buttons.ButtonSoundToggle = function(a, b, c, d, f) {
        this._onAssets =
            d;
        this._offAssets = f;
        this._refreshMuteState();
        p.buttons.ButtonBase.call(this, a, b, c, this._currentAssets[0], this._currentAssets[1], this._currentAssets[3 == this._currentAssets.length ? 2 : 1])
    };
    j["com.nick.spongebob.marble_bash.ui.buttons.ButtonSoundToggle"] = p.buttons.ButtonSoundToggle;
    p.buttons.ButtonSoundToggle.__name__ = "com,nick,spongebob,marble_bash,ui,buttons,ButtonSoundToggle".split(",");
    p.buttons.ButtonSoundToggle.__super__ = p.buttons.ButtonBase;
    p.buttons.ButtonSoundToggle.prototype = C(p.buttons.ButtonBase.prototype, {
        _getClickEvent: function() {
            return ""
        },
        _refreshMuteState: function() {
            this._currentAssets = i.WorkinCloud.instance._getSound().getMute() ? this._offAssets : this._onAssets;
            this._assetUp = this._currentAssets[0];
            this._assetOver = this._currentAssets[1];
            this._assetDown = this._currentAssets[3 == this._currentAssets.length ? 2 : 1]
        },
        _click: function() {
            this._flagEnabled && !i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_INPUT_LOCK) && !i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_ORIENTATION_ALERT) && (i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_MUTE_TOGGLE)),
                this._refreshMuteState(), this._renderReturnUp())
        },
        __class__: p.buttons.ButtonSoundToggle
    });
    t.Display = function(a, b, c, d) {
        null == c && (c = "");
        this._flagLocked = !1;
        t.Element.call(this, {
            x: a,
            y: b,
            asset: c,
            origin: d
        });
        this._addEventListeners()
    };
    j["com.workinman.display.Display"] = t.Display;
    t.Display.__name__ = ["com", "workinman", "display", "Display"];
    t.Display.__super__ = t.Element;
    t.Display.prototype = C(t.Element.prototype, {
        _updateValue: function() {
            return ""
        },
        _refresh: function() {},
        _onUpdateDisplay: function(a) {
            this._flagLocked ||
                a._getData().valueID == this._updateValue() && this._refresh()
        },
        _removeEventListeners: function() {
            t.Element.prototype._removeEventListeners.call(this);
            i.WorkinCloud.instance._getDispatcher().removeEventListener(t.Display.EVENT_UPDATE_DISPLAY, w(this, this._onUpdateDisplay))
        },
        _addEventListeners: function() {
            t.Element.prototype._addEventListeners.call(this);
            i.WorkinCloud.instance._getDispatcher().addEventListener(t.Display.EVENT_UPDATE_DISPLAY, w(this, this._onUpdateDisplay))
        },
        __class__: t.Display
    });
    p.displays = {};
    p.displays.DisplayBonus = function(a, b) {
        t.Display.call(this, a, b);
        this._render.scaleX = this._render.scaleY = 0.5;
        this._addElement(new t.Element({
            asset: "bonus_bg",
            origin: new k.WorkinPoint(0.5, 0.5),
            scale: 2
        }));
        i.WorkinCloud.instance.getString(this._updateValue());
        this._textBonus = this._addElement(new t.TextLocalized(0, -20, "bonus_gary", i.WorkinCloud.instance._getLocalize().getData("bonus_multiplier")._getFontName(), {
            origin: new k.WorkinPoint(0.5, 0.5),
            width: 120,
            center: !0,
            spacing: 10
        }));
        this._addElement(new t.TextLocalized(-10,
            25, "bonus_multiplier", "", {
                origin: new k.WorkinPoint(0.5, 0.5)
            }));
        this._addElement(new p.displays.DisplayMultiplier(0, 25));
        this._refresh()
    };
    j["com.nick.spongebob.marble_bash.ui.displays.DisplayBonus"] = p.displays.DisplayBonus;
    p.displays.DisplayBonus.__name__ = "com,nick,spongebob,marble_bash,ui,displays,DisplayBonus".split(",");
    p.displays.DisplayBonus.__super__ = t.Display;
    p.displays.DisplayBonus.prototype = C(t.Display.prototype, {
        dispose: function() {
            t.Display.prototype.dispose.call(this);
            this._textBonus = null
        },
        _updateValue: function() {
            return g.ConstantsApp.STRING_BONUS
        },
        _refresh: function() {
            this._render.alpha = "" == i.WorkinCloud.instance.getString(this._updateValue()) ? 0 : 1;
            var a = "spongebob";
            switch (i.WorkinCloud.instance.getString(g.ConstantsApp.STRING_BONUS)) {
                case o.elements.Marble.TYPE_PLANKTON:
                    a = "plankton";
                    break;
                case o.elements.Marble.TYPE_SANDY:
                    a = "sandy";
                    break;
                case o.elements.Marble.TYPE_PATRICK:
                    a = "patrick";
                    break;
                case o.elements.Marble.TYPE_SQUIDWARD:
                    a = "squidward";
                    break;
                case o.elements.Marble.TYPE_GARY:
                    a =
                        "gary"
            }
            this._textBonus._setText("bonus_" + a)
        },
        __class__: p.displays.DisplayBonus
    });
    p.displays.DisplayLevel = function(a, b) {
        t.Display.call(this, a, b);
        var c = i.WorkinCloud.instance.getInt(this._updateValue());
        this._textNum = this._addElement(new t.TextBase(0, 0, I.string(c), i.WorkinCloud.instance._getLocalize().getData("level")._getFontName(), {
            origin: new k.WorkinPoint(0, 0),
            scale: 0.2
        }));
        this._refresh()
    };
    j["com.nick.spongebob.marble_bash.ui.displays.DisplayLevel"] = p.displays.DisplayLevel;
    p.displays.DisplayLevel.__name__ =
        "com,nick,spongebob,marble_bash,ui,displays,DisplayLevel".split(",");
    p.displays.DisplayLevel.__super__ = t.Display;
    p.displays.DisplayLevel.prototype = C(t.Display.prototype, {
        dispose: function() {
            t.Display.prototype.dispose.call(this);
            this._textNum = null
        },
        _updateValue: function() {
            return g.ConstantsApp.INT_LEVEL
        },
        _refresh: function() {
            var a = i.WorkinCloud.instance.getInt(this._updateValue());
            this._textNum._setText(I.string(a))
        },
        __class__: p.displays.DisplayLevel
    });
    p.displays.DisplayLevelProgress = function(a, b) {
        t.Display.call(this,
            a, b, "", new k.WorkinPoint(0, 0.5));
        this._addElement(this._border = new p.elements.BorderBottom);
        this._bar = this._addElement(new t.Element({
            asset: "levelBar"
        }));
        this._bar._getRenderable().scaleX = 0
    };
    j["com.nick.spongebob.marble_bash.ui.displays.DisplayLevelProgress"] = p.displays.DisplayLevelProgress;
    p.displays.DisplayLevelProgress.__name__ = "com,nick,spongebob,marble_bash,ui,displays,DisplayLevelProgress".split(",");
    p.displays.DisplayLevelProgress.__super__ = t.Display;
    p.displays.DisplayLevelProgress.prototype =
        C(t.Display.prototype, {
            dispose: function() {
                t.Display.prototype.dispose.call(this)
            },
            _updateValue: function() {
                return g.ConstantsApp.INT_LEVEL_PROGRESS
            },
            _refresh: function() {
                var a = i.WorkinCloud.instance.getInt(this._updateValue());
                100 < a && (a = 100);
                this._bar._getRenderable().scaleX = a / 100;
                for (var b = 1, c = 0; 8 > b;) a / 100 >= b / 7 && (c = b), b++;
                this._border.animate("glow" + c)
            },
            __class__: p.displays.DisplayLevelProgress
        });
    p.displays.DisplayLoadingProgress = function(a, b) {
        t.Display.call(this, a, b, "", new k.WorkinPoint(0, 0.5));
        this._bar =
            this._addElement(new t.Element({
                asset: "loading_bar"
            }));
        this._addElement(new t.Element({
            asset: "loading_bar_outline",
            x: -2,
            y: -2
        }));
        this._bar._getRenderable().scaleX = 0
    };
    j["com.nick.spongebob.marble_bash.ui.displays.DisplayLoadingProgress"] = p.displays.DisplayLoadingProgress;
    p.displays.DisplayLoadingProgress.__name__ = "com,nick,spongebob,marble_bash,ui,displays,DisplayLoadingProgress".split(",");
    p.displays.DisplayLoadingProgress.__super__ = t.Display;
    p.displays.DisplayLoadingProgress.prototype = C(t.Display.prototype, {
        dispose: function() {
            t.Display.prototype.dispose.call(this)
        },
        _updateValue: function() {
            return g.ConstantsApp.INT_LOADING_PROGRESS
        },
        _refresh: function() {
            var a = i.WorkinCloud.instance.getInt(this._updateValue());
            this._bar._getRenderable().scaleX = a / 100
        },
        __class__: p.displays.DisplayLoadingProgress
    });
    p.displays.DisplayMultiplier = function(a, b) {
        t.Display.call(this, a, b);
        var c = i.WorkinCloud.instance.getInt(this._updateValue());
        this._textNum = this._addElement(new t.TextBase(0, 0, I.string(c), i.WorkinCloud.instance._getLocalize().getData("bonus_multiplier")._getFontName(), {
            origin: new k.WorkinPoint(0, 0.5),
            scale: 0.5
        }));
        this._refresh()
    };
    j["com.nick.spongebob.marble_bash.ui.displays.DisplayMultiplier"] = p.displays.DisplayMultiplier;
    p.displays.DisplayMultiplier.__name__ = "com,nick,spongebob,marble_bash,ui,displays,DisplayMultiplier".split(",");
    p.displays.DisplayMultiplier.__super__ = t.Display;
    p.displays.DisplayMultiplier.prototype = C(t.Display.prototype, {
        dispose: function() {
            t.Display.prototype.dispose.call(this);
            this._textNum = null
        },
        _updateValue: function() {
            return g.ConstantsApp.INT_MULTIPLIER
        },
        _refresh: function() {
            var a = i.WorkinCloud.instance.getInt(this._updateValue());
            this._textNum._setText(I.string(a))
        },
        __class__: p.displays.DisplayMultiplier
    });
    p.displays.DisplayScore = function(a, b) {
        t.Display.call(this, a, b);
        var c = i.WorkinCloud.instance.getInt(this._updateValue());
        this._textNum = this._addElement(new t.TextBase(0, 0, I.string(c), i.WorkinCloud.instance._getLocalize().getData("level_1")._getFontName(), {
            origin: new k.WorkinPoint(0, 0),
            scale: 0.5
        }));
        this._refresh()
    };
    j["com.nick.spongebob.marble_bash.ui.displays.DisplayScore"] =
        p.displays.DisplayScore;
    p.displays.DisplayScore.__name__ = "com,nick,spongebob,marble_bash,ui,displays,DisplayScore".split(",");
    p.displays.DisplayScore.__super__ = t.Display;
    p.displays.DisplayScore.prototype = C(t.Display.prototype, {
        dispose: function() {
            t.Display.prototype.dispose.call(this);
            this._textNum = null
        },
        _updateValue: function() {
            return g.ConstantsApp.INT_SCORE
        },
        _refresh: function() {
            var a = i.WorkinCloud.instance.getInt(this._updateValue());
            this._textNum._setText(I.string(a))
        },
        __class__: p.displays.DisplayScore
    });
    p.displays.DisplayTimer = function(a, b) {
        t.Display.call(this, a, b);
        i.WorkinCloud.instance.getFloat(this._updateValue());
        this._textNum = this._addElement(new t.TextBase(0, 0, "", i.WorkinCloud.instance._getLocalize().getData("bonus_multiplier")._getFontName(), {
            origin: new k.WorkinPoint(0, 0),
            scale: 0.4
        }));
        this._refresh()
    };
    j["com.nick.spongebob.marble_bash.ui.displays.DisplayTimer"] = p.displays.DisplayTimer;
    p.displays.DisplayTimer.__name__ = "com,nick,spongebob,marble_bash,ui,displays,DisplayTimer".split(",");
    p.displays.DisplayTimer.__super__ =
        t.Display;
    p.displays.DisplayTimer.prototype = C(t.Display.prototype, {
        dispose: function() {
            t.Display.prototype.dispose.call(this);
            this._textNum = null
        },
        _updateValue: function() {
            return g.ConstantsApp.FLOAT_TIMER
        },
        _refresh: function() {
            var a = i.WorkinCloud.instance.getFloat(this._updateValue());
            0 > a && (a = 0);
            var b = Math.floor(a / 60),
                a = Math.floor(a - 60 * b);
            this._textNum._setText(b + ":" + (10 > a ? "0" : "") + a)
        },
        __class__: p.displays.DisplayTimer
    });
    t.AnimatedElement = function(a) {
        if (null != a.movie && "" != a.movie && (null == a.library || "" ==
                a.library) && (null == a.asset || "" == a.asset)) a.asset = a.movie;
        this._animations = new T;
        this._queuedAnimations = [];
        this._lastFrame = -1;
        this._currentFrame = 0;
        this._currentAnimation = "";
        this._fps = 24;
        this._animationStopped = !0;
        this._library = "";
        this._loopComplete = !1;
        this._symbol = "";
        this._workFrame = 0;
        this._currentAnimDef = null;
        t.Element.call(this, a)
    };
    j["com.workinman.display.AnimatedElement"] = t.AnimatedElement;
    t.AnimatedElement.__name__ = ["com", "workinman", "display", "AnimatedElement"];
    t.AnimatedElement.__super__ = t.Element;
    t.AnimatedElement.prototype = C(t.Element.prototype, {
        _onAnimationComplete: function() {},
        _setFrame: function(a) {
            this._movie.set_position(Math.floor(a) / this._frames * this._duration)
        },
        setFrame: function(a) {
            this._setFrame(a)
        },
        _runAnimation: function(a) {
            "" != this._currentAnimation && !0 == this._doLoop() && !1 == this._animationStopped && (this._currentFrame = !1 == this._currentAnimDef._getReverse() ? this._currentFrame + this._fps * a : this._currentFrame - this._fps * a, !1 == this._currentAnimDef._getReverse() ? Math.floor(this._currentFrame) >
                this._currentAnimDef._getEnd() && (this._currentFrame = this._currentAnimDef._getStart() + (this._currentFrame - Math.floor(this._currentFrame)), this._loopComplete = !0) : Math.ceil(this._currentFrame) < this._currentAnimDef._getStart() && (this._currentFrame = this._currentAnimDef._getEnd() + (this._currentFrame - Math.ceil(this._currentFrame)), this._loopComplete = !0), !0 == this._loopComplete && (this._loopComplete = !1, this._currentLoop--, !1 == this._doLoop() && (this._animationStopped = !0, this._currentFrame = !1 == this._currentAnimDef._getReverse() ?
                    this._currentAnimDef._getEnd() : this._currentAnimDef._getStart(), 0 < this._queuedAnimations.length ? (this._doAnimate(this._queuedAnimations[0]._getName(), this._queuedAnimations[0]._getLoops(), this._queuedAnimations[0]._getForce()), this._queuedAnimations.splice(0, 1)) : this._onAnimationComplete())), this._workFrame = !1 == this._currentAnimDef._getReverse() ? Math.floor(this._currentFrame) : Math.ceil(this._currentFrame), null != this._movie && this._workFrame != this._lastFrame && (this._setFrame(this._workFrame), this._lastFrame =
                    this._workFrame))
        },
        _doLoop: function() {
            return 0 < this._currentLoop || this._flagLoop
        },
        update: function(a) {
            t.Element.prototype.update.call(this, a);
            this._runAnimation(a)
        },
        clearQueue: function() {
            for (; 0 < this._queuedAnimations.length;) this._queuedAnimations.splice(0, 1)
        },
        stopAnimation: function() {
            this._animationStopped = !0
        },
        setLoop: function(a) {
            this._currentLoop = a;
            this._flagLoop = 0 == a;
            return this
        },
        _doAnimate: function(a, b, c) {
            null == c && (c = !1);
            null == b && (b = 0);
            this._currentAnimation == a && !1 == c || (null != this._animations &&
                this._animations.exists(a) ? (this._currentAnimDef = null, this._currentAnimDef = this._animations.get(a), this._currentFrame = this._currentAnimDef._getStart(), this._currentAnimation = a, this.setLoop(b), this._animationStopped = !1, this._setFrame(this._currentFrame)) : i.WorkinCloud.instance.log("Animation not found: " + a))
        },
        animate: function(a, b, c) {
            null == c && (c = !1);
            null == b && (b = 0);
            this.clearQueue();
            this._doAnimate(a, b, c);
            return this
        },
        addAnimation: function(a, b, c) {
            this._animations.set(a, new t.AnimationDef(a, b - 1, c - 1));
            return this
        },
        setLibraryAndSymbol: function(a, b) {
            this._library = a;
            this._symbol = b;
            this._texture.dispose();
            var c = i.WorkinCloud.instance._getAssets().getLibrary(this._library)._symbols.get(this._symbol);
            this._duration = c.duration;
            this._frames = c.frames;
            this._movie = c.createSprite();
            this._movie.set_paused(!0);
            this._texture = this._movie;
            this._textureEntity.add(this._texture);
            return this
        },
        setSymbol: function(a) {
            return this.setLibraryAndSymbol(this._library, a)
        },
        _setAnimationFrameRelative: function(a) {
            this._currentFrame =
                this._currentAnimDef._getStart() + a;
            return this._getAnimationFrameRelative()
        },
        _getAnimationFrameRelative: function() {
            return this._currentFrame - this._currentAnimDef._getStart() | 0
        },
        _setAnimationFrame: function(a) {
            this._currentFrame = a;
            this._setFrame(this._currentFrame);
            this.stopAnimation();
            return this._currentFrame | 0
        },
        _getAnimationFrame: function() {
            return this._currentFrame | 0
        },
        _setAnimationRatio: function(a) {
            a = Math.floor(a * (this._currentAnimDef._getEnd() - this._currentAnimDef._getStart()) + this._currentAnimDef._getStart());
            a != this._currentFrame && this._setAnimationFrame(a);
            return this._getAnimationRatio()
        },
        _getAnimationRatio: function() {
            return (this._currentFrame - this._currentAnimDef._getStart()) / (this._currentAnimDef._getEnd() - this._currentAnimDef._getEnd())
        },
        _setFps: function(a) {
            return this._fps = a
        },
        _getFps: function() {
            return this._fps
        },
        _getCurrentAnimation: function() {
            return this._currentAnimation
        },
        renew: function(a) {
            t.Element.prototype.renew.call(this, a);
            a.library && a.movie && this.setLibraryAndSymbol(a.library, a.movie);
            a.fps &&
                (this._fps = a.fps)
        },
        dispose: function() {
            this._queuedAnimations = this._currentAnimDef = this._animations = this._movie = null;
            t.Element.prototype.dispose.call(this)
        },
        __class__: t.AnimatedElement,
        __properties__: C(t.Element.prototype.__properties__, {
            set_animationFrame: "_setAnimationFrame",
            get_animationFrame: "_getAnimationFrame"
        })
    });
    p.elements = {};
    p.elements.BorderBottom = function() {
        t.AnimatedElement.call(this, {
            library: "flump_border",
            movie: "LIGHTS",
            y: -15
        });
        this.addAnimation("glow0", 1, 1);
        this.addAnimation("glow1",
            2, 12);
        this.addAnimation("glow2", 13, 23);
        this.addAnimation("glow3", 24, 34);
        this.addAnimation("glow4", 35, 45);
        this.addAnimation("glow5", 46, 56);
        this.addAnimation("glow6", 57, 67);
        this.addAnimation("glow7", 68, 78);
        this.animate("glow0")
    };
    j["com.nick.spongebob.marble_bash.ui.elements.BorderBottom"] = p.elements.BorderBottom;
    p.elements.BorderBottom.__name__ = "com,nick,spongebob,marble_bash,ui,elements,BorderBottom".split(",");
    p.elements.BorderBottom.__super__ = t.AnimatedElement;
    p.elements.BorderBottom.prototype = C(t.AnimatedElement.prototype, {
        __class__: p.elements.BorderBottom
    });
    p.elements.ClearAll = function() {
        t.Element.call(this, {
            asset: "btn_base2",
            rot: -100,
            x: -70,
            y: 100,
            origin: new k.WorkinPoint(0, 0.5)
        });
        this._addElement(new p.buttons.ButtonBase(200, -5, new k.WorkinPoint(0.5, 0.5), "btn_clearAll", "btn_clearAll", "btn_clearAll"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventClearClick));
        this._showing = !1
    };
    j["com.nick.spongebob.marble_bash.ui.elements.ClearAll"] = p.elements.ClearAll;
    p.elements.ClearAll.__name__ =
        "com,nick,spongebob,marble_bash,ui,elements,ClearAll".split(",");
    p.elements.ClearAll.__super__ = t.Element;
    p.elements.ClearAll.prototype = C(t.Element.prototype, {
        _onHide: function() {
            this._showing && (k.tween.WorkinTweener._getInstance().tween(this._getRenderable(), 0.5, {
                rotation: 100
            }), this._showing = !1)
        },
        _onShow: function() {
            k.tween.WorkinTweener._getInstance().tween(this._getRenderable(), 0.5, {
                rotation: 20
            });
            this._clicked = !1;
            this._showing = !0
        },
        _removeEventListeners: function() {
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_CLEAR_ALL_SHOW,
                w(this, this._onShow));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_CLEAR_ALL_HIDE, w(this, this._onHide))
        },
        _addEventListeners: function() {
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_CLEAR_ALL_SHOW, w(this, this._onShow));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_CLEAR_ALL_HIDE, w(this, this._onHide))
        },
        _onEventClearClick: function() {
            this._clicked || (this._clicked = !0, i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_CLEAR_ALL_HIDE)))
        },
        __class__: p.elements.ClearAll
    });
    p.elements.Overlay = function(a, b, c, d) {
        t.Element.call(this, {
            x: a,
            y: b
        });
        a = new E.FillSprite(0, c, d);
        a.alpha.set__(0.5);
        this.swapTexture(a)
    };
    j["com.nick.spongebob.marble_bash.ui.elements.Overlay"] = p.elements.Overlay;
    p.elements.Overlay.__name__ = "com,nick,spongebob,marble_bash,ui,elements,Overlay".split(",");
    p.elements.Overlay.__super__ = t.Element;
    p.elements.Overlay.prototype = C(t.Element.prototype, {
        __class__: p.elements.Overlay
    });
    p.screens = {};
    p.screens.ScreenBase = function(a, b) {
        this._STATE_SUSPENDED =
            "suspend";
        this._STATE_OPENED = "opened";
        this._STATE_OUT = "out";
        this._STATE_IN = "in";
        this.id = a;
        t.Element.call(this, {
            asset: b
        });
        this._clickWall = new ma;
        if (this._useClickWall()) {
            var c = new E.FillSprite(16711680, g.ConstantsApp.STAGE_WIDTH, g.ConstantsApp.STAGE_HEIGHT);
            c.alpha.set__(0);
            this._clickWall.add(c)
        }
        this._entity.addChild(this._clickWall);
        this._entity.addChild(this._textureEntity);
        this._buildButtons();
        this._flagStateAnimationComplete = this._flagStateCompleteTemp = this.flagDispose = !1;
        this._states = [];
        this._generateStates();
        this._stateIndex = this._states.length + 2;
        this._setFirstState()
    };
    j["com.nick.spongebob.marble_bash.ui.screens.ScreenBase"] = p.screens.ScreenBase;
    p.screens.ScreenBase.__name__ = "com,nick,spongebob,marble_bash,ui,screens,ScreenBase".split(",");
    p.screens.ScreenBase.__super__ = t.Element;
    p.screens.ScreenBase.prototype = C(t.Element.prototype, {
        _onStateComplete: function() {
            this._flagStateCompleteTemp = !1;
            "" != this._states[this._stateIndex].outFunc && i.WorkinCloud.instance.log("[ScreenBase](_onStateComplete) Out Func not supported in HTML5 yet");
            switch (this._states[this._stateIndex].actionOnComplete) {
                case p.screens.data.ScreenStateData.ACTION_OPENED:
                    this._setOpenedState();
                    this._dispatcher.dispatchEvent(new y.WMEventScreenOut(g.ConstantsScreen.OUTPUT_OPENED, this.id));
                    break;
                case p.screens.data.ScreenStateData.ACTION_CLOSED:
                    this.setFlagDispose();
                    this._dispatcher.dispatchEvent(new y.WMEventScreenOut(g.ConstantsScreen.OUTPUT_CLOSED, this.id));
                    break;
                case p.screens.data.ScreenStateData.ACTION_NEW_STATE:
                    this._setState(this._states[this._stateIndex].actionData);
                    break;
                case p.screens.data.ScreenStateData.ACTION_EVENT:
                    this._dispatcher.dispatchEvent(new y.WMEvent(this._states[this._stateIndex].actionData));
                    break;
                case p.screens.data.ScreenStateData.ACTION_FLOW:
                    this._doFlowEvent(this._states[this._stateIndex].actionData)
            }
        },
        _findStateIndex: function(a) {
            for (var b = this._states.length - 1; 0 <= b;) {
                if (this._states[b].id == a) return b;
                b--
            }
            return -1
        },
        getState: function() {
            return this._states[this._stateIndex].id
        },
        _setState: function(a, b) {
            null == b && (b = !1);
            var c = this._findStateIndex(a);
            if (0 > c) i.WorkinCloud.instance.log("[ScreenBase](_setState) ERROR : State >" + a + "< not found."), i.WorkinCloud.instance.log("[ScreenBase](_setState) cancelling setState().");
            else if (b || c != this._stateIndex) this._flagStateAnimationComplete = this._flagStateCompleteTemp = !1, this._stateIndex = c
        },
        _addState: function(a, b, c, d, f, n) {
            null == n && (n = "");
            null == f && (f = "");
            null == d && (d = "");
            null == c && (c = 0);
            this._states.push(new p.screens.data.ScreenStateData(a, b, c, d, f, n))
        },
        isClosing: function() {
            return this.getState() == this._STATE_OUT
        },
        close: function() {
            this.setFlagDispose();
            this._dispatcher.dispatchEvent(new y.WMEventScreenOut(g.ConstantsScreen.OUTPUT_CLOSED, this.id))
        },
        suspend: function() {
            this._setState(this._STATE_SUSPENDED)
        },
        open: function() {
            this._setOpenedState();
            this._dispatcher.dispatchEvent(new y.WMEventScreenOut(g.ConstantsScreen.OUTPUT_OPENED, this.id))
        },
        dispose: function() {
            this._states = null;
            t.Element.prototype.dispose.call(this)
        },
        reset: function() {
            this._setFirstState()
        },
        handleInput: function(a) {
            var b = !0;
            switch (a.input) {
                case g.ConstantsApp.INPUT_CLICK:
                    switch (a.phase) {
                        case 1:
                            this._onInputDown(a.x,
                                a.y) || (b = !1);
                            break;
                        case 2:
                            this._onInputMove(a.x, a.y) || (b = !1);
                            break;
                        case 0:
                            this._onInputUp(a.x, a.y) || (b = !1)
                    }
                    break;
                default:
                    this._onInput(a) || (b = !1)
            }
            return b
        },
        update: function(a) {
            t.Element.prototype.update.call(this, a);
            this._flagStateCompleteTemp && this._onStateComplete()
        },
        _doFlowEvent: function(a) {
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventFlow(a))
        },
        _buildButtons: function() {},
        _onInput: function() {
            return this.getState() != this._STATE_OPENED ? !1 : !0
        },
        _onInputMove: function() {
            return this.getState() !=
                this._STATE_OPENED ? !1 : !0
        },
        _onInputUp: function() {
            return this.getState() != this._STATE_OPENED ? !1 : !0
        },
        _onInputDown: function() {
            return this.getState() != this._STATE_OPENED ? !1 : !0
        },
        _generateStates: function() {
            this._addState(this._STATE_IN, "in", p.screens.data.ScreenStateData.ACTION_OPENED);
            this._addState(this._STATE_OUT, "out", p.screens.data.ScreenStateData.ACTION_CLOSED);
            this._addState(this._STATE_OPENED, "open");
            this._addState(this._STATE_SUSPENDED, "suspend")
        },
        _setOpenedState: function() {
            this._setState(this._STATE_OPENED)
        },
        _setFirstState: function() {
            this._setState(this._STATE_IN)
        },
        _useClickWall: function() {
            return !0
        },
        setFlagDispose: function() {
            this.flagDispose = !0
        },
        __class__: p.screens.ScreenBase,
        __properties__: C(t.Element.prototype.__properties__, {
            get_state: "getState"
        })
    });
    p.screens.ScreenEndGame = function(a, b, c) {
        null == b && (b = "");
        p.screens.ScreenBase.call(this, a, b, c);
        this._addElement(new p.elements.Overlay(0, 0, g.ConstantsApp.STAGE_WIDTH, g.ConstantsApp.STAGE_HEIGHT));
        this._addElement(new t.Element({
            asset: "start_bg",
            x: g.ConstantsApp.STAGE_WIDTH /
                2,
            y: g.ConstantsApp.STAGE_HEIGHT / 2,
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        this._addElement(new t.TextLocalized(g.ConstantsApp.STAGE_CENTER_X, 120, "game_over", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X, g.ConstantsApp.STAGE_CENTER_Y - 50, new k.WorkinPoint(0.5, 0.5), "btn_purple", "btn_purple", "btn_purple_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventMenuClick));
        a._addElement(new t.TextLocalized(0,
            0, "main_menu", "", {
                origin: new k.WorkinPoint(0.5, 0.5)
            }));
        a.setSound(["Banjo2"]);
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X, g.ConstantsApp.STAGE_CENTER_Y + 90, new k.WorkinPoint(0.5, 0.5), "btn_green", "btn_green", "btn_green_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventNewClick));
        a._addElement(new t.TextLocalized(0, 0, "new_game", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        a.setSound(["floot1"])
    };
    j["com.nick.spongebob.marble_bash.ui.screens.ScreenEndGame"] =
        p.screens.ScreenEndGame;
    p.screens.ScreenEndGame.__name__ = "com,nick,spongebob,marble_bash,ui,screens,ScreenEndGame".split(",");
    p.screens.ScreenEndGame.__super__ = p.screens.ScreenBase;
    p.screens.ScreenEndGame.prototype = C(p.screens.ScreenBase.prototype, {
        _onEventNewClick: function() {
            this.getState() == this._STATE_OPENED && (i.WorkinCloud.instance.sharedObjectDelete(g.ConstantsApp.SAVE_LEVEL), this._doFlowEvent(g.ConstantsScreen.FLOW_END_GAME_PLAY_AGAIN))
        },
        _onEventMenuClick: function() {
            this.getState() == this._STATE_OPENED &&
                this._doFlowEvent(g.ConstantsScreen.FLOW_END_GAME_START)
        },
        __class__: p.screens.ScreenEndGame
    });
    p.screens.ScreenGameplayHUD = function(a, b, c) {
        null == b && (b = "");
        p.screens.ScreenBase.call(this, a, b, c);
        this._addElement(new p.displays.DisplayBonus(320, 50));
        this._addElement(new t.Element({
            asset: "border_top",
            x: 180
        }));
        this._addElement(new t.Element({
            asset: "border_left"
        }));
        this._addElement(new t.Element({
            asset: "border_left",
            origin: new k.WorkinPoint(0, 1),
            x: g.ConstantsApp.STAGE_WIDTH,
            rot: 180
        }));
        this._addElement(new t.TextLocalized(205,
            5, "score"));
        this._addElement(new p.displays.DisplayScore(260, 1));
        this._addElement(new t.TextLocalized(590, 5, "time"));
        this._addElement(new p.displays.DisplayTimer(650, 4));
        this._addElement(new t.TextLocalized(708, 5, "level"));
        this._addElement(new p.displays.DisplayLevel(755, 4));
        this._addElement(new p.displays.DisplayLevelProgress(180, 530));
        this._addElement(new p.elements.ClearAll);
        this._addElement(a = new p.buttons.ButtonBase(930, 30, new k.WorkinPoint(0.5, 0.5), "btn_pause", "btn_pause", "btn_pause"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK,
            w(this, this._onEventPauseClick));
        a.setSound(["floot1"])
    };
    j["com.nick.spongebob.marble_bash.ui.screens.ScreenGameplayHUD"] = p.screens.ScreenGameplayHUD;
    p.screens.ScreenGameplayHUD.__name__ = "com,nick,spongebob,marble_bash,ui,screens,ScreenGameplayHUD".split(",");
    p.screens.ScreenGameplayHUD.__super__ = p.screens.ScreenBase;
    p.screens.ScreenGameplayHUD.prototype = C(p.screens.ScreenBase.prototype, {
        _useClickWall: function() {
            return !1
        },
        _onEventPauseClick: function() {
            this.getState() == this._STATE_OPENED && this._doFlowEvent(g.ConstantsScreen.FLOW_GAMEPLAY_MENU)
        },
        __class__: p.screens.ScreenGameplayHUD
    });
    p.screens.ScreenGameplayMenu = function(a, b, c) {
        null == b && (b = "");
        p.screens.ScreenBase.call(this, a, b, c);
        this._addElement(new p.elements.Overlay(0, 0, g.ConstantsApp.STAGE_WIDTH, g.ConstantsApp.STAGE_HEIGHT));
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_WIDTH / 2 + 100, 350, new k.WorkinPoint(0.5, 0.5), "btn_quit", "btn_quit", "btn_quit"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventQuitClick));
        a.setSound(["banjostrum2"]);
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_WIDTH / 2 + 100, 200, new k.WorkinPoint(0.5, 0.5), "btn_help", "btn_help", "btn_help"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventHelpClick));
        a.setSound(["Seagull1"]);
        this._addElement(new p.buttons.ButtonSoundToggle(g.ConstantsApp.STAGE_WIDTH / 2 - 100, 350, new k.WorkinPoint(0.5, 0.5), ["btn_sound_off", "btn_sound_off", "btn_sound_off"], ["btn_sound_on", "btn_sound_on", "btn_sound_on"]));
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_WIDTH /
            2 - 100, 200, new k.WorkinPoint(0.5, 0.5), "btn_play", "btn_play", "btn_play"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventResumeClick));
        a.setSound(["floot1"])
    };
    j["com.nick.spongebob.marble_bash.ui.screens.ScreenGameplayMenu"] = p.screens.ScreenGameplayMenu;
    p.screens.ScreenGameplayMenu.__name__ = "com,nick,spongebob,marble_bash,ui,screens,ScreenGameplayMenu".split(",");
    p.screens.ScreenGameplayMenu.__super__ = p.screens.ScreenBase;
    p.screens.ScreenGameplayMenu.prototype = C(p.screens.ScreenBase.prototype, {
        _onEventQuitClick: function() {
            this.getState() == this._STATE_OPENED && this._doFlowEvent(g.ConstantsScreen.FLOW_GAMEPLAY_MENU_QUIT)
        },
        _onEventResumeClick: function() {
            this.getState() == this._STATE_OPENED && this._doFlowEvent(g.ConstantsScreen.FLOW_GAMEPLAY_MENU_CLOSE)
        },
        _onEventHelpClick: function() {
            this.getState() == this._STATE_OPENED && this._doFlowEvent(g.ConstantsScreen.FLOW_GAMEPLAY_MENU_HELP)
        },
        __class__: p.screens.ScreenGameplayMenu
    });
    p.screens.ScreenGeneric = function() {};
    j["com.nick.spongebob.marble_bash.ui.screens.ScreenGeneric"] =
        p.screens.ScreenGeneric;
    p.screens.ScreenGeneric.__name__ = "com,nick,spongebob,marble_bash,ui,screens,ScreenGeneric".split(",");
    p.screens.ScreenGeneric.__super__ = p.screens.ScreenBase;
    p.screens.ScreenGeneric.prototype = C(p.screens.ScreenBase.prototype, {
        _onInputMove: function() {
            return !1
        },
        _onInputUp: function() {
            return !1
        },
        _onInputDown: function() {
            return !1
        },
        __class__: p.screens.ScreenGeneric
    });
    p.screens.ScreenHelp = function(a, b, c) {
        null == b && (b = "");
        p.screens.ScreenBase.call(this, a, b, c);
        this._type = "_desktop";
        i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TOUCH_DEVICE) &&
            (this._type = "_mobile");
        this._help = this._addElement(new t.Element({
            x: g.ConstantsApp.STAGE_CENTER_X,
            y: g.ConstantsApp.STAGE_CENTER_Y,
            origin: new k.WorkinPoint(0.5, 0.5),
            asset: "help_bg_green"
        }));
        this._textNum = this._addElement(new t.TextBase(g.ConstantsApp.STAGE_CENTER_X + 160, 80, "", i.WorkinCloud.instance._getLocalize().getData("level_1")._getFontName(), {
            origin: new k.WorkinPoint(0, 0),
            scale: 0.4
        }));
        this._helpId = 0;
        this._texta = this._addElement(new t.TextLocalized(g.ConstantsApp.STAGE_CENTER_X, 140, "help_1a", "", {
            width: 300,
            origin: new k.WorkinPoint(0.5, 0),
            center: !0,
            spacing: 15
        }));
        this._textb = this._addElement(new t.TextLocalized(g.ConstantsApp.STAGE_CENTER_X, 270, "help_1a", "", {
            width: 300,
            origin: new k.WorkinPoint(0.5, 0),
            center: !0,
            spacing: 15
        }));
        this._helpImage = this._addElement(new t.Element({
            asset: "help_1",
            x: g.ConstantsApp.STAGE_CENTER_X,
            y: g.ConstantsApp.STAGE_CENTER_Y + 50,
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        this._tempElements = [];
        this._showNext();
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X -
            150, 490, new k.WorkinPoint(0.5, 0.5), "btn_red", "btn_red", "btn_red_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventClickBack));
        a.setSound(["floot1", "Honk1", "newboing1", "fartbutton2"]);
        a.setScale(0.7, 0.7);
        a._getRenderable().rotation = 180;
        a._addElement(new t.TextLocalized(0, 0, "back", "", {
            rot: 180,
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X, 490, new k.WorkinPoint(0.5, 0.5), "btn_purple", "btn_purple", "btn_purple_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK,
            w(this, this._onEventClickSkip));
        a.setScale(0.5, 0.5);
        a._addElement(new t.TextLocalized(0, 0, "exit", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        a.setSound(["Seagull1"]);
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X + 150, 490, new k.WorkinPoint(0.5, 0.5), "btn_red", "btn_red", "btn_red_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventClickNext));
        a.setScale(0.7, 0.7);
        a._addElement(new t.TextLocalized(0, 0, "next", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        a.setSound(["Honk1", "newboing1", "floot1", "Squish1"])
    };
    j["com.nick.spongebob.marble_bash.ui.screens.ScreenHelp"] = p.screens.ScreenHelp;
    p.screens.ScreenHelp.__name__ = "com,nick,spongebob,marble_bash,ui,screens,ScreenHelp".split(",");
    p.screens.ScreenHelp.__super__ = p.screens.ScreenBase;
    p.screens.ScreenHelp.prototype = C(p.screens.ScreenBase.prototype, {
        _onEventClickNext: function() {
            this._showNext()
        },
        _onEventClickBack: function() {
            this._showPrev()
        },
        _closeHelp: function() {
            this.getState() == this._STATE_OPENED && this._doFlowEvent(g.ConstantsScreen.FLOW_HELP_CLOSE)
        },
        _onEventClickSkip: function() {
            this._closeHelp()
        },
        _setHelp: function() {
            for (var a = this._tempElements.length; 0 < a;) a--, this._removeElement(this._tempElements.pop());
            this._help.setTexture("help_bg_green");
            this._textNum._setText(this._helpId + "/8");
            this._helpImage.setTexture("help_" + this._helpId);
            this._helpImage._getPos().y = g.ConstantsApp.STAGE_CENTER_Y + 30;
            this._texta._getPos().y = 140;
            this._textb._getPos().y = 270;
            switch (this._helpId) {
                case 1:
                    this._texta._setText("help_" + this._helpId + "a" + this._type);
                    this._textb._setText("");
                    break;
                case 2:
                    this._texta._setText("help_" + this._helpId + "a");
                    this._textb._setText("help_" + this._helpId + "b" + this._type);
                    this._textb._getPos().y = 300;
                    this._texta._getPos().y = 120;
                    break;
                case 3:
                    this._texta._setText("help_" + this._helpId + "a" + this._type);
                    this._texta._getPos().y = 110;
                    this._textb._getPos().y = 275;
                    this._textb._setText("help_" + this._helpId + "b" + this._type);
                    this._helpImage._getPos().y = g.ConstantsApp.STAGE_CENTER_Y + 40;
                    break;
                case 4:
                    this._texta._setText("help_" + this._helpId + "a");
                    this._textb._setText("help_" +
                        this._helpId + "b" + this._type);
                    this._textb._getPos().y = 300;
                    break;
                case 5:
                    this._texta._setText("help_" + this._helpId + "a");
                    this._textb._setText("help_" + this._helpId + "b");
                    this._textb._getPos().y = 280;
                    this._helpImage._getPos().y = g.ConstantsApp.STAGE_CENTER_Y - 40;
                    break;
                case 6:
                    this._texta._setText("help_" + this._helpId + "a");
                    this._textb._setText("");
                    this._help.setTexture("help_bg_red");
                    break;
                case 7:
                    this._texta._setText("help_" + this._helpId + "a");
                    this._textb._setText("help_" + this._helpId + "b");
                    this._textb._getPos().y =
                        300;
                    this._helpImage._getPos().y = g.ConstantsApp.STAGE_CENTER_Y - 20;
                    this._tempElements.push(new t.TextLocalized(550, 250, "bonus_spongebob", i.WorkinCloud.instance._getLocalize().getData("bonus_multiplier")._getFontName(), {
                        origin: new k.WorkinPoint(0.5, 0.5),
                        width: 130,
                        center: !0,
                        scale: 0.4,
                        spacing: 5
                    }));
                    this._tempElements[this._tempElements.length - 1]._getRenderable().scaleX = this._tempElements[this._tempElements.length - 1]._getRenderable().scaleY = 0.2;
                    this._tempElements.push(new t.TextBase(540, 275, "", i.WorkinCloud.instance._getLocalize().getData("bonus_multiplier")._getFontName(), {
                        origin: new k.WorkinPoint(0.5, 0.5),
                        scale: 0.3
                    }));
                    ba.__cast(this._tempElements[this._tempElements.length - 1], t.TextBase)._setText("x2");
                    this._tempElements.push(new t.TextBase(420, 250, "", i.WorkinCloud.instance._getLocalize().getData("bonus_spongebob")._getFontName(), {
                        origin: new k.WorkinPoint(0.5, 0.5),
                        scale: 0.4
                    }));
                    ba.__cast(this._tempElements[this._tempElements.length - 1], t.TextBase)._setText("x6 : ");
                    break;
                case 8:
                    this._texta._setText("help_" + this._helpId + "a"), this._textb._setText(""), this._tempElements.push(new t.TextLocalized(340,
                            330, "bonus_spongebob", i.WorkinCloud.instance._getLocalize().getData("bonus_multiplier")._getFontName(), {
                                origin: new k.WorkinPoint(0.5, 0.5),
                                width: 130,
                                center: !0,
                                scale: 0.4,
                                spacing: 15
                            })), this._tempElements[this._tempElements.length - 1]._getRenderable().scaleX = this._tempElements[this._tempElements.length - 1]._getRenderable().scaleY = 0.2, this._tempElements.push(new t.TextBase(330, 360, "", i.WorkinCloud.instance._getLocalize().getData("bonus_multiplier")._getFontName(), {
                            origin: new k.WorkinPoint(0.5, 0.5),
                            scale: 0.3
                        })),
                        ba.__cast(this._tempElements[this._tempElements.length - 1], t.TextBase)._setText("x2"), this._tempElements.push(new t.TextLocalized(485, 330, "bonus_spongebob", i.WorkinCloud.instance._getLocalize().getData("bonus_multiplier")._getFontName(), {
                            origin: new k.WorkinPoint(0.5, 0.5),
                            width: 130,
                            center: !0,
                            scale: 0.4,
                            spacing: 15
                        })), this._tempElements[this._tempElements.length - 1]._getRenderable().scaleX = this._tempElements[this._tempElements.length - 1]._getRenderable().scaleY = 0.2, this._tempElements.push(new t.TextBase(470,
                            360, "", i.WorkinCloud.instance._getLocalize().getData("bonus_multiplier")._getFontName(), {
                                origin: new k.WorkinPoint(0.5, 0.5),
                                scale: 0.3
                            })), ba.__cast(this._tempElements[this._tempElements.length - 1], t.TextBase)._setText("x4"), this._tempElements.push(new t.TextLocalized(630, 330, "bonus_spongebob", i.WorkinCloud.instance._getLocalize().getData("bonus_multiplier")._getFontName(), {
                            origin: new k.WorkinPoint(0.5, 0.5),
                            width: 130,
                            center: !0,
                            scale: 0.4,
                            spacing: 15
                        })), this._tempElements[this._tempElements.length - 1]._getRenderable().scaleX =
                        this._tempElements[this._tempElements.length - 1]._getRenderable().scaleY = 0.2, this._tempElements.push(new t.TextBase(620, 360, "", i.WorkinCloud.instance._getLocalize().getData("bonus_multiplier")._getFontName(), {
                            origin: new k.WorkinPoint(0.5, 0.5),
                            scale: 0.3
                        })), ba.__cast(this._tempElements[this._tempElements.length - 1], t.TextBase)._setText("x6")
            }
            for (var a = 0, b = this._tempElements; a < b.length;) {
                var c = b[a];
                ++a;
                this._addElement(c)
            }
        },
        _showPrev: function() {
            this._helpId--;
            0 >= this._helpId ? this._closeHelp() : this._setHelp()
        },
        _showNext: function() {
            this._helpId++;
            8 < this._helpId ? this._closeHelp() : this._setHelp()
        },
        __class__: p.screens.ScreenHelp
    });
    p.screens.ScreenLevelSelect = function(a, b, c) {
        null == b && (b = "");
        p.screens.ScreenBase.call(this, a, b, c);
        this._addElement(new t.Element({
            asset: "bg_levelselect",
            x: g.ConstantsApp.STAGE_WIDTH / 2,
            y: g.ConstantsApp.STAGE_CENTER_Y,
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X - 200, g.ConstantsApp.STAGE_CENTER_Y - 10, new k.WorkinPoint(0.5,
            0.5), "btn_green", "btn_green", "btn_green_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventEasyClick));
        a._addElement(new t.TextLocalized(0, 0, "easy", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        a.setSound(["Balloon1a"]);
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X, g.ConstantsApp.STAGE_CENTER_Y - 10, new k.WorkinPoint(0.5, 0.5), "btn_orange", "btn_orange", "btn_orange_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this,
            this._onEventNormalClick));
        a._addElement(new t.TextLocalized(0, 0, "normal", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        a.setSound(["Balloon1a"]);
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X + 200, g.ConstantsApp.STAGE_CENTER_Y - 10, new k.WorkinPoint(0.5, 0.5), "btn_red", "btn_red", "btn_red_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventHardClick));
        a._addElement(new t.TextLocalized(0, 0, "hard", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        a.setSound(["Balloon1a"]);
        this._addElement(a = new p.buttons.ButtonBase(160, 360, new k.WorkinPoint(0.5, 0.5), "btn_red", "btn_red", "btn_red_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventBackClick));
        a._getRenderable().scaleX = a._getRenderable().scaleY = 0.5;
        a._getRenderable().rotation = 180;
        a._addElement(new t.TextLocalized(0, 0, "back", "", {
            rot: 180,
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        a.setSound(["Seagull1"])
    };
    j["com.nick.spongebob.marble_bash.ui.screens.ScreenLevelSelect"] = p.screens.ScreenLevelSelect;
    p.screens.ScreenLevelSelect.__name__ = "com,nick,spongebob,marble_bash,ui,screens,ScreenLevelSelect".split(",");
    p.screens.ScreenLevelSelect.__super__ = p.screens.ScreenBase;
    p.screens.ScreenLevelSelect.prototype = C(p.screens.ScreenBase.prototype, {
        _onEventBackClick: function() {
            this.getState() == this._STATE_OPENED && this._doFlowEvent(g.ConstantsScreen.FLOW_LEVEL_SELECT_CLOSE)
        },
        _onEventHardClick: function() {
            this.getState() == this._STATE_OPENED && (i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_RESUME, !1), i.WorkinCloud.instance.sharedObjectDelete(g.ConstantsApp.SAVE_LEVEL),
                i.WorkinCloud.instance.setString(g.ConstantsApp.STRING_LEVEL_TYPE, g.ConstantsApp.LEVEL_HARD), this._doFlowEvent(g.ConstantsScreen.FLOW_SPLASH_PLAY))
        },
        _onEventNormalClick: function() {
            this.getState() == this._STATE_OPENED && (i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_RESUME, !1), i.WorkinCloud.instance.sharedObjectDelete(g.ConstantsApp.SAVE_LEVEL), i.WorkinCloud.instance.setString(g.ConstantsApp.STRING_LEVEL_TYPE, g.ConstantsApp.LEVEL_NORMAL), this._doFlowEvent(g.ConstantsScreen.FLOW_SPLASH_PLAY))
        },
        _onEventEasyClick: function() {
            this.getState() ==
                this._STATE_OPENED && (i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_RESUME, !1), i.WorkinCloud.instance.sharedObjectDelete(g.ConstantsApp.SAVE_LEVEL), i.WorkinCloud.instance.setString(g.ConstantsApp.STRING_LEVEL_TYPE, g.ConstantsApp.LEVEL_EASY), this._doFlowEvent(g.ConstantsScreen.FLOW_SPLASH_PLAY))
        },
        __class__: p.screens.ScreenLevelSelect
    });
    p.screens.ScreenLoading = function(a, b, c) {
        null == b && (b = "");
        p.screens.ScreenBase.call(this, a, b, c);
        "en" == i.WorkinCloud.instance.getString($.ConstantsCloud.STRING_REGION_ID) ?
            (this._addElement(new t.Element({
                asset: "ui/loading_panel"
            })), this._fontShowing = !0) : (this._addElement(new t.Element({
                asset: "ui/loading_panel_localized"
            })), this._fontShowing = !1);
        this._addElement(new p.displays.DisplayLoadingProgress(130, g.ConstantsApp.STAGE_CENTER_Y + 175))
    };
    j["com.nick.spongebob.marble_bash.ui.screens.ScreenLoading"] = p.screens.ScreenLoading;
    p.screens.ScreenLoading.__name__ = "com,nick,spongebob,marble_bash,ui,screens,ScreenLoading".split(",");
    p.screens.ScreenLoading.__super__ = p.screens.ScreenBase;
    p.screens.ScreenLoading.prototype = C(p.screens.ScreenBase.prototype, {
        update: function(a) {
            p.screens.ScreenBase.prototype.update.call(this, a);
            i.WorkinCloud.instance._getAssets().isPackLoaded("fonts_" + i.WorkinCloud.instance.getString($.ConstantsCloud.STRING_REGION_ID)) && !this._fontShowing && (this._fontShowing = !0, this._addElement(new t.TextLocalized(g.ConstantsApp.STAGE_CENTER_X, 210, "loading", "", {
                origin: new k.WorkinPoint(0.5, 0.5)
            })))
        },
        __class__: p.screens.ScreenLoading
    });
    p.screens.ScreenPauseAlert = function(a,
        b, c) {
        null == b && (b = "");
        p.screens.ScreenBase.call(this, a, b, c);
        this._alertBox = new E.FillSprite(0, g.ConstantsApp.STAGE_WIDTH | 0, g.ConstantsApp.STAGE_HEIGHT | 0);
        a = new ma;
        a.add(this._alertBox);
        this._textureEntity.addChild(a);
        this._textAlert = this._addElement(new t.TextLocalized(50, 50, "orientation_portrait", "", {
            origin: new k.WorkinPoint(0, 0.5)
        }))
    };
    j["com.nick.spongebob.marble_bash.ui.screens.ScreenPauseAlert"] = p.screens.ScreenPauseAlert;
    p.screens.ScreenPauseAlert.__name__ = "com,nick,spongebob,marble_bash,ui,screens,ScreenPauseAlert".split(",");
    p.screens.ScreenPauseAlert.__super__ = p.screens.ScreenBase;
    p.screens.ScreenPauseAlert.prototype = C(p.screens.ScreenBase.prototype, {
        update: function(a) {
            p.screens.ScreenBase.prototype.update.call(this, a)
        },
        __class__: p.screens.ScreenPauseAlert
    });
    p.screens.ScreenQuitConfirm = function(a, b, c) {
        p.screens.ScreenBase.call(this, a, b, c);
        this._addElement(new t.Element({
            asset: "start_bg",
            x: g.ConstantsApp.STAGE_WIDTH / 2,
            y: g.ConstantsApp.STAGE_HEIGHT / 2,
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        this._addElement(new t.TextLocalized(g.ConstantsApp.STAGE_CENTER_X,
            180, "quit_confirm_header", "", {
                origin: new k.WorkinPoint(0.5, 0.5),
                width: 500,
                center: !0
            }));
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X - 100, g.ConstantsApp.STAGE_CENTER_Y + 80, new k.WorkinPoint(0.5, 0.5), "btn_orange", "btn_orange", "btn_orange_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onYesClick));
        a._addElement(new t.TextLocalized(0, 0, "yes", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        a.setSound(["newboing1"]);
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X +
            100, g.ConstantsApp.STAGE_CENTER_Y + 80, new k.WorkinPoint(0.5, 0.5), "btn_green", "btn_green", "btn_green_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onNoClick));
        a._addElement(new t.TextLocalized(0, 0, "no", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        a.setSound(["Seagull1"])
    };
    j["com.nick.spongebob.marble_bash.ui.screens.ScreenQuitConfirm"] = p.screens.ScreenQuitConfirm;
    p.screens.ScreenQuitConfirm.__name__ = "com,nick,spongebob,marble_bash,ui,screens,ScreenQuitConfirm".split(",");
    p.screens.ScreenQuitConfirm.__super__ = p.screens.ScreenBase;
    p.screens.ScreenQuitConfirm.prototype = C(p.screens.ScreenBase.prototype, {
        _onNoClick: function() {
            this.getState() == this._STATE_OPENED && this._doFlowEvent(g.ConstantsScreen.FLOW_GAMEPLAY_QUIT_NO)
        },
        _onYesClick: function() {
            this.getState() == this._STATE_OPENED && this._doFlowEvent(g.ConstantsScreen.FLOW_GAMEPLAY_QUIT_YES)
        },
        __class__: p.screens.ScreenQuitConfirm
    });
    p.screens.ScreenScreenshot = function() {};
    j["com.nick.spongebob.marble_bash.ui.screens.ScreenScreenshot"] =
        p.screens.ScreenScreenshot;
    p.screens.ScreenScreenshot.__name__ = "com,nick,spongebob,marble_bash,ui,screens,ScreenScreenshot".split(",");
    p.screens.ScreenScreenshot.__super__ = p.screens.ScreenBase;
    p.screens.ScreenScreenshot.prototype = C(p.screens.ScreenBase.prototype, {
        dispose: function() {
            p.screens.ScreenBase.prototype.dispose.call(this)
        },
        __class__: p.screens.ScreenScreenshot
    });
    p.screens.ScreenSound = function(a, b, c) {
        p.screens.ScreenBase.call(this, a, b, c);
        this._addElement(new p.elements.Overlay(350, 120, 260,
            390));
        this._addElement(new t.Element({
            asset: "btn_base4",
            x: g.ConstantsApp.STAGE_CENTER_X,
            y: g.ConstantsApp.STAGE_CENTER_Y - 100,
            scale: 0.7,
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        this._addElement(new t.Element({
            asset: "btn_base4",
            x: g.ConstantsApp.STAGE_CENTER_X,
            y: g.ConstantsApp.STAGE_CENTER_Y,
            scale: 0.7,
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        this._addElement(new t.Element({
            asset: "btn_base3",
            x: g.ConstantsApp.STAGE_CENTER_X,
            y: g.ConstantsApp.STAGE_CENTER_Y + 100,
            scale: 0.7,
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        this._addElement(new t.Element({
            asset: "bars_green",
            x: g.ConstantsApp.STAGE_CENTER_X,
            y: g.ConstantsApp.STAGE_CENTER_Y - 100,
            scale: 0.7,
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        this._addElement(new t.Element({
            asset: "bars_orange",
            x: g.ConstantsApp.STAGE_CENTER_X,
            y: g.ConstantsApp.STAGE_CENTER_Y,
            scale: 0.7,
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        this._addElement(new t.TextLocalized(375, 150, "music", "", {
            origin: new k.WorkinPoint(0, 0)
        }));
        this._addElement(new t.TextLocalized(375, 250, "sound_effects", "", {
            origin: new k.WorkinPoint(0, 0)
        }));
        this._addElement(new t.TextLocalized(375,
            350, "sound_link", "", {
                origin: new k.WorkinPoint(0, 0)
            }));
        this._addElement(this._slider1 = new p.buttons.ButtonSlider(400, 190, new k.WorkinPoint(0.5, 0.5), "btn_slider", "btn_slider", "btn_slider", "", {
            min: 400,
            max: 580,
            segments: 9,
            update: g.ConstantsApp.FLOAT_VOLUME_MUSIC
        }));
        this._slider1.setScale(0.5, 0.5);
        this._addElement(this._slider2 = new p.buttons.ButtonSlider(400, 290, new k.WorkinPoint(0.5, 0.5), "btn_slider", "btn_slider", "btn_slider", "", {
            min: 400,
            max: 580,
            segments: 9,
            update: g.ConstantsApp.FLOAT_VOLUME_SOUND
        }));
        this._slider2.setScale(0.5,
            0.5);
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X - 70, 390, new k.WorkinPoint(0.5, 0.5), "btn_piano", "btn_piano", "btn_piano"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventPianoClick));
        a._addElement(new t.TextLocalized(0, 0, "effects_piano", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        a.setScale(0.7, 0.7);
        a.setSound(["piano7"]);
        this._btnPiano = a;
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X, 390, new k.WorkinPoint(0.5, 0.5),
            "btn_plink", "btn_plink", "btn_plink"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventPlinkClick));
        a._addElement(new t.TextLocalized(0, 0, "effects_plink", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        a.setScale(0.7, 0.7);
        a.setSound(["plink7"]);
        this._btnPlink = a;
        this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X + 70, 390, new k.WorkinPoint(0.5, 0.5), "btn_none", "btn_none", "btn_none"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventNoneClick));
        a._addElement(new t.TextLocalized(0, 0, "effects_none", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        a.setScale(0.7, 0.7);
        this._btnNone = a;
        this._addElement(a = new p.buttons.ButtonBase(410, 470, new k.WorkinPoint(0.5, 0.5), "btn_red", "btn_red", "btn_red_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventBackClick));
        a.setScale(0.5, 0.5);
        a._getRenderable().rotation = 180;
        a.setSound(["Seagull1"]);
        a._addElement(new t.TextLocalized(0, 0, "back", "", {
            rot: 180,
            origin: new k.WorkinPoint(0.5,
                0.5)
        }));
        this._overlay = this._addElement(new t.Element({
            asset: "btn_effectOverlay",
            x: -100,
            y: -100,
            scale: 0.7,
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        switch (i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_NOTE_TYPE)) {
            case 0:
                this._overlay._getPos().toPoint(this._btnPiano._getPos());
                break;
            case 1:
                this._overlay._getPos().toPoint(this._btnPlink._getPos());
                break;
            case 2:
                this._overlay._getPos().toPoint(this._btnNone._getPos())
        }
    };
    j["com.nick.spongebob.marble_bash.ui.screens.ScreenSound"] = p.screens.ScreenSound;
    p.screens.ScreenSound.__name__ =
        "com,nick,spongebob,marble_bash,ui,screens,ScreenSound".split(",");
    p.screens.ScreenSound.__super__ = p.screens.ScreenBase;
    p.screens.ScreenSound.prototype = C(p.screens.ScreenBase.prototype, {
        handleInput: function(a, b) {
            null == b && (b = !0);
            this._slider1.handleInput(a);
            this._slider2.handleInput(a);
            return p.screens.ScreenBase.prototype.handleInput.call(this, a, b)
        },
        _onEventBackClick: function() {
            this.getState() == this._STATE_OPENED && this._doFlowEvent(g.ConstantsScreen.FLOW_GAMEPLAY_MENU_SOUND_CLOSE)
        },
        _onEventNoneClick: function() {
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_NOTE_TYPE,
                2);
            this._overlay._getPos().toPoint(this._btnNone._getPos())
        },
        _onEventPlinkClick: function() {
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_NOTE_TYPE, 1);
            this._overlay._getPos().toPoint(this._btnPlink._getPos())
        },
        _onEventPianoClick: function() {
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_NOTE_TYPE, 0);
            this._overlay._getPos().toPoint(this._btnPiano._getPos())
        },
        __class__: p.screens.ScreenSound
    });
    p.screens.ScreenSplash = function(a, b, c) {
        null == b && (b = "");
        this._BLINK_TIME = 1;
        p.screens.ScreenBase.call(this,
            a, b, c);
        this._blinkTimer = this._BLINK_TIME;
        this._addElement(new t.Element({
            asset: "splash_logo",
            x: 10,
            y: 10
        }));
        "en" == i.WorkinCloud.instance.getString($.ConstantsCloud.STRING_REGION_ID) ? this._addElement(new t.Element({
            asset: "splash_title"
        })) : (this._addElement(new t.TextLocalized(10, g.ConstantsApp.STAGE_CENTER_Y, "title_1", "", {
            rot: -5
        })), this._addElement(new t.TextLocalized(g.ConstantsApp.STAGE_CENTER_X + 150, 150, "title_2", "", {
            rot: -20
        })));
        a = i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TOUCH_DEVICE) ? "tap_anywhere" :
            "click_anywhere";
        this._textClickToPlay = this._addElement(new t.TextLocalized(g.ConstantsApp.STAGE_CENTER_X, g.ConstantsApp.STAGE_HEIGHT - 100, a, "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }))
    };
    j["com.nick.spongebob.marble_bash.ui.screens.ScreenSplash"] = p.screens.ScreenSplash;
    p.screens.ScreenSplash.__name__ = "com,nick,spongebob,marble_bash,ui,screens,ScreenSplash".split(",");
    p.screens.ScreenSplash.__super__ = p.screens.ScreenBase;
    p.screens.ScreenSplash.prototype = C(p.screens.ScreenBase.prototype, {
        _onInputDown: function() {
            if (this.getState() !=
                this._STATE_OPENED) return !1;
            this._doFlowEvent(g.ConstantsScreen.FLOW_START);
            return !1
        },
        update: function(a) {
            p.screens.ScreenBase.prototype.update.call(this, a);
            this._blinkTimer -= a;
            0 >= this._blinkTimer && (0 == this._textClickToPlay._getRenderable().alpha ? (this._blinkTimer = this._BLINK_TIME, this._textClickToPlay._getRenderable().alpha = 1) : (this._blinkTimer = this._BLINK_TIME / 2, this._textClickToPlay._getRenderable().alpha = 0))
        },
        dispose: function() {
            p.screens.ScreenBase.prototype.dispose.call(this);
            this._buttonSound =
                this._textClickToPlay = null
        },
        __class__: p.screens.ScreenSplash
    });
    p.screens.ScreenStart = function(a, b, c) {
        null == b && (b = "");
        p.screens.ScreenBase.call(this, a, b, c);
        this._addElement(new t.Element({
            asset: "splash_logo",
            x: 10,
            y: 10
        }));
        "en" == i.WorkinCloud.instance.getString($.ConstantsCloud.STRING_REGION_ID) ? this._addElement(new t.Element({
            asset: "splash_title"
        })) : (this._addElement(new t.TextLocalized(10, g.ConstantsApp.STAGE_CENTER_Y, "title_1", "", {
            rot: -5
        })), this._addElement(new t.TextLocalized(g.ConstantsApp.STAGE_CENTER_X +
            150, 150, "title_2", "", {
                rot: -20
            })));
        this._addElement(new t.Element({
            asset: "start_bg",
            x: g.ConstantsApp.STAGE_WIDTH / 2,
            y: g.ConstantsApp.STAGE_HEIGHT / 2,
            origin: new k.WorkinPoint(0.5, 0.5),
            scale: 0.7
        }));
        a = i.WorkinCloud.instance.sharedObjectGetData("saved_level");
        null == a.level || 0 == a.level ? (this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X, g.ConstantsApp.STAGE_CENTER_Y, new k.WorkinPoint(0.5, 0.5), "btn_green", "btn_green", "btn_green_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK,
            w(this, this._onEventNewClick)), a._addElement(new t.TextLocalized(0, 0, "new_game", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        })), a.setSound(["Banjo2"])) : (this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X, g.ConstantsApp.STAGE_CENTER_Y - 70, new k.WorkinPoint(0.5, 0.5), "btn_green", "btn_green", "btn_green_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventEraseClick)), a._addElement(new t.TextLocalized(0, -10, "new_game_erase", "", {
            origin: new k.WorkinPoint(0.5,
                0.5),
            width: 130,
            center: !0
        })), a.setSound(["Banjo2"]), this._addElement(a = new p.buttons.ButtonBase(g.ConstantsApp.STAGE_CENTER_X, g.ConstantsApp.STAGE_CENTER_Y + 70, new k.WorkinPoint(0.5, 0.5), "btn_purple", "btn_purple", "btn_purple_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK, w(this, this._onEventResumeClick)), a._addElement(new t.TextLocalized(0, 0, "resume_game", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        })), a.setSound(["SlideWhistle_UP1"]))
    };
    j["com.nick.spongebob.marble_bash.ui.screens.ScreenStart"] =
        p.screens.ScreenStart;
    p.screens.ScreenStart.__name__ = "com,nick,spongebob,marble_bash,ui,screens,ScreenStart".split(",");
    p.screens.ScreenStart.__super__ = p.screens.ScreenBase;
    p.screens.ScreenStart.prototype = C(p.screens.ScreenBase.prototype, {
        _onEventResumeClick: function() {
            this.getState() == this._STATE_OPENED && (i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_TUTORIAL, !1), i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_RESUME, !0), this._doFlowEvent(g.ConstantsScreen.FLOW_SPLASH_PLAY))
        },
        _onEventNewClick: function() {
            this.getState() ==
                this._STATE_OPENED && this._doFlowEvent(g.ConstantsScreen.FLOW_LEVEL_SELECT)
        },
        _onEventEraseClick: function() {
            this.getState() == this._STATE_OPENED && this._doFlowEvent(g.ConstantsScreen.FLOW_LEVEL_SELECT)
        },
        __class__: p.screens.ScreenStart
    });
    p.screens.data = {};
    p.screens.data.ChangeActionData = function() {};
    j["com.nick.spongebob.marble_bash.ui.screens.data.ChangeActionData"] = p.screens.data.ChangeActionData;
    p.screens.data.ChangeActionData.__name__ = "com,nick,spongebob,marble_bash,ui,screens,data,ChangeActionData".split(",");
    p.screens.data.ChangeActionData.prototype = {
        _getAction: function() {
            return this._action
        },
        _getChangeEvent: function() {
            return this._changeEvent
        },
        _getScreenId: function() {
            return this._screenId
        },
        __class__: p.screens.data.ChangeActionData,
        __properties__: {
            get_screenId: "_getScreenId",
            get_changeEvent: "_getChangeEvent",
            get_action: "_getAction"
        }
    };
    p.screens.data.ScreenData = function(a, b, c, d, f) {
        null == d && (d = 0);
        null == c && (c = "");
        this.id = a;
        this.screenClass = b;
        this.assetClassName = c;
        this.layer = d;
        this.data = null == f ? new T : f
    };
    j["com.nick.spongebob.marble_bash.ui.screens.data.ScreenData"] =
        p.screens.data.ScreenData;
    p.screens.data.ScreenData.__name__ = "com,nick,spongebob,marble_bash,ui,screens,data,ScreenData".split(",");
    p.screens.data.ScreenData.prototype = {
        __class__: p.screens.data.ScreenData
    };
    p.screens.data.ScreenQueueData = function(a, b, c) {
        null == c && (c = "");
        this.screenData = a;
        this.openCondition = b;
        this.openTestString = c
    };
    j["com.nick.spongebob.marble_bash.ui.screens.data.ScreenQueueData"] = p.screens.data.ScreenQueueData;
    p.screens.data.ScreenQueueData.__name__ = "com,nick,spongebob,marble_bash,ui,screens,data,ScreenQueueData".split(",");
    p.screens.data.ScreenQueueData.prototype = {
        validateCondition: function(a, b) {
            null == b && (b = "");
            return this.openCondition == a ? "" == this.openTestString || this.openTestString == b : !1
        },
        __class__: p.screens.data.ScreenQueueData
    };
    p.screens.data.ScreenStateData = function(a, b, c, d, f, n) {
        this.id = a;
        this.animation = b;
        this.actionOnComplete = c;
        this.actionData = d;
        this.inFunc = f;
        this.outFunc = n
    };
    j["com.nick.spongebob.marble_bash.ui.screens.data.ScreenStateData"] = p.screens.data.ScreenStateData;
    p.screens.data.ScreenStateData.__name__ =
        "com,nick,spongebob,marble_bash,ui,screens,data,ScreenStateData".split(",");
    p.screens.data.ScreenStateData.prototype = {
        __class__: p.screens.data.ScreenStateData
    };
    p.transitions = {};
    p.transitions.TransitionBase = function(a, b, c, d) {
        null == d && (d = "");
        null == c && (c = !1);
        null == b && (b = !0);
        this._STATE_OUT = 3;
        this._STATE_IDLE = 2;
        this._STATE_IN = 1;
        this._STATE_HIDDEN = 0;
        this._transitionId = d;
        this._flagOutOnly = c;
        this.flagDispose = !1;
        t.Element.call(this, {
            asset: a
        });
        b ? this._setState(this._STATE_HIDDEN) : this._flagOutOnly ? this._setState(this._STATE_OUT) :
            this._setState(this._STATE_IN)
    };
    j["com.nick.spongebob.marble_bash.ui.transitions.TransitionBase"] = p.transitions.TransitionBase;
    p.transitions.TransitionBase.__name__ = "com,nick,spongebob,marble_bash,ui,transitions,TransitionBase".split(",");
    p.transitions.TransitionBase.__super__ = t.Element;
    p.transitions.TransitionBase.prototype = C(t.Element.prototype, {
        dispose: function() {
            t.Element.prototype.dispose.call(this);
            this._mc = null
        },
        _setState: function(a) {
            this._state = a;
            switch (this._state) {
                case this._STATE_HIDDEN:
                    this.hide()
            }
        },
        show: function() {
            this._mc.set_visible(!0)
        },
        hide: function() {
            this._mc.set_visible(!1)
        },
        start: function() {
            this.show();
            this._setState(this._STATE_IN)
        },
        update: function(a) {
            t.Element.prototype.update.call(this, a)
        },
        _getIsOutro: function() {
            return this._state == this._STATE_OUT
        },
        __class__: p.transitions.TransitionBase,
        __properties__: C(t.Element.prototype.__properties__, {
            get_isOutro: "_getIsOutro"
        })
    });
    o = {
        World: function(a) {
            this.MAX_BALLS = 175;
            this._STATE_WIN = 6;
            this._STATE_TUTORIAL = 5;
            this._STATE_LOSE = 4;
            this._STATE_OUTRO =
                3;
            this._STATE_INTRO = 2;
            this._STATE_GAMEPLAY = 1;
            this._STATE_INITIALIZING = 0;
            y.WMEventDispatcher.call(this);
            this._timeline = a;
            this._elementManager = new t.ElementManager(this._timeline, g.ConstantsApp.STAGE_CENTER_X, g.ConstantsApp.STAGE_CENTER_Y);
            this._elementManager.addLayer(g.ConstantsApp.LAYER_BG);
            this._elementManager.addLayer(g.ConstantsApp.LAYER_PLAYER);
            this._elementManager.addLayer(g.ConstantsApp.LAYER_FG);
            i.WorkinCloud.instance.stack([w(this, this._initLevel), w(this, this._onGenerationComplete)]);
            this._setState(this._STATE_INITIALIZING)
        }
    };
    j["com.nick.spongebob.marble_bash.world.World"] = o.World;
    o.World.__name__ = "com,nick,spongebob,marble_bash,world,World".split(",");
    o.World.__super__ = y.WMEventDispatcher;
    o.World.prototype = C(y.WMEventDispatcher.prototype, {
        _onGenerationComplete: function() {
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_WORLD_GENERATION_COMPLETE))
        },
        _levelClear: function() {
            this._blockTimer = 0;
            this._emergeAt = [];
            this._ballsSpawning = []
        },
        _levelStart: function() {
            this._levelClear();
            this._level.clear();
            this._pipe.tweenDown();
            this._elementManager.addElement(new o.elements.StartMessage);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_LEVEL_PROGRESS, 0);
            this._gameTimer = i.WorkinCloud.instance.getFloat(g.ConstantsApp.FLOAT_TIMER);
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_TUTORIAL, !1);
            this._levelNext = !1;
            for (var a = 0; 4 > a;) {
                var b = this._randomMarbleType();
                this._emergeAt.push(this._level.getRespawnDelay() + 125 * a / 500);
                this._ballsSpawning.push(new o.elements.Marble({
                    x: g.ConstantsApp.PIPE_X + g.ConstantsApp.PIPE_SPACING *
                        a,
                    y: g.ConstantsApp.PIPE_Y,
                    library: "flump_marbles",
                    movie: b,
                    id: this._level.curSpawnCount,
                    cb: this._level.ballCbType
                }));
                this._elementManager.addElement(this._ballsSpawning[a]);
                this._ballsSpawning[a].type1 = b;
                this._ballsSpawning[a].type2 = this._randomMarbleType();
                this._ballsSpawning[a].spawnSince = 0;
                this._ballsSpawning[a].emergeTime = this._level.getEmergeTime();
                this._ballsSpawning[a].id = this._level.curSpawnCount;
                this._ballsSpawning[a].isSpecial || this._level.curSpawnCount++;
                a++
            }
            i.WorkinCloud.instance.setFloat(g.ConstantsApp.FLOAT_TIMER,
                this._level._getTimeLimit());
            this._gameTimer = i.WorkinCloud.instance.getFloat(g.ConstantsApp.FLOAT_TIMER)
        },
        _tutorialStart: function() {
            this._levelClear();
            this._pipe.loadLevel();
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_LEVEL_PROGRESS, 0);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_TUTORIAL_STEP, 1);
            this._tutorialShowing = !1;
            var a = this._level.spawnTypes,
                a = a.slice(500, 530);
            this._level.spawnTypes = a;
            for (a = 0; 4 > a;) {
                var b = this._randomMarbleType();
                this._emergeAt.push(this._level.getRespawnDelay() + 125 *
                    a / 500);
                this._ballsSpawning.push(new o.elements.Marble({
                    x: g.ConstantsApp.PIPE_X + g.ConstantsApp.PIPE_SPACING * a,
                    y: g.ConstantsApp.PIPE_Y,
                    library: "flump_marbles",
                    movie: b,
                    id: this._level.curSpawnCount,
                    cb: this._level.ballCbType
                }));
                this._elementManager.addElement(this._ballsSpawning[a]);
                this._ballsSpawning[a].type1 = b;
                this._ballsSpawning[a].type2 = this._randomMarbleType();
                this._ballsSpawning[a].spawnSince = 0;
                this._ballsSpawning[a].emergeTime = this._level.getEmergeTime();
                this._ballsSpawning[a].id = this._level.curSpawnCount;
                this._ballsSpawning[a].isSpecial || this._level.curSpawnCount++;
                a++
            }
        },
        _initLevel: function() {
            switch (i.WorkinCloud.instance.getString(g.ConstantsApp.STRING_LEVEL_TYPE)) {
                case g.ConstantsApp.LEVEL_EASY:
                    this._level = new o.levels.LevelEasy;
                    break;
                case g.ConstantsApp.LEVEL_NORMAL:
                    this._level = new o.levels.LevelNormal;
                    break;
                case g.ConstantsApp.LEVEL_HARD:
                    this._level = new o.levels.LevelHard
            }
            this._elementManager.addElement(this._background = new o.elements.Background);
            this._elementManager.addElement(this._cursor = new t.Element({
                asset: "cursor",
                origin: new k.WorkinPoint(0.5, 0.5),
                layer: g.ConstantsApp.LAYER_FG,
                scale: 0.5
            }));
            i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TOUCH_DEVICE) && (this._cursor._getRenderable().visible = !0);
            this._elementManager.addElement(this._line = new o.elements.Line({
                layer: g.ConstantsApp.LAYER_FG
            }));
            this._elementManager.addElement(this._pipe = new o.elements.Pipe);
            this._elementManager.addElement(this._levelSign = new o.elements.LevelSign);
            this._elementManager.addElement(this._bonusSign = new o.elements.BonusSign);
            i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_RESUME) &&
                (this._loadGame(), this._pipe.loadLevel(), this._background.loadLevel());
            this._levelNext = !1;
            this._scoreTiers = [1, 2, 5, 10, 25, 50, 100, 250];
            this._scoreTier = 0;
            this._soundPop = ["pop_1", "pop_2", "pop_3", "pop_4"]
        },
        handleInput: function(a) {
            if (!(i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_PAUSED) || this._state == this._STATE_INITIALIZING)) {
                if (this._state == this._STATE_GAMEPLAY || this._state == this._STATE_TUTORIAL) this._line.handleInput(a), this._level.handleInput(a);
                switch (a.input) {
                    case g.ConstantsApp.INPUT_CLICK:
                        switch (a.phase) {
                            case y.WMEventInput.PHASE_MOVE:
                                this._cursor._setPos(new k.WorkinPoint(a.x,
                                    a.y));
                                break;
                            case y.WMEventInput.PHASE_DOWN:
                                i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TOUCH_DEVICE) && (this._cursor._setPos(new k.WorkinPoint(a.x, a.y)), this._cursor._getRenderable().visible = !0);
                                break;
                            case y.WMEventInput.PHASE_UP:
                                i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TOUCH_DEVICE) && (this._cursor._getRenderable().visible = !1)
                        }
                }
            }
        },
        _unpause: function() {
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_PAUSED, !1)
        },
        _pause: function() {
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_PAUSED, !0)
        },
        _onTutorialClear: function() {
            if (this._state == this._STATE_TUTORIAL && this._tutorialShowing && 1 == i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_TUTORIAL_STEP)) {
                i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_DELETE_ARROW));
                for (var a = 0, b = this._level.levelObjects; a < b.length;) {
                    var c = b[a];
                    ++a;
                    if (c.type == this._level.ballsSelected[0].type && !pa.has(this._level.ballsSelected, c)) {
                        this._elementManager.addElement(new o.elements.Arrow(c));
                        break
                    }
                }
            }
        },
        _onTutorialFinish: function() {
            this._elementManager.removeElement(this._tutorial);
            this._level.clear();
            this._levelNext = !0;
            this._setState(this._STATE_OUTRO);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_LEVEL_PROGRESS, 0);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_SCORE, 0);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_MULTIPLIER, 0);
            i.WorkinCloud.instance.setString(g.ConstantsApp.STRING_BONUS, "")
        },
        _onTutorialStep: function() {
            this._tutorial.hideText();
            i.WorkinCloud.instance.modifyInt(g.ConstantsApp.INT_TUTORIAL_STEP, 1);
            switch (i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_TUTORIAL_STEP)) {
                case 2:
                    this._addBallsSpawning(0,
                        o.elements.Marble.TYPE_RAINBOW);
                    break;
                case 3:
                    this._addBallsSpawning(1, o.elements.Marble.TYPE_JELLYFISH);
                    break;
                case 4:
                    this._addBallsSpawning(2, o.elements.Marble.TYPE_BONUS1);
                    break;
                case 6:
                    this._level.spawnTypes = o.elements.Marble.typeRegular();
                    this._addBallsSpawning(0, o.elements.Marble.TYPE_CANNONBALL);
                    this._addBallsSpawning(1, o.elements.Marble.TYPE_CANNONBALL);
                    this._addBallsSpawning(2, o.elements.Marble.TYPE_CANNONBALL);
                    this._addBallsSpawning(3, o.elements.Marble.TYPE_CANNONBALL);
                    break;
                case 7:
                    this._addBallsSpawning(2,
                        o.elements.Marble.TYPE_SKULL);
                    break;
                case 8:
                    this._addBallsSpawning(2, o.elements.Marble.TYPE_FIREBALL);
                    this._ballsSpawning[2].emergeTime = 1.3;
                    this._tutorial.showText();
                    break;
                case 9:
                case 10:
                    this._addBallsSpawning(0, o.elements.Marble.TYPE_SPONGEBOB), this._ballsSpawning[0].type2 = o.elements.Marble.TYPE_SPONGEBOB, this._addBallsSpawning(1, o.elements.Marble.TYPE_SPONGEBOB), this._ballsSpawning[1].type2 = o.elements.Marble.TYPE_SPONGEBOB, this._addBallsSpawning(2, o.elements.Marble.TYPE_SPONGEBOB), this._addBallsSpawning(3,
                        o.elements.Marble.TYPE_SPONGEBOB)
            }
            this._tutorialShowing = !1
        },
        _onSave: function() {
            i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TUTORIAL) || this._saveGame()
        },
        _onClearAllHide: function() {
            this._level.popAllBalls()
        },
        _onBomb: function(a) {
            this._elementManager.addElement(new o.elements.Zap({
                x: a._getData().pos.x - 100,
                y: a._getData().pos.y - 80,
                layer: g.ConstantsApp.LAYER_FG,
                library: "flump_zap",
                movie: "Zap",
                origin: new k.WorkinPoint(0.5, 0.5)
            }))
        },
        _onBonus: function(a) {
            "" == i.WorkinCloud.instance.getString(g.ConstantsApp.STRING_BONUS) ?
                (i.WorkinCloud.instance._getSound().playSound("SlideWhistle_UP1"), i.WorkinCloud.instance.setString(g.ConstantsApp.STRING_BONUS, a._getData().type), i.WorkinCloud.instance.modifyInt(g.ConstantsApp.INT_MULTIPLIER, 2), this._bonusSign.show()) : i.WorkinCloud.instance.getString(g.ConstantsApp.STRING_BONUS) == a._getData().type && 10 > i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_MULTIPLIER) && (i.WorkinCloud.instance._getSound().playSound("check_bell"), i.WorkinCloud.instance.modifyInt(g.ConstantsApp.INT_MULTIPLIER,
                    2), this._bonusSign.show())
        },
        _onElementChangeLayer: function(a) {
            this._elementManager.changeElementLayer(a._getData().element, a._getData().layer)
        },
        _onLevelNextFinish: function() {
            this._setState(this._STATE_INTRO)
        },
        _onLevelNext: function() {
            this._state == this._STATE_LOSE || this._state == this._STATE_OUTRO || (this._setState(this._STATE_OUTRO), i.WorkinCloud.instance.modifyInt(g.ConstantsApp.INT_LEVEL, 1), this._level.clear(), this._line.removeLines(), this._pipe.tweenUp(), this._levelNext = !0, 40 < i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_LEVEL) ?
                this._setState(this._STATE_WIN) : (this._elementManager.addElement(new o.elements.EndMessage), this._background.tweenUp()), i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_MULTIPLIER, 0), i.WorkinCloud.instance.setString(g.ConstantsApp.STRING_BONUS, ""), i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_CLEAR_ALL_HIDE)))
        },
        _onLevelSetupFinish: function() {
            this._setState(this._STATE_GAMEPLAY)
        },
        _onLevelSetup: function() {
            this._levelStart()
        },
        _onBallPopGroup: function() {
            this._scoreTier =
                0;
            this._line.removeLines()
        },
        _onBallPop: function(a) {
            a._getData().element.isNormal && this._level.curPopCount++;
            (this._state == this._STATE_GAMEPLAY || this._state == this._STATE_TUTORIAL) && this._level.updateProgress();
            !this._levelNext && this._level.curPopCount >= this._level._getFinishCount() && !i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TUTORIAL) && i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_LEVEL_NEXT));
            this._addScore(a._getData().element, a._getData().addScore);
            i.WorkinCloud.instance._getSound().playSoundRand(this._soundPop)
        },
        _onBallSelect: function(a) {
            a._getData().clear && this._line.removeLines();
            this._line.addLine(a._getData().from, a._getData().to)
        },
        _onRemoveElement: function(a) {
            this._level.removeElement(a._getData().element)
        },
        _onUnpause: function() {
            this._unpause()
        },
        _onPause: function() {
            this._pause()
        },
        _removeEventListeners: function() {
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_PAUSE, w(this, this._onPause));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_UNPAUSE,
                w(this, this._onUnpause));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_REMOVE_ELEMENT, w(this, this._onRemoveElement));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_BALL_SELECT, w(this, this._onBallSelect));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_BALL_POP_GROUP, w(this, this._onBallPopGroup));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_BALL_POP, w(this, this._onBallPop));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_LEVEL_SETUP, w(this, this._onLevelSetup));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_LEVEL_SETUP_FINISH, w(this, this._onLevelSetupFinish));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_LEVEL_NEXT, w(this, this._onLevelNext));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_LEVEL_NEXT_FINISH, w(this, this._onLevelNextFinish));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_ELEMENT_CHANGE_LAYER, w(this, this._onElementChangeLayer));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_BONUS, w(this, this._onBonus));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_BALL_BOMB, w(this, this._onBomb));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_CLEAR_ALL_HIDE, w(this, this._onClearAllHide));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_SAVE,
                w(this, this._onSave));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_TUTORIAL_STEP, w(this, this._onTutorialStep));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_TUTORIAL_FINISH, w(this, this._onTutorialFinish));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_TUTORIAL_CLEAR, w(this, this._onTutorialClear))
        },
        _addEventListeners: function() {
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_PAUSE,
                w(this, this._onPause));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_UNPAUSE, w(this, this._onUnpause));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_REMOVE_ELEMENT, w(this, this._onRemoveElement));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_BALL_SELECT, w(this, this._onBallSelect));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_BALL_POP_GROUP, w(this, this._onBallPopGroup));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_BALL_POP,
                w(this, this._onBallPop));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_LEVEL_SETUP, w(this, this._onLevelSetup));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_LEVEL_SETUP_FINISH, w(this, this._onLevelSetupFinish));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_LEVEL_NEXT, w(this, this._onLevelNext));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_LEVEL_NEXT_FINISH, w(this, this._onLevelNextFinish));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_ELEMENT_CHANGE_LAYER, w(this, this._onElementChangeLayer));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_BONUS, w(this, this._onBonus));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_BALL_BOMB, w(this, this._onBomb));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_CLEAR_ALL_HIDE, w(this, this._onClearAllHide));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_SAVE,
                w(this, this._onSave));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_TUTORIAL_STEP, w(this, this._onTutorialStep));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_TUTORIAL_FINISH, w(this, this._onTutorialFinish));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_TUTORIAL_CLEAR, w(this, this._onTutorialClear))
        },
        render: function() {
            this._elementManager.renderElements()
        },
        _loadGame: function() {
            this._levelClear();
            var a = i.WorkinCloud.instance.sharedObjectGetData(g.ConstantsApp.SAVE_LEVEL);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_LEVEL, a.level);
            i.WorkinCloud.instance.setString(g.ConstantsApp.STRING_LEVEL_TYPE, a.level_diff);
            i.WorkinCloud.instance.setString(g.ConstantsApp.STRING_BONUS, a.bonus);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_MULTIPLIER, a.bonus_mult);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_SCORE, a.score);
            this._gameTimer = a.time;
            i.WorkinCloud.instance.setFloat(g.ConstantsApp.FLOAT_TIMER, this._gameTimer);
            this._blockTimer = a.block;
            this._emergeAt = a.emergeAt;
            switch (i.WorkinCloud.instance.getString(g.ConstantsApp.STRING_LEVEL_TYPE)) {
                case g.ConstantsApp.LEVEL_EASY:
                    this._level = new o.levels.LevelEasy;
                    break;
                case g.ConstantsApp.LEVEL_NORMAL:
                    this._level = new o.levels.LevelNormal;
                    break;
                case g.ConstantsApp.LEVEL_HARD:
                    this._level = new o.levels.LevelHard
            }
            this._level.loadLevel(a.count_pop, a.count_bonus, a.count_spawn, a.balls_type, a.clear_all, a.bonus_timer);
            for (var b = a.balls_pipe, c = 0; c < b.length;) {
                var d = b[c];
                ++c;
                d.cb = this._level.ballCbType;
                d = new o.elements.Marble(d);
                this._elementManager.addElement(d);
                this._ballsSpawning.push(d)
            }
            a = a.balls_level;
            for (c = 0; c < a.length;) d = a[c], ++c, d.cb = this._level.ballCbType, d = new o.elements.Marble(d), this._elementManager.addElement(d), this._level.addElement(d)
        },
        _saveGame: function() {
            for (var a = [], b = 0, c = this._ballsSpawning; b < c.length;) {
                var d = c[b];
                ++b;
                a.push({
                    id: d.id,
                    emergeTime: d.emergeTime,
                    type1: d.type1,
                    type2: d.type2,
                    movie: d.type,
                    library: "flump_marbles",
                    x: d._getPos().x,
                    y: d._getPos().y
                })
            }
            for (var f = [], b = 0, c = this._level.levelObjects; b < c.length;) d =
                c[b], ++b, f.push({
                    id: d.id,
                    emergeTime: d.emergeTime,
                    type1: d.type1,
                    type2: d.type2,
                    movie: d.type,
                    library: "flump_marbles",
                    x: d._getPos().x,
                    y: d._getPos().y,
                    sound: d.soundPlayed
                });
            a = {
                level: i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_LEVEL),
                level_diff: i.WorkinCloud.instance.getString(g.ConstantsApp.STRING_LEVEL_TYPE),
                bonus: i.WorkinCloud.instance.getString(g.ConstantsApp.STRING_BONUS),
                bonus_mult: i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_MULTIPLIER),
                bonus_timer: this._level.bonusTimer,
                score: i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_SCORE),
                count_pop: this._level.curPopCount,
                count_bonus: this._level.bonusObjCount,
                count_spawn: this._level.curSpawnCount,
                balls_level: f,
                balls_pipe: a,
                balls_type: this._level.spawnTypes,
                clear_all: this._level.killBtnShowing,
                block: this._blockTimer,
                time: this._gameTimer,
                emergeAt: this._emergeAt
            };
            i.WorkinCloud.instance.sharedObjectSetData(g.ConstantsApp.SAVE_LEVEL, a)
        },
        _addScore: function(a, b) {
            var c = 0;
            b && (c = a.type == o.elements.Marble.TYPE_CANNONBALL || a.type == o.elements.Marble.TYPE_SKULL ? 0 : this._scoreTiers[this._scoreTier],
                a.isBonus ? (a.type == o.elements.Marble.TYPE_BONUS1 ? c *= 10 : a.type == o.elements.Marble.TYPE_BONUS2 ? c *= 100 : a.type == o.elements.Marble.TYPE_BONUS3 && (c *= 1E3), this._level.bonusObjCount++, this._level._getKillButBonusCount()) : a.type == i.WorkinCloud.instance.getString(g.ConstantsApp.STRING_BONUS) && (c *= i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_MULTIPLIER)), c = Math.min(c, 5E3), 0 < c && (i.WorkinCloud.instance.modifyInt(g.ConstantsApp.INT_SCORE, c), i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TOUCH_DEVICE) ||
                    this._elementManager.addElement(new o.elements.FloatingScore({
                        x: a._getPos().x,
                        y: a._getPos().y,
                        layer: g.ConstantsApp.LAYER_FG,
                        origin: new k.WorkinPoint(0.5, 0.5),
                        score: c
                    }))), 7 > this._scoreTier && this._scoreTier++)
        },
        _showTutorial: function() {
            this._tutorialShowing = !0;
            this._tutorial.showText();
            switch (i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_TUTORIAL_STEP)) {
                case 1:
                    for (var a = "", b = 0, c = this._level.levelObjects; b < c.length;) {
                        var d = c[b];
                        ++b;
                        if (3 <= this._getMarbleCount(d.type)) {
                            a = d.type;
                            break
                        }
                    }
                    b = 0;
                    for (c = this._level.levelObjects; b <
                        c.length;)
                        if (d = c[b], ++b, d.type == a) {
                            this._elementManager.addElement(new o.elements.Arrow(d));
                            break
                        }
                    this._level.freezeBalls();
                    this._level.unFreezeBalls(a);
                    break;
                case 2:
                    this._level.freezeBalls();
                    this._level.unFreezeBalls(o.elements.Marble.TYPE_RAINBOW);
                    this._elementManager.addElement(new o.elements.Arrow(this._level.getRandomBall(o.elements.Marble.TYPE_RAINBOW)));
                    break;
                case 3:
                    this._level.freezeBalls();
                    this._level.unFreezeBalls(o.elements.Marble.TYPE_JELLYFISH);
                    this._elementManager.addElement(new o.elements.Arrow(this._level.getRandomBall(o.elements.Marble.TYPE_JELLYFISH)));
                    break;
                case 4:
                    this._level.freezeBalls();
                    this._level.unFreezeBalls(o.elements.Marble.TYPE_BONUS1);
                    this._elementManager.addElement(new o.elements.Arrow(this._level.getRandomBall(o.elements.Marble.TYPE_BONUS1)));
                    break;
                case 5:
                    this._elementManager.addElement(new o.elements.Arrow(null, new k.WorkinPoint(200, 100)));
                    break;
                case 6:
                    this._level.freezeBalls();
                    this._level.unFreezeBalls(o.elements.Marble.TYPE_CANNONBALL);
                    this._elementManager.addElement(new o.elements.Arrow(this._level.getRandomBall(o.elements.Marble.TYPE_CANNONBALL)));
                    break;
                case 7:
                    this._level.freezeBalls();
                    this._level.unFreezeBalls(o.elements.Marble.TYPE_SKULL);
                    this._elementManager.addElement(new o.elements.Arrow(this._level.getRandomBall(o.elements.Marble.TYPE_SKULL)));
                    break;
                case 9:
                case 10:
                    this._level.freezeBalls();
                    this._level.unFreezeBalls(o.elements.Marble.TYPE_SPONGEBOB);
                    this._elementManager.addElement(new o.elements.Arrow(this._level.getRandomBall(o.elements.Marble.TYPE_SPONGEBOB)));
                    break;
                case 11:
                    this._elementManager.addElement(new o.elements.Arrow(null, new k.WorkinPoint(250,
                        520)))
            }
        },
        _getMarbleCount: function(a) {
            for (var b = this._level.getMarbleCount(a), c = 0, d = this._ballsSpawning; c < d.length;) {
                var f = d[c];
                ++c;
                f.type1 == a && b++;
                f.type2 == a && b++
            }
            return b
        },
        _randomMarbleType: function() {
            for (var a, b;;)
                if (a = Math.floor(Math.random() * this._level.spawnTypes.length), b = this._level.spawnTypes[a], pa.has(o.elements.Marble.typeRegular(), b) || 0 < this._level.getPhase() || i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TUTORIAL)) {
                    if (!i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TUTORIAL)) {
                        if (b ==
                            o.elements.Marble.TYPE_RAINBOW && this._getMarbleCount(b) == g.ConstantsApp.MAX_PRISMS) continue;
                        if (b == o.elements.Marble.TYPE_FIREBALL && this._getMarbleCount(b) == g.ConstantsApp.MAX_FIREBALLS) continue;
                        if (b == o.elements.Marble.TYPE_JELLYFISH && this._getMarbleCount(b) == g.ConstantsApp.MAX_BOMBS) continue
                    }
                    this._level.spawnTypes.splice(a, 1);
                    return b
                }
        },
        _updateBallsSpawning: function(a) {
            for (var b = 0, c = 0; 4 > c;) {
                var d = c++;
                this._emergeAt[d] -= a;
                if (this._level.isHoleBlocked(d)) b++;
                else if (0 >= this._emergeAt[d] && this._level.getNumBalls() <
                    this.MAX_BALLS && pa.has(o.elements.Marble.typeAll(), this._ballsSpawning[d].type1) && this._state != this._STATE_OUTRO) {
                    var f = this._ballsSpawning[d];
                    f.emerge();
                    this._level.addElement(f);
                    this._emergeAt[d] = this._level.getRespawnDelay() + 375 * Math.random() / 500;
                    this._ballsSpawning[d].type1 = f.type2;
                    pa.has(o.elements.Marble.typeAll(), f.type2) && (this._ballsSpawning[d] = new o.elements.Marble({
                        x: g.ConstantsApp.PIPE_X + g.ConstantsApp.PIPE_SPACING * d,
                        y: g.ConstantsApp.PIPE_Y,
                        library: "flump_marbles",
                        movie: f.type2,
                        id: this._level.curSpawnCount,
                        cb: this._level.ballCbType
                    }), this._ballsSpawning[d].type1 = f.type2, this._ballsSpawning[d].type2 = this._randomMarbleType(), this._ballsSpawning[d].spawnSince = 0, this._ballsSpawning[d].emergeTime = this._level.getEmergeTime(), this._ballsSpawning[d].id = this._level.curSpawnCount, this._elementManager.addElement(this._ballsSpawning[d]), this._level.curSpawnCount++)
                }
            }
            this._blockTimer = 4 == b ? this._blockTimer + a : 0
        },
        _addBallsSpawning: function(a, b) {
            this._ballsSpawning[a] = new o.elements.Marble({
                x: g.ConstantsApp.PIPE_X +
                    g.ConstantsApp.PIPE_SPACING * a,
                y: g.ConstantsApp.PIPE_Y,
                library: "flump_marbles",
                movie: b,
                id: this._level.curSpawnCount,
                cb: this._level.ballCbType
            });
            this._ballsSpawning[a].type1 = b;
            this._ballsSpawning[a].type2 = this._randomMarbleType();
            this._ballsSpawning[a].emergeTime = 0.1;
            this._ballsSpawning[a].id = this._level.curSpawnCount;
            this._elementManager.addElement(this._ballsSpawning[a])
        },
        _isBallsSpawning: function() {
            for (var a = 0; 4 > a;) {
                var b = a++;
                if (pa.has(o.elements.Marble.typeAll(), this._ballsSpawning[b].type1)) return !0
            }
            return !1
        },
        update: function(a) {
            if (!0 != i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_PAUSED)) switch (a = Math.round(1E3 * a) / 1E3, this._state) {
                case this._STATE_INTRO:
                    this._elementManager.updateElements(a);
                    break;
                case this._STATE_OUTRO:
                    this._elementManager.updateElements(a);
                    break;
                case this._STATE_LOSE:
                    this._elementManager.updateElements(a);
                    break;
                case this._STATE_WIN:
                    this._elementManager.updateElements(a);
                    break;
                case this._STATE_TUTORIAL:
                    this._elementManager.updateElements(a);
                    this._level.update(a);
                    0 < this._level.spawnTypes.length ||
                        this._isBallsSpawning() ? this._updateBallsSpawning(a) : 0 == this._level.spawnTypes.length && this._level.isAllBallsSelectable() && (this._tutorialShowing || this._showTutorial());
                    break;
                case this._STATE_GAMEPLAY:
                    this._elementManager.updateElements(a), this._level.update(a), this._updateBallsSpawning(a), this._gameTimer -= a, i.WorkinCloud.instance.setFloat(g.ConstantsApp.FLOAT_TIMER, this._gameTimer), 0 >= this._gameTimer ? this._setState(this._STATE_LOSE) : 3 <= this._blockTimer && this._setState(this._STATE_LOSE)
            }
        },
        _setState: function(a) {
            this._state =
                a;
            switch (a) {
                case this._STATE_TUTORIAL:
                    this._elementManager.addElement(new o.elements.TutorialSign);
                    this._elementManager.addElement(this._tutorial = new o.elements.Tutorial);
                    this._tutorialStart();
                    break;
                case this._STATE_INTRO:
                    this._levelSign.show();
                    break;
                case this._STATE_LOSE:
                    this._line.removeLines();
                    a = new o.elements.Fist;
                    this._elementManager.addElement(a);
                    i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData(g.ConstantsApp.EVENT_FIST, {
                        element: a
                    }));
                    break;
                case this._STATE_WIN:
                    this._elementManager.addElement(new o.elements.WinMessage)
            }
        },
        dispose: function() {
            this._elementManager.dispose();
            this._timeline = this._elementManager = null;
            this._removeEventListeners();
            this._level.dispose();
            this._soundPop = this._tutorial = this._bonusSign = this._levelSign = this._scoreTiers = this._pipe = this._background = this._line = this._cursor = this._ballsSpawning = this._emergeAt = this._level = null;
            y.WMEventDispatcher.prototype.dispose.call(this)
        },
        start: function() {
            this._addEventListeners();
            i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_RESUME) ? this._setState(this._STATE_GAMEPLAY) :
                this._setState(i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TUTORIAL) ? this._STATE_TUTORIAL : this._STATE_INTRO)
        },
        __class__: o.World
    });
    o.elements = {};
    o.elements.Arrow = function(a, b) {
        var c = 40;
        this._point = null;
        null == a ? (this._pointPos = b, c = 130) : (this._point = a, this._pointPos = this._point._getPos().copy());
        t.Element.call(this, {
            asset: "arrow",
            layer: g.ConstantsApp.LAYER_FG,
            x: this._pointPos.x,
            y: this._pointPos.y,
            origin: new k.WorkinPoint(1, 0.5),
            rot: c
        });
        this._tween()
    };
    j["com.nick.spongebob.marble_bash.world.elements.Arrow"] =
        o.elements.Arrow;
    o.elements.Arrow.__name__ = "com,nick,spongebob,marble_bash,world,elements,Arrow".split(",");
    o.elements.Arrow.__super__ = t.Element;
    o.elements.Arrow.prototype = C(t.Element.prototype, {
        _onTutorial: function() {
            k.tween.WorkinTweener._getInstance().stop(this._pos);
            this._setDoDelete(!0)
        },
        _removeEventListeners: function() {
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_TUTORIAL_STEP, w(this, this._onTutorial));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_TUTORIAL_FINISH,
                w(this, this._onTutorial));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_DELETE_ARROW, w(this, this._onTutorial))
        },
        _addEventListeners: function() {
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_TUTORIAL_STEP, w(this, this._onTutorial));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_TUTORIAL_FINISH, w(this, this._onTutorial));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_DELETE_ARROW,
                w(this, this._onTutorial))
        },
        _onTweenComplete: function() {
            k.tween.WorkinTweener._getInstance().tween(this._pos, 0.3, {
                x: this._pointPos.x,
                y: this._pointPos.y
            }).onComplete(w(this, this._tween))
        },
        _tween: function() {
            var a = 10;
            40 == this._render.rotation && (a = -10);
            k.tween.WorkinTweener._getInstance().tween(this._pos, 0.3, {
                x: this._pointPos.x - 10,
                y: this._pointPos.y + a
            }).onComplete(w(this, this._onTweenComplete))
        },
        dispose: function() {
            t.Element.prototype.dispose.call(this);
            this._point = null
        },
        update: function() {
            null != this._point &&
                (this._pointPos = this._point._getPos().copy())
        },
        __class__: o.elements.Arrow
    });
    o.elements.Background = function() {
        t.Element.call(this, {
            origin: new k.WorkinPoint(0.5, 0.5),
            x: g.ConstantsApp.STAGE_CENTER_X,
            y: g.ConstantsApp.STAGE_CENTER_Y,
            layer: g.ConstantsApp.LAYER_BG
        });
        this._bg1 = new t.Element({
            asset: "background_" + i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_LEVEL),
            origin: new k.WorkinPoint(0.5, 0.5)
        });
        this._addElement(this._bg1)
    };
    j["com.nick.spongebob.marble_bash.world.elements.Background"] = o.elements.Background;
    o.elements.Background.__name__ = "com,nick,spongebob,marble_bash,world,elements,Background".split(",");
    o.elements.Background.__super__ = t.Element;
    o.elements.Background.prototype = C(t.Element.prototype, {
        _onTweenCompelte: function() {
            this._removeElement(this._bg1);
            this._bg1 = this._bg2;
            this._bg2 = null;
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_LEVEL_NEXT_FINISH))
        },
        tweenUp: function() {
            i.WorkinCloud.instance._getSound().playSound("sbmsg_transitionv2");
            this._bg2 = new t.Element({
                asset: "background_" +
                    i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_LEVEL),
                y: 2 * g.ConstantsApp.STAGE_CENTER_Y,
                origin: new k.WorkinPoint(0.5, 0.5)
            });
            this._addElement(this._bg2);
            k.tween.WorkinTweener._getInstance().tween(this._bg1._getPos(), 1.5, {
                y: 2 * -g.ConstantsApp.STAGE_CENTER_Y
            }).onComplete(w(this, this._onTweenCompelte)).delay(1);
            k.tween.WorkinTweener._getInstance().tween(this._bg2._getPos(), 1.5, {
                y: 0
            }).delay(1)
        },
        loadLevel: function() {
            this._bg1.setTexture("background_" + i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_LEVEL))
        },
        __class__: o.elements.Background
    });
    o.elements.BonusSign = function() {
        t.Element.call(this, {
            layer: g.ConstantsApp.LAYER_FG,
            rot: -120,
            origin: new k.WorkinPoint(0, 0.5),
            x: -50,
            y: 200
        });
        var a = "spongebob";
        switch (i.WorkinCloud.instance.getString(g.ConstantsApp.STRING_BONUS)) {
            case o.elements.Marble.TYPE_PLANKTON:
                a = "plankton";
                break;
            case o.elements.Marble.TYPE_SANDY:
                a = "sandy";
                break;
            case o.elements.Marble.TYPE_PATRICK:
                a = "patrick";
                break;
            case o.elements.Marble.TYPE_SQUIDWARD:
                a = "squidward";
                break;
            case o.elements.Marble.TYPE_GARY:
                a =
                    "gary"
        }
        this._addElement(this._char = new t.Element({
            asset: "bonus_" + a,
            origin: new k.WorkinPoint(0.5, 0.8),
            x: 340,
            scale: 0.5
        }));
        this._addElement(this._sign = new t.Element({
            asset: "sign_green"
        }));
        this._addElement(this._bonus = new t.TextLocalized(340, 50, "bonus_" + a, "", {
            origin: new k.WorkinPoint(0.5, 0.5),
            center: !0,
            width: 120,
            spacing: 15
        }));
        this._addElement(new t.TextLocalized(330, 100, "bonus_multiplier", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        a = this._addElement(new t.TextBase(340, 100, "", i.WorkinCloud.instance._getLocalize().getData("bonus_multiplier")._getFontName(), {
            origin: new k.WorkinPoint(0, 0.5),
            scale: 0.5
        }));
        a._setText(I.string(i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_MULTIPLIER)));
        this._mult = a;
        this._getRenderable().visible = !1
    };
    j["com.nick.spongebob.marble_bash.world.elements.BonusSign"] = o.elements.BonusSign;
    o.elements.BonusSign.__name__ = "com,nick,spongebob,marble_bash,world,elements,BonusSign".split(",");
    o.elements.BonusSign.__super__ = t.Element;
    o.elements.BonusSign.prototype = C(t.Element.prototype, {
        _onTweenCompelte: function() {},
        show: function() {
            this._getRenderable().visible = !0;
            this._getRenderable().rotation = -120;
            var a = "spongebob";
            switch (i.WorkinCloud.instance.getString(g.ConstantsApp.STRING_BONUS)) {
                case o.elements.Marble.TYPE_PLANKTON:
                    a = "plankton";
                    break;
                case o.elements.Marble.TYPE_SANDY:
                    a = "sandy";
                    break;
                case o.elements.Marble.TYPE_PATRICK:
                    a = "patrick";
                    break;
                case o.elements.Marble.TYPE_SQUIDWARD:
                    a = "squidward";
                    break;
                case o.elements.Marble.TYPE_GARY:
                    a = "gary"
            }
            this._char.setTexture("bonus_" + a);
            this._bonus._setText("bonus_" + a);
            this._mult._setText(I.string(i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_MULTIPLIER)));
            k.tween.WorkinTweener._getInstance().tween(this._getRenderable(), 0.5, {
                rotation: 0
            });
            k.tween.WorkinTweener._getInstance().tween(this._getRenderable(), 0.5, {
                rotation: 100
            }).delay(2.5).onComplete(w(this, this._onTweenCompelte))
        },
        dispose: function() {
            this._mult = this._bonus = this._char = null
        },
        __class__: o.elements.BonusSign
    });
    o.elements.EndMessage = function() {
        t.Element.call(this, {
            layer: g.ConstantsApp.LAYER_FG
        });
        this._showMessage()
    };
    j["com.nick.spongebob.marble_bash.world.elements.EndMessage"] = o.elements.EndMessage;
    o.elements.EndMessage.__name__ = "com,nick,spongebob,marble_bash,world,elements,EndMessage".split(",");
    o.elements.EndMessage.__super__ = t.Element;
    o.elements.EndMessage.prototype = C(t.Element.prototype, {
        _onTweenComplete: function() {
            this._setDoDelete(!0)
        },
        _showMessage: function() {
            this._addElement(this._text = new t.TextLocalized(g.ConstantsApp.STAGE_CENTER_X, g.ConstantsApp.STAGE_CENTER_Y, "end1", null, {
                origin: new k.WorkinPoint(0.5, 0.5)
            }));
            this._text._getRenderable().alpha = 0;
            k.tween.WorkinTweener._getInstance().tween(this._text._getRenderable(),
                0.5, {
                    alpha: 1
                });
            k.tween.WorkinTweener._getInstance().tween(this._text._getRenderable(), 0.5, {
                alpha: 0
            }).delay(2).onComplete(w(this, this._onTweenComplete))
        },
        dispose: function() {
            t.Element.prototype.dispose.call(this);
            this._text = null
        },
        __class__: o.elements.EndMessage
    });
    o.elements.Fist = function() {
        t.Element.call(this, {
            asset: "fist",
            layer: g.ConstantsApp.LAYER_FG,
            x: g.ConstantsApp.STAGE_CENTER_X,
            y: 0,
            origin: new k.WorkinPoint(0.5, 1)
        });
        k.tween.WorkinTweener._getInstance().tween(this._pos, 0.3, {
            y: g.ConstantsApp.STAGE_HEIGHT -
                25
        }).onComplete(w(this, this._onTweenComplete))
    };
    j["com.nick.spongebob.marble_bash.world.elements.Fist"] = o.elements.Fist;
    o.elements.Fist.__name__ = "com,nick,spongebob,marble_bash,world,elements,Fist".split(",");
    o.elements.Fist.__super__ = t.Element;
    o.elements.Fist.prototype = C(t.Element.prototype, {
        update: function(a) {
            0 < this._timer && (this._timer -= a, 0 > this._timer && i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_GAME_LOSE, !0))
        },
        _onTweenComplete: function() {
            i.WorkinCloud.instance._getSound().playSound("bang_fist");
            this._timer = 1.5
        },
        __class__: o.elements.Fist
    });
    o.elements.FloatingScore = function(a) {
        t.Element.call(this, a);
        this._addElement(new t.TextBase(-20, 0, "", i.WorkinCloud.instance._getLocalize().getData("level_1")._getFontName(), {
            origin: new k.WorkinPoint(0.5, 0.5),
            scale: 0.4
        }))._setText("+" + I.string(a.score));
        k.tween.WorkinTweener._getInstance().tween(this._render, 1, {
            alpha: 0
        });
        k.tween.WorkinTweener._getInstance().tween(this._pos, 1, {
            y: this._pos.y - 50
        }).onComplete(w(this, this._onTweenComplete))
    };
    j["com.nick.spongebob.marble_bash.world.elements.FloatingScore"] =
        o.elements.FloatingScore;
    o.elements.FloatingScore.__name__ = "com,nick,spongebob,marble_bash,world,elements,FloatingScore".split(",");
    o.elements.FloatingScore.__super__ = t.Element;
    o.elements.FloatingScore.prototype = C(t.Element.prototype, {
        _onTweenComplete: function() {
            this._setDoDelete(!0)
        },
        __class__: o.elements.FloatingScore
    });
    o.elements.LevelSign = function() {
        t.Element.call(this, {
            asset: "sign_red",
            origin: new k.WorkinPoint(1, 0.5),
            x: g.ConstantsApp.STAGE_WIDTH + 50,
            y: 200,
            layer: g.ConstantsApp.LAYER_FG,
            rot: 120
        });
        this._addElement(new t.TextLocalized(-355, -35, "level", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        var a, b = i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_LEVEL);
        this._addElement(a = new t.TextBase(-330, -35, "", i.WorkinCloud.instance._getLocalize().getData("level")._getFontName(), {
            scale: 0.2,
            origin: new k.WorkinPoint(0, 0.5)
        }));
        a._setText(I.string(b));
        this._levelNum = a;
        this._addElement(this._levelName = new t.TextLocalized(-340, -13, "level_" + b, "", {
            origin: new k.WorkinPoint(0.5, 0.5),
            width: 95,
            center: !0,
            spacing: 10
        }));
        this._getRenderable().visible = !1
    };
    j["com.nick.spongebob.marble_bash.world.elements.LevelSign"] = o.elements.LevelSign;
    o.elements.LevelSign.__name__ = "com,nick,spongebob,marble_bash,world,elements,LevelSign".split(",");
    o.elements.LevelSign.__super__ = t.Element;
    o.elements.LevelSign.prototype = C(t.Element.prototype, {
        _onTweenCompelte: function() {
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_LEVEL_SETUP));
            this._getRenderable().visible = !1
        },
        update: function(a) {
            t.Element.prototype.update.call(this,
                a);
            0 < this._timer && (this._timer -= a, 0 >= this._timer && i.WorkinCloud.instance._getSound().playSound("SlideWhistle_DN1"))
        },
        show: function() {
            this._getRenderable().visible = !0;
            this._getRenderable().rotation = 120;
            this._levelNum._setText("" + i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_LEVEL));
            this._levelName._setText("level_" + i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_LEVEL));
            k.tween.WorkinTweener._getInstance().tween(this._getRenderable(), 0.5, {
                rotation: 0
            });
            k.tween.WorkinTweener._getInstance().tween(this._getRenderable(),
                0.5, {
                    rotation: -100
                }).delay(2.5).onComplete(w(this, this._onTweenCompelte));
            i.WorkinCloud.instance._getSound().playSound("SlideWhistle_UP1");
            this._timer = 2.5
        },
        dispose: function() {
            this._levelName = this._levelNum = null
        },
        __class__: o.elements.LevelSign
    });
    o.elements.Line = function(a) {
        t.Element.call(this, a);
        this._lines = [];
        this._frameNum = 0;
        this._currentLine = null
    };
    j["com.nick.spongebob.marble_bash.world.elements.Line"] = o.elements.Line;
    o.elements.Line.__name__ = "com,nick,spongebob,marble_bash,world,elements,Line".split(",");
    o.elements.Line.__super__ = t.Element;
    o.elements.Line.prototype = C(t.Element.prototype, {
        handleInput: function(a) {
            switch (a.input) {
                case g.ConstantsApp.INPUT_CLICK:
                    switch (a.phase) {
                        case y.WMEventInput.PHASE_MOVE:
                            if (null != this._currentLine) {
                                var a = new k.WorkinPoint(a.x, a.y),
                                    b = this._getRotation(this._currentLine._getPos(), a);
                                this._currentLine._getRenderable().rotation = b;
                                this._currentLine._getRenderable().scaleX = this._currentLine._getPos().distTo2D(a) / 850
                            }
                    }
            }
        },
        removeLines: function() {
            for (var a = 0, b = this._lines; a <
                b.length;) {
                var c = b[a];
                ++a;
                this._removeElement(c);
                c.dispose()
            }
            this._lines = [];
            this._currentLine = null
        },
        addLine: function(a, b) {
            if (null != b) {
                if (null != this._currentLine) {
                    S.remove(this._lines, this._currentLine);
                    this._removeElement(this._currentLine);
                    this._currentLine = null;
                    var c = new t.AnimatedElement({
                        x: a.x,
                        y: a.y,
                        layer: g.ConstantsApp.LAYER_FG,
                        library: "flump_line",
                        movie: "Bars",
                        origin: new k.WorkinPoint(0, 0.5),
                        scale: 0.2
                    });
                    c.addAnimation("idle", 1, 60);
                    c._getRenderable().scaleX = 0;
                    c._getRenderable().rotation = this._getRotation(a,
                        b);
                    this._addElement(c);
                    this._lines.push(c);
                    c._getRenderable().scaleX = c._getPos().distTo2D(b) / 830
                }
                c = new t.AnimatedElement({
                    x: b.x,
                    y: b.y,
                    layer: g.ConstantsApp.LAYER_FG,
                    library: "flump_line",
                    movie: "Bars",
                    origin: new k.WorkinPoint(0, 0.5),
                    scale: 0.2
                });
                c.addAnimation("idle", 1, 60);
                c._getRenderable().scaleX = 0;
                this._addElement(c);
                this._lines.push(c);
                this._currentLine = c
            }
        },
        _getRotation: function(a, b) {
            return 180 * Math.atan2(b.y - a.y, b.x - a.x) / Math.PI
        },
        update: function(a) {
            t.Element.prototype.update.call(this, a);
            for (var a =
                    0, b = this._lines; a < b.length;) {
                var c = b[a];
                ++a;
                c.setFrame(this._frameNum)
            }
            this._frameNum++;
            60 < this._frameNum && (this._frameNum = 0)
        },
        dispose: function() {
            t.Element.prototype.dispose.call(this);
            this.removeLines();
            this._currentLine = this._lines = null
        },
        __class__: o.elements.Line
    });
    o.elements.PhysicsElement = function(a) {
        a.origin = new k.WorkinPoint(0.5, 0.5);
        t.AnimatedElement.call(this, a);
        a = B.Body;
        null == e.ZPP_Flags.BodyType_DYNAMIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_DYNAMIC = new B.BodyType, e.ZPP_Flags.internal = !1);
        this._body = new a(e.ZPP_Flags.BodyType_DYNAMIC)
    };
    j["com.nick.spongebob.marble_bash.world.elements.PhysicsElement"] = o.elements.PhysicsElement;
    o.elements.PhysicsElement.__name__ = "com,nick,spongebob,marble_bash,world,elements,PhysicsElement".split(",");
    o.elements.PhysicsElement.__super__ = t.AnimatedElement;
    o.elements.PhysicsElement.prototype = C(t.AnimatedElement.prototype, {
        _setBody: function(a) {
            return this._body = a
        },
        _getBody: function() {
            return this._body
        },
        _setShape: function(a) {
            this._body.zpp_inner.wrap_shapes.add(a);
            return this._shape = a
        },
        _getShape: function() {
            return this._shape
        },
        _updateBody: function() {
            this._pos.x = this._body.get_position().get_x();
            this._pos.y = this._body.get_position().get_y()
        },
        renew: function(a) {
            t.AnimatedElement.prototype.renew.call(this, a)
        },
        dispose: function() {
            t.AnimatedElement.prototype.dispose.call(this);
            this._getBody().zpp_inner.wrap_shapes.clear();
            this._getBody().get_cbTypes().clear();
            this._shape = this._body = null
        },
        __class__: o.elements.PhysicsElement,
        __properties__: C(t.AnimatedElement.prototype.__properties__, {
            set_body: "_setBody",
            get_body: "_getBody",
            set_shape: "_setShape",
            get_shape: "_getShape"
        })
    });
    o.elements.Marble = function(a) {
        this.STATE_FIST = 2;
        this.STATE_IDLE = 1;
        this.STATE_MOVE = 0;
        a.scale = 0.6;
        a.layer = g.ConstantsApp.LAYER_BG;
        this.id = a.id;
        this._emerged = !1;
        a.emergeTime && (this.emergeTime = a.emergeTime, 0 < this.emergeTime && (this._emerged = !0));
        4 > a.id && !1 == this._emerged && !1 == i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TUTORIAL) && (a.y = -60);
        o.elements.PhysicsElement.call(this, a);
        this._emergeScale = i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TOUCH_DEVICE) ?
            1 : 0.8;
        this._state = this.STATE_IDLE;
        this._emerged && (this._render.scaleX = this._render.scaleY = this._emergeScale, i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData(g.ConstantsApp.EVENT_ELEMENT_CHANGE_LAYER, {
            element: this,
            layer: g.ConstantsApp.LAYER_PLAYER
        })));
        4 > this.id && !1 == this._emerged && (this._state = this.STATE_MOVE, k.tween.WorkinTweener._getInstance().tween(this._pos, 1, {
            y: g.ConstantsApp.PIPE_Y
        }).onComplete(w(this, this._onIntroComplete)));
        this.type = a.movie;
        this.freeze = !1;
        i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TUTORIAL) &&
            (this.freeze = !0);
        this.isNormal = !1;
        pa.has(o.elements.Marble.typeRegular(), this.type) && (this.isNormal = !0);
        this.isBonus = !1;
        pa.has(o.elements.Marble.typePoints(), this.type) && (this.isBonus = !0);
        this.type1 = a.type1 ? a.type1 : "";
        this.type2 = a.type2 ? a.type2 : "";
        this.soundPlayed = a.sound ? a.sound : !1;
        this.isSpecial = this.isSched = this.selected = !1;
        pa.has(o.elements.Marble.typeSpecial(), this.type) && (this.isSpecial = !0);
        this._setShape(new L.Circle(g.ConstantsApp.BALL_RADIUS * this._emergeScale / 0.8));
        this._getShape().set_material(new B.Material(0.3,
            1, 2, 1));
        this._getBody().get_cbTypes().add(a.cb);
        this._getBody().get_position().setxy(a.x, this._emerged ? a.y : g.ConstantsApp.PIPE_Y);
        this._getBody().get_velocity().setxy(i.WorkinUtils.getRandom(-10, 10, !0), i.WorkinUtils.getRandom(80, 100));
        this.type == o.elements.Marble.TYPE_FIREBALL && (i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData(g.ConstantsApp.EVENT_FIREBALL_START, {
            element: this
        })), this._getShape().set_sensorEnabled(!0), this._getShape().zpp_inner.filter.wrapper().set_sensorGroup(1));
        this.isBonus ? this.type == o.elements.Marble.TYPE_BONUS1 ? this.addAnimation("idle", 2, 2) : this.type == o.elements.Marble.TYPE_BONUS2 ? this.addAnimation("idle", 5, 5) : this.type == o.elements.Marble.TYPE_BONUS3 && this.addAnimation("idle", 3, 3) : this.type == o.elements.Marble.TYPE_SKULL ? this.addAnimation("idle", 4, 4) : this.addAnimation("idle", 1, 1);
        this.addAnimation("glow", 2, 5);
        this.addAnimation("pop", 6, 7);
        this.animate("idle");
        this._getBody().set_mass(1)
    };
    j["com.nick.spongebob.marble_bash.world.elements.Marble"] = o.elements.Marble;
    o.elements.Marble.__name__ = "com,nick,spongebob,marble_bash,world,elements,Marble".split(",");
    o.elements.Marble.typeRegular = function() {
        return [o.elements.Marble.TYPE_SPONGEBOB, o.elements.Marble.TYPE_PATRICK, o.elements.Marble.TYPE_SQUIDWARD, o.elements.Marble.TYPE_GARY, o.elements.Marble.TYPE_1, o.elements.Marble.TYPE_2, o.elements.Marble.TYPE_SANDY, o.elements.Marble.TYPE_PLANKTON, o.elements.Marble.TYPE_3, o.elements.Marble.TYPE_4, o.elements.Marble.TYPE_5, o.elements.Marble.TYPE_6, o.elements.Marble.TYPE_EYE]
    };
    o.elements.Marble.typeBonus = function() {
        return [o.elements.Marble.TYPE_SPONGEBOB, o.elements.Marble.TYPE_PATRICK, o.elements.Marble.TYPE_SQUIDWARD, o.elements.Marble.TYPE_GARY, o.elements.Marble.TYPE_SANDY, o.elements.Marble.TYPE_PLANKTON]
    };
    o.elements.Marble.typeSpecial = function() {
        return [o.elements.Marble.TYPE_RAINBOW, o.elements.Marble.TYPE_JELLYFISH, o.elements.Marble.TYPE_FIREBALL, o.elements.Marble.TYPE_SKULL]
    };
    o.elements.Marble.typePoints = function() {
        return [o.elements.Marble.TYPE_BONUS1, o.elements.Marble.TYPE_BONUS2,
            o.elements.Marble.TYPE_BONUS3
        ]
    };
    o.elements.Marble.typeAll = function() {
        return [o.elements.Marble.TYPE_SPONGEBOB, o.elements.Marble.TYPE_PATRICK, o.elements.Marble.TYPE_SQUIDWARD, o.elements.Marble.TYPE_GARY, o.elements.Marble.TYPE_1, o.elements.Marble.TYPE_2, o.elements.Marble.TYPE_SANDY, o.elements.Marble.TYPE_PLANKTON, o.elements.Marble.TYPE_3, o.elements.Marble.TYPE_4, o.elements.Marble.TYPE_5, o.elements.Marble.TYPE_6, o.elements.Marble.TYPE_EYE, o.elements.Marble.TYPE_SPONGEBOB, o.elements.Marble.TYPE_PATRICK,
            o.elements.Marble.TYPE_SQUIDWARD, o.elements.Marble.TYPE_GARY, o.elements.Marble.TYPE_SANDY, o.elements.Marble.TYPE_PLANKTON, o.elements.Marble.TYPE_RAINBOW, o.elements.Marble.TYPE_JELLYFISH, o.elements.Marble.TYPE_FIREBALL, o.elements.Marble.TYPE_SKULL, o.elements.Marble.TYPE_BONUS1, o.elements.Marble.TYPE_BONUS2, o.elements.Marble.TYPE_BONUS3, o.elements.Marble.TYPE_CANNONBALL
        ]
    };
    o.elements.Marble.__super__ = o.elements.PhysicsElement;
    o.elements.Marble.prototype = C(o.elements.PhysicsElement.prototype, {
        _onAnimationComplete: function() {
            "pop" ==
            this._currentAnimation && (i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData(g.ConstantsApp.EVENT_REMOVE_ELEMENT, {
                element: this
            })), i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData(g.ConstantsApp.EVENT_BALL_POP, {
                element: this,
                addScore: this._addScore
            })), this._setDoDelete(!0))
        },
        handleInput: function(a) {
            switch (a.input) {
                case g.ConstantsApp.INPUT_CLICK:
                    switch (a.phase) {
                        case y.WMEventInput.PHASE_MOVE:
                            if (this.type == o.elements.Marble.TYPE_EYE) {
                                var b = a.y - this._getPos().y,
                                    a = a.x - this._getPos().x;
                                this._render.rotation = 180 * Math.atan2(b, a) / Math.PI + 90
                            }
                    }
            }
        },
        _onTutorialFinish: function() {
            this.pop(!0, Math.random(), !1)
        },
        _onFist: function(a) {
            this._fist = a._getData().element;
            this._state = this.STATE_FIST
        },
        _onLevelNext: function() {
            this._emerged ? this.pop(!0, Math.random(), !1) : (this._state = this.STATE_MOVE, this.selected = !1, k.tween.WorkinTweener._getInstance().tween(this._pos, 0.5, {
                y: -60
            }).delay(1).onComplete(w(this, this._onOutroComplete)))
        },
        _removeEventListeners: function() {
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_LEVEL_NEXT,
                w(this, this._onLevelNext));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_FIST, w(this, this._onFist));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_TUTORIAL_FINISH, w(this, this._onTutorialFinish))
        },
        _addEventListeners: function() {
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_LEVEL_NEXT, w(this, this._onLevelNext));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_FIST, w(this,
                this._onFist));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_TUTORIAL_FINISH, w(this, this._onTutorialFinish))
        },
        pop: function(a, b, c) {
            this._addScore = c;
            a ? (this.isSched = !0, this._timerSched = b, this._sched = "pop") : (this.animate("idle"), this.selected = !1)
        },
        unselect: function() {
            this.animate("idle");
            this.selected = !1
        },
        select: function() {
            this.animate("glow");
            this.selected = !0
        },
        stone: function(a) {
            this.isSched = !0;
            this._timerSched = a;
            this._sched = "stone"
        },
        _onTweenComplete: function() {
            this._emerged = !0
        },
        emerge: function() {
            k.tween.WorkinTweener._getInstance().tween(this._render, 0.2, {
                scaleX: this._emergeScale,
                scaleY: this._emergeScale
            }).onComplete(w(this, this._onTweenComplete));
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData(g.ConstantsApp.EVENT_ELEMENT_CHANGE_LAYER, {
                element: this,
                layer: g.ConstantsApp.LAYER_PLAYER
            }));
            this.type == o.elements.Marble.TYPE_FIREBALL ? i.WorkinCloud.instance._getSound().playSound("fireball_by_13") : this.type == o.elements.Marble.TYPE_JELLYFISH && i.WorkinCloud.instance._getSound().playSound("jellybuzz")
        },
        _onOutroComplete: function() {
            this._setDoDelete(!0);
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData(g.ConstantsApp.EVENT_REMOVE_ELEMENT, {
                element: this
            }))
        },
        _onIntroComplete: function() {
            this._state = this.STATE_IDLE
        },
        update: function(a) {
            o.elements.PhysicsElement.prototype.update.call(this, a);
            this._state != this.STATE_MOVE && !this.selected && (this._updateBody(), this.type != o.elements.Marble.TYPE_EYE && (this._render.rotation = 180 * this._getBody().zpp_inner.rot / Math.PI));
            this._state == this.STATE_FIST &&
                !this.isSched && this._getPos().y < this._fist._getPos().y && (this.isSched = !0, this.animate("pop", 1));
            this.isSched && 0 < this._timerSched && (this._timerSched -= a, 0 >= this._timerSched && ("pop" == this._sched ? this.animate("pop", 1) : "stone" == this._sched && (this.setSymbol(o.elements.Marble.TYPE_CANNONBALL), this.type = o.elements.Marble.TYPE_CANNONBALL, this.isSched = !1)));
            this.type == o.elements.Marble.TYPE_FIREBALL && this._pos.y > g.ConstantsApp.STAGE_HEIGHT + g.ConstantsApp.BALL_RADIUS && (i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_FIREBALL_FINISH)),
                this.animate("pop", 1))
        },
        dispose: function() {
            k.tween.WorkinTweener._getInstance().stop(this._getPos());
            o.elements.PhysicsElement.prototype.dispose.call(this)
        },
        __class__: o.elements.Marble
    });
    o.elements.Pipe = function() {
        t.Element.call(this, {
            asset: "pipe",
            origin: new k.WorkinPoint(0.5, 0.5),
            x: g.ConstantsApp.STAGE_CENTER_X,
            y: -60,
            layer: g.ConstantsApp.LAYER_PLAYER,
            scale: 0.8
        })
    };
    j["com.nick.spongebob.marble_bash.world.elements.Pipe"] = o.elements.Pipe;
    o.elements.Pipe.__name__ = "com,nick,spongebob,marble_bash,world,elements,Pipe".split(",");
    o.elements.Pipe.__super__ = t.Element;
    o.elements.Pipe.prototype = C(t.Element.prototype, {
        _onTweenCompelte: function() {
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_LEVEL_SETUP_FINISH))
        },
        tweenUp: function() {
            k.tween.WorkinTweener._getInstance().tween(this._pos, 0.5, {
                y: -60
            }).delay(1)
        },
        tweenDown: function() {
            k.tween.WorkinTweener._getInstance().tween(this._pos, 1, {
                y: 60
            }).onComplete(w(this, this._onTweenCompelte))
        },
        loadLevel: function() {
            this._pos.y = 60
        },
        __class__: o.elements.Pipe
    });
    o.elements.StartMessage = function() {
        t.Element.call(this, {
            layer: g.ConstantsApp.LAYER_FG
        });
        this.msgNo = 1;
        this._text = null;
        this._showMessage()
    };
    j["com.nick.spongebob.marble_bash.world.elements.StartMessage"] = o.elements.StartMessage;
    o.elements.StartMessage.__name__ = "com,nick,spongebob,marble_bash,world,elements,StartMessage".split(",");
    o.elements.StartMessage.__super__ = t.Element;
    o.elements.StartMessage.prototype = C(t.Element.prototype, {
        _onTweenComplete: function() {
            this.msgNo++;
            2 < this.msgNo ? this._setDoDelete(!0) :
                this._showMessage()
        },
        _showMessage: function() {
            null != this._text && this._removeElement(this._text);
            this._addElement(this._text = new t.TextLocalized(g.ConstantsApp.STAGE_CENTER_X, g.ConstantsApp.STAGE_CENTER_Y, "start" + this.msgNo, "", {
                origin: new k.WorkinPoint(0.5, 0.5)
            }));
            this._text._getRenderable().alpha = 0;
            k.tween.WorkinTweener._getInstance().tween(this._text._getRenderable(), 0.5, {
                alpha: 1
            });
            k.tween.WorkinTweener._getInstance().tween(this._text._getRenderable(), 0.5, {
                alpha: 0
            }).delay(1.5).onComplete(w(this, this._onTweenComplete))
        },
        dispose: function() {
            t.Element.prototype.dispose.call(this);
            this._text = null
        },
        __class__: o.elements.StartMessage
    });
    o.elements.Tutorial = function() {
        t.Element.call(this, {
            layer: g.ConstantsApp.LAYER_FG
        });
        this._text = this._addElement(new t.TextLocalized(g.ConstantsApp.STAGE_CENTER_X, g.ConstantsApp.STAGE_CENTER_Y, "", "", {
            origin: new k.WorkinPoint(0.5, 0.5),
            width: 300,
            center: !0,
            spacing: 20
        }));
        var a = "_desktop";
        i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TOUCH_DEVICE) && (a = "_mobile");
        this._textArr = ["help_1a" + a,
            "help_2a", "help_2b" + a, "help_3a" + a, "help_3b" + a, "help_4a", "help_4b" + a, "help_5a", "help_7a", "help_8a", "help_6a"
        ]
    };
    j["com.nick.spongebob.marble_bash.world.elements.Tutorial"] = o.elements.Tutorial;
    o.elements.Tutorial.__name__ = "com,nick,spongebob,marble_bash,world,elements,Tutorial".split(",");
    o.elements.Tutorial.__super__ = t.Element;
    o.elements.Tutorial.prototype = C(t.Element.prototype, {
        hideText: function() {
            this._text._setText("")
        },
        showText: function() {
            this._text._setText(this._textArr[i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_TUTORIAL_STEP) -
                1]);
            11 == i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_TUTORIAL_STEP) && (this._timer = 5)
        },
        update: function(a) {
            0 < this._timer && (this._timer -= a, 0 >= this._timer && (i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_TUTORIAL_FINISH)), i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_LEVEL_PROGRESS, 0)))
        },
        dispose: function() {
            this._textArr = this._text = null
        },
        __class__: o.elements.Tutorial
    });
    o.elements.TutorialSign = function() {
        this._clicked = !1;
        t.Element.call(this, {
            asset: "sign_red",
            origin: new k.WorkinPoint(1, 0.5),
            x: g.ConstantsApp.STAGE_WIDTH + 50,
            y: 200,
            layer: g.ConstantsApp.LAYER_FG,
            rot: 120
        });
        this._addElement(new t.TextLocalized(-340, 0, "tutorial", "", {
            origin: new k.WorkinPoint(0.5, 0.5)
        }));
        k.tween.WorkinTweener._getInstance().tween(this._getRenderable(), 0.5, {
            rotation: 0
        });
        i.WorkinCloud.instance._getSound().playSound("SlideWhistle_UP1");
        var a;
        this._addElement(a = new p.buttons.ButtonBase(-340, 50, new k.WorkinPoint(0.5, 0.5), "btn_green", "btn_green", "btn_green_down"))._getDispatcher().addEventListener(p.buttons.ButtonBase.CLICK,
            w(this, this._onEventClickSkip));
        a.setSound(["floot1", "Honk1", "newboing1", "fartbutton2"]);
        a.setScale(0.5, 0.5);
        a._getRenderable().rotation = 180;
        a._addElement(new t.TextLocalized(0, 0, "skip", "", {
            rot: 180,
            origin: new k.WorkinPoint(0.5, 0.5)
        }))
    };
    j["com.nick.spongebob.marble_bash.world.elements.TutorialSign"] = o.elements.TutorialSign;
    o.elements.TutorialSign.__name__ = "com,nick,spongebob,marble_bash,world,elements,TutorialSign".split(",");
    o.elements.TutorialSign.__super__ = t.Element;
    o.elements.TutorialSign.prototype =
        C(t.Element.prototype, {
            _onTweenComplete: function() {
                i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_LEVEL_NEXT_FINISH))
            },
            _onTutorialFinish: function() {
                k.tween.WorkinTweener._getInstance().tween(this._getRenderable(), 0.5, {
                    rotation: -100
                }).delay(1).onComplete(w(this, this._onTweenComplete))
            },
            _removeEventListeners: function() {
                i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_TUTORIAL_FINISH, w(this, this._onTutorialFinish))
            },
            _addEventListeners: function() {
                i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_TUTORIAL_FINISH,
                    w(this, this._onTutorialFinish))
            },
            _onEventClickSkip: function() {
                this._clicked || (this._clicked = !0, i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_TUTORIAL_FINISH)))
            },
            __class__: o.elements.TutorialSign
        });
    o.elements.WinMessage = function() {
        t.Element.call(this, {
            layer: g.ConstantsApp.LAYER_FG
        });
        this._showMessage()
    };
    j["com.nick.spongebob.marble_bash.world.elements.WinMessage"] = o.elements.WinMessage;
    o.elements.WinMessage.__name__ = "com,nick,spongebob,marble_bash,world,elements,WinMessage".split(",");
    o.elements.WinMessage.__super__ = t.Element;
    o.elements.WinMessage.prototype = C(t.Element.prototype, {
        _onTweenComplete: function() {
            i.WorkinCloud.instance.setBool(g.ConstantsApp.BOOL_GAME_WIN, !0);
            this._setDoDelete(!0)
        },
        _showMessage: function() {
            this._addElement(this._text = new t.TextLocalized(g.ConstantsApp.STAGE_CENTER_X, g.ConstantsApp.STAGE_CENTER_Y, "win1", null, {
                origin: new k.WorkinPoint(0.5, 0.5)
            }));
            this._text._getRenderable().alpha = 0;
            k.tween.WorkinTweener._getInstance().tween(this._text._getRenderable(),
                0.5, {
                    alpha: 1
                });
            k.tween.WorkinTweener._getInstance().tween(this._text._getRenderable(), 0.5, {
                alpha: 0
            }).delay(4).onComplete(w(this, this._onTweenComplete))
        },
        dispose: function() {
            t.Element.prototype.dispose.call(this);
            this._text = null
        },
        __class__: o.elements.WinMessage
    });
    o.elements.Zap = function(a) {
        a.scale = 0.5;
        t.AnimatedElement.call(this, a);
        this.addAnimation("zap", 1, 2);
        this.animate("zap", 5)
    };
    j["com.nick.spongebob.marble_bash.world.elements.Zap"] = o.elements.Zap;
    o.elements.Zap.__name__ = "com,nick,spongebob,marble_bash,world,elements,Zap".split(",");
    o.elements.Zap.__super__ = t.AnimatedElement;
    o.elements.Zap.prototype = C(t.AnimatedElement.prototype, {
        _onAnimationComplete: function() {
            this._setDoDelete(!0)
        },
        __class__: o.elements.Zap
    });
    o.levels = {};
    o.levels.Level = function() {
        this.FLOOR = 25;
        this.BORDER = 180;
        this._gravity = u.Vec2.get(0, 150, null);
        this._space = new ra.Space(this._gravity);
        this.ballCbType = new v.CbType;
        this.wallCbType = new v.CbType;
        this._space.zpp_inner.wrap_listeners.add(new v.InteractionListener(function() {
            null == e.ZPP_Flags.CbEvent_BEGIN && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.CbEvent_BEGIN = new v.CbEvent, e.ZPP_Flags.internal = !1);
            return e.ZPP_Flags.CbEvent_BEGIN
        }(this), function() {
            null == e.ZPP_Flags.InteractionType_COLLISION && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_COLLISION = new v.InteractionType, e.ZPP_Flags.internal = !1);
            return e.ZPP_Flags.InteractionType_COLLISION
        }(this), this.ballCbType, this.wallCbType, w(this, this._onCollision)));
        this._space.zpp_inner.wrap_listeners.add(new v.InteractionListener(function() {
            null == e.ZPP_Flags.CbEvent_BEGIN && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.CbEvent_BEGIN = new v.CbEvent, e.ZPP_Flags.internal = !1);
            return e.ZPP_Flags.CbEvent_BEGIN
        }(this), function() {
            null == e.ZPP_Flags.InteractionType_COLLISION && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_COLLISION = new v.InteractionType, e.ZPP_Flags.internal = !1);
            return e.ZPP_Flags.InteractionType_COLLISION
        }(this), this.ballCbType, this.ballCbType, w(this, this._onCollision)));
        var a = B.Body;
        null == e.ZPP_Flags.BodyType_STATIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_STATIC = new B.BodyType,
            e.ZPP_Flags.internal = !1);
        this._floorBody = new a(e.ZPP_Flags.BodyType_STATIC);
        this._floorBody.zpp_inner.wrap_shapes.add(new L.Polygon(L.Polygon.rect(this.BORDER, g.ConstantsApp.STAGE_HEIGHT - this.FLOOR, g.ConstantsApp.STAGE_WIDTH - 2 * this.BORDER, 1)));
        this._floorBody.zpp_inner.wrap_shapes.add(new L.Polygon(L.Polygon.rect(this.BORDER, 0, 1, g.ConstantsApp.STAGE_HEIGHT - this.FLOOR)));
        this._floorBody.zpp_inner.wrap_shapes.add(new L.Polygon(L.Polygon.rect(g.ConstantsApp.STAGE_WIDTH - this.BORDER, 0, 1, g.ConstantsApp.STAGE_HEIGHT -
            this.FLOOR)));
        this._pipeShapes = [];
        for (a = 0; 4 > a;) {
            var b = a++;
            this._pipeShapes.push(new L.Polygon(L.Polygon.rect(g.ConstantsApp.PIPE_X + g.ConstantsApp.PIPE_SPACING * b - 2.5 * g.ConstantsApp.BALL_RADIUS, g.ConstantsApp.PIPE_Y - 2.5 * g.ConstantsApp.BALL_RADIUS, 5 * g.ConstantsApp.BALL_RADIUS, 5 * g.ConstantsApp.BALL_RADIUS)));
            this._pipeShapes[b].set_sensorEnabled(!0);
            this._pipeShapes[b].zpp_inner.filter.wrapper().set_sensorGroup(1);
            this._floorBody.zpp_inner.wrap_shapes.add(this._pipeShapes[b])
        }
        this._floorBody.get_cbTypes().add(this.wallCbType);
        this._floorBody.set_space(this._space);
        this.levelObjects = [];
        this.phase1Count = 0;
        this._timeLimit = new T;
        this._lineLimit = new T;
        this._finishCount = new T;
        this._killButBonusCount = new T;
        this._phaseBalls = new T;
        this._emergeTime = new T;
        this._respawnDelay = new T;
        this._drawMatchSize = new T;
        this._touchMatchSize = new T;
        this._chanceBonus1 = new T;
        this._chanceBonus2 = new T;
        this._chanceBonus3 = new T;
        this._chanceCannonBall = new T;
        this._chanceFireBall = new T;
        this._chancePrism = new T;
        this._chanceBomb = new T;
        this._chanceSkull = new T;
        this._magnetStrength = new T;
        this._bonusMatchCount = new T;
        this._bonusMatchTimeout = new T;
        this._bombRadius = new T;
        this._skullRadius = new T;
        this._soundNotes = ["piano1,piano2,piano3,piano4,piano5,piano6,piano7,piano8,piano9,piano10,piano11,piano12,piano13,piano14,piano15".split(","), "plink1,plink2,plink3,plink4,plink5,plink6,plink7,plink8,plink9,plink10,plink11,plink12,plink13,plink13,plink13".split(",")];
        this._soundClink = "clink1,clink2,clink3,clink4,clink5,clink6,clink7,clink8".split(",");
        this.clear();
        this._addEventListeners()
    };
    j["com.nick.spongebob.marble_bash.world.levels.Level"] = o.levels.Level;
    o.levels.Level.__name__ = "com,nick,spongebob,marble_bash,world,levels,Level".split(",");
    o.levels.Level.prototype = {
        _tutorialStep: function() {
            i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TUTORIAL) && i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_TUTORIAL_STEP))
        },
        popAllBalls: function() {
            for (var a = 0.1, b = 0, c = this.levelObjects; b < c.length;) {
                var d = c[b];
                ++b;
                d.pop(!0, a, !1);
                a += 0.02
            }
            this.killBtnShowing = !1;
            this._tutorialStep()
        },
        _popBallGroup: function(a) {
            null == a && (a = !1);
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_BALL_POP_GROUP));
            if ("" != this._curBallType)
                for (var b = 0, c = this.ballsSelected; b < c.length;) {
                    var d = c[b];
                    ++b;
                    null == d ? S.remove(this.ballsSelected, d) : d.type != o.elements.Marble.TYPE_RAINBOW && d.type != this._curBallType && S.remove(this.ballsSelected, d)
                }
            this._touchPrism && 1 < this.ballsSelected.length && i.WorkinCloud.instance._getSound().playSound("harp_flourish_06");
            b = this.ballsSelected.length >= this._getDrawMatchSize() || this._touchPrism && 1 < this.ballsSelected.length;
            a && (b = this.ballsSelected.length >= this._getTouchMatchSize());
            if (i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TUTORIAL)) switch (i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_TUTORIAL_STEP)) {
                case 1:
                    3 <= this.ballsSelected.length && this._tutorialStep();
                    break;
                case 2:
                    1 < this.ballsSelected.length && this._tutorialStep();
                    break;
                case 9:
                case 10:
                    this.ballsSelected.length < this._getBonusMatchCount() ? b = !1 : this._tutorialStep()
            }
            b &&
                this.ballsSelected.length >= this._getBonusMatchCount() && pa.has(o.elements.Marble.typeBonus(), this._curBallType) && (i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData(g.ConstantsApp.EVENT_BONUS, {
                    type: this._curBallType
                })), this.bonusTimer = 0);
            a = 0.05;
            for (c = this.ballsSelected.length; 0 < c;) c--, this.ballsSelected[c].pop(b, a, !0), this.ballsSelected.pop(), this._touchPrism || (a += 0.05);
            this._curBallType = "";
            this.updateProgress();
            this._touchPrism = !1
        },
        _selectBallGroup: function(a) {
            var b = new B.BodyList;
            this._findNeighbors(a._getBody(), b);
            var c = [];
            b.zpp_inner.valmod();
            for (b = B.BodyIterator.get(b); b.hasNext();) {
                var d = b.next();
                c.push(this._findBall(d))
            }
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData(g.ConstantsApp.EVENT_BALL_SELECT, {
                from: this._prevBallPos,
                to: a._getPos().copy()
            }));
            b = Math.floor(7 * this.curPopCount / this._getFinishCount() + this._pathCount);
            14 < b && (b = 14);
            this._pathCount++;
            2 != i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_NOTE_TYPE) && i.WorkinCloud.instance._getSound().playSound(this._soundNotes[i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_NOTE_TYPE)][b]);
            for (b = 0; b < c.length;) d = c[b], ++b, d.select();
            this._prevBallPos = a._getPos().copy();
            this.ballsSelected = this.ballsSelected.concat(c);
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_TUTORIAL_CLEAR))
        },
        _isCorrectNeighbor: function(a) {
            for (var b = 0, c = this.levelObjects; b < c.length;) {
                var d = c[b];
                ++b;
                if (d._getBody() == a && d.type == this._curBallType) return !0
            }
            return !1
        },
        _findNeighbors: function(a, b) {
            null == a.zpp_inner.wrap_arbiters && (a.zpp_inner.wrap_arbiters = e.ZPP_ArbiterList.get(a.zpp_inner.arbiters, !0));
            for (var c = a.zpp_inner.wrap_arbiters.iterator(); c.hasNext();) {
                var d = c.next();
                if (this._isCorrectNeighbor(d.zpp_inner.ws1.id > d.zpp_inner.ws2.id ? d.zpp_inner.b2.outer : d.zpp_inner.b1.outer) && !b.has(d.zpp_inner.ws1.id > d.zpp_inner.ws2.id ? d.zpp_inner.b2.outer : d.zpp_inner.b1.outer)) b.add(d.zpp_inner.ws1.id > d.zpp_inner.ws2.id ? d.zpp_inner.b2.outer : d.zpp_inner.b1.outer), b = this._findNeighbors(d.zpp_inner.ws1.id > d.zpp_inner.ws2.id ? d.zpp_inner.b2.outer : d.zpp_inner.b1.outer, b);
                if (this._isCorrectNeighbor(d.zpp_inner.ws1.id >
                        d.zpp_inner.ws2.id ? d.zpp_inner.b1.outer : d.zpp_inner.b2.outer) && !b.has(d.zpp_inner.ws1.id > d.zpp_inner.ws2.id ? d.zpp_inner.b1.outer : d.zpp_inner.b2.outer)) b.add(d.zpp_inner.ws1.id > d.zpp_inner.ws2.id ? d.zpp_inner.b1.outer : d.zpp_inner.b2.outer), b = this._findNeighbors(d.zpp_inner.ws1.id > d.zpp_inner.ws2.id ? d.zpp_inner.b1.outer : d.zpp_inner.b2.outer, b)
            }
            return b
        },
        _selectAllBalls: function(a) {
            this._removeAllButPrism();
            a = a.type;
            if (a != o.elements.Marble.TYPE_RAINBOW)
                for (var b = 0, c = this.levelObjects; b < c.length;) {
                    var d =
                        c[b];
                    ++b;
                    !d._getShape().contains(u.Vec2.get(this._prevBallPos.x, this._prevBallPos.y, !0)) && d.type == a && (d.select(), this.ballsSelected.push(d))
                }
        },
        _removeAllButPrism: function() {
            for (var a = this.ballsSelected.length; 1 < a;) a--, this.ballsSelected[a].unselect(), this.ballsSelected.splice(a, 1)
        },
        _bomb: function(a) {
            a.type == o.elements.Marble.TYPE_JELLYFISH ? (i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData(g.ConstantsApp.EVENT_BALL_BOMB, {
                    pos: a._getPos()
                })), i.WorkinCloud.instance._getSound().playSound("electrical_burst_02")) :
                i.WorkinCloud.instance._getSound().playSound("alert_17_descending");
            this.ballsSelected.push(a);
            var b = new L.Circle((a.type == o.elements.Marble.TYPE_JELLYFISH ? this._getBombRadius() : this._getSkullRadius()) / 2);
            b.zpp_inner.immutable_midstep("Shape::sensorEnabled");
            b.zpp_inner.sensorEnabled = !0;
            b.zpp_inner.wake();
            b.zpp_inner.sensorEnabled;
            b.zpp_inner.filter.wrapper().set_sensorGroup(1);
            a._getBody().zpp_inner.wrap_shapes.add(b);
            for (var c = 0.1, d = 0, f = this.levelObjects; d < f.length;) {
                var n = f[d];
                ++d;
                u.Geom.intersects(b,
                    n._getShape()) && (a.type == o.elements.Marble.TYPE_JELLYFISH ? this.ballsSelected.push(n) : (n.stone(c), c += 0.05))
            }
            a.type == o.elements.Marble.TYPE_JELLYFISH && this._popBallGroup();
            this._tutorialStep()
        },
        _onDown: function(a) {
            if ("" == this._curBallType) {
                this._prevMousePos = new k.WorkinPoint(a.x, a.y);
                for (var b = 0, c = this.levelObjects; b < c.length;) {
                    var d = c[b];
                    ++b;
                    if (d.soundPlayed && d._getShape().contains(u.Vec2.get(a.x, a.y, !0)) && !1 == d.freeze) {
                        this._touchPrism = !1;
                        if (d.type == o.elements.Marble.TYPE_RAINBOW) this._touchPrism = !0, i.WorkinCloud.instance._getSound().playSound("warble2", 1, !0);
                        else if (d.isBonus || d.type == o.elements.Marble.TYPE_JELLYFISH || d.type == o.elements.Marble.TYPE_SKULL) break;
                        this._curBallType = d.type;
                        this._pathCount = this._lineLength = 0;
                        this._prevBallPos = null;
                        this._selectBallGroup(d);
                        break
                    }
                }
            }
        },
        _onMove: function(a) {
            for (var b = 0, c = this.levelObjects; b < c.length;) {
                var d = c[b];
                ++b;
                d.handleInput(a)
            }
            if ("" != this._curBallType)
                for (var f = !0, b = 0, c = this.levelObjects; b < c.length;) {
                    d = c[b];
                    ++b;
                    d._getShape().contains(u.Vec2.get(a.x,
                        a.y, !0)) && (f = !1);
                    if (this._touchPrism) d.soundPlayed && !d.selected && d._getShape().contains(u.Vec2.get(a.x, a.y, !0)) && (this._selectAllBalls(d), this._curBallType = d.type);
                    else if (this._curBallType != o.elements.Marble.TYPE_CANNONBALL && d.soundPlayed && !d.selected && d._getShape().contains(u.Vec2.get(a.x, a.y, !0)) && d.type == this._curBallType) {
                        a = this._prevBallPos.distTo2D(new k.WorkinPoint(a.x, a.y));
                        this._lineLength + a < this._getLineLimit() ? (this._lineLength += a, this._selectBallGroup(d)) : this._popBallGroup();
                        break
                    }
                    this._touchPrism &&
                        f && this._removeAllButPrism()
                }
        },
        _onUp: function(a) {
            this._touchPrism && i.WorkinCloud.instance._getSound().stopSound("warble2");
            this._curBallType == o.elements.Marble.TYPE_CANNONBALL && this._tutorialStep();
            var b = 15 > Math.abs(a.x - this._prevMousePos.x) && 15 > Math.abs(a.y - this._prevMousePos.y);
            this._popBallGroup(b);
            if ("" == this._curBallType)
                for (var c = 0, d = this.levelObjects; c < d.length;) {
                    var f = d[c];
                    ++c;
                    if (f.soundPlayed && f._getShape().contains(u.Vec2.get(a.x, a.y, !0)) && f.type != o.elements.Marble.TYPE_CANNONBALL && b && !f.isSched) {
                        if (f.isBonus) {
                            i.WorkinCloud.instance._getSound().playSound("cash_register");
                            f.pop(!0, 0.01, !0);
                            this.bonusObjCount++;
                            this._tutorialStep();
                            !this.killBtnShowing && this.bonusObjCount >= this._getKillButBonusCount() && (this.bonusObjCount = 0, this.killBtnShowing = !0, i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent(g.ConstantsApp.EVENT_CLEAR_ALL_SHOW)));
                            break
                        } else if (f.type == o.elements.Marble.TYPE_JELLYFISH || f.type == o.elements.Marble.TYPE_SKULL) {
                            this._bomb(f);
                            break
                        }
                        break
                    }
                }
        },
        handleInput: function(a) {
            switch (a.input) {
                case g.ConstantsApp.INPUT_CLICK:
                    switch (a.phase) {
                        case y.WMEventInput.PHASE_UP:
                            this._onUp(a);
                            break;
                        case y.WMEventInput.PHASE_MOVE:
                            this._onMove(a);
                            break;
                        case y.WMEventInput.PHASE_DOWN:
                            this._onDown(a)
                    }
            }
        },
        _onFireballFinish: function() {
            null != this._fireball && (this._fireball = null, this._tutorialStep())
        },
        _onFireballStart: function(a) {
            this._fireball = a._getData().element
        },
        _removeEventListeners: function() {
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_FIREBALL_START, w(this, this._onFireballStart));
            i.WorkinCloud.instance._getDispatcher().removeEventListener(g.ConstantsApp.EVENT_FIREBALL_FINISH,
                w(this, this._onFireballFinish))
        },
        _addEventListeners: function() {
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_FIREBALL_START, w(this, this._onFireballStart));
            i.WorkinCloud.instance._getDispatcher().addEventListener(g.ConstantsApp.EVENT_FIREBALL_FINISH, w(this, this._onFireballFinish))
        },
        unFreezeBalls: function(a) {
            for (var b = 0, c = this.levelObjects; b < c.length;) {
                var d = c[b];
                ++b;
                d.type == a && (d.freeze = !1)
            }
        },
        freezeBalls: function() {
            for (var a = 0, b = this.levelObjects; a < b.length;) {
                var c =
                    b[a];
                ++a;
                c.freeze = !0
            }
        },
        getRandomBall: function(a) {
            for (var b = 0, c = this.levelObjects; b < c.length;) {
                var d = c[b];
                ++b;
                if (d.type == a) return d
            }
            return null
        },
        isAllBallsSelectable: function() {
            for (var a = 0, b = this.levelObjects; a < b.length;) {
                var c = b[a];
                ++a;
                if (!c.soundPlayed) return !1
            }
            return !0
        },
        isHoleBlocked: function(a) {
            for (var b = 0, c = this.levelObjects; b < c.length;) {
                var d = c[b];
                ++b;
                if (u.Geom.intersects(this._pipeShapes[a], d._getShape())) return !0
            }
            return !1
        },
        clear: function() {
            this.levelObjects = [];
            this.ballsSelected = [];
            this.curSpawnCount =
                0;
            this._curBallType = "";
            this._pathCount = this.curPopCount = 0;
            this._touchPrism = !1;
            this._clinkLimit = this.bonusObjCount = 0;
            this.killBtnShowing = !1;
            this._fireball = null;
            this._initSpawnTypes()
        },
        removeElement: function(a) {
            null == a || null == a._getBody() || (S.remove(this.levelObjects, a), a._getBody().set_space(null))
        },
        addElement: function(a) {
            this.levelObjects.push(a);
            a._getBody().set_space(this._space)
        },
        loadLevel: function(a, b, c, d, f, n) {
            this.curPopCount = a;
            this.bonusObjCount = b;
            this.curSpawnCount = c;
            this.spawnTypes = d;
            this.killBtnShowing =
                f;
            this.bonusTimer = n;
            this.updateProgress()
        },
        _getHashVal: function(a) {
            for (var b = a.get("1"), c = 2, d = i.WorkinCloud.instance.getInt(g.ConstantsApp.INT_LEVEL) + 1; c < d;) a.exists(I.string(c)) && (b = a.get(I.string(c))), c++;
            return b
        },
        _getSkullRadius: function() {
            return this._getHashVal(this._skullRadius)
        },
        _getBombRadius: function() {
            return this._getHashVal(this._bombRadius)
        },
        _getBonusMatchTimeout: function() {
            return this._getHashVal(this._bonusMatchTimeout)
        },
        _getBonusMatchCount: function() {
            return this._getHashVal(this._bonusMatchCount)
        },
        _getMagnetStrength: function() {
            return this._getHashVal(this._magnetStrength)
        },
        _getChanceSkull: function() {
            return this._getHashVal(this._chanceSkull)
        },
        _getChanceBomb: function() {
            return this._getHashVal(this._chanceBomb)
        },
        _getChancePrism: function() {
            return this._getHashVal(this._chancePrism)
        },
        _getChanceFireBall: function() {
            return this._getHashVal(this._chanceFireBall)
        },
        _getChanceCannonBall: function() {
            return this._getHashVal(this._chanceCannonBall)
        },
        _getChanceBonus3: function() {
            return this._getHashVal(this._chanceBonus3)
        },
        _getChanceBonus2: function() {
            return this._getHashVal(this._chanceBonus2)
        },
        _getChanceBonus1: function() {
            return this._getHashVal(this._chanceBonus1)
        },
        _getTouchMatchSize: function() {
            return this._getHashVal(this._touchMatchSize)
        },
        _getDrawMatchSize: function() {
            return this._getHashVal(this._drawMatchSize)
        },
        _getPhaseBalls: function() {
            return this._getHashVal(this._phaseBalls)
        },
        _getKillButBonusCount: function() {
            return this._getHashVal(this._killButBonusCount)
        },
        _getRespawnDelay: function() {
            return this._getHashVal(this._respawnDelay)
        },
        _getEmergeTime: function() {
            return this._getHashVal(this._emergeTime)
        },
        _getFinishCount: function() {
            return this._getHashVal(this._finishCount)
        },
        _getLineLimit: function() {
            return this._getHashVal(this._lineLimit)
        },
        _getTimeLimit: function() {
            return this._getHashVal(this._timeLimit)
        },
        getMarbleCount: function(a) {
            for (var b = 0, c = 0, d = this.levelObjects; c < d.length;) {
                var f = d[c];
                ++c;
                f.type == a && b++
            }
            return b
        },
        getNumBalls: function() {
            return this.levelObjects.length
        },
        getEmergeTime: function() {
            return this._getPhaseVal(this._getEmergeTime()) /
                1E3
        },
        getRespawnDelay: function() {
            return this._getPhaseVal(this._getRespawnDelay()) / 1E3
        },
        _getPhaseVal: function(a) {
            switch (this.getPhase()) {
                case 0:
                    return a[0];
                case 1:
                    return a[1];
                case 2:
                    return a[1] + (a[2] - a[1]) * (this.curSpawnCount - this._getPhaseBalls()[1]) / (this._getPhaseBalls()[2] - this._getPhaseBalls()[1]);
                default:
                    return a[2]
            }
        },
        getPhase: function() {
            return 0 < this.phase1Count || this.curSpawnCount < this._getPhaseBalls()[0] ? 0 : this.curSpawnCount < this._getPhaseBalls()[1] ? 1 : this.curSpawnCount < this._getPhaseBalls()[2] ?
                2 : 3
        },
        _initSpawnTypes: function() {
            this.spawnTypes = [];
            for (var a = o.elements.Marble.typeRegular(), b, c, d = 0; 50 > d;)
                if (b = d++, b = Math.floor(i.WorkinUtils.getRandom(4, a.length - 1)), c = Math.floor(i.WorkinUtils.getRandom(4, a.length - 1)), b != c) {
                    var f = a[b];
                    a[b] = a[c];
                    a[c] = f
                }
            c = Math.floor(10.24 * this._getChanceBomb() + 0.5);
            for (var f = Math.floor(10.24 * this._getChanceBonus1() + 0.5), n = Math.floor(10.24 * this._getChanceBonus2() + 0.5), e = Math.floor(10.24 * this._getChanceBonus3() + 0.5), s = Math.floor(10.24 * this._getChanceCannonBall() + 0.5),
                    F = Math.floor(10.24 * this._getChanceFireBall() + 0.5), g = Math.floor(10.24 * this._getChancePrism() + 0.5), h = Math.floor(10.24 * this._getChanceSkull() + 0.5), d = 0; 1024 > d;) b = d++, 0 < c ? (this.spawnTypes[b] = o.elements.Marble.TYPE_JELLYFISH, --c) : 0 < f ? (this.spawnTypes[b] = o.elements.Marble.TYPE_BONUS1, --f) : 0 < n ? (this.spawnTypes[b] = o.elements.Marble.TYPE_BONUS2, --n) : 0 < e ? (this.spawnTypes[b] = o.elements.Marble.TYPE_BONUS3, --e) : 0 < s ? (this.spawnTypes[b] = o.elements.Marble.TYPE_CANNONBALL, --s) : 0 < F ? (this.spawnTypes[b] = o.elements.Marble.TYPE_FIREBALL,
                --F) : 0 < g ? (this.spawnTypes[b] = o.elements.Marble.TYPE_RAINBOW, --g) : 0 < h ? (this.spawnTypes[b] = o.elements.Marble.TYPE_SKULL, --h) : this.spawnTypes[b] = a[b % a.length]
        },
        _playClink: function() {
            this._clinkLimit--;
            0 >= this._clinkLimit && (this._clinkLimit = 3, i.WorkinCloud.instance._getSound().playSoundRand(this._soundClink))
        },
        _findBall: function(a) {
            for (var b = 0, c = this.levelObjects; b < c.length;) {
                var d = c[b];
                ++b;
                if (d._getBody() == a) return d
            }
            return null
        },
        _onCollision: function(a) {
            var b = this._findBall(a.zpp_inner.int1.outer_i.get_castBody()),
                a = this._findBall(a.zpp_inner.int2.outer_i.get_castBody());
            null != b && !b.soundPlayed ? (b.soundPlayed = !0, this._playClink()) : null != a && !a.soundPlayed && (a.soundPlayed = !0, this._playClink())
        },
        updateProgress: function() {
            var a = Math.round(100 * (this.curPopCount / this._getFinishCount()));
            100 < a && (a = 100);
            i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_LEVEL_PROGRESS, a)
        },
        update: function(a) {
            this._space.step(a);
            "" != i.WorkinCloud.instance.getString(g.ConstantsApp.STRING_BONUS) && (this.bonusTimer++, this.bonusTimer > this._getBonusMatchTimeout() &&
                (i.WorkinCloud.instance.setInt(g.ConstantsApp.INT_MULTIPLIER, 0), i.WorkinCloud.instance.setString(g.ConstantsApp.STRING_BONUS, "")));
            if (null != this._fireball)
                for (var a = 0, b = this.levelObjects; a < b.length;) {
                    var c = b[a];
                    ++a;
                    c != this._fireball && !c.isSched && u.Geom.intersects(this._fireball._getShape(), c._getShape()) && (-1 != pa.indexOf(this.ballsSelected, c) && this._popBallGroup(), c.pop(!0, 0.01, !0))
                }
        },
        dispose: function() {
            this._removeEventListeners();
            this._space.zpp_inner.wrap_listeners.clear();
            this._space.get_gravity().dispose();
            this._space.clear();
            this._touchMatchSize = this._drawMatchSize = this._respawnDelay = this._emergeTime = this._phaseBalls = this._finishCount = this._lineLimit = this.levelObjects = this._floorBody = this._gravity = this._space = null
        },
        __class__: o.levels.Level,
        __properties__: {
            get_timeLimit: "_getTimeLimit",
            get_lineLimit: "_getLineLimit",
            get_finishCount: "_getFinishCount",
            get_emergeTime: "_getEmergeTime",
            get_respawnDelay: "_getRespawnDelay",
            get_killButBonusCount: "_getKillButBonusCount",
            get_phaseBalls: "_getPhaseBalls",
            get_drawMatchSize: "_getDrawMatchSize",
            get_touchMatchSize: "_getTouchMatchSize",
            get_chanceBonus1: "_getChanceBonus1",
            get_chanceBonus2: "_getChanceBonus2",
            get_chanceBonus3: "_getChanceBonus3",
            get_chanceCannonBall: "_getChanceCannonBall",
            get_chanceFireBall: "_getChanceFireBall",
            get_chancePrism: "_getChancePrism",
            get_chanceBomb: "_getChanceBomb",
            get_chanceSkull: "_getChanceSkull",
            get_bonusMatchCount: "_getBonusMatchCount",
            get_bonusMatchTimeout: "_getBonusMatchTimeout",
            get_bombRadius: "_getBombRadius",
            get_skullRadius: "_getSkullRadius"
        }
    };
    o.levels.LevelEasy =
        function() {
            o.levels.Level.call(this);
            i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TOUCH_DEVICE) ? (this._timeLimit.set("1", 120), this._lineLimit.set("1", 600), this._finishCount.set("1", 45), this._finishCount.set("20", 60), this._finishCount.set("30", 80), this._killButBonusCount.set("1", 0), this._killButBonusCount.set("4", 4), this._killButBonusCount.set("10", 9.1), this._killButBonusCount.set("30", 20), this._phaseBalls.set("1", [35, 70, 100]), this._phaseBalls.set("10", [50, 85, 110]), this._emergeTime.set("1", [180,
                560, 220
            ])) : (this._timeLimit.set("1", 120), this._lineLimit.set("1", 700), this._finishCount.set("1", 70), this._finishCount.set("20", 90), this._finishCount.set("30", 120), this._killButBonusCount.set("1", 0), this._killButBonusCount.set("4", 5), this._killButBonusCount.set("10", 11.1), this._killButBonusCount.set("30", 30), this._phaseBalls.set("1", [55, 100, 120]), this._phaseBalls.set("10", [75, 115, 130]), this._emergeTime.set("1", [160, 550, 200]));
            this._respawnDelay.set("1", [160, 2600, 1100]);
            this._respawnDelay.set("38", [130, 2200, 700]);
            this._respawnDelay.set("39", [160, 2600, 1100]);
            this._drawMatchSize.set("1", 3);
            this._touchMatchSize.set("1", 7);
            this._chanceBonus1.set("1", 0);
            this._chanceBonus1.set("4", 7);
            this._chanceBonus1.set("5", 1);
            this._chanceBonus1.set("11", 3);
            this._chanceBonus1.set("28", 6);
            this._chanceBonus1.set("29", 2);
            this._chanceBonus2.set("1", 0);
            this._chanceBonus2.set("4", 0.6 * this._chanceBonus1.get("4"));
            this._chanceBonus2.set("11", 0.6 * this._chanceBonus1.get("5"));
            this._chanceBonus2.set("30", 0.6 * this._chanceBonus1.get("30"));
            this._chanceBonus3.set("1", 0);
            this._chanceBonus3.set("4", 0.083 * this._chanceBonus1.get("4"));
            this._chanceBonus3.set("11", 0.083 * this._chanceBonus1.get("5"));
            this._chanceBonus3.set("18", 5);
            this._chanceBonus3.set("19", 0.5);
            this._chanceBonus3.set("30", 0.083 * this._chanceBonus1.get("5"));
            this._chanceCannonBall.set("1", 0);
            this._chanceCannonBall.set("5", 3);
            this._chanceCannonBall.set("19", 10);
            this._chanceCannonBall.set("20", 5);
            this._chanceCannonBall.set("35", 7);
            this._chanceFireBall.set("1", 0);
            this._chanceFireBall.set("5",
                3);
            this._chanceFireBall.set("15", 2);
            this._chanceFireBall.set("30", 1);
            this._chancePrism.set("1", 0);
            this._chancePrism.set("14", 1.7);
            this._chancePrism.set("15", 0.8);
            this._chancePrism.set("28", 0.6);
            this._chanceBomb.set("1", 0);
            this._chanceBomb.set("2", 5);
            this._chanceBomb.set("3", 1);
            this._chanceBomb.set("13", 5);
            this._chanceBomb.set("14", 1);
            this._chanceSkull.set("1", 0);
            this._chanceSkull.set("5", 0.5);
            this._chanceSkull.set("35", 10);
            this._magnetStrength.set("1", 3600);
            this._bonusMatchCount.set("1", 6);
            this._bonusMatchTimeout.set("1",
                6E4);
            this._bombRadius.set("1", 250);
            this._bombRadius.set("35", 70);
            this._skullRadius.set("1", 150);
            this._skullRadius.set("35", 400)
        };
    j["com.nick.spongebob.marble_bash.world.levels.LevelEasy"] = o.levels.LevelEasy;
    o.levels.LevelEasy.__name__ = "com,nick,spongebob,marble_bash,world,levels,LevelEasy".split(",");
    o.levels.LevelEasy.__super__ = o.levels.Level;
    o.levels.LevelEasy.prototype = C(o.levels.Level.prototype, {
        __class__: o.levels.LevelEasy
    });
    o.levels.LevelHard = function() {
        o.levels.Level.call(this);
        i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TOUCH_DEVICE) ?
            (this._timeLimit.set("1", 150), this._lineLimit.set("1", 450), this._finishCount.set("1", 70), this._finishCount.set("20", 95), this._killButBonusCount.set("1", 0), this._killButBonusCount.set("4", 15), this._killButBonusCount.set("20", 25), this._phaseBalls.set("1", [50, 100, 130]), this._phaseBalls.set("10", [60, 110, 140]), this._phaseBalls.set("30", [100, 120, 170]), this._emergeTime.set("1", [170, 410, 215]), this._emergeTime.set("30", [170, 110, 115])) : (this._timeLimit.set("1", 150), this._lineLimit.set("1", 500), this._finishCount.set("1",
                125), this._finishCount.set("20", 175), this._killButBonusCount.set("1", 0), this._killButBonusCount.set("4", 15), this._killButBonusCount.set("20", 25), this._phaseBalls.set("1", [70, 150, 170]), this._phaseBalls.set("10", [90, 160, 180]), this._phaseBalls.set("30", [120, 170, 200]), this._emergeTime.set("1", [150, 400, 200]), this._emergeTime.set("30", [150, 100, 100]));
        this._respawnDelay.set("1", [150, 1700, 500]);
        this._respawnDelay.set("38", [100, 1200, 300]);
        this._respawnDelay.set("39", [150, 1500, 500]);
        this._drawMatchSize.set("1",
            3);
        this._touchMatchSize.set("1", 7);
        this._chanceBonus1.set("1", 0);
        this._chanceBonus1.set("3", 0);
        this._chanceBonus1.set("4", 1);
        this._chanceBonus1.set("25", 3);
        this._chanceBonus1.set("28", 7);
        this._chanceBonus1.set("29", 2);
        this._chanceBonus2.set("1", 0);
        this._chanceBonus2.set("4", 0.5);
        this._chanceBonus2.set("25", 1);
        this._chanceBonus3.set("1", 0);
        this._chanceBonus3.set("4", 0.1);
        this._chanceBonus3.set("18", 5);
        this._chanceBonus3.set("19", 0.1);
        this._chanceBonus3.set("25", 1);
        this._chanceCannonBall.set("1", 0);
        this._chanceCannonBall.set("4", 3);
        this._chanceCannonBall.set("19", 20);
        this._chanceCannonBall.set("20", 5);
        this._chanceCannonBall.set("5", 9);
        this._chanceFireBall.set("1", 0);
        this._chanceFireBall.set("5", 1);
        this._chancePrism.set("1", 0);
        this._chancePrism.set("3", 0.7);
        this._chancePrism.set("14", 2);
        this._chancePrism.set("15", 0.3);
        this._chanceBomb.set("1", 0);
        this._chanceBomb.set("2", 1);
        this._chanceBomb.set("3", 0.25);
        this._chanceBomb.set("13", 2);
        this._chanceBomb.set("14", 0.5);
        this._chanceSkull.set("1", 0);
        this._chanceSkull.set("5", 2);
        this._chanceSkull.set("30", 3.2);
        this._magnetStrength.set("1", 3600);
        this._bonusMatchCount.set("1", 6);
        this._bonusMatchTimeout.set("1", 6E4);
        this._bombRadius.set("1", 200);
        this._bombRadius.set("25", 70);
        this._skullRadius.set("1", 250);
        this._skullRadius.set("25", 400)
    };
    j["com.nick.spongebob.marble_bash.world.levels.LevelHard"] = o.levels.LevelHard;
    o.levels.LevelHard.__name__ = "com,nick,spongebob,marble_bash,world,levels,LevelHard".split(",");
    o.levels.LevelHard.__super__ = o.levels.Level;
    o.levels.LevelHard.prototype = C(o.levels.Level.prototype, {
        __class__: o.levels.LevelHard
    });
    o.levels.LevelNormal = function() {
        o.levels.Level.call(this);
        i.WorkinCloud.instance.getBool(g.ConstantsApp.BOOL_TOUCH_DEVICE) ? (this._timeLimit.set("1", 120), this._lineLimit.set("1", 550), this._finishCount.set("1", 80), this._finishCount.set("20", 100), this._finishCount.set("30", 130), this._killButBonusCount.set("1", 0), this._killButBonusCount.set("4", 8), this._killButBonusCount.set("15", 13), this._phaseBalls.set("1", [45, 100,
            130
        ]), this._phaseBalls.set("10", [50, 110, 150]), this._emergeTime.set("1", [170, 420, 260])) : (this._timeLimit.set("1", 120), this._lineLimit.set("1", 600), this._finishCount.set("1", 100), this._finishCount.set("20", 125), this._finishCount.set("30", 150), this._killButBonusCount.set("1", 0), this._killButBonusCount.set("4", 8), this._killButBonusCount.set("15", 13), this._phaseBalls.set("1", [60, 120, 150]), this._phaseBalls.set("10", [70, 130, 160]), this._emergeTime.set("1", [150, 400, 250]));
        this._respawnDelay.set("1", [160, 1800,
            800
        ]);
        this._respawnDelay.set("38", [130, 1400, 600]);
        this._respawnDelay.set("39", [160, 1700, 800]);
        this._drawMatchSize.set("1", 3);
        this._touchMatchSize.set("1", 7);
        this._chanceBonus1.set("1", 0);
        this._chanceBonus1.set("3", 0);
        this._chanceBonus1.set("4", 2);
        this._chanceBonus1.set("11", 4);
        this._chanceBonus1.set("28", 7);
        this._chanceBonus1.set("29", 3);
        this._chanceBonus1.set("35", 1);
        this._chanceBonus2.set("1", 0);
        this._chanceBonus2.set("4", 3);
        this._chanceBonus2.set("5", 1.5);
        this._chanceBonus3.set("1", 0);
        this._chanceBonus3.set("4",
            0.1);
        this._chanceBonus3.set("18", 5);
        this._chanceBonus3.set("19", 0.1);
        this._chanceCannonBall.set("1", 0);
        this._chanceCannonBall.set("5", 7);
        this._chanceCannonBall.set("19", 15);
        this._chanceCannonBall.set("20", 5);
        this._chanceCannonBall.set("35", 25);
        this._chanceFireBall.set("1", 0);
        this._chanceFireBall.set("5", 2);
        this._chanceFireBall.set("35", 1);
        this._chancePrism.set("1", 0);
        this._chancePrism.set("3", 0.8);
        this._chancePrism.set("14", 1);
        this._chancePrism.set("15", 0.5);
        this._chanceBomb.set("1", 0);
        this._chanceBomb.set("2",
            2.5);
        this._chanceBomb.set("3", 1);
        this._chanceBomb.set("13", 5);
        this._chanceBomb.set("14", 0.7);
        this._chanceSkull.set("1", 0);
        this._chanceSkull.set("4", 0);
        this._chanceSkull.set("5", 2.3);
        this._magnetStrength.set("1", 3600);
        this._bonusMatchCount.set("1", 6);
        this._bonusMatchTimeout.set("1", 6E4);
        this._bombRadius.set("1", 250);
        this._bombRadius.set("25", 70);
        this._skullRadius.set("1", 200);
        this._skullRadius.set("25", 400)
    };
    j["com.nick.spongebob.marble_bash.world.levels.LevelNormal"] = o.levels.LevelNormal;
    o.levels.LevelNormal.__name__ =
        "com,nick,spongebob,marble_bash,world,levels,LevelNormal".split(",");
    o.levels.LevelNormal.__super__ = o.levels.Level;
    o.levels.LevelNormal.prototype = C(o.levels.Level.prototype, {
        __class__: o.levels.LevelNormal
    });
    W = void 0;
    ma = void 0;
    E = void 0;
    m = void 0;
    h = void 0;
    fa = void 0;
    z = void 0;
    ha = void 0;
    Q = void 0;
    X = void 0;
    da = void 0;
    ga = void 0;
    ca = void 0;
    U = void 0;
    U = void 0;
    Aa = void 0;
    U = void 0;
    U = void 0;
    z = {
        Disposable: function() {}
    };
    j["flambe.util.Disposable"] = z.Disposable;
    z.Disposable.__name__ = ["flambe", "util", "Disposable"];
    z.Disposable.prototype = {
        __class__: z.Disposable
    };
    ha = function() {};
    j["flambe.Component"] = ha;
    ha.__name__ = ["flambe", "Component"];
    ha.__interfaces__ = [z.Disposable];
    ha.prototype = {
        _internal_init: function(a, b) {
            this.owner = a;
            this.next = b
        },
        get_name: function() {
            return null
        },
        dispose: function() {
            null != this.owner && this.owner.remove(this)
        },
        onUpdate: function() {},
        onRemoved: function() {},
        onAdded: function() {},
        __class__: ha,
        __properties__: {
            get_name: "get_name"
        }
    };
    za = {
        ComponentUpdater: function() {
            this._paused = !1
        }
    };
    j["com.workinman.components.ComponentUpdater"] =
        za.ComponentUpdater;
    za.ComponentUpdater.__name__ = ["com", "workinman", "components", "ComponentUpdater"];
    za.ComponentUpdater.__super__ = ha;
    za.ComponentUpdater.prototype = C(ha.prototype, {
        setPaused: function(a) {
            return this._paused = a
        },
        getPaused: function() {
            return this._paused
        },
        onUpdate: function(a) {
            this._paused || i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventUpdate(a))
        },
        get_name: function() {
            return "ComponentUpdater_3"
        },
        __class__: za.ComponentUpdater
    });
    $ = {
        ConstantsCloud: function() {}
    };
    j["com.workinman.data.ConstantsCloud"] =
        $.ConstantsCloud;
    $.ConstantsCloud.__name__ = ["com", "workinman", "data", "ConstantsCloud"];
    $.ConstantsCloud.getUniqueId = function() {
        return I.string($.ConstantsCloud._uniqueId++)
    };
    $.ConstantsCloud.getIsAndroid = function() {
        return 0 <= R.window.navigator.userAgent.indexOf("Linux; U; Android 4")
    };
    t.QueuedAnimation = function() {};
    j["com.workinman.display.QueuedAnimation"] = t.QueuedAnimation;
    t.QueuedAnimation.__name__ = ["com", "workinman", "display", "QueuedAnimation"];
    t.QueuedAnimation.prototype = {
        _getForce: function() {
            return this._force
        },
        _getLoops: function() {
            return this._loops
        },
        _getName: function() {
            return this._name
        },
        __class__: t.QueuedAnimation,
        __properties__: {
            get_name: "_getName",
            get_loops: "_getLoops",
            get_force: "_getForce"
        }
    };
    t.AnimationDef = function(a, b, c) {
        this._id = a;
        this._startFrame = b;
        this._endFrame = c;
        this._playReverse = !1;
        b > c && (this._playReverse = !0, this._startFrame = c, this._endFrame = b)
    };
    j["com.workinman.display.AnimationDef"] = t.AnimationDef;
    t.AnimationDef.__name__ = ["com", "workinman", "display", "AnimationDef"];
    t.AnimationDef.prototype = {
        _getId: function() {
            return this._id
        },
        _getReverse: function() {
            return this._playReverse
        },
        _getEnd: function() {
            return this._endFrame
        },
        _getStart: function() {
            return this._startFrame
        },
        __class__: t.AnimationDef,
        __properties__: {
            get_start: "_getStart",
            get_end: "_getEnd",
            get_reverse: "_getReverse"
        }
    };
    t.ElementManager = function(a, b, c) {
        this._timeline = a;
        this._layers = new T;
        this._elements = [];
        this._camera = new k.WorkinCamera(b, c);
        this._zSortLayers = new T
    };
    j["com.workinman.display.ElementManager"] = t.ElementManager;
    t.ElementManager.__name__ = ["com", "workinman", "display", "ElementManager"];
    t.ElementManager.prototype = {
        renderElements: function() {
            for (var a = 0, b = this._elements; a < b.length;) {
                var c = b[a];
                ++a;
                c.renderPosition(this._camera)
            }
        },
        updateElements: function(a) {
            for (this._i = this._elements.length; 0 < this._i;) this._i--, this._elements[this._i].update(a), this._elements[this._i]._getDoDelete() && this.removeElementAtIndex(this._i)
        },
        changeElementLayer: function(a, b) {
            this._layers.get(a._getLayer()).removeChild(a._getEntity());
            a._setLayer(b);
            this._layers.get(a._getLayer()).addChild(a._getEntity())
        },
        removeElement: function(a) {
            for (this._i = 0; this._i < this._elements.length;) {
                if (this._elements[this._i]._getUniqueId() == a._getUniqueId()) {
                    this.removeElementAtIndex(this._i);
                    break
                }
                this._i++
            }
        },
        removeElementAtIndex: function(a) {
            this._elements[a]._getEntity().parent.removeChild(this._elements[a]._getEntity());
            this._elements[a]._setDoDelete(!0);
            this._elements[a].dispose();
            this._elements.splice(a, 1)
        },
        addElement: function(a) {
            if (!1 == this._layers.exists(a._getLayer())) return i.WorkinCloud.instance.log("[ElementManager](addElement) Trying to add element to non-existant layer '" +
                a._getLayer() + "'!"), a;
            for (this._i = 0; this._i < this._elements.length;) {
                if (this._elements[this._i]._getUniqueId() == a._getUniqueId()) return this._layers.get(a._getLayer()).addChild(a._getEntity()), a;
                this._i++
            }
            this._elements.push(a);
            this._layers.get(a._getLayer()).addChild(a._getEntity());
            this._zSortLayers.exists(a._getLayer()) && this._zSortLayers.get(a._getLayer()).push(a);
            return a
        },
        addLayer: function(a, b) {
            null == b && (b = !1);
            if (this._layers.exists(a)) this._timeline.removeChild(this._layers.get(a)), this._timeline.addChild(this._layers.get(a));
            else {
                var c = new ma;
                this._timeline.addChild(c);
                this._layers.set(a, c);
                b && this._zSortLayers.set(a, [])
            }
        },
        _getElements: function() {
            return this._elements
        },
        _getCamera: function() {
            return this._camera
        },
        dispose: function() {
            for (; 0 < this._elements.length;) this.removeElementAtIndex(this._elements.length - 1);
            this._elements = null;
            this._camera.dispose();
            this._camera = null;
            for (var a = this._layers.iterator(); a.hasNext();) a.next().dispose();
            this._timeline = this._layers = null
        },
        __class__: t.ElementManager
    };
    t.PoolData = function() {};
    j["com.workinman.display.PoolData"] = t.PoolData;
    t.PoolData.__name__ = ["com", "workinman", "display", "PoolData"];
    t.PoolData.prototype = {
        _getIsPoolFull: function() {
            return this._flagPoolFull
        },
        __class__: t.PoolData
    };
    t.Renderable = function(a, b) {
        null == b && (b = 1);
        null == a && (a = 1);
        this.rotation = this.y = this.x = 0;
        this.scaleY = this.scaleX = 1;
        this.width = a;
        this.height = b;
        this.alpha = 1;
        this.visible = !0
    };
    j["com.workinman.display.Renderable"] = t.Renderable;
    t.Renderable.__name__ = ["com", "workinman", "display", "Renderable"];
    t.Renderable.prototype = {
        __class__: t.Renderable
    };
    t.TextBase = function(a, b, c, d, f) {
        null == d && (d = "");
        null == f && (f = {});
        f.x = a;
        f.y = b;
        t.Element.call(this, f);
        "" == d && (d = $.ConstantsCloud.FONT_DEFAULT);
        this._textString = c;
        this._fontName = d;
        this._spacing = f.spacing ? f.spacing : 0;
        this._width = f.width ? f.width : Math.POSITIVE_INFINITY;
        this._flagCenter = f.center ? f.center : !1;
        this._textDisplay = [];
        this._textDisplay.push(new E.TextSprite(i.WorkinCloud.instance._getAssets().getFont(this._fontName), ""));
        this.swapTexture(this._textDisplay[0]);
        this._textDisplay[0].set_pointerEnabled(!1);
        this._textDisplayEntity = [];
        this.renderPositionWithoutCamera()
    };
    j["com.workinman.display.TextBase"] = t.TextBase;
    t.TextBase.__name__ = ["com", "workinman", "display", "TextBase"];
    t.TextBase.__super__ = t.Element;
    t.TextBase.prototype = C(t.Element.prototype, {
        _cleanUp: function() {
            for (; 1 < this._textDisplay.length;) this._textDisplay.pop(), this._textureEntity.removeChild(this._textDisplayEntity.pop());
            this._render.height = 0
        },
        dispose: function() {
            this._cleanUp();
            this._textDisplay = null;
            t.Element.prototype.dispose.call(this)
        },
        _renderTextToDisplay: function() {
            this._textDisplay[0].set_text(this._textString);
            this.setOrigin(this._renderOrigin)
        },
        _renderFontToDisplay: function() {
            for (var a = 0, b = this._textDisplay; a < b.length;) {
                var c = b[a];
                ++a;
                c.set_font(i.WorkinCloud.instance._getAssets().getFont(this._fontName))
            }
        },
        _setText: function(a) {
            this._textString = a;
            this._renderTextToDisplay();
            return this._textString
        },
        _getText: function() {
            return this._textString
        },
        _setFont: function(a) {
            if ("" == a) return "";
            this._fontName = a;
            this._renderFontToDisplay();
            return this._fontName
        },
        _getFont: function() {
            return this._fontName
        },
        _updateTextDisplay: function(a, b) {
            null == b && (b = 1);
            this._cleanUp();
            if ("" == a) this._textDisplay[0].set_text(a);
            else {
                for (var a = qa.replace(a, "<br>", "\\r\\n"), c = [], d = this._textDisplay[0]._font.getGlyphs(a), f = 0, n = 0, e = 0; n < d.length;) {
                    var s = d[n];
                    n++;
                    if (n == d.length) f += s.width * b;
                    else if (f += s.xAdvance * b + s.getKerning(d[n].charCode) * b, n < d.length - 1 && (92 == d[n - 1].charCode || 47 == d[n - 1].charCode) && 114 == d[n].charCode && (92 == d[n + 1].charCode || 47 == d[n + 1].charCode) &&
                        110 == d[n + 2].charCode) f = n - 1, c.push(a.substring(e, f)), e = f + 4, f = 0;
                    n == d.length ? c.push(a.substring(e, n)) : f >= this._width / this._render.scaleX && (s = !0, f = a.lastIndexOf(" ", n), -1 == f ? (s = !1, f = n - 1) : f <= e ? f = d.length : f++, c.push(a.substring(e, f) + (s ? "" : "-")), e = f, f = 0)
                }
                this._textDisplay[0].set_text(c.shift());
                this._texture.x.set__(-(this._renderOrigin.x * this._textDisplay[0].getNaturalWidth()));
                this._texture.y.set__(-(this._renderOrigin.y * this._textDisplay[0].getNaturalHeight()));
                for (d = 0; d < c.length;) n = c[d], ++d, this._textDisplay.push(new E.TextSprite(i.WorkinCloud.instance._getAssets().getFont(this._fontName),
                    n)), this.addTextDisplay(this._textDisplay[this._textDisplay.length - 1])
            }
        },
        addTextDisplay: function(a) {
            this._flagCenter && a.x.set__(this._renderOrigin.x * (this._texture.getNaturalWidth() - a.getNaturalWidth()));
            a.y.set__(this._render.height + this._textDisplay[0]._font.size + this._spacing);
            this._render.height += this._textDisplay[0]._font.size + this._spacing;
            this._render.width = Math.max(this._render.width, a.getNaturalWidth());
            a = (new ma).add(a);
            this._textDisplayEntity.push(a);
            this._textureEntity.addChild(a)
        },
        _getTextDisplay: function() {
            return this._textDisplay
        },
        __class__: t.TextBase,
        __properties__: C(t.Element.prototype.__properties__, {
            set_font: "_setFont",
            get_font: "_getFont",
            set_text: "_setText",
            get_text: "_getText"
        })
    });
    t.TextInput = function() {};
    j["com.workinman.display.TextInput"] = t.TextInput;
    t.TextInput.__name__ = ["com", "workinman", "display", "TextInput"];
    t.TextInput.__super__ = t.TextBase;
    t.TextInput.prototype = C(t.TextBase.prototype, {
        dispose: function() {
            i.WorkinCloud.instance._getDispatcher().removeEventListener($.ConstantsCloud.EVENT_INPUT_ARBITRARY_KEY, w(this,
                this._onEventInputArbitraryKey));
            t.TextBase.prototype.dispose.call(this)
        },
        setOrigin: function(a) {
            this._renderOrigin.toPoint(a);
            this._texture.x.set__(-(this._renderOrigin.x * this._render.width));
            this._texture.y.set__(-(this._renderOrigin.y * this._render.height))
        },
        addCharacter: function(a) {
            this._textString += a;
            this._updateTextDisplay(this._textString)
        },
        backspace: function() {
            this._textString = S.substr(this._textString, 0, this._textString.length - 1);
            this._updateTextDisplay(this._textString)
        },
        space: function() {
            this.addCharacter(" ")
        },
        _onEventInputArbitraryKey: function(a) {
            "backspace" == a._getData().key.toString().toLowerCase() ? this.backspace() : "space" == a._getData().key.toString().toLowerCase() ? this.space() : 0 == a._getData().key.toString().toLowerCase().indexOf("number") ? this.addCharacter(a._getData().key.toString().charAt(6)) : "enter" == a._getData().key.toString().toLowerCase() ? i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData(g.ConstantsApp.EVENT_INPUT_FIELD_ENTER, {
                    string: this._textString
                })) : 1 == a._getData().key.toString().length &&
                this.addCharacter(a._getData().key.toString())
        },
        __class__: t.TextInput
    });
    t.TextLocalized = function(a, b, c, d, f) {
        null == d && (d = "");
        t.TextBase.call(this, a, b, c, d, f);
        this._renderTextToDisplay()
    };
    j["com.workinman.display.TextLocalized"] = t.TextLocalized;
    t.TextLocalized.__name__ = ["com", "workinman", "display", "TextLocalized"];
    t.TextLocalized.__super__ = t.TextBase;
    t.TextLocalized.prototype = C(t.TextBase.prototype, {
        setOrigin: function(a) {
            this._renderOrigin.toPoint(a);
            this._texture.x.set__(-(this._renderOrigin.x * this._render.width));
            this._texture.y.set__(-(this._renderOrigin.y * this._render.height))
        },
        _renderTextToDisplay: function() {
            var a = i.WorkinCloud.instance._getLocalize().getData(this._textString);
            this._renderOffset.x = a._getOffsetX();
            this._renderOffset.y = a._getOffsetY();
            this._render.scaleX = a._getScale();
            this._render.scaleY = a._getScale();
            a._getFontName() != this._fontName && this._setFont(a._getFontName());
            this._updateTextDisplay(i.WorkinCloud.instance._getLocalize().getData(this._textString)._getString());
            1 == this._textDisplay.length &&
                (this._render.width = this._textDisplay[0].getNaturalWidth(), this._render.height = this._textDisplay[0].getNaturalHeight());
            this._flagCenter || this.setOrigin(this._renderOrigin);
            this.renderPositionWithoutCamera()
        },
        __class__: t.TextLocalized
    });
    y.WMEvent = function(a) {
        this._eventId = a
    };
    j["com.workinman.events.WMEvent"] = y.WMEvent;
    y.WMEvent.__name__ = ["com", "workinman", "events", "WMEvent"];
    y.WMEvent.prototype = {
        getEventId: function() {
            return this._eventId
        },
        __class__: y.WMEvent,
        __properties__: {
            get_eventId: "getEventId"
        }
    };
    y.WMEventData = function(a, b) {
        y.WMEvent.call(this, a);
        this._data = b
    };
    j["com.workinman.events.WMEventData"] = y.WMEventData;
    y.WMEventData.__name__ = ["com", "workinman", "events", "WMEventData"];
    y.WMEventData.__super__ = y.WMEvent;
    y.WMEventData.prototype = C(y.WMEvent.prototype, {
        _getData: function() {
            return this._data
        },
        __class__: y.WMEventData,
        __properties__: C(y.WMEvent.prototype.__properties__, {
            get_data: "_getData"
        })
    });
    y._WMEventDispatcher = {};
    y._WMEventDispatcher.WMEventTracker = function() {
        this._signalConnection = [];
        this._signal = new z.Signal1
    };
    j["com.workinman.events._WMEventDispatcher.WMEventTracker"] = y._WMEventDispatcher.WMEventTracker;
    y._WMEventDispatcher.WMEventTracker.__name__ = ["com", "workinman", "events", "_WMEventDispatcher", "WMEventTracker"];
    y._WMEventDispatcher.WMEventTracker.prototype = {
        dispose: function() {
            this._signal = null;
            for (var a = 0, b = this._signalConnection; a < b.length;) {
                var c = b[a];
                ++a;
                c.dispose()
            }
            this._signalConnection = null
        },
        isEmtpy: function() {
            return null == this._signal._head
        },
        dispatchEvent: function(a) {
            this._signal.emit1(a)
        },
        removeEventListener: function(a) {
            for (var b = this._signalConnection.length; 0 < b;) b--, ia.compareMethods(this._signalConnection[b]._getListener(), a) && (this._signalConnection[b].dispose(), this._signalConnection.splice(b, 1))
        },
        addEventListener: function(a) {
            this._signalConnection.push(new y._WMEventDispatcher.SignalTracker(a, this._signal.connect(a)))
        },
        __class__: y._WMEventDispatcher.WMEventTracker
    };
    y._WMEventDispatcher.SignalTracker = function(a, b) {
        this._function = a;
        this._connection = b
    };
    j["com.workinman.events._WMEventDispatcher.SignalTracker"] =
        y._WMEventDispatcher.SignalTracker;
    y._WMEventDispatcher.SignalTracker.__name__ = ["com", "workinman", "events", "_WMEventDispatcher", "SignalTracker"];
    y._WMEventDispatcher.SignalTracker.prototype = {
        _getListener: function() {
            return this._function
        },
        dispose: function() {
            this._function = null;
            this._connection.dispose();
            this._connection = null
        },
        __class__: y._WMEventDispatcher.SignalTracker,
        __properties__: {
            get_listener: "_getListener"
        }
    };
    y.WMEventFlow = function(a, b) {
        null == b && (b = !1);
        this.flowId = a;
        this.targetScreen = b;
        y.WMEvent.call(this,
            y.WMEventFlow.EVENT_FLOW)
    };
    j["com.workinman.events.WMEventFlow"] = y.WMEventFlow;
    y.WMEventFlow.__name__ = ["com", "workinman", "events", "WMEventFlow"];
    y.WMEventFlow.__super__ = y.WMEvent;
    y.WMEventFlow.prototype = C(y.WMEvent.prototype, {
        __class__: y.WMEventFlow
    });
    y.WMEventInput = function(a, b, c, d, f) {
        null == f && (f = 0);
        y.WMEvent.call(this, y.WMEventInput.EVENT_INPUT);
        this.phase = a;
        this.input = b;
        this.x = c;
        this.y = d;
        this.rot = f
    };
    j["com.workinman.events.WMEventInput"] = y.WMEventInput;
    y.WMEventInput.__name__ = ["com", "workinman",
        "events", "WMEventInput"
    ];
    y.WMEventInput.__super__ = y.WMEvent;
    y.WMEventInput.prototype = C(y.WMEvent.prototype, {
        __class__: y.WMEventInput
    });
    y.WMEventInterfaceChange = function(a, b, c) {
        null == b && (b = "");
        this.flowId = a;
        this.screenId = b;
        null == c && (c = new T);
        this.customData = c;
        y.WMEvent.call(this, y.WMEventInterfaceChange.EVENT_INTERFACE_OUTPUT)
    };
    j["com.workinman.events.WMEventInterfaceChange"] = y.WMEventInterfaceChange;
    y.WMEventInterfaceChange.__name__ = ["com", "workinman", "events", "WMEventInterfaceChange"];
    y.WMEventInterfaceChange.__super__ =
        y.WMEvent;
    y.WMEventInterfaceChange.prototype = C(y.WMEvent.prototype, {
        __class__: y.WMEventInterfaceChange
    });
    y.WMEventScreenOut = function(a, b) {
        this.flowId = a;
        this.screenId = b;
        y.WMEvent.call(this, y.WMEventScreenOut.EVENT_SCREEN_OUTPUT)
    };
    j["com.workinman.events.WMEventScreenOut"] = y.WMEventScreenOut;
    y.WMEventScreenOut.__name__ = ["com", "workinman", "events", "WMEventScreenOut"];
    y.WMEventScreenOut.__super__ = y.WMEvent;
    y.WMEventScreenOut.prototype = C(y.WMEvent.prototype, {
        __class__: y.WMEventScreenOut
    });
    y.WMEventUpdate =
        function(a) {
            y.WMEvent.call(this, y.WMEventUpdate.EVENT_UPDATE);
            this._dt = a
        };
    j["com.workinman.events.WMEventUpdate"] = y.WMEventUpdate;
    y.WMEventUpdate.__name__ = ["com", "workinman", "events", "WMEventUpdate"];
    y.WMEventUpdate.__super__ = y.WMEvent;
    y.WMEventUpdate.prototype = C(y.WMEvent.prototype, {
        getDt: function() {
            return this._dt
        },
        __class__: y.WMEventUpdate,
        __properties__: C(y.WMEvent.prototype.__properties__, {
            get_dt: "getDt"
        })
    });
    k = {};
    k.WorkinCamera = function(a, b) {
        this._screenCenterX = a;
        this._screenCenterY = b;
        this._pos =
            new k.WorkinPoint(a, b)
    };
    j["com.workinman.math.WorkinCamera"] = k.WorkinCamera;
    k.WorkinCamera.__name__ = ["com", "workinman", "math", "WorkinCamera"];
    k.WorkinCamera.prototype = {
        _getScreenCenterY: function() {
            return this._screenCenterY
        },
        _getScreenCenterX: function() {
            return this._screenCenterX
        },
        _getPos: function() {
            return this._pos
        },
        dispose: function() {
            this._pos = null
        },
        __class__: k.WorkinCamera,
        __properties__: {
            get_pos: "_getPos",
            get_screenCenterX: "_getScreenCenterX",
            get_screenCenterY: "_getScreenCenterY"
        }
    };
    k.WorkinLine =
        function(a, b) {
            this._p0 = a.copy();
            this._p1 = b.copy();
            this._calcProperties()
        };
    j["com.workinman.math.WorkinLine"] = k.WorkinLine;
    k.WorkinLine.__name__ = ["com", "workinman", "math", "WorkinLine"];
    k.WorkinLine.prototype = {
        _calcProperties: function() {
            this._length = Math.round(1E3 * Math.sqrt((this._p0.x - this._p1.x) * (this._p0.x - this._p1.x) + (this._p0.y - this._p1.y) * (this._p0.y - this._p1.y))) / 1E3;
            this._vector = new k.WorkinPoint(this._getP1().x - this._getP0().x, this._getP1().y - this._getP0().y);
            this._slope = this._vector.y / this._vector.x;
            0 == this._getVector().x && (this._slope = 1E5);
            this._yIntercept = this._getP0().y - this._slope * this._getP0().x;
            this._parametricDenom = new k.WorkinPoint(this._getP1().x - this._getP0().x, this._getP1().y - this._getP0().y);
            this._normal = this._vector.pseudoCross();
            this._normal.normalize()
        },
        endToPoint: function(a) {
            this._p1.toPoint(a);
            this._calcProperties()
        },
        originToPoint: function(a) {
            this._p0.toPoint(a);
            this._calcProperties()
        },
        to: function(a, b) {
            this._p0.toPoint(a);
            this._p1.toPoint(b);
            this._calcProperties()
        },
        copy: function() {
            return new k.WorkinLine(this._p0,
                this._p1)
        },
        _setLength: function(a) {
            if (0 == this._getLength()) return this._length;
            this._p1 = new k.WorkinPoint(this._p0.x + this._vector.x * (a / this._getLength()), this._p0.y + this._vector.y * (a / this._getLength()));
            this._calcProperties();
            return this._length
        },
        _getLength: function() {
            return this._length
        },
        _getParametricDenom: function() {
            return this._parametricDenom
        },
        _getCenterY: function() {
            return this._p0.y + this._vector.y / 2
        },
        _getCenterX: function() {
            return this._p0.x + this._vector.x / 2
        },
        _getCenter: function() {
            return new k.WorkinPoint(this._p0.x +
                this._vector.x / 2, this._p0.y + this._vector.y / 2)
        },
        _getVector: function() {
            return this._vector
        },
        _getNormal: function() {
            return this._normal
        },
        _getYIntercept: function() {
            return this._yIntercept
        },
        _getSlope: function() {
            return this._slope
        },
        _getP1: function() {
            return this._p1
        },
        _getP0: function() {
            return this._p0
        },
        dispose: function() {
            this._parametricDenom = this._vector = this._normal = this._p1 = this._p0 = null
        },
        __class__: k.WorkinLine,
        __properties__: {
            get_p0: "_getP0",
            get_p1: "_getP1",
            get_vector: "_getVector",
            set_length: "_setLength",
            get_length: "_getLength"
        }
    };
    k.WorkinPoint = function(a, b, c) {
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.x = Math.round(1E3 * a) / 1E3;
        this.y = Math.round(1E3 * b) / 1E3;
        this.z = Math.round(1E3 * c) / 1E3;
        this.calculateLength()
    };
    j["com.workinman.math.WorkinPoint"] = k.WorkinPoint;
    k.WorkinPoint.__name__ = ["com", "workinman", "math", "WorkinPoint"];
    k.WorkinPoint.prototype = {
        _getNormalizedMagnitude: function() {
            var a = this.normalizeCopy();
            return Math.sqrt(a.x * a.x + a.y * a.y)
        },
        calculateLength: function() {
            this._length = Math.sqrt(this.x *
                this.x + this.y * this.y + this.z * this.z)
        },
        pseudoCross: function() {
            return new k.WorkinPoint(this.y, -this.x, this.z)
        },
        normalizeCopy: function() {
            return 0 == this._length ? new k.WorkinPoint(0, 0, 0) : new k.WorkinPoint(this.x / this._length, this.y / this._length, this.z / this._length)
        },
        normalize: function() {
            0 != this._length && (this.x /= this._length, this.y /= this._length, this.z /= this._length, this.calculateLength())
        },
        _setLength: function(a) {
            if (0 == this._length || 0 >= a) return this.to(0, 0), this._length;
            this.multiply(a / this._length);
            return this._length
        },
        _getLength: function() {
            return this._length
        },
        distTo2D: function(a) {
            return Math.abs(Math.sqrt((this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y)))
        },
        copy: function() {
            return new k.WorkinPoint(this.x, this.y, this.z)
        },
        multiply: function(a) {
            this.x *= a;
            this.y *= a;
            this.z *= a;
            this.clean();
            this.calculateLength()
        },
        subtractPoint: function(a) {
            this.x -= a.x;
            this.y -= a.y;
            this.z -= a.z;
            this.calculateLength()
        },
        toPoint: function(a) {
            this.x = a.x;
            this.y = a.y;
            this.z = a.z;
            this.calculateLength()
        },
        to: function(a, b, c) {
            null == c && (c = 0);
            this.x =
                a;
            this.y = b;
            this.z = c;
            this.calculateLength()
        },
        clean: function() {
            this.x = Math.round(1E3 * this.x) / 1E3;
            this.y = Math.round(1E3 * this.y) / 1E3;
            this.z = Math.round(1E3 * this.z) / 1E3
        },
        _getAngle: function() {
            return 180 * Math.atan2(this.y, this.x) / Math.PI
        },
        __class__: k.WorkinPoint
    };
    k.tween = {};
    k.tween.PennerEasing = function() {};
    j["com.workinman.math.tween.PennerEasing"] = k.tween.PennerEasing;
    k.tween.PennerEasing.__name__ = ["com", "workinman", "math", "tween", "PennerEasing"];
    k.tween.PennerEasing.easeInQuad = function(a, b, c, d) {
        return c *
            (a /= d) * a + b
    };
    k.tween.PennerEasing.easeOutQuad = function(a, b, c, d) {
        return -c * (a /= d) * (a - 2) + b
    };
    k.tween.PennerEasing.easeInOutQuad = function(a, b, c, d) {
        return 1 > (a /= d / 2) ? c / 2 * a * a + b : -c / 2 * (--a * (a - 2) - 1) + b
    };
    k.tween.PennerEasing.easeInExpo = function(a, b, c, d) {
        return 0 == a ? b : c * Math.pow(2, 10 * (a / d - 1)) + b
    };
    k.tween.PennerEasing.easeOutExpo = function(a, b, c, d) {
        return a == d ? b + c : c * (-Math.pow(2, -10 * a / d) + 1) + b
    };
    k.tween.PennerEasing.easeInOutExpo = function(a, b, c, d) {
        return 0 == a ? b : a == d ? b + c : 1 > (a /= d / 2) ? c / 2 * Math.pow(2, 10 * (a - 1)) + b : c / 2 * (-Math.pow(2, -10 * --a) + 2) + b
    };
    k.tween.PennerEasing.easeInElastic = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInElasticL(a, b, c, d)
    };
    k.tween.PennerEasing.easeInElasticL = function(a, b, c, d, f, n) {
        null == n && (n = -0.123456);
        null == f && (f = -0.123456);
        if (0 == a) return b;
        if (1 == (a /= d)) return b + c; - 0.123456 == n && (n = 0.3 * d); - 0.123456 == f || f < Math.abs(c) ? (f = c, c = n / 4) : c = n / (2 * Math.PI) * Math.asin(c / f);
        return -(f * Math.pow(2, 10 * (a -= 1)) * Math.sin((a * d - c) * 2 * Math.PI / n)) + b
    };
    k.tween.PennerEasing.easeOutElastic = function(a, b, c, d) {
        return k.tween.PennerEasing.easeOutElasticL(a,
            b, c, d)
    };
    k.tween.PennerEasing.easeOutElasticL = function(a, b, c, d, f, n) {
        null == n && (n = -0.123456);
        null == f && (f = -0.123456);
        var e;
        if (0 == a) return b;
        if (1 == (a /= d)) return b + c; - 0.123456 == n && (n = 0.3 * d); - 0.123456 == f || f < Math.abs(c) ? (f = c, e = n / 4) : e = n / (2 * Math.PI) * Math.asin(c / f);
        return f * Math.pow(2, -10 * a) * Math.sin((a * d - e) * 2 * Math.PI / n) + c + b
    };
    k.tween.PennerEasing.easeInOutElastic = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInOutElasticL(a, b, c, d)
    };
    k.tween.PennerEasing.easeInOutElasticL = function(a, b, c, d, f, n) {
        null == n && (n = -0.123456);
        null == f && (f = -0.123456);
        var e;
        if (0 == a) return b;
        if (2 == (a /= d / 2)) return b + c; - 0.123456 == n && (n = d * 0.3 * 1.5); - 0.123456 == f || f < Math.abs(c) ? (f = c, e = n / 4) : e = n / (2 * Math.PI) * Math.asin(c / f);
        return 1 > a ? -0.5 * f * Math.pow(2, 10 * (a -= 1)) * Math.sin((a * d - e) * 2 * Math.PI / n) + b : 0.5 * f * Math.pow(2, -10 * (a -= 1)) * Math.sin((a * d - e) * 2 * Math.PI / n) + c + b
    };
    k.tween.PennerEasing.easeInBack = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInBackL(a, b, c, d)
    };
    k.tween.PennerEasing.easeInBackL = function(a, b, c, d, f) {
        null == f && (f = -0.123456); - 0.123456 ==
            f && (f = 1.70158);
        return c * (a /= d) * a * ((f + 1) * a - f) + b
    };
    k.tween.PennerEasing.easeInOutBack = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInOutBackL(a, b, c, d)
    };
    k.tween.PennerEasing.easeInOutBackL = function(a, b, c, d, f) {
        null == f && (f = -0.123456); - 0.123456 == f && (f = 1.70158);
        return 1 > (a /= d / 2) ? c / 2 * a * a * (((f *= 1.525) + 1) * a - f) + b : c / 2 * ((a -= 2) * a * (((f *= 1.525) + 1) * a + f) + 2) + b
    };
    k.tween.PennerEasing.easeOutBounce = function(a, b, c, d) {
        return (a /= d) < 1 / 2.75 ? c * 7.5625 * a * a + b : a < 2 / 2.75 ? c * (7.5625 * (a -= 1.5 / 2.75) * a + 0.75) + b : a < 2.5 / 2.75 ? c * (7.5625 *
            (a -= 2.25 / 2.75) * a + 0.9375) + b : c * (7.5625 * (a -= 2.625 / 2.75) * a + 0.984375) + b
    };
    k.tween.PennerEasing.easeInBounce = function(a, b, c, d) {
        return c - k.tween.PennerEasing.easeOutBounce(d - a, 0, c, d) + b
    };
    k.tween.PennerEasing.easeInOutBounce = function(a, b, c, d) {
        return a < d / 2 ? 0.5 * k.tween.PennerEasing.easeInBounce(2 * a, 0, c, d) + b : 0.5 * k.tween.PennerEasing.easeOutBounce(2 * a - d, 0, c, d) + 0.5 * c + b
    };
    k.tween.PennerEasing.easeInCubic = function(a, b, c, d) {
        return c * (a /= d) * a * a + b
    };
    k.tween.PennerEasing.easeOutCubic = function(a, b, c, d) {
        return c * ((a = a / d -
            1) * a * a + 1) + b
    };
    k.tween.PennerEasing.easeInOutCubic = function(a, b, c, d) {
        return 1 > (a /= d / 2) ? c / 2 * a * a * a + b : c / 2 * ((a -= 2) * a * a + 2) + b
    };
    k.tween.PennerEasing.easeInQuart = function(a, b, c, d) {
        return c * (a /= d) * a * a * a + b
    };
    k.tween.PennerEasing.easeOutQuart = function(a, b, c, d) {
        return -c * ((a = a / d - 1) * a * a * a - 1) + b
    };
    k.tween.PennerEasing.easeInOutQuart = function(a, b, c, d) {
        return 1 > (a /= d / 2) ? c / 2 * a * a * a * a + b : -c / 2 * ((a -= 2) * a * a * a - 2) + b
    };
    k.tween.PennerEasing.easeInQuint = function(a, b, c, d) {
        return c * (a /= d) * a * a * a * a + b
    };
    k.tween.PennerEasing.easeOutQuint =
        function(a, b, c, d) {
            return c * ((a = a / d - 1) * a * a * a * a + 1) + b
        };
    k.tween.PennerEasing.easeInOutQuint = function(a, b, c, d) {
        return 1 > (a /= d / 2) ? c / 2 * a * a * a * a * a + b : c / 2 * ((a -= 2) * a * a * a * a + 2) + b
    };
    k.tween.PennerEasing.easeInSine = function(a, b, c, d) {
        return -c * Math.cos(a / d * (Math.PI / 2)) + c + b
    };
    k.tween.PennerEasing.easeOutSine = function(a, b, c, d) {
        return c * Math.sin(a / d * (Math.PI / 2)) + b
    };
    k.tween.PennerEasing.easeInOutSine = function(a, b, c, d) {
        return -c / 2 * (Math.cos(Math.PI * a / d) - 1) + b
    };
    k.tween.PennerEasing.easeInCirc = function(a, b, c, d) {
        return -c * (Math.sqrt(1 -
            (a /= d) * a) - 1) + b
    };
    k.tween.PennerEasing.easeOutCirc = function(a, b, c, d) {
        return c * Math.sqrt(1 - (a = a / d - 1) * a) + b
    };
    k.tween.PennerEasing.easeInOutCirc = function(a, b, c, d) {
        return 1 > (a /= d / 2) ? -c / 2 * (Math.sqrt(1 - a * a) - 1) + b : c / 2 * (Math.sqrt(1 - (a -= 2) * a) + 1) + b
    };
    k.tween.PennerManager = function() {};
    j["com.workinman.math.tween.PennerManager"] = k.tween.PennerManager;
    k.tween.PennerManager.__name__ = ["com", "workinman", "math", "tween", "PennerManager"];
    k.tween.PennerManager.getEaseFunction = function(a) {
        switch (a) {
            case k.tween.PennerManager.EASE_IN:
            case k.tween.PennerManager.EASE_QUAD_IN:
                return k.tween.PennerManager._tweenEaseIn;
            case k.tween.PennerManager.EASE_OUT:
            case k.tween.PennerManager.EASE_QUAD_OUT:
                return k.tween.PennerManager._tweenEaseOut;
            case k.tween.PennerManager.EASE:
            case k.tween.PennerManager.EASE_QUAD:
                return k.tween.PennerManager._tweenEaseBoth;
            case k.tween.PennerManager.EASE_EXPO:
                return k.tween.PennerManager._tweenExpoBoth;
            case k.tween.PennerManager.EASE_EXPO_IN:
                return k.tween.PennerManager._tweenExpoIn;
            case k.tween.PennerManager.EASE_EXPO_OUT:
                return k.tween.PennerManager._tweenExpoOut;
            case k.tween.PennerManager.EASE_ELASTIC:
                return k.tween.PennerManager._tweenElasticBoth;
            case k.tween.PennerManager.EASE_ELASTIC_IN:
                return k.tween.PennerManager._tweenElasticIn;
            case k.tween.PennerManager.EASE_ELASTIC_OUT:
                return k.tween.PennerManager._tweenElasticOut;
            case k.tween.PennerManager.EASE_BUMP:
                return k.tween.PennerManager._tweenBumpBoth;
            case k.tween.PennerManager.EASE_BUMP_IN:
                return k.tween.PennerManager._tweenBumpIn;
            case k.tween.PennerManager.EASE_BUMP_OUT:
                return k.tween.PennerManager._tweenBumpBoth;
            case k.tween.PennerManager.EASE_BOUNCE:
                return k.tween.PennerManager._tweenBounceBoth;
            case k.tween.PennerManager.EASE_BOUNCE_IN:
                return k.tween.PennerManager._tweenBounceIn;
            case k.tween.PennerManager.EASE_BOUNCE_OUT:
                return k.tween.PennerManager._tweenBounceOut;
            case k.tween.PennerManager.EASE_CUBIC:
                return k.tween.PennerManager._tweenCubicBoth;
            case k.tween.PennerManager.EASE_CUBIC_IN:
                return k.tween.PennerManager._tweenCubicIn;
            case k.tween.PennerManager.EASE_CUBIC_OUT:
                return k.tween.PennerManager._tweenCubicOut;
            case k.tween.PennerManager.EASE_SPACE:
                return k.tween.PennerManager._tweenSpaceBoth;
            case k.tween.PennerManager.EASE_SPACE_IN:
                return k.tween.PennerManager._tweenSpaceIn;
            case k.tween.PennerManager.EASE_SPACE_OUT:
                return k.tween.PennerManager._tweenSpaceOut;
            case k.tween.PennerManager.EASE_BLAST:
                return k.tween.PennerManager._tweenBlastBoth;
            case k.tween.PennerManager.EASE_BLAST_IN:
                return k.tween.PennerManager._tweenBlastIn;
            case k.tween.PennerManager.EASE_BLAST_OUT:
                return k.tween.PennerManager._tweenBlastOut;
            case k.tween.PennerManager.EASE_WAVE:
                return k.tween.PennerManager._tweenWaveBoth;
            case k.tween.PennerManager.EASE_WAVE_IN:
                return k.tween.PennerManager._tweenWaveIn;
            case k.tween.PennerManager.EASE_WAVE_OUT:
                return k.tween.PennerManager._tweenWaveOut;
            case k.tween.PennerManager.EASE_CIRCLE:
                return k.tween.PennerManager._tweenCircleBoth;
            case k.tween.PennerManager.EASE_CIRCLE_IN:
                return k.tween.PennerManager._tweenCircleIn;
            case k.tween.PennerManager.EASE_CIRCLE_OUT:
                return k.tween.PennerManager._tweenCircleOut;
            case k.tween.PennerManager.EASE_LINEAR:
                return k.tween.PennerManager._tweenLinear;
            default:
                return k.tween.PennerManager._tweenLinear
        }
    };
    k.tween.PennerManager._tweenLinear = function(a, b, c, d) {
        return a + c / d * b
    };
    k.tween.PennerManager._tweenEaseBoth = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInOutQuad(c, a, b, d)
    };
    k.tween.PennerManager._tweenEaseIn = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInQuad(c, a, b, d)
    };
    k.tween.PennerManager._tweenEaseOut = function(a, b, c, d) {
        return k.tween.PennerEasing.easeOutQuad(c, a, b, d)
    };
    k.tween.PennerManager._tweenExpoBoth = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInOutExpo(c,
            a, b, d)
    };
    k.tween.PennerManager._tweenExpoIn = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInExpo(c, a, b, d)
    };
    k.tween.PennerManager._tweenExpoOut = function(a, b, c, d) {
        return k.tween.PennerEasing.easeOutExpo(c, a, b, d)
    };
    k.tween.PennerManager._tweenElasticBoth = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInOutElastic(c, a, b, d)
    };
    k.tween.PennerManager._tweenElasticIn = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInElastic(c, a, b, d)
    };
    k.tween.PennerManager._tweenElasticOut = function(a, b, c, d) {
        return k.tween.PennerEasing.easeOutElastic(c,
            a, b, d)
    };
    k.tween.PennerManager._tweenBumpBoth = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInOutBack(c, a, b, d)
    };
    k.tween.PennerManager._tweenBumpIn = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInBack(c, a, b, d)
    };
    k.tween.PennerManager._tweenBounceBoth = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInOutBounce(c, a, b, d)
    };
    k.tween.PennerManager._tweenBounceIn = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInBounce(c, a, b, d)
    };
    k.tween.PennerManager._tweenBounceOut = function(a, b, c, d) {
        return k.tween.PennerEasing.easeOutBounce(c,
            a, b, d)
    };
    k.tween.PennerManager._tweenCubicBoth = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInOutCubic(c, a, b, d)
    };
    k.tween.PennerManager._tweenCubicIn = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInCubic(c, a, b, d)
    };
    k.tween.PennerManager._tweenCubicOut = function(a, b, c, d) {
        return k.tween.PennerEasing.easeOutCubic(c, a, b, d)
    };
    k.tween.PennerManager._tweenSpaceBoth = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInOutQuart(c, a, b, d)
    };
    k.tween.PennerManager._tweenSpaceIn = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInQuart(c,
            a, b, d)
    };
    k.tween.PennerManager._tweenSpaceOut = function(a, b, c, d) {
        return k.tween.PennerEasing.easeOutQuart(c, a, b, d)
    };
    k.tween.PennerManager._tweenBlastBoth = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInOutQuint(c, a, b, d)
    };
    k.tween.PennerManager._tweenBlastIn = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInQuint(c, a, b, d)
    };
    k.tween.PennerManager._tweenBlastOut = function(a, b, c, d) {
        return k.tween.PennerEasing.easeOutQuint(c, a, b, d)
    };
    k.tween.PennerManager._tweenWaveBoth = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInOutSine(c,
            a, b, d)
    };
    k.tween.PennerManager._tweenWaveIn = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInSine(c, a, b, d)
    };
    k.tween.PennerManager._tweenWaveOut = function(a, b, c, d) {
        return k.tween.PennerEasing.easeOutSine(c, a, b, d)
    };
    k.tween.PennerManager._tweenCircleBoth = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInOutCirc(c, a, b, d)
    };
    k.tween.PennerManager._tweenCircleIn = function(a, b, c, d) {
        return k.tween.PennerEasing.easeInCirc(c, a, b, d)
    };
    k.tween.PennerManager._tweenCircleOut = function(a, b, c, d) {
        return k.tween.PennerEasing.easeOutCirc(c,
            a, b, d)
    };
    k.tween.WorkinTween = function() {
        y.WMEventDispatcher.call(this);
        this._isRunning = !1;
        this._progress = 0;
        this._tweens = []
    };
    j["com.workinman.math.tween.WorkinTween"] = k.tween.WorkinTween;
    k.tween.WorkinTween.__name__ = ["com", "workinman", "math", "tween", "WorkinTween"];
    k.tween.WorkinTween.__super__ = y.WMEventDispatcher;
    k.tween.WorkinTween.prototype = C(y.WMEventDispatcher.prototype, {
        dispose: function() {
            this.clearTweens();
            this._easingY = this._easingX = this._vector = this._goal = this._start = this._tweens = null;
            y.WMEventDispatcher.prototype.dispose.call(this)
        },
        clearTweens: function() {
            this._tweens = [];
            this._progress = 0;
            this._isRunning = !1
        },
        _getBoolCurrentTweenComplete: function() {
            return 1 == this._getProgressRatio()
        },
        _getBoolAllTweensComplete: function() {
            return 0 == this._tweens.length
        },
        _getPrevPos: function() {
            return 0 == this._tweens.length ? new k.WorkinPoint(0, 0) : this._tweens[this._tweens.length - 1]._getGoal()
        },
        _getProgressRatio: function() {
            return this._progress / this._dur
        },
        _getCurrentVector: function() {
            return this._vector
        },
        _getCurrent: function() {
            return this._current
        },
        __class__: k.tween.WorkinTween,
        __properties__: {
            get_progressRatio: "_getProgressRatio"
        }
    });
    k.tween.WorkinTweenStep = function() {};
    j["com.workinman.math.tween.WorkinTweenStep"] = k.tween.WorkinTweenStep;
    k.tween.WorkinTweenStep.__name__ = ["com", "workinman", "math", "tween", "WorkinTweenStep"];
    k.tween.WorkinTweenStep.prototype = {
        _getDur: function() {
            return this._dur
        },
        _getEaseIdY: function() {
            return this._easeIdY
        },
        _getEaseIdX: function() {
            return this._easeIdX
        },
        _getGoal: function() {
            return this._goal
        },
        __class__: k.tween.WorkinTweenStep,
        __properties__: {
            get_goal: "_getGoal"
        }
    };
    k.tween.WorkinTweener = function() {
        this._targets = []
    };
    j["com.workinman.math.tween.WorkinTweener"] = k.tween.WorkinTweener;
    k.tween.WorkinTweener.__name__ = ["com", "workinman", "math", "tween", "WorkinTweener"];
    k.tween.WorkinTweener.__properties__ = {
        get_instance: "_getInstance"
    };
    k.tween.WorkinTweener._getInstance = function() {
        null == k.tween.WorkinTweener._instance && (k.tween.WorkinTweener._instance = new k.tween.WorkinTweener);
        return k.tween.WorkinTweener._instance
    };
    k.tween.WorkinTweener.prototype = {
        stop: function(a) {
            for (var b = this._targets.length; 0 < b;)
                if (b--, this._targets[b]._getTarget() == a) {
                    this._targets[b].clearTweens();
                    this._targets[b]._setIsComplete(!0);
                    break
                }
        },
        tween: function(a, b, c, d, f, n, e, s, F) {
            null == F && (F = !1);
            null == s && (s = "");
            null == e && (e = 0);
            null == n && (n = !1);
            null == f && (f = 0);
            null == d && (d = "linear");
            b = new k.tween._WorkinTweener.WorkinTweenDef(a, b, c, d, f, e, s);
            c = !1;
            d = 0;
            for (f = this._targets; d < f.length;) s = f[d], ++d, s._getTarget() == a && (c = !0, n && s.clearTweens(), s.addTween(b, e));
            !1 == c && (a = new k.tween._WorkinTweener.WorkinTweenTracker(a,
                F), this._targets.push(a), a.addTween(b, e));
            return b
        },
        update: function(a) {
            for (var b = this._targets.length; 0 < b;) b--, this._targets[b].update(a), this._targets[b]._getIsComplete() && (this._targets[b].dispose(), this._targets.splice(b, 1))
        },
        __class__: k.tween.WorkinTweener
    };
    k.tween._WorkinTweener = {};
    k.tween._WorkinTweener.WorkinTweenTracker = function(a, b) {
        this._gameplayPause = b;
        this._target = a;
        this._tweens = [];
        this._isComplete = !1
    };
    j["com.workinman.math.tween._WorkinTweener.WorkinTweenTracker"] = k.tween._WorkinTweener.WorkinTweenTracker;
    k.tween._WorkinTweener.WorkinTweenTracker.__name__ = "com,workinman,math,tween,_WorkinTweener,WorkinTweenTracker".split(",");
    k.tween._WorkinTweener.WorkinTweenTracker.prototype = {
        _decrementQueueIndeces: function() {
            for (var a = 0, b = this._tweens; a < b.length;) {
                var c = b[a];
                ++a;
                if (0 == c._getQueueIndex()) return
            }
            a = 0;
            for (b = this._tweens; a < b.length;) {
                c = b[a];
                ++a;
                var d = c,
                    f = d._getQueueIndex();
                d._setQueueIndex(f - 1);
                f;
                0 == c._getQueueIndex() && c.start()
            }
        },
        addTween: function(a) {
            this._tweens.push(a)
        },
        clearTweens: function() {
            for (var a =
                    0, b = this._tweens; a < b.length;) {
                var c = b[a];
                ++a;
                c._setIsComplete(!0)
            }
        },
        _setGameplayPause: function(a) {
            return this._gameplayPause = a
        },
        _getGameplayPause: function() {
            return this._gameplayPause
        },
        _setIsComplete: function(a) {
            return this._isComplete = a
        },
        _getIsComplete: function() {
            return this._isComplete
        },
        _getTarget: function() {
            return this._target
        },
        _dispatchTweensAllComplete: function(a) {
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData($.ConstantsCloud.EVENT_TWEENS_COMPLETE, {
                target: a
            }))
        },
        update: function(a) {
            if (!this._gameplayPause ||
                !i.WorkinCloud.instance.getBool("bool_paused")) {
                for (var b = this._tweens.length; 0 < b;) b--, 0 == this._tweens[b]._getQueueIndex() && (this._tweens[b].update(a), this._tweens[b]._getIsComplete() && (this._tweens[b].dispose(), this._tweens.splice(b, 1), this._decrementQueueIndeces()));
                1 > this._tweens.length && (this._isComplete = !0, this._dispatchTweensAllComplete(this._target))
            }
        },
        dispose: function() {
            this._target = null;
            for (var a = 0, b = this._tweens; a < b.length;) {
                var c = b[a];
                ++a;
                c.dispose()
            }
            this._tweens = null
        },
        __class__: k.tween._WorkinTweener.WorkinTweenTracker,
        __properties__: {
            get_target: "_getTarget",
            set_isComplete: "_setIsComplete",
            get_isComplete: "_getIsComplete"
        }
    };
    k.tween._WorkinTweener.WorkinTweenDef = function(a, b, c, d, f, n, e) {
        null == e && (e = "");
        null == n && (n = 0);
        null == f && (f = 0);
        null == d && (d = "linear");
        this._id = e;
        this._target = a;
        this._duration = b;
        this._delay = f;
        this._dest = c;
        this._queueIndex = n;
        this._easeFunction = k.tween.PennerManager.getEaseFunction(d);
        this._isComplete = !1;
        this._completionArgs = this._completionHandler = null;
        this._progress = 0;
        this._origin = {};
        0 == n && this.start()
    };
    j["com.workinman.math.tween._WorkinTweener.WorkinTweenDef"] = k.tween._WorkinTweener.WorkinTweenDef;
    k.tween._WorkinTweener.WorkinTweenDef.__name__ = "com,workinman,math,tween,_WorkinTweener,WorkinTweenDef".split(",");
    k.tween._WorkinTweener.WorkinTweenDef.prototype = {
        onComplete: function(a, b) {
            null == b && (b = []);
            this._completionHandler = a;
            this._completionArgs = b;
            return this
        },
        ease: function(a) {
            this._easeFunction = k.tween.PennerManager.getEaseFunction(a);
            return this
        },
        delay: function(a) {
            this._delay = a;
            return this
        },
        _getId: function() {
            return this._id
        },
        _setQueueIndex: function(a) {
            return this._queueIndex = a
        },
        _getQueueIndex: function() {
            return this._queueIndex
        },
        _setIsComplete: function(a) {
            return this._isComplete = a
        },
        _getIsComplete: function() {
            return this._isComplete
        },
        update: function(a) {
            if (0 < this._delay) {
                this._delay -= a;
                if (0 < this._delay) return;
                0 > this._delay && this.start()
            }
            this._progress += a;
            this._progress > this._duration && (this._progress = this._duration);
            this.ratio = this._progress / this._duration;
            for (var b = 0, c = ia.fields(this._dest); b < c.length;) {
                var d = c[b];
                ++b;
                a =
                    ia.field(this._dest, d) - ia.field(this._origin, d);
                this._target[d] = this._easeFunction(ia.field(this._origin, d), a, this._progress, this._duration)
            }
            this._progress >= this._duration && (null != this._completionHandler && this._completionHandler.apply(this._completionHandler, this._completionArgs), this._isComplete = !0)
        },
        dispose: function() {
            this._dest = this._target = this._origin = null
        },
        start: function() {
            this._isComplete = !1;
            for (var a = 0, b = ia.fields(this._dest); a < b.length;) {
                var c = b[a];
                ++a;
                null != ia.field(this._target, c) && (this._origin[c] =
                    ia.field(this._target, c))
            }
        },
        __class__: k.tween._WorkinTweener.WorkinTweenDef,
        __properties__: {
            set_isComplete: "_setIsComplete",
            get_isComplete: "_getIsComplete",
            set_queueIndex: "_setQueueIndex",
            get_queueIndex: "_getQueueIndex"
        }
    };
    na = {
        WMSharedObject: function() {
            y.WMEventDispatcher.call(this);
            this._data = {};
            this.sharedKey = ""
        }
    };
    j["com.workinman.net.WMSharedObject"] = na.WMSharedObject;
    na.WMSharedObject.__name__ = ["com", "workinman", "net", "WMSharedObject"];
    na.WMSharedObject.getLocalStorage = function() {
        try {
            return R.window.localStorage
        } catch (a) {
            return R.window.localStorage
        }
    };
    na.WMSharedObject.getLocal = function(a, b) {
        try {
            var c = R.window.location.href;
            null == b && (b = c);
            var d = new na.WMSharedObject;
            d.sharedKey = b + ":" + a;
            var f = na.WMSharedObject.getLocalStorage().getItem(d.sharedKey);
            d._setData("" == f || null == f ? {} : oa.run(f));
            return d
        } catch (n) {
            return d = new na.WMSharedObject, d.sharedKey = "", d
        }
    };
    na.WMSharedObject.__super__ = y.WMEventDispatcher;
    na.WMSharedObject.prototype = C(y.WMEventDispatcher.prototype, {
        flush: function() {
            var a = sa.run(this._getData());
            na.WMSharedObject.getLocalStorage().setItem(this.sharedKey,
                a);
            return na.SharedObjectFlushedStatus.FLUSHED
        },
        clear: function() {
            this._setData(null);
            this._setData({});
            na.WMSharedObject.getLocalStorage().removeItem(this.sharedKey)
        },
        _setData: function(a) {
            return this._data = a
        },
        _getData: function() {
            return this._data
        },
        dispose: function() {
            this._data = null;
            y.WMEventDispatcher.prototype.dispose.call(this)
        },
        __class__: na.WMSharedObject,
        __properties__: {
            set_data: "_setData",
            get_data: "_getData"
        }
    });
    na.SharedObjectFlushedStatus = function() {};
    j["com.workinman.net.SharedObjectFlushedStatus"] =
        na.SharedObjectFlushedStatus;
    na.SharedObjectFlushedStatus.__name__ = ["com", "workinman", "net", "SharedObjectFlushedStatus"];
    G = {
        ServiceAnalytics: function() {}
    };
    j["com.workinman.services.ServiceAnalytics"] = G.ServiceAnalytics;
    G.ServiceAnalytics.__name__ = ["com", "workinman", "services", "ServiceAnalytics"];
    G.ServiceAnalytics.onAnalyticsLoad = function() {
        G.ServiceAnalytics._flagLoaded || (i.WorkinCloud.instance.log("[ServiceAnalytics](onAnalyticsLoad) Load complete"), G.ServiceAnalytics._flagLoaded = !0, ta.delay(G.ServiceAnalytics._runQueuedCommands,
            1E3))
    };
    G.ServiceAnalytics.init = function(a, b) {
        null == b && (b = "");
        G.ServiceAnalytics._flagInitted = !0;
        G.ServiceAnalytics._queuedCommands = [];
        "x" == a.toLowerCase() && (G.ServiceAnalytics.OPTION_ENABLE_TRACKING = !1);
        G.ServiceAnalytics.OPTION_ENABLE_TRACKING && ("" == b && (b = G.ServiceAnalytics._DEFAULT_SHARED_OBJECT_ID), G.ServiceAnalytics._flagStarted = !1, i.WorkinCloud.instance.log("[ServiceAnalytics](initAnalytics)"), G.ServiceAnalytics._appId = a, G.ServiceAnalytics._sharedObjectId = b, G.ServiceAnalytics._sharedObjectData =
            i.WorkinCloud.instance.sharedObjectGetData(G.ServiceAnalytics._sharedObjectId), G.ServiceAnalytics._generateSessionID(), null == G.ServiceAnalytics._sharedObjectData.userID || 14 > I.string(G.ServiceAnalytics._sharedObjectData.userID).length ? (G.ServiceAnalytics._generateOfflineIDs(), G.ServiceAnalytics._sharedObjectData.userID = G.ServiceAnalytics._offlineUserId, G.ServiceAnalytics._sharedObjectData.trackingID = G.ServiceAnalytics._offlineTrackingId, i.WorkinCloud.instance.sharedObjectSetData(G.ServiceAnalytics._sharedObjectId,
                G.ServiceAnalytics._sharedObjectData)) : (G.ServiceAnalytics._offlineUserId = G.ServiceAnalytics._sharedObjectData.userID, G.ServiceAnalytics._offlineTrackingId = G.ServiceAnalytics._sharedObjectData.trackingID), eval("\t\t\t\t\n\t\t\t\twindow._pnConfig = new Array();\n\t\t\t\twindow._pnConfig['userId'] = '" + G.ServiceAnalytics._offlineUserId + "';\n\t\t\t\t\n\t\t\t\tvar _pnAPIURL = document.location.protocol + '//js.a.playnomics.net/v1/api?a=" + G.ServiceAnalytics._appId + "';\n\t\t\t\tvar _pnAPI = document.createElement('script');\t\t\t\t\n\t\t\t\t_pnAPI.type = 'text/javascript'; \n\t\t\t\t_pnAPI.async = false; \n\t\t\t\t_pnAPI.src = _pnAPIURL;\n\t\t\t\twindow.pnCallbackReference = _pnAPI;\t\t\t\t\n\t\t\t"),
            eval("window.pnCallbackReference").addEventListener("load", G.ServiceAnalytics.onAnalyticsLoad, !1), eval("document.body.appendChild(window.pnCallbackReference);"), G.ServiceAnalytics.sendUserInfo(), G.ServiceAnalytics.sendMilestone("custom1"))
    };
    G.ServiceAnalytics._runQueuedCommands = function() {
        for (; 0 < G.ServiceAnalytics._queuedCommands.length;) G.ServiceAnalytics.sendPlaynomicsEvent(G.ServiceAnalytics._queuedCommands[0].method, G.ServiceAnalytics._queuedCommands[0].params), G.ServiceAnalytics._queuedCommands.shift()
    };
    G.ServiceAnalytics.sendUserInfo = function() {
        var pnUserInfo=0;
    };
    G.ServiceAnalytics.sendMilestone = function(a) {
        var pnMilestone=0;
    };
    G.ServiceAnalytics.sendPlaynomicsEvent = function(a, b) {
        if (G.ServiceAnalytics.OPTION_ENABLE_TRACKING && G.ServiceAnalytics._flagInitted)
            if (G.ServiceAnalytics._flagLoaded) {
                i.WorkinCloud.instance.log("[ServiceAnalytics](sendPlaynomicsEvent) " +
                    a);
                var c, d = "";
                for (c = 0; c < b.length;) d += "'" + b[c] + "'", c++, c < b.length && (d += ",");
                eval(a + "(" + d + ")")
            } else G.ServiceAnalytics._queuedCommands.push({
                method: a,
                params: b
            })
    };
    G.ServiceAnalytics.enableCanadaTracking = function(a) {
        G.ServiceAnalytics._flagCanadaTrackingEnabled = !0;
        G.ServiceAnalytics._canadaShowGameTitle = a
    };
    G.ServiceAnalytics.sendCanadaTrackingCall = function(a) {
        if (G.ServiceAnalytics._flagCanadaTrackingEnabled) try {
            eval("trackFlashEvent('" + G.ServiceAnalytics._canadaShowGameTitle + "', '" + a + "', 'true');")
        } catch (b) {}
    };
    G.ServiceAnalytics._generateSessionID = function() {
        for (var a = "", b = 11; - 1 < b;) a += Math.floor(10 * Math.random()), b--;
        G.ServiceAnalytics._sessionId = a
    };
    G.ServiceAnalytics._generateOfflineIDs = function() {
        G.ServiceAnalytics._offlineUserId = "";
        G.ServiceAnalytics._offlineTrackingId = "";
        for (var a = 15; - 1 < a;) {
            if (0.66 > Math.random()) G.ServiceAnalytics._offlineUserId += I.string(Math.floor(10 * Math.random()));
            else switch (Math.floor(10 * Math.random())) {
                case 0:
                    G.ServiceAnalytics._offlineUserId += "a";
                    break;
                case 1:
                    G.ServiceAnalytics._offlineUserId +=
                        "b";
                    break;
                case 2:
                    G.ServiceAnalytics._offlineUserId += "c";
                    break;
                case 3:
                    G.ServiceAnalytics._offlineUserId += "d";
                    break;
                case 4:
                    G.ServiceAnalytics._offlineUserId += "e";
                    break;
                case 5:
                    G.ServiceAnalytics._offlineUserId += "f";
                    break;
                case 6:
                    G.ServiceAnalytics._offlineUserId += "g";
                    break;
                case 7:
                    G.ServiceAnalytics._offlineUserId += "h";
                    break;
                case 8:
                    G.ServiceAnalytics._offlineUserId += "i";
                    break;
                case 9:
                    G.ServiceAnalytics._offlineUserId += "j";
                    break;
                default:
                    G.ServiceAnalytics._offlineUserId += "z"
            }
            a--
        }
        G.ServiceAnalytics._offlineTrackingId =
            "";
        for (a = 15; - 1 < a;) G.ServiceAnalytics._offlineTrackingId += Math.floor(10 * Math.random()), a--
    };
    G.ServiceAnalytics.prototype = {
        __class__: G.ServiceAnalytics
    };
    G.ServiceNickAvatar = function() {
        this._url = "";
        this._flagEnabled = !1;
        this._avatarsLoaded = [];
        this._avatarsToLoad = [];
        this._flagLoadListeners = !1
    };
    j["com.workinman.services.ServiceNickAvatar"] = G.ServiceNickAvatar;
    G.ServiceNickAvatar.__name__ = ["com", "workinman", "services", "ServiceNickAvatar"];
    G.ServiceNickAvatar.__properties__ = {
        get_instance: "_getInstance"
    };
    G.ServiceNickAvatar._getInstance = function() {
        null == G.ServiceNickAvatar._instance && (G.ServiceNickAvatar._instance = new G.ServiceNickAvatar);
        return G.ServiceNickAvatar._instance
    };
    G.ServiceNickAvatar.prototype = {
        disable: function() {
            this._flagEnabled = !1
        },
        enable: function(a) {
            "" != a && (this._flagEnabled = !0, this._url = a)
        },
        _getIsEnabled: function() {
            return this._flagEnabled
        },
        __class__: G.ServiceNickAvatar
    };
    G.ServiceNickLeaderboard = function() {
        this._flagEnabled = !1;
        this._scoreArray = [];
        this._gameKeyword = ""
    };
    j["com.workinman.services.ServiceNickLeaderboard"] =
        G.ServiceNickLeaderboard;
    G.ServiceNickLeaderboard.__name__ = ["com", "workinman", "services", "ServiceNickLeaderboard"];
    G.ServiceNickLeaderboard.__properties__ = {
        get_instance: "_getInstance"
    };
    G.ServiceNickLeaderboard._getInstance = function() {
        null == G.ServiceNickLeaderboard._instance && (G.ServiceNickLeaderboard._instance = new G.ServiceNickLeaderboard);
        return G.ServiceNickLeaderboard._instance
    };
    G.ServiceNickLeaderboard.prototype = {
        disable: function() {
            this._flagEnabled = !1
        },
        enable: function(a, b) {
            "" != a && (this._flagEnabled = !0, this.setKeyword(b), this._url = a)
        },
        setKeyword: function(a) {
            "" != this._gameKeyword && this._gameKeyword != a && (this._scoreArray = []);
            this._gameKeyword = a
        },
        _getIsEnabled: function() {
            return this._flagEnabled
        },
        __class__: G.ServiceNickLeaderboard
    };
    i = {
        JSEmbedProxy: function() {}
    };
    j["com.workinman.utils.JSEmbedProxy"] = i.JSEmbedProxy;
    i.JSEmbedProxy.__name__ = ["com", "workinman", "utils", "JSEmbedProxy"];
    i.JSEmbedProxy.__properties__ = {
        get_isPaused: "getIsPaused",
        get_canvasHeight: "getCanvasHeight",
        get_canvasWidth: "getCanvasWidth",
        get_canvasScale: "getCanvasScale",
        get_isCrossdomain: "getIsCrossdomain",
        get_base: "getBase",
        get_exists: "getExists"
    };
    i.JSEmbedProxy.alertOn = function(a) {
        i.JSEmbedProxy.callJSEmbedMethod("addAlert('" + a + "', '')")
    };
    i.JSEmbedProxy.alertOff = function() {
        i.JSEmbedProxy.callJSEmbedMethod("removeAlert('')")
    };
    i.JSEmbedProxy.getExists = function() {
        return i.JSEmbedProxy.callJSEmbedMethod("exists()")
    };
    i.JSEmbedProxy.getParameters = function() {
        return i.JSEmbedProxy.callJSEmbedMethod("params()")
    };
    i.JSEmbedProxy.getAttributes =
        function() {
            return i.JSEmbedProxy.callJSEmbedMethod("attr()")
        };
    i.JSEmbedProxy.getBase = function() {
        return i.JSEmbedProxy.callJSEmbedMethod("baseUrl()")
    };
    i.JSEmbedProxy.getIsCrossdomain = function() {
        return i.JSEmbedProxy.callJSEmbedMethod("isBaseCrossdomain()")
    };
    i.JSEmbedProxy.getCanvasScale = function() {
        return I.parseFloat(i.JSEmbedProxy.callJSEmbedMethod("canvasScale()"))
    };
    i.JSEmbedProxy.getCanvasWidth = function() {
        return I.parseFloat(i.JSEmbedProxy.callJSEmbedMethod("canvasWidth()"))
    };
    i.JSEmbedProxy.getCanvasHeight =
        function() {
            return I.parseFloat(i.JSEmbedProxy.callJSEmbedMethod("canvasHeight()"))
        };
    i.JSEmbedProxy.getIsPaused = function() {
        return i.JSEmbedProxy.callJSEmbedMethod("isPaused()")
    };
    i.JSEmbedProxy.pause = function() {
        i.JSEmbedProxy.callJSEmbedMethod("pause()")
    };
    i.JSEmbedProxy.unpause = function() {
        i.JSEmbedProxy.callJSEmbedMethod("unpause()")
    };
    i.JSEmbedProxy.callJSEmbedMethod = function(a) {
        try {
            var b = eval("jsembed." + a);
            return null == b ? "" : b
        } catch (c) {
            null
        }
        return ""
    };
    i.JSEmbedProxy.prototype = {
        __class__: i.JSEmbedProxy
    };
    i.WMAssetManager = function() {
        this._LOADING_CHANCES = 3;
        this._baseUrl = "";
        this._assets = new T;
        this._defs = new T;
        this._flump = new T;
        this._packs = new T;
        this._chunks = new T;
        this._manifests = new T;
        this._flagBaseIsCrossdomain = !1;
        this._loadingProgress = this._loadingTotal = this._packsLoaded = this._packsMax = this._loadingChances = 0;
        this._loadingPackProgress = new T
    };
    j["com.workinman.utils.WMAssetManager"] = i.WMAssetManager;
    i.WMAssetManager.__name__ = ["com", "workinman", "utils", "WMAssetManager"];
    i.WMAssetManager.prototype = {
        getFont: function(a) {
            return !1 ==
                this._assets.exists(a) ? (i.WorkinCloud.instance.log("[WMAssetManager](getFont) no asset named " + a + " exists! Returning null."), null) : new E.Font(this._assets.get(a)._getPack(), a)
        },
        getLibrary: function(a) {
            return !1 == this._flump.exists(a) ? (i.WorkinCloud.instance.log("[WMAssetManager](getLibrary) no library named " + a + " exists! Is it defined in config.xml?"), null) : this._flump.get(a)
        },
        getSound: function(a) {
            return !1 == this._assets.exists(a) ? (i.WorkinCloud.instance.log("[AssetManager](getSound) no asset named " +
                a + " exists! Returning null."), null) : this._assets.get(a)._getConstructed() ? this._assets.get(a)._getData() : this._assets.get(a)._getPack().getSound(this._assets.get(a)._getPath(), !0)
        },
        getXML: function(a) {
            if (!1 == this._assets.exists(a)) return i.WorkinCloud.instance.log("[WMAssetManager](getXML) no asset named " + a + " exists! Returning null."), null;
            a = P.parse(this.getFile(a));
            return new Z.Fast(a.firstElement())
        },
        getFile: function(a) {
            return !1 == this._assets.exists(a) ? (i.WorkinCloud.instance.log("[WMAssetManager](getFile) no asset named " +
                a + " exists! Returning empty string."), "") : this._assets.get(a)._getConstructed() ? this._assets.get(a)._getData() : this._assets.get(a)._getPack().getFile(this._assets.get(a)._getPath(), !0)
        },
        getTexture: function(a) {
            a = a.split(".")[0];
            return !1 == this._assets.exists(a) ? (i.WorkinCloud.instance.log("[WMAssetManager](getTexture) no asset named " + a + " exists! Returning null."), null) : !0 == this._assets.get(a)._getConstructed() ? this._assets.get(a)._getData() : this._assets.get(a)._getPack().getTexture(this._assets.get(a)._getPath(), !0)
        },
        hasAsset: function(a) {
            return this._assets.exists(a)
        },
        _parseSpritesheet: function(a) {
            for (var b = this.getXML(a + ".xml"), a = this.getTexture(a), c = "", d = new fa.Rectangle(0, 0, 0, 0), f, b = b.nodes.resolve("SubTexture").iterator(); b.hasNext();) f = b.next(), c = f.att.resolve("name").toString(), d.x = I.parseFloat(f.att.resolve("x").toString()), d.y = I.parseFloat(f.att.resolve("y").toString()), d.width = I.parseFloat(f.att.resolve("width").toString()), d.height = I.parseFloat(f.att.resolve("height").toString()), f = W.createTexture(d.width |
                0, d.height | 0), f.get_graphics().drawSubImage(a, 0, 0, d.x | 0, d.y | 0, d.width | 0, d.height | 0), this.addConstructedAsset(c, f)
        },
        _onAllLoadComplete: function() {
            i.WorkinCloud.instance.log("[WMAssetManager](_onAllLoadComplete) all packs loaded!");
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent($.ConstantsCloud.EVENT_FILES_LOADED))
        },
        isLoading: function() {
            return this._packsLoaded < this._packsMax
        },
        addConstructedAsset: function(a, b) {
            new i._WMAssetManager.AssetDef(a, this._assets, b)
        },
        addPack: function(a) {
            for (var b =
                    S.iter(a.get_manifest()._entries); b.hasNext();) {
                var c = b.next();
                new i._WMAssetManager.AssetDef(c.name, this._assets, a)
            }
        },
        isPackLoaded: function(a) {
            return this._packs.exists(a)
        },
        _loadManifest: function(a, b, c, d) {
            null == d && (d = !0);
            null == c && (c = "");
            var f = this,
                n = W._platform.loadAssetPack(a);
            this._loadingTotal += n._total;
            this._loadingPackProgress.set(b, 0);
            n.error.connect(function(a) {
                i.WorkinCloud.instance.log("[WMAssetManager](_onLoadingError) Loading failed with error: " + a);
                i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEvent($.ConstantsCloud.EVENT_FILES_ERROR));
                f._loadingChances--;
                !0 == d ? 0 <= f._loadingChances ? ta.delay(function() {
                    i.WorkinCloud.instance.log("[WMAssetManager](_onLoadingError) Retrying. With " + f._loadingChances + " more chances.");
                    f.loadPack(b, c, !1)
                }, 500) : i.WorkinCloud.instance.log("[WMAssetManager](_onLoadingError) Loading attempts timed out.") : i.WorkinCloud.instance.log("[WMAssetManager](_onLoadingError) Loading failed, not attempting to retry.")
            });
            n.progressChanged.connect(function() {
                var a = n._progress - f._loadingPackProgress.get(b);
                f._loadingPackProgress.set(b,
                    n._progress);
                f._loadingProgress += a;
                a = Math.round(100 * (f._loadingProgress / f._loadingTotal));
                i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData($.ConstantsCloud.EVENT_FILES_LOADING, {
                    value: a
                }))
            });
            n.get(function(a) {
                f.addPack(a);
                f._packsLoaded++;
                for (var c = 0, d = f._defs.get(b)._getFlump(); c < d.length;) {
                    var n = d[c];
                    ++c;
                    f._flump.set(n, new Q.Library(a, n))
                }
                c = 0;
                for (d = f._defs.get(b)._getTiles(); c < d.length;) n = d[c], ++c, f._parseSpritesheet(n);
                f._packs.set(b, a);
                f._packsLoaded >= f._packsMax && f._onAllLoadComplete()
            })
        },
        loadPack: function(a, b, c) {
            null == c && (c = !0);
            null == b && (b = "");
            !1 == this._defs.exists(a) && i.WorkinCloud.instance.log("[WMAssetManager](loadPack) Can't load pack " + a + " , define the pack in config.xml.");
            i.WorkinCloud.instance.log("[WMAssetManager](loadPack) " + a);
            c && (this._loadingChances = this._LOADING_CHANCES, this._packsMax++);
            c = X.Manifest.build(a);
            "" != this._baseUrl && (this._flagBaseIsCrossdomain ? c.set_externalBasePath(this._baseUrl) : c.set_relativeBasePath(this._baseUrl));
            this._loadManifest(c, a, b)
        },
        addPackDef: function(a,
            b, c) {
            null == b && (b = []);
            null == c && (c = []);
            this._defs.set(a, new i._WMAssetManager.PackDef(a, b, c))
        },
        _parseChunk: function(a, b) {
            for (var c = [], d = [], f = b.nodes.resolve("chunk").iterator(); f.hasNext();) {
                var n = f.next();
                c.push(n.getInnerData().toString())
            }
            for (f = b.nodes.resolve("pack").iterator(); f.hasNext();) n = f.next(), d.push(n.getInnerData().toString());
            return new i._WMAssetManager.ChunkDef(a, d, c)
        },
        loadFolder: function(a) {
            i.WorkinCloud.instance.log("[WMAssetManager](loadFolder) " + a);
            this.isPackLoaded(a) || (this.addPackDef(a),
                this.loadPack(a))
        },
        loadChunk: function(a) {
            !1 == this._chunks.exists(a) && i.WorkinCloud.instance.log("[WMAssetManager](loadChunk) No chunk named " + a + " defined.");
            for (var b = 0, c = this._chunks.get(a)._getChunks(); b < c.length;) {
                var d = c[b];
                ++b;
                this.loadChunk(d)
            }
            this._packsLoaded >= this._packsMax && (this._loadingProgress = this._loadingTotal = 0, i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData($.ConstantsCloud.EVENT_FILES_LOADING, {
                value: 0
            })));
            b = 0;
            for (c = this._chunks.get(a)._getPacks(); b < c.length;) d =
                c[b], ++b, !1 == this.isPackLoaded(d) && this.loadPack(d)
        },
        isChunkLoaded: function(a) {
            if (!1 == this._chunks.exists(a)) return i.WorkinCloud.instance.log("[WMAssetManager](isChunkLoaded) No chunk named " + a + " defined."), !1;
            for (var b = 0, a = this._chunks.get(a)._getPacks(); b < a.length;) {
                var c = a[b];
                ++b;
                if (!1 == this.isPackLoaded(c)) return !1
            }
            return !0
        },
        addChunk: function(a, b) {
            var c = this._parseChunk(a, b);
            this._chunks.set(a, c)
        },
        setCrossdomainBaseUrl: function(a) {
            this._flagBaseIsCrossdomain = !0;
            this._setBaseUrl(a)
        },
        _setBaseUrl: function(a) {
            this._baseUrl =
                a;
            i.WorkinCloud.instance.log("[WMAssetManager](setBaseUrl) Base Url set to '" + a + "'");
            return this._baseUrl
        },
        _getBaseUrl: function() {
            return this._baseUrl
        },
        __class__: i.WMAssetManager,
        __properties__: {
            set_baseUrl: "_setBaseUrl",
            get_baseUrl: "_getBaseUrl"
        }
    };
    i._WMAssetManager = {};
    i._WMAssetManager.AssetDef = function(a, b, c) {
        this._path = a;
        a = a.split("/");
        this._id = a[a.length - 1].split(".")[0];
        this._constructed = !1;
        this._data = this._pack = null;
        ba.__instanceof(c, X.AssetPack) ? this._pack = c : (this._constructed = !0, this._data =
            c);
        this._hash = b;
        this._hash.set(this._path, this);
        this._path != this._path.split(".")[0] && this._hash.set(this._path.split(".")[0], this);
        this._path != this._id && this._hash.set(this._id, this)
    };
    j["com.workinman.utils._WMAssetManager.AssetDef"] = i._WMAssetManager.AssetDef;
    i._WMAssetManager.AssetDef.__name__ = ["com", "workinman", "utils", "_WMAssetManager", "AssetDef"];
    i._WMAssetManager.AssetDef.prototype = {
        _getPack: function() {
            return this._pack
        },
        _getPath: function() {
            return this._path
        },
        _getData: function() {
            return this._data
        },
        _getConstructed: function() {
            return this._constructed
        },
        __class__: i._WMAssetManager.AssetDef,
        __properties__: {
            get_constructed: "_getConstructed",
            get_data: "_getData",
            get_path: "_getPath",
            get_pack: "_getPack"
        }
    };
    i._WMAssetManager.PackDef = function(a, b, c) {
        this._id = a;
        this._flump = b;
        this._tiles = c
    };
    j["com.workinman.utils._WMAssetManager.PackDef"] = i._WMAssetManager.PackDef;
    i._WMAssetManager.PackDef.__name__ = ["com", "workinman", "utils", "_WMAssetManager", "PackDef"];
    i._WMAssetManager.PackDef.prototype = {
        _getTiles: function() {
            return this._tiles
        },
        _getFlump: function() {
            return this._flump
        },
        __class__: i._WMAssetManager.PackDef,
        __properties__: {
            get_flump: "_getFlump",
            get_tiles: "_getTiles"
        }
    };
    i._WMAssetManager.ChunkDef = function(a, b, c) {
        this._id = a;
        this._packs = b;
        this._chunks = c
    };
    j["com.workinman.utils._WMAssetManager.ChunkDef"] = i._WMAssetManager.ChunkDef;
    i._WMAssetManager.ChunkDef.__name__ = ["com", "workinman", "utils", "_WMAssetManager", "ChunkDef"];
    i._WMAssetManager.ChunkDef.prototype = {
        _getChunks: function() {
            return this._chunks
        },
        _getPacks: function() {
            return this._packs
        },
        __class__: i._WMAssetManager.ChunkDef,
        __properties__: {
            get_packIds: "_getPacks",
            get_chunkIds: "_getChunks"
        }
    };
    i.WMInput = function() {
        this._multiTouchAvail = !1;
        this._keycodes = new T;
        this._keydown = new T;
        this._touchList = new T;
        this._touchRemoval = [];
        this._keydown.set("input_click", !1);
        this._scale = 1;
        this._offset = new k.WorkinPoint;
        this._pointer = new i.WMPointer("", 0)
    };
    j["com.workinman.utils.WMInput"] = i.WMInput;
    i.WMInput.__name__ = ["com", "workinman", "utils", "WMInput"];
    i.WMInput.prototype = {
        _onPointerUp: function(a) {
            this._keydown.set("input_click", !1);
            var b = a.viewX / this._scale,
                a = a.viewY / this._scale,
                b = b + this._offset.x,
                a = a + this._offset.y;
            this._pointer.end(b, a);
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventInput(0, "input_click", b, a))
        },
        _onPointerMove: function(a) {
            var b = a.viewX / this._scale,
                a = a.viewY / this._scale,
                b = b + this._offset.x,
                a = a + this._offset.y;
            this._pointer.move(b, a);
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventInput(2, "input_click", b, a))
        },
        _onPointerDown: function(a) {
            this._keydown.set("input_click", !0);
            var b = a.viewX / this._scale,
                a = a.viewY / this._scale,
                b = b + this._offset.x,
                a = a + this._offset.y;
            this._pointer.begin(b, a);
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventInput(1, "input_click", b, a))
        },
        _onTouchUp: function(a) {
            var b = a.viewX / this._scale,
                c = a.viewY / this._scale,
                b = b + this._offset.x,
                c = c + this._offset.y;
            this._touchList.get(I.string(a.id)).end(b, c);
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventInput(0, "input_click", b, c))
        },
        _onTouchMove: function(a) {
            var b = a.viewX / this._scale,
                c = a.viewY / this._scale,
                b = b + this._offset.x,
                c = c + this._offset.y;
            this._touchList.get(I.string(a.id)).move(b, c);
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventInput(2, "input_click", b, c))
        },
        _onTouchDown: function(a) {
            var b = 0,
                c = !1;
            do
                for (var c = !0, d = this._touchList.iterator(); d.hasNext();) {
                    var f = d.next();
                    if (b == f._getIndex()) {
                        b++;
                        c = !1;
                        break
                    }
                }
            while (!1 == c);
            c = new i.WMPointer(I.string(a.id), b);
            this._touchList.set(c._getId(), c);
            d = a.viewX / this._scale;
            a = a.viewY / this._scale;
            d += this._offset.x;
            a += this._offset.y;
            c.begin(d, a);
            0 < b && i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventInput(1, "input_click", d, a))
        },
        _onKeyUp: function(a) {
            for (var b, c = this._keycodes.keys(); c.hasNext();) {
                var d = c.next();
                b = this._keycodes.get(d);
                for (var f = 0; f < b.length;) {
                    var n = b[f];
                    ++f;
                    n == a.key && (this._keydown.set(d, !1), i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventInput(0, d, 0, 0)))
                }
            }
        },
        _onKeyDown: function(a) {
            for (var b, c = this._keycodes.keys(); c.hasNext();) {
                var d = c.next();
                b = this._keycodes.get(d);
                for (var f =
                        0; f < b.length;) {
                    var n = b[f];
                    ++f;
                    n == a.key && (this._keydown.set(d, !0), i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventInput(1, d, 0, 0)))
                }
            }
            i.WorkinCloud.instance._getDispatcher().dispatchEvent(new y.WMEventData($.ConstantsCloud.EVENT_INPUT_ARBITRARY_KEY, {
                key: a.key,
                state: 1
            }))
        },
        getInput: function(a) {
            return this._keydown.get(a)
        },
        registerInput: function(a, b) {
            this._keycodes.set(a, b);
            this._keydown.set(a, !1)
        },
        prime: function() {
            this._multiTouchAvail = W._platform.getTouch().get_supported();
            W._platform.getKeyboard().down.connect(w(this,
                this._onKeyDown));
            W._platform.getKeyboard().up.connect(w(this, this._onKeyUp));
            this._multiTouchAvail && (W._platform.getTouch().down.connect(w(this, this._onTouchDown)), W._platform.getTouch().move.connect(w(this, this._onTouchMove)), W._platform.getTouch().up.connect(w(this, this._onTouchUp)));
            W._platform.getPointer().down.connect(w(this, this._onPointerDown));
            W._platform.getPointer().move.connect(w(this, this._onPointerMove));
            W._platform.getPointer().up.connect(w(this, this._onPointerUp))
        },
        _getMultiTouch: function() {
            return this._touchList
        },
        _getPointer: function() {
            return this._pointer
        },
        _setOffset: function(a) {
            return this._offset = a
        },
        _getOffset: function() {
            return this._offset
        },
        _setScale: function(a) {
            this._scale = a;
            0 == this._scale && (this._scale = 0.01);
            return this._scale
        },
        _getScale: function() {
            return this._scale
        },
        update: function(a) {
            this._pointer.update(a);
            for (var b = this._touchList.iterator(); b.hasNext();) {
                var c = b.next();
                c.update(a);
                0 == c._getPhase() && this._touchRemoval.push(c._getId())
            }
            a = 0;
            for (b = this._touchRemoval; a < b.length;) c = b[a], ++a, this._touchList.get(c).dispose(),
                this._touchList.remove(c);
            for (; 0 < this._touchRemoval.length;) this._touchRemoval.pop()
        },
        __class__: i.WMInput,
        __properties__: {
            set_scale: "_setScale",
            get_scale: "_getScale"
        }
    };
    i.WMPointer = function(a, b) {
        this.SWIPE_DOWN = 4;
        this.SWIPE_UP = 3;
        this.SWIPE_RIGHT = 2;
        this.SWIPE_LEFT = 1;
        this.SWIPE_NONE = 0;
        this._resetDeltaLine = !0;
        this._timer = i.WMPointer._DELTA_TIMEOUT;
        this._id = a;
        this._index = b;
        this._origin = new k.WorkinPoint(0, 0);
        this._current = new k.WorkinPoint(0, 0);
        this._last = new k.WorkinPoint(0, 0);
        this._delta = new k.WorkinPoint(0,
            0);
        this._line = new k.WorkinLine(new k.WorkinPoint(0, 0), new k.WorkinPoint(0, 0));
        this._deltaLine = this._line.copy();
        this._camera = new k.WorkinCamera(0, 0);
        this._phase = y.WMEventInput.PHASE_UP;
        this._swipe = this.SWIPE_NONE;
        this._consumed = !1
    };
    j["com.workinman.utils.WMPointer"] = i.WMPointer;
    i.WMPointer.__name__ = ["com", "workinman", "utils", "WMPointer"];
    i.WMPointer.prototype = {
        update: function(a) {
            this._resetDeltaLine = !0;
            this._timer -= a;
            0 > this._timer && (this._timer = i.WMPointer._DELTA_TIMEOUT, this._deltaLine.originToPoint(this._current))
        },
        _updateInfo: function(a, b) {
            this._last.toPoint(this._current);
            this._current.to(a, b);
            this._current.x += this._camera._getPos().x - this._camera._getScreenCenterX();
            this._current.y += this._camera._getPos().y - this._camera._getScreenCenterY();
            this._delta.toPoint(this._current);
            this._delta.subtractPoint(this._last)
        },
        end: function(a, b) {
            this._phase = y.WMEventInput.PHASE_UP;
            this._updateInfo(a, b);
            this._line.endToPoint(this._current);
            this._swipe = this.SWIPE_NONE;
            this._consumed = !1
        },
        move: function(a, b) {
            this._updateInfo(a,
                b);
            if (!1 != i.WorkinCloud.instance._getInput().getInput("input_click")) {
                this._phase = y.WMEventInput.PHASE_MOVE;
                if (!1 == this._consumed) {
                    var c = this._origin.x - this._current.x,
                        d = this._origin.y - this._current.y;
                    this._swipe = Math.abs(c) >= i.WMPointer._DELTA_ALLOWANCE && Math.abs(d) < i.WMPointer._DELTA_ALLOWANCE ? 0 < c ? this.SWIPE_LEFT : this.SWIPE_RIGHT : Math.abs(d) >= i.WMPointer._DELTA_ALLOWANCE && Math.abs(c) < i.WMPointer._DELTA_ALLOWANCE ? 0 < d ? this.SWIPE_UP : this.SWIPE_DOWN : this.SWIPE_NONE
                } else this._swipe = this.SWIPE_NONE;
                this._line.endToPoint(this._current)
            }
        },
        begin: function(a, b) {
            this._origin.to(a, b);
            this._origin.x += this._camera._getPos().x - this._camera._getScreenCenterX();
            this._origin.y += this._camera._getPos().y - this._camera._getScreenCenterY();
            this._current.toPoint(this._origin);
            this._last.toPoint(this._origin);
            this._delta.to(0, 0);
            this._line.to(this._origin, this._current);
            this._deltaLine.to(this._origin, this._current);
            this._consumed = !1;
            this._phase = y.WMEventInput.PHASE_DOWN;
            this._swipe = this.SWIPE_NONE
        },
        _getDeltaLine: function() {
            if (!1 ==
                this._resetDeltaLine) return this._deltaLine;
            this._deltaLine.endToPoint(this._current);
            this._resetDeltaLine = !1;
            return this._deltaLine
        },
        _setIndex: function(a) {
            return this._index = a
        },
        _getIndex: function() {
            return this._index
        },
        _getId: function() {
            return this._id
        },
        _setConsumed: function(a) {
            return this._consumed = a
        },
        _getConsumed: function() {
            return this._consumed
        },
        _getSwipe: function() {
            return this._swipe
        },
        _getLine: function() {
            return this._line
        },
        _getDeltaPos: function() {
            return this._delta
        },
        _getLastPos: function() {
            return this._last
        },
        _getCurrentPos: function() {
            return this._current
        },
        _getOriginPos: function() {
            return this._origin
        },
        _getPhase: function() {
            return this._phase
        },
        dispose: function() {
            this._delta = this._last = this._current = this._origin = null;
            this._line.dispose();
            this._line = null;
            this._deltaLine.dispose();
            this._camera = this._deltaLine = null
        },
        __class__: i.WMPointer,
        __properties__: {
            get_phase: "_getPhase",
            get_id: "_getId",
            set_index: "_setIndex",
            get_index: "_getIndex"
        }
    };
    i.WMLocalize = function() {};
    j["com.workinman.utils.WMLocalize"] = i.WMLocalize;
    i.WMLocalize.__name__ = ["com", "workinman", "utils", "WMLocalize"];
    i.WMLocalize.prototype = {
        getData: function(a, b) {
            null == b && (b = "");
            "" == b && (b = $.ConstantsCloud.LOCALIZATION_XML_PATH + "translation_" + i.WorkinCloud.instance.getString($.ConstantsCloud.STRING_REGION_ID) + ".xml");
            for (var c = i.WorkinCloud.instance._getAssets().getXML(b).nodes.resolve("string").iterator(); c.hasNext();) {
                var d = c.next();
                if (d.att.resolve("id") == a) return new i.WMLocalizedData(d.att.resolve("id"), d.getInnerData(), d.att.resolve("fontName"),
                    I.parseFloat(d.att.resolve("fontScale")), I.parseFloat(d.att.resolve("offsetX")), I.parseFloat(d.att.resolve("offsetY")))
            }
            i.WorkinCloud.instance.log("[WMLocalize] ERROR: No localization data for : " + a);
            return new i.WMLocalizedData(a, "", "", 1, 0, 0)
        },
        __class__: i.WMLocalize
    };
    i.WMLocalizedData = function(a, b, c, d, f, n) {
        this._id = a;
        this._string = b;
        this._fontName = c;
        this._scale = d;
        this._offsetX = f;
        this._offsetY = n
    };
    j["com.workinman.utils.WMLocalizedData"] = i.WMLocalizedData;
    i.WMLocalizedData.__name__ = ["com", "workinman",
        "utils", "WMLocalizedData"
    ];
    i.WMLocalizedData.prototype = {
        _getOffsetY: function() {
            return this._offsetY
        },
        _getOffsetX: function() {
            return this._offsetX
        },
        _getScale: function() {
            return this._scale
        },
        _getFontName: function() {
            return this._fontName
        },
        _getString: function() {
            return this._string
        },
        _getId: function() {
            return this._id
        },
        __class__: i.WMLocalizedData,
        __properties__: {
            get_string: "_getString",
            get_fontName: "_getFontName",
            get_scale: "_getScale",
            get_offsetX: "_getOffsetX",
            get_offsetY: "_getOffsetY"
        }
    };
    i.WMSound = function() {
        this._musicId =
            "";
        this._musicGain = 1;
        this._musicPlaying = null;
        this._isMutedSound = this._isMutedMusic = this._flagSystemMute = this._flagMuted = !1;
        this._mixer = new da.Mixer;
        this._sounds = [];
        this._musicIds = []
    };
    j["com.workinman.utils.WMSound"] = i.WMSound;
    i.WMSound.__name__ = ["com", "workinman", "utils", "WMSound"];
    i.WMSound.prototype = {
        _getMusicPlaying: function() {
            return this._musicPlaying
        },
        update: function(a) {
            "" != this._musicId && 0 < this._musicIds.length && !1 == this._isMutedMusic && this._musicPlaying._getPlayback().get_ended() && (this._musicIds.push(this._musicIds.shift()),
                this.playMusic(this._musicIds[0]));
            $.ConstantsCloud.getIsAndroid() && null != this._musicPlaying && 0.95 <= this._musicPlaying._getPlayback().get_position() / this._musicPlaying._getSound().get_duration() && ia.setProperty(this._musicPlaying._getPlayback(), "position", 0);
            for (var b = 0; b < this._sounds.length;) {
                if (this._sounds[b]._getFade() == i.WMSound.FADE_OUT) {
                    if (0 < this._sounds[b]._getPlayback().volume._value) {
                        var c = this._sounds[b]._getPlayback().volume;
                        c.set__(c._value - a * this._sounds[b]._getFadeSpeed());
                        0 >= this._sounds[b]._getPlayback().volume._value &&
                            (this._sounds[b].setFade(i.WMSound.FADE_NONE), this._sounds[b]._getPlayback().volume.set__(0))
                    }
                } else this._sounds[b]._getFade() == i.WMSound.FADE_IN && this._sounds[b]._getPlayback().volume._value < this._sounds[b].volume && (c = this._sounds[b]._getPlayback().volume, c.set__(c._value + a * this._sounds[b]._getFadeSpeed()), this._sounds[b]._getPlayback().volume._value >= this._sounds[b].volume && (this._sounds[b].setFade(i.WMSound.FADE_NONE), this._sounds[b]._getPlayback().volume.set__(this._sounds[b].volume)));
                b++
            }
            null !=
                this._getMusicPlaying() && (this._getMusicPlaying()._getFade() == i.WMSound.FADE_OUT ? 0 < this._getMusicPlaying()._getPlayback().volume._value && (c = this._getMusicPlaying()._getPlayback().volume, c.set__(c._value - a * this._getMusicPlaying()._getFadeSpeed()), 0 >= this._getMusicPlaying()._getPlayback().volume._value && (this._getMusicPlaying().setFade(i.WMSound.FADE_NONE), this._getMusicPlaying()._getPlayback().volume.set__(0))) : this._getMusicPlaying()._getFade() == i.WMSound.FADE_IN && this._getMusicPlaying()._getPlayback().volume._value <
                    this._getMusicPlaying().volume && (c = this._getMusicPlaying()._getPlayback().volume, c.set__(c._value + a * this._getMusicPlaying()._getFadeSpeed()), this._getMusicPlaying()._getPlayback().volume._value >= this._getMusicPlaying().volume && (this._getMusicPlaying().setFade(i.WMSound.FADE_NONE), this._getMusicPlaying()._getPlayback().volume.set__(this._getMusicPlaying().volume))))
        },
        _muteMusic: function(a) {
            "" != this._musicId && (a ? this._musicPlaying = null : (this._musicPlaying = a = new i._WMSound.SoundDef(this._musicId, this._mixer.newSound(i.WorkinCloud.instance._getAssets().getSound(this._musicId),
                1), !0), a.playSound(this._musicGain)))
        },
        stopMusic: function() {
            "" == this._musicId || this._isMutedMusic || (this._musicId = "", this._musicPlaying.dispose(), this._musicPlaying = null, this._musicIds = [])
        },
        playMusic: function(a, b, c) {
            null == c && (c = !0);
            $.ConstantsCloud.getIsAndroid() && null != this._musicPlaying || this._musicId == a || (this._musicId = a, this._musicGain = i.WorkinCloud.instance.getFloat(g.ConstantsApp.FLOAT_VOLUME_MUSIC), this.getMute() || "" == a || (null != this._musicPlaying && this._musicPlaying.dispose(), this._musicPlaying =
                a = new i._WMSound.SoundDef(a, this._mixer.newSound(i.WorkinCloud.instance._getAssets().getSound(this._musicId), 1), c), a.playSound(this._musicGain)))
        },
        playMusicLoop: function(a) {
            this._musicIds = a;
            this.playMusic(a[0], 1, !1)
        },
        stopSound: function(a) {
            for (var b = this._sounds.length; 0 < b;) b--, a == this._sounds[b].id && (this._sounds[b].dispose(), this._sounds.splice(b, 1))
        },
        playSound: function(a, b, c) {
            null == c && (c = !1);
            null == b && (b = 1);
            if (!this.getMute()) {
                for (var d = 0; d < this._sounds.length;) {
                    if (this._sounds[d].id == a) {
                        this._sounds[d].playSound(i.WorkinCloud.instance.getFloat(g.ConstantsApp.FLOAT_VOLUME_SOUND));
                        return
                    }
                    d++
                }
                a = new i._WMSound.SoundDef(a, this._mixer.newSound(i.WorkinCloud.instance._getAssets().getSound(a), 4), c);
                this._sounds.push(a);
                a.playSound(b)
            }
        },
        playSoundRand: function(a, b) {
            null == b && (b = 1);
            this.playSound(a[Math.floor(Math.random() * a.length)], b)
        },
        setMuteSound: function(a) {
            if (a && !1 == this._isMutedSound) {
                this._isMutedSound = !0;
                for (this._musicPlaying.dispose(); 0 < this._sounds.length;) this._sounds.splice(0, 1)
            } else !1 == a && this._isMutedSound && (this._isMutedSound = !1)
        },
        setMuteMusic: function(a) {
            a && !1 == this._isMutedMusic ?
                (this._isMutedMusic = !0, this._mixer.stopAll(), this._muteMusic(this._isMutedMusic)) : !1 == a && this._isMutedMusic && (this._isMutedMusic = !1, this._muteMusic(this._isMutedMusic))
        },
        setMute: function(a) {
            if (a && !1 == this._flagMuted) {
                this._isMutedSound = this._isMutedMusic = this._flagMuted = !0;
                for (this._mixer.stopAll(); 0 < this._sounds.length;) this._sounds.splice(0, 1);
                this._muteMusic(this._flagMuted)
            } else !1 == a && this._flagMuted && (this._flagMuted = !1, this._muteMusic(this._flagMuted))
        },
        getMute: function() {
            return this._flagSystemMute ||
                this._flagMuted
        },
        __class__: i.WMSound,
        __properties__: {
            get_musicPlaying: "_getMusicPlaying"
        }
    };
    i._WMSound = {};
    i._WMSound.SoundDef = function(a, b, c) {
        null == c && (c = !1);
        this.id = a;
        this.isMusic = c;
        this.volume = 1;
        this._flagPlayed = this._flagHasSound = !1;
        this._sound = b;
        this._fade = i.WMSound.FADE_NONE;
        this._fadeSpeed = 1
    };
    j["com.workinman.utils._WMSound.SoundDef"] = i._WMSound.SoundDef;
    i._WMSound.SoundDef.__name__ = ["com", "workinman", "utils", "_WMSound", "SoundDef"];
    i._WMSound.SoundDef.prototype = {
        playSound: function(a) {
            null == a &&
                (a = 1);
            this.volume = a;
            this._playback = $.ConstantsCloud.getIsAndroid() ? this._sound.play(a) : this.isMusic ? this._sound.loop(a) : this._sound.play(a)
        },
        setFade: function(a, b) {
            null == b && (b = 1);
            this._fade = a;
            this._fadeSpeed = b
        },
        _getFadeSpeed: function() {
            return this._fadeSpeed
        },
        _getFade: function() {
            return this._fade
        },
        _setPlayback: function(a) {
            return this._playback = a
        },
        _getPlayback: function() {
            return this._playback
        },
        _getSound: function() {
            return this._sound
        },
        dispose: function() {
            this._playback.dispose();
            this._playback = null
        },
        __class__: i._WMSound.SoundDef,
        __properties__: {
            get_sound: "_getSound",
            set_playback: "_setPlayback",
            get_playback: "_getPlayback",
            get_fade: "_getFade",
            get_fadeSpeed: "_getFadeSpeed"
        }
    };
    da = {
        Mixer: function() {
            this._sounds = []
        }
    };
    j["flambe.sound.Mixer"] = da.Mixer;
    da.Mixer.__name__ = ["flambe", "sound", "Mixer"];
    da.Mixer.__super__ = ha;
    da.Mixer.prototype = C(ha.prototype, {
        onRemoved: function() {
            this.stopAll();
            this._sounds = []
        },
        stopAll: function() {
            for (var a = 0, b = this._sounds; a < b.length;) {
                var c = b[a];
                ++a;
                c.dispose()
            }
        },
        newSound: function(a,
            b) {
            null == b && (b = 2147483647);
            var c = new da._Mixer.MixerSound(a, b);
            this._sounds.push(c);
            return c
        },
        get_name: function() {
            return "Mixer_2"
        },
        __class__: da.Mixer
    });
    i.WorkinCloud = function() {
        this._TIMER_STACK = 0.1;
        this._values = new T;
        this._defaults = new T;
        this._dispatcher = new y.WMEventDispatcher;
        this._input = new i.WMInput;
        this._assets = new i.WMAssetManager;
        this._sound = new i.WMSound;
        this._localize = new i.WMLocalize;
        this._stack = [];
        this._timerStack = -1;
        this._flagStackPaused = !1;
        this.setString($.ConstantsCloud.STRING_REGION_ID,
            "en")
    };
    j["com.workinman.utils.WorkinCloud"] = i.WorkinCloud;
    i.WorkinCloud.__name__ = ["com", "workinman", "utils", "WorkinCloud"];
    i.WorkinCloud.prototype = {
        _updateStack: function(a) {
            1 > this._stack.length || this._flagStackPaused || (this._timerStack -= a, 0 > this._timerStack && (this._stack[0](), this._stack.shift(), this._timerStack = this._TIMER_STACK))
        },
        update: function(a) {
            this._updateStack(a);
            this._input.update(a)
        },
        stack: function(a) {
            this._timerStack = this._TIMER_STACK;
            for (var b = 0; b < a.length;) {
                var c = a[b];
                ++b;
                this._stack.push(c)
            }
        },
        _updateDisplays: function(a) {
            this._dispatcher.dispatchEvent(new y.WMEventData(t.Display.EVENT_UPDATE_DISPLAY, {
                valueID: a
            }))
        },
        sharedObjectDelete: function(a) {
            try {
                var b = na.WMSharedObject.getLocal(a);
                b.clear();
                b.flush();
                b.dispose()
            } catch (c) {
                null
            }
        },
        sharedObjectSetData: function(a, b) {
            try {
                var c = na.WMSharedObject.getLocal(a);
                c._setData(b);
                c.flush();
                c.dispose()
            } catch (d) {
                null
            }
        },
        sharedObjectGetData: function(a) {
            try {
                var b = na.WMSharedObject.getLocal(a),
                    c = b._getData();
                b.dispose();
                return c
            } catch (d) {
                return {}
            }
        },
        resetValue: function(a) {
            this._values.set(a,
                this._defaults.get(a));
            this._updateDisplays(a)
        },
        modifyValue: function(a, b) {
            null == b && (b = 1);
            this._values.set(a, this.getFloat(a) + b);
            this._updateDisplays(a);
            return this.getFloat(a)
        },
        setValue: function(a, b) {
            this._values.set(a, b);
            !1 == this._defaults.exists(a) && this.setDefault(a, b);
            this._updateDisplays(a)
        },
        getValue: function(a) {
            return this._values.get(a)
        },
        setDefault: function(a, b) {
            this._defaults.set(a, b);
            this.resetValue(a)
        },
        getString: function(a) {
            return this._values.get(a)
        },
        setString: function(a, b) {
            this.setValue(a,
                b)
        },
        getInt: function(a) {
            return this._values.get(a)
        },
        modifyInt: function(a, b) {
            return Math.floor(this.modifyValue(a, b))
        },
        setInt: function(a, b) {
            this.setValue(a, b)
        },
        getFloat: function(a) {
            return this._values.get(a)
        },
        setFloat: function(a, b) {
            this.setValue(a, b)
        },
        getBool: function(a) {
            return this._values.get(a)
        },
        setBool: function(a, b) {
            this.setValue(a, b)
        },
        _getStackLength: function() {
            return this._stack.length
        },
        _getLocalize: function() {
            return this._localize
        },
        _getSound: function() {
            return this._sound
        },
        _getAssets: function() {
            return this._assets
        },
        _getInput: function() {
            return this._input
        },
        _getDispatcher: function() {
            return this._dispatcher
        },
        log: function() {
            null
        },
        __class__: i.WorkinCloud,
        __properties__: {
            get_dispatcher: "_getDispatcher",
            get_input: "_getInput",
            get_assets: "_getAssets",
            get_sound: "_getSound",
            get_localize: "_getLocalize"
        }
    };
    i.WorkinUtils = function() {};
    j["com.workinman.utils.WorkinUtils"] = i.WorkinUtils;
    i.WorkinUtils.__name__ = ["com", "workinman", "utils", "WorkinUtils"];
    i.WorkinUtils.getRandom = function(a, b, c) {
        null == c && (c = !0);
        var d = Math.random();
        1 == d && (d = 0.99);
        return c ? a + Math.floor(d * (b + 1 - a)) : a + d * (b - a)
    };
    ma = function() {
        this.parent = this.firstChild = this.next = this.firstComponent = null;
        this._compMap = {}
    };
    j["flambe.Entity"] = ma;
    ma.__name__ = ["flambe", "Entity"];
    ma.__interfaces__ = [z.Disposable];
    ma.prototype = {
        dispose: function() {
            for (null != this.parent && this.parent.removeChild(this); null != this.firstComponent;) this.firstComponent.dispose();
            this.disposeChildren()
        },
        disposeChildren: function() {
            for (; null != this.firstChild;) this.firstChild.dispose()
        },
        removeChild: function(a) {
            for (var b =
                    null, c = this.firstChild; null != c;) {
                var d = c.next;
                if (c == a) {
                    null == b ? this.firstChild = d : b.next = d;
                    c.parent = null;
                    c.next = null;
                    break
                }
                b = c;
                c = d
            }
        },
        addChild: function(a, b) {
            null == b && (b = !0);
            null != a.parent && a.parent.removeChild(a);
            a.parent = this;
            if (b) {
                for (var c = null, d = this.firstChild; null != d;) c = d, d = d.next;
                null != c ? c.next = a : this.firstChild = a
            } else a.next = this.firstChild, this.firstChild = a;
            return this
        },
        remove: function(a) {
            for (var b = null, c = this.firstComponent; null != c;) {
                var d = c.next;
                if (c == a) {
                    null == b ? this.firstComponent = d : b._internal_init(this,
                        d);
                    delete this._compMap[c.get_name()];
                    c.onRemoved();
                    c._internal_init(null, null);
                    break
                }
                b = c;
                c = d
            }
        },
        add: function(a) {
            a.dispose();
            var b = a.get_name(),
                c = this._compMap[b];
            null != c && this.remove(c);
            this._compMap[b] = a;
            b = null;
            for (c = this.firstComponent; null != c;) b = c, c = c.next;
            null != b ? b.next = a : this.firstComponent = a;
            a._internal_init(this, null);
            a.onAdded();
            return this
        },
        __class__: ma
    };
    z.PackageLog = function() {};
    j["flambe.util.PackageLog"] = z.PackageLog;
    z.PackageLog.__name__ = ["flambe", "util", "PackageLog"];
    m = {
        Platform: function() {}
    };
    j["flambe.platform.Platform"] = m.Platform;
    m.Platform.__name__ = ["flambe", "platform", "Platform"];
    m.Platform.prototype = {
        __class__: m.Platform
    };
    m.html = {};
    m.html.HtmlPlatform = function() {};
    j["flambe.platform.html.HtmlPlatform"] = m.html.HtmlPlatform;
    m.html.HtmlPlatform.__name__ = ["flambe", "platform", "html", "HtmlPlatform"];
    m.html.HtmlPlatform.__interfaces__ = [m.Platform];
    m.html.HtmlPlatform.prototype = {
        createRenderer: function(a) {
            return new m.html.CanvasRenderer(a)
        },
        getY: function(a, b) {
            return this._stage.scaleFactor *
                (a.clientY - b.top)
        },
        getX: function(a, b) {
            return this._stage.scaleFactor * (a.clientX - b.left)
        },
        getRenderer: function() {
            return this._renderer
        },
        getExternal: function() {
            null == this._external && (this._external = new m.html.HtmlExternal);
            return this._external
        },
        getWeb: function() {
            null == this._web && (this._web = new m.html.HtmlWeb(this._container));
            return this._web
        },
        getKeyboard: function() {
            return this._keyboard
        },
        getTouch: function() {
            return this._touch
        },
        getMouse: function() {
            return this._mouse
        },
        getPointer: function() {
            return this._pointer
        },
        update: function(a) {
            var b = (a - this._lastUpdate) / 1E3;
            this._lastUpdate = a;
            this._skipFrame ? this._skipFrame = !1 : (this.mainLoop.update(b), this.mainLoop.render(this._renderer))
        },
        getTime: function() {
            return Date.now() / 1E3
        },
        createLogHandler: function(a) {
            return m.html.HtmlLogHandler.isSupported() ? new m.html.HtmlLogHandler(a) : null
        },
        getLocale: function() {
            var a = R.window.navigator.language;
            null == a && (a = R.window.navigator.userLanguage);
            return a
        },
        getStorage: function() {
            if (null == this._storage) {
                var a = null;
                try {
                    a = R.window.localStorage
                } catch (b) {}
                null !=
                    a ? this._storage = new m.html.HtmlStorage(a) : (ga.logger.warn("localStorage is unavailable, falling back to unpersisted storage", null), this._storage = new m.DummyStorage)
            }
            return this._storage
        },
        getStage: function() {
            return this._stage
        },
        loadAssetPack: function(a) {
            return (new m.html.HtmlAssetPackLoader(this, a)).promise
        },
        init: function() {
            var a = this;
            ga.logger.info("Initializing HTML platform", null);
            m.html.HtmlUtil.fixAndroidMath();
            var b = null;
            try {
                b = R.window.flambe.canvas
            } catch (c) {}
            b.setAttribute("tabindex", "0");
            b.style.outlineStyle =
                "none";
            b.setAttribute("moz-opaque", "true");
            this._stage = new m.html.HtmlStage(b);
            this._pointer = new m.BasicPointer;
            this._mouse = new m.html.HtmlMouse(this._pointer, b);
            this._keyboard = new m.BasicKeyboard;
            this._renderer = this.createRenderer(b);
            W.hasGPU.set__(!0);
            this.mainLoop = new m.MainLoop;
            this._container = b.parentNode;
            this._container.style.overflow = "hidden";
            this._container.style.position = "relative";
            this._container.style.msTouchAction = "none";
            var d = 0,
                f = function(c) {
                    if (!(1E3 > c.timeStamp - d)) {
                        var f = b.getBoundingClientRect(),
                            n = a.getX(c, f),
                            f = a.getY(c, f);
                        switch (c.type) {
                            case "mousedown":
                                c.target == b && (c.preventDefault(), a._mouse.submitDown(n, f, c.button), c.target.focus());
                                break;
                            case "mousemove":
                                a._mouse.submitMove(n, f);
                                break;
                            case "mouseup":
                                a._mouse.submitUp(n, f, c.button);
                                break;
                            case "mousewheel":
                            case "DOMMouseScroll":
                                a._mouse.submitScroll(n, f, "mousewheel" == c.type ? c.wheelDelta / 40 : -c.detail) && c.preventDefault()
                        }
                    }
                };
            window.addEventListener("mousedown", f, !1);
            window.addEventListener("mousemove", f, !1);
            window.addEventListener("mouseup",
                f, !1);
            b.addEventListener("mousewheel", f, !1);
            b.addEventListener("DOMMouseScroll", f, !1);
            var n = "undefined" != typeof R.window.ontouchstart,
                f = "msMaxTouchPoints" in window.navigator && 1 < window.navigator.msMaxTouchPoints;
            if (n || f) {
                var e = new m.BasicTouch(this._pointer, f ? window.navigator.msMaxTouchPoints : 4);
                this._touch = e;
                f = function(b) {
                    var c = n ? b.changedTouches : [b],
                        f = b.target.getBoundingClientRect();
                    d = b.timeStamp;
                    switch (b.type) {
                        case "touchstart":
                        case "MSPointerDown":
                            b.preventDefault();
                            m.html.HtmlUtil.SHOULD_HIDE_MOBILE_BROWSER &&
                                m.html.HtmlUtil.hideMobileBrowser();
                            for (b = 0; b < c.length;) {
                                var s = c[b];
                                ++b;
                                var F = a.getX(s, f),
                                    g = a.getY(s, f),
                                    s = (n ? s.identifier : s.pointerId) | 0;
                                e.submitDown(s, F, g)
                            }
                            break;
                        case "touchmove":
                        case "MSPointerMove":
                            b.preventDefault();
                            for (b = 0; b < c.length;) s = c[b], ++b, F = a.getX(s, f), g = a.getY(s, f), s = (n ? s.identifier : s.pointerId) | 0, e.submitMove(s, F, g);
                            break;
                        case "touchend":
                        case "touchcancel":
                        case "MSPointerUp":
                            for (b = 0; b < c.length;) s = c[b], ++b, F = a.getX(s, f), g = a.getY(s, f), s = (n ? s.identifier : s.pointerId) | 0, e.submitUp(s, F, g)
                    }
                };
                n ? (b.addEventListener("touchstart", f, !1), b.addEventListener("touchmove", f, !1), b.addEventListener("touchend", f, !1), b.addEventListener("touchcancel", f, !1)) : (b.addEventListener("MSPointerDown", f, !1), b.addEventListener("MSPointerMove", f, !1), b.addEventListener("MSPointerUp", f, !1))
            } else this._touch = new m.DummyTouch;
            f = function(b) {
                switch (b.type) {
                    case "keydown":
                        a._keyboard.submitDown(b.keyCode) && b.preventDefault();
                        break;
                    case "keyup":
                        a._keyboard.submitUp(b.keyCode)
                }
            };
            b.addEventListener("keydown", f, !1);
            b.addEventListener("keyup",
                f, !1);
            var s = R.window.onerror;
            R.window.onerror = function(a, b, c) {
                W.uncaughtError.emit1(a);
                return null != s ? s(a, b, c) : !1
            };
            var F = m.html.HtmlUtil.loadExtension("hidden", R.document);
            null != F.value && (f = function() {
                W.hidden.set__(ia.field(R.document, F.field))
            }, f(), R.document.addEventListener(F.prefix + "visibilitychange", f, !1), W.hidden.get_changed().connect(function(b) {
                b || (a._skipFrame = !0)
            }));
            this._lastUpdate = Date.now();
            this._skipFrame = !1;
            var g = m.html.HtmlUtil.loadExtension("requestAnimationFrame").value;
            if (null !=
                g) {
                var i = R.window.performance,
                    h = null != i && m.html.HtmlUtil.polyfill("now", i);
                h ? this._lastUpdate = i.now() : ga.logger.warn("No monotonic timer support, falling back to the system date", null);
                var j = null,
                    j = function(c) {
                        a.update(h ? i.now() : c);
                        g(j, b)
                    };
                g(j, b)
            } else ga.logger.warn("No requestAnimationFrame support, falling back to setInterval", null), R.window.setInterval(function() {
                a.update(Date.now())
            }, 1E3 / 60)
        },
        __class__: m.html.HtmlPlatform
    };
    z.Value = function(a, b) {
        this._value = a;
        null != b && (this._changed = new z.Signal2(b))
    };
    j["flambe.util.Value"] = z.Value;
    z.Value.__name__ = ["flambe", "util", "Value"];
    z.Value.prototype = {
        get_changed: function() {
            null == this._changed && (this._changed = new z.Signal2);
            return this._changed
        },
        set__: function(a) {
            var b = this._value;
            a != b && (this._value = a, null != this._changed && this._changed.emit2(a, b));
            return a
        },
        watch: function(a) {
            a(this._value, this._value);
            return this.get_changed().connect(a)
        },
        __class__: z.Value,
        __properties__: {
            set__: "set__",
            get__: "get__",
            get_changed: "get_changed"
        }
    };
    z.SignalConnection = function(a,
        b) {
        this._internal_next = null;
        this._signal = a;
        this._internal_listener = b;
        this.stayInList = !0
    };
    j["flambe.util.SignalConnection"] = z.SignalConnection;
    z.SignalConnection.__name__ = ["flambe", "util", "SignalConnection"];
    z.SignalConnection.__interfaces__ = [z.Disposable];
    z.SignalConnection.prototype = {
        dispose: function() {
            null != this._signal && (this._signal._internal_disconnect(this), this._signal = null)
        },
        once: function() {
            this.stayInList = !1;
            return this
        },
        __class__: z.SignalConnection
    };
    z.SignalBase = function(a) {
        this._head = null !=
            a ? new z.SignalConnection(this, a) : null;
        this._deferredTasks = null
    };
    j["flambe.util.SignalBase"] = z.SignalBase;
    z.SignalBase.__name__ = ["flambe", "util", "SignalBase"];
    z.SignalBase.prototype = {
        listRemove: function(a) {
            for (var b = null, c = this._head; null != c;) {
                if (c == a) {
                    a = c._internal_next;
                    null == b ? this._head = a : b._internal_next = a;
                    break
                }
                b = c;
                c = c._internal_next
            }
        },
        listAdd: function(a, b) {
            if (b) a._internal_next = this._head, this._head = a;
            else {
                for (var c = null, d = this._head; null != d;) c = d, d = d._internal_next;
                null != c ? c._internal_next = a :
                    this._head = a
            }
        },
        didEmit: function(a) {
            for (this._head = a; null != this._deferredTasks;) this._deferredTasks.fn(), this._deferredTasks = this._deferredTasks.next
        },
        willEmit: function() {
            var a = this._head;
            this._head = z.SignalBase.DISPATCHING_SENTINEL;
            return a
        },
        defer: function(a) {
            for (var b = null, c = this._deferredTasks; null != c;) b = c, c = c.next;
            a = new z._SignalBase.Task(a);
            null != b ? b.next = a : this._deferredTasks = a
        },
        emit2: function(a, b) {
            for (var c = this.willEmit(), d = c; null != d;) d._internal_listener(a, b), d.stayInList || d.dispose(), d = d._internal_next;
            this.didEmit(c)
        },
        emit1: function(a) {
            for (var b = this.willEmit(), c = b; null != c;) c._internal_listener(a), c.stayInList || c.dispose(), c = c._internal_next;
            this.didEmit(b)
        },
        emit0: function() {
            for (var a = this.willEmit(), b = a; null != b;) b._internal_listener(), b.stayInList || b.dispose(), b = b._internal_next;
            this.didEmit(a)
        },
        _internal_disconnect: function(a) {
            var b = this;
            this._head == z.SignalBase.DISPATCHING_SENTINEL ? this.defer(function() {
                b.listRemove(a)
            }) : this.listRemove(a)
        },
        connectImpl: function(a, b) {
            var c = this,
                d = new z.SignalConnection(this,
                    a);
            this._head == z.SignalBase.DISPATCHING_SENTINEL ? this.defer(function() {
                c.listAdd(d, b)
            }) : this.listAdd(d, b);
            return d
        },
        __class__: z.SignalBase
    };
    z.Signal2 = function(a) {
        z.SignalBase.call(this, a)
    };
    j["flambe.util.Signal2"] = z.Signal2;
    z.Signal2.__name__ = ["flambe", "util", "Signal2"];
    z.Signal2.__super__ = z.SignalBase;
    z.Signal2.prototype = C(z.SignalBase.prototype, {
        connect: function(a, b) {
            null == b && (b = !1);
            return this.connectImpl(a, b)
        },
        __class__: z.Signal2
    });
    z.Signal1 = function(a) {
        z.SignalBase.call(this, a)
    };
    j["flambe.util.Signal1"] =
        z.Signal1;
    z.Signal1.__name__ = ["flambe", "util", "Signal1"];
    z.Signal1.__super__ = z.SignalBase;
    z.Signal1.prototype = C(z.SignalBase.prototype, {
        connect: function(a, b) {
            null == b && (b = !1);
            return this.connectImpl(a, b)
        },
        __class__: z.Signal1
    });
    ca = {
        AnimatedFloat: function(a, b) {
            z.Value.call(this, a, b)
        }
    };
    j["flambe.animation.AnimatedFloat"] = ca.AnimatedFloat;
    ca.AnimatedFloat.__name__ = ["flambe", "animation", "AnimatedFloat"];
    ca.AnimatedFloat.__super__ = z.Value;
    ca.AnimatedFloat.prototype = C(z.Value.prototype, {
        set_behavior: function(a) {
            this._behavior =
                a;
            this.update(0);
            return a
        },
        update: function(a) {
            null != this._behavior && (z.Value.prototype.set__.call(this, this._behavior.update(a)), this._behavior.isComplete() && (this._behavior = null))
        },
        set__: function(a) {
            this._behavior = null;
            return z.Value.prototype.set__.call(this, a)
        },
        __class__: ca.AnimatedFloat
    });
    W = function() {};
    j["flambe.System"] = W;
    W.__name__ = ["flambe", "System"];
    W.__properties__ = {
        get_keyboard: "get_keyboard",
        get_touch: "get_touch",
        get_pointer: "get_pointer",
        get_stage: "get_stage"
    };
    W.init = function() {
        W._calledInit ||
            (W._platform.init(), W._calledInit = !0)
    };
    W.createTexture = function(a, b) {
        return W._platform.getRenderer().createEmptyTexture(a, b)
    };
    z.Logger = function(a) {
        this._handler = a
    };
    j["flambe.util.Logger"] = z.Logger;
    z.Logger.__name__ = ["flambe", "util", "Logger"];
    z.Logger.prototype = {
        log: function(a, b, c) {
            null != this._handler && (null == b && (b = ""), null != c && (b = z.Strings.withFields(b, c)), this._handler.log(a, b))
        },
        warn: function(a, b) {
            this.log(z.LogLevel.Warn, a, b)
        },
        info: function(a, b) {
            this.log(z.LogLevel.Info, a, b)
        },
        __class__: z.Logger
    };
    ga = function() {};
    j["flambe.Log"] = ga;
    ga.__name__ = ["flambe", "Log"];
    ga.__super__ = z.PackageLog;
    ga.prototype = C(z.PackageLog.prototype, {
        __class__: ga
    });
    U = function(a) {
        null == a && (a = 1);
        this._internal_realDt = 0;
        this.scale = new ca.AnimatedFloat(a)
    };
    j["flambe.SpeedAdjuster"] = U;
    U.__name__ = ["flambe", "SpeedAdjuster"];
    U.__super__ = ha;
    U.prototype = C(ha.prototype, {
        onUpdate: function(a) {
            0 < this._internal_realDt && (a = this._internal_realDt, this._internal_realDt = 0);
            this.scale.update(a)
        },
        get_name: function() {
            return "SpeedAdjuster_5"
        },
        __class__: U
    });
    ca.Behavior = function() {};
    j["flambe.animation.Behavior"] = ca.Behavior;
    ca.Behavior.__name__ = ["flambe", "animation", "Behavior"];
    ca.Behavior.prototype = {
        __class__: ca.Behavior
    };
    ca.Binding = function() {};
    j["flambe.animation.Binding"] = ca.Binding;
    ca.Binding.__name__ = ["flambe", "animation", "Binding"];
    ca.Binding.__interfaces__ = [ca.Behavior];
    ca.Binding.prototype = {
        isComplete: function() {
            return !1
        },
        update: function() {
            var a = this._target._value;
            return null != this._fn ? this._fn(a) : a
        },
        __class__: ca.Binding
    };
    X = {};
    X.AssetType = j["flambe.asset.AssetType"] = {
        __ename__: ["flambe", "asset", "AssetType"],
        __constructs__: ["Image", "Audio", "Data"]
    };
    X.AssetType.Image = ["Image", 0];
    X.AssetType.Image.toString = J;
    X.AssetType.Image.__enum__ = X.AssetType;
    X.AssetType.Audio = ["Audio", 1];
    X.AssetType.Audio.toString = J;
    X.AssetType.Audio.__enum__ = X.AssetType;
    X.AssetType.Data = ["Data", 2];
    X.AssetType.Data.toString = J;
    X.AssetType.Data.__enum__ = X.AssetType;
    X.AssetEntry = function(a, b, c, d) {
        this.name = a;
        this.url = b;
        this.type = c;
        this.bytes = d
    };
    j["flambe.asset.AssetEntry"] =
        X.AssetEntry;
    X.AssetEntry.__name__ = ["flambe", "asset", "AssetEntry"];
    X.AssetEntry.prototype = {
        getUrlExtension: function() {
            return z.Strings.getFileExtension(this.url.split("?")[0]).toLowerCase()
        },
        __class__: X.AssetEntry
    };
    X.AssetPack = function() {};
    j["flambe.asset.AssetPack"] = X.AssetPack;
    X.AssetPack.__name__ = ["flambe", "asset", "AssetPack"];
    X.AssetPack.prototype = {
        __class__: X.AssetPack,
        __properties__: {
            get_manifest: "get_manifest"
        }
    };
    ba = void 0;
    R = void 0;
    ba = function() {};
    j["js.Boot"] = ba;
    ba.__name__ = ["js", "Boot"];
    ba.__string_rec =
        function(a, b) {
            if (null == a) return "null";
            if (5 <= b.length) return "<...>";
            var c = typeof a;
            if ("function" == c && (a.__name__ || a.__ename__)) c = "object";
            switch (c) {
                case "object":
                    if (a instanceof Array) {
                        if (a.__enum__) {
                            if (2 == a.length) return a[0];
                            for (var c = a[0] + "(", b = b + "\t", d = 2, f = a.length; d < f;) var n = d++,
                                c = 2 != n ? c + ("," + ba.__string_rec(a[n], b)) : c + ba.__string_rec(a[n], b);
                            return c + ")"
                        }
                        d = a.length;
                        c = "[";
                        b += "\t";
                        for (f = 0; f < d;) n = f++, c += (0 < n ? "," : "") + ba.__string_rec(a[n], b);
                        return c + "]"
                    }
                    try {
                        f = a.toString
                    } catch (e) {
                        return "???"
                    }
                    if (null !=
                        f && f != Object.toString && (c = a.toString(), "[object Object]" != c)) return c;
                    f = null;
                    c = "{\n";
                    b += "\t";
                    d = null != a.hasOwnProperty;
                    for (f in a)
                        if (!d || a.hasOwnProperty(f)) "prototype" == f || "__class__" == f || "__super__" == f || "__interfaces__" == f || "__properties__" == f || (2 != c.length && (c += ", \n"), c += b + f + " : " + ba.__string_rec(a[f], b));
                    b = b.substring(1);
                    return c + ("\n" + b + "}");
                case "function":
                    return "<function>";
                case "string":
                    return a;
                default:
                    return "" + a
            }
        };
    ba.__interfLoop = function(a, b) {
        if (null == a) return !1;
        if (a == b) return !0;
        var c =
            a.__interfaces__;
        if (null != c)
            for (var d = 0, f = c.length; d < f;) {
                var n = d++,
                    n = c[n];
                if (n == b || ba.__interfLoop(n, b)) return !0
            }
        return ba.__interfLoop(a.__super__, b)
    };
    ba.__instanceof = function(a, b) {
        try {
            if (a instanceof b) return b == Array ? null == a.__enum__ : !0;
            if (ba.__interfLoop(a.__class__, b)) return !0
        } catch (c) {
            if (null == b) return !1
        }
        switch (b) {
            case Ga:
                return Math.ceil(a % 2147483648) === a;
            case Ea:
                return "number" == typeof a;
            case Fa:
                return !0 === a || !1 === a;
            case String:
                return "string" == typeof a;
            case Ha:
                return !0;
            default:
                if (null == a) return !1;
                if (b == Ia && null != a.__name__) return !0;
                null;
                if (b == Ja && null != a.__ename__) return !0;
                null;
                return a.__enum__ == b
        }
    };
    ba.__cast = function(a, b) {
        if (ba.__instanceof(a, b)) return a;
        throw "Cannot cast " + I.string(a) + " to " + I.string(b);
    };
    z.Strings = function() {};
    j["flambe.util.Strings"] = z.Strings;
    z.Strings.__name__ = ["flambe", "util", "Strings"];
    z.Strings.getFileExtension = function(a) {
        var b = a.lastIndexOf(".");
        return 0 < b ? S.substr(a, b + 1, null) : null
    };
    z.Strings.removeFileExtension = function(a) {
        var b = a.lastIndexOf(".");
        return 0 < b ?
            S.substr(a, 0, b) : a
    };
    z.Strings.joinPath = function(a, b) {
        47 != a.charCodeAt(a.length - 1) && (a += "/");
        return a + b
    };
    z.Strings.withFields = function(a, b) {
        var c = b.length;
        if (0 < c) {
            for (var a = a + (0 < a.length ? " [" : "["), d = 0; d < c;) {
                0 < d && (a += ", ");
                var f = b[d],
                    n = b[d + 1];
                if (ba.__instanceof(n, Error)) {
                    var e = n.stack;
                    null != e && (n = e)
                }
                a += f + "=" + I.string(n);
                d += 2
            }
            a += "]"
        }
        return a
    };
    R = function() {};
    j["js.Lib"] = R;
    R.__name__ = ["js", "Lib"];
    X.Manifest = function() {
        this._entries = []
    };
    j["flambe.asset.Manifest"] = X.Manifest;
    X.Manifest.__name__ = ["flambe",
        "asset", "Manifest"
    ];
    X.Manifest.build = function(a, b) {
        null == b && (b = !0);
        var c = X.Manifest._buildManifest.get(a);
        if (null == c) {
            if (b) throw z.Strings.withFields("Missing asset pack", ["name", a]);
            return null
        }
        return c.clone()
    };
    X.Manifest.inferType = function(a) {
        a = z.Strings.getFileExtension(a.split("?")[0]);
        if (null != a) switch (a.toLowerCase()) {
            case "png":
            case "jpg":
            case "gif":
                return X.AssetType.Image;
            case "ogg":
            case "m4a":
            case "mp3":
            case "wav":
                return X.AssetType.Audio
        }
        return X.AssetType.Data
    };
    X.Manifest.createBuildManifests =
        function() {
            var a = new T;
            a.set("initial_load", [{
                name: "ui/start/start_bg.png",
                md5: "703d3e66df751231d179b8a4521f9460",
                bytes: 325259
            }, {
                name: "ui/splash/splash_title.png",
                md5: "823b66d52c4f0cd2bc51be44aad56a67",
                bytes: 150623
            }, {
                name: "ui/splash/splash_logo.png",
                md5: "dda78e3013160aa1343c91964ad35d51",
                bytes: 22427
            }, {
                name: "ui/splash/splash_bg.jpg",
                md5: "fe466ac9bd8efc396c554464c3fadc7f",
                bytes: 146927
            }, {
                name: "ui/splash/btn_sound_on.png",
                md5: "8f96d8429a412b81cf34b9181f718da8",
                bytes: 35362
            }, {
                name: "ui/splash/btn_sound_off.png",
                md5: "07cac9a61b71796818bdaaae0110cef8",
                bytes: 36555
            }, {
                name: "ui/level_select/btn_red_down.png",
                md5: "2f4fcf7ff31a4d959a00acb680dd4cea",
                bytes: 41389
            }, {
                name: "ui/level_select/btn_red.png",
                md5: "8dd02fdd1e6a271f473959d89a9bf379",
                bytes: 36387
            }, {
                name: "ui/level_select/btn_purple_down.png",
                md5: "a27b8074df8f112d9673cefb94dc0983",
                bytes: 37617
            }, {
                name: "ui/level_select/btn_purple.png",
                md5: "c2f5cb986c84bc19b9fc409df784f66a",
                bytes: 36152
            }, {
                name: "ui/level_select/btn_orange_down.png",
                md5: "1b9dd8f91ae7c848553bf874afc699f3",
                bytes: 40867
            }, {
                name: "ui/level_select/btn_orange.png",
                md5: "9c38265b4c02f774ab72da6e4b8b056b",
                bytes: 36787
            }, {
                name: "ui/level_select/btn_green_down.png",
                md5: "d9efe4efdd232cb66434c64ef5e3427c",
                bytes: 41415
            }, {
                name: "ui/level_select/btn_green.png",
                md5: "0bc35fbd8f5da1320b8614d83ab16485",
                bytes: 37322
            }, {
                name: "ui/level_select/bg_levelselect.png",
                md5: "dc0b8cfbde8acc7b840289fb23677fd5",
                bytes: 186408
            }, {
                name: "audio/SlideWhistle_UP1.ogg",
                md5: "0beac8dcaec2389d6eaa5fcc68e58dac",
                bytes: 6968
            }, {
                name: "audio/SlideWhistle_UP1.mp3",
                md5: "422087eb4c40f63f001e92e4e16296f9",
                bytes: 4594
            }, {
                name: "audio/Seagull1.ogg",
                md5: "5602f1206884e9ea21f4504f6d66d747",
                bytes: 5709
            }, {
                name: "audio/Seagull1.mp3",
                md5: "dd10abc4477ce7f6ade137bace521c5e",
                bytes: 2705
            }, {
                name: "audio/sbmb_gamemusicloop_v8b.ogg",
                md5: "ab4d141e728c1359467145d6bf1c506e",
                bytes: 242878
            }, {
                name: "audio/sbmb_gamemusicloop_v8b.mp3",
                md5: "f1627d30f6b486a45027473ad7617c8f",
                bytes: 259452
            }, {
                name: "audio/sbmb_gamemusicloop_v8a.ogg",
                md5: "ab3a63b933f4469ae91c7254be898547",
                bytes: 240678
            }, {
                name: "audio/sbmb_gamemusicloop_v8a.mp3",
                md5: "224df063dd703b5d5fefe9f3c0ce3d84",
                bytes: 259452
            }, {
                name: "audio/Banjo2.ogg",
                md5: "88dc883713e69dd1b70548b0c80d4781",
                bytes: 6779
            }, {
                name: "audio/Banjo2.mp3",
                md5: "ba6281d7689e0fac2f0bfb62e51d3baf",
                bytes: 4271
            }, {
                name: "audio/Balloon1a.ogg",
                md5: "b50c0bd130597b19448f34074f8141fa",
                bytes: 6200
            }, {
                name: "audio/Balloon1a.mp3",
                md5: "e928f150fa8a5e7ddcd592e5cdfad0cb",
                bytes: 3647
            }]);
            a.set("gameplay_universal", [{
                    name: "ui/menu/btn_quit.png",
                    md5: "39900b79334331206cd4639c2426c074",
                    bytes: 36617
                }, {
                    name: "ui/menu/btn_play.png",
                    md5: "b447a8910ad74342bebf2a39aa3e017c",
                    bytes: 35088
                }, {
                    name: "ui/menu/btn_help.png",
                    md5: "6baabb01bc2201afcc8d9f47b49b7aa5",
                    bytes: 36911
                }, {
                    name: "ui/help/help_bg_red.png",
                    md5: "07e723d9eab9172b774ba34d664ba0ef",
                    bytes: 112957
                }, {
                    name: "ui/help/help_bg_green.png",
                    md5: "92fcc9b16cbc43ce4ea967ac145b96a2",
                    bytes: 113788
                }, {
                    name: "ui/help/help_8.png",
                    md5: "f59dd7676e2aeadbd2a4042f42ba86cc",
                    bytes: 34512
                }, {
                    name: "ui/help/help_7.png",
                    md5: "afa3457a61e7347f67e210fc230515ef",
                    bytes: 27650
                }, {
                    name: "ui/help/help_6.png",
                    md5: "c802b19caab28edff59a4c297e0e8374",
                    bytes: 27611
                }, {
                    name: "ui/help/help_5.png",
                    md5: "188bc5a2a3024971aff0812978931a68",
                    bytes: 19698
                }, {
                    name: "ui/help/help_4.png",
                    md5: "d0000d4fbeab2f2524f7c9b30da78eed",
                    bytes: 22480
                }, {
                    name: "ui/help/help_3.png",
                    md5: "4cafe208c61842eb746211d6f171cda8",
                    bytes: 50058
                }, {
                    name: "ui/help/help_2.png",
                    md5: "829486cd44d12e3ed9b98ee359e331e4",
                    bytes: 32321
                }, {
                    name: "ui/help/help_1.png",
                    md5: "2bdf69b580c2ee2cf60697f1674a72c3",
                    bytes: 13544
                }, {
                    name: "ui/gameplay_hud/levelBar.png",
                    md5: "9b39cbda27358c523cbfde7a1ee2e1cd",
                    bytes: 3348
                }, {
                    name: "ui/gameplay_hud/btn_pause.png",
                    md5: "c44e93ab8b7faf5d2e959d17d12b3595",
                    bytes: 12751
                }, {
                    name: "ui/gameplay_hud/btn_clearAll.png",
                    md5: "f9db8cc8296f799064cac45b897d6bf4",
                    bytes: 21178
                }, {
                    name: "ui/gameplay_hud/border_top.png",
                    md5: "eaf52d7aafbf48ca96f238d332b293d1",
                    bytes: 43816
                }, {
                    name: "ui/gameplay_hud/border_left.png",
                    md5: "311cf1aec168857de2a07bde9694be1c",
                    bytes: 139224
                }, {
                    name: "ui/gameplay_hud/bonus_bg.png",
                    md5: "6993f42e446c3e73f295308a0a26cf0e",
                    bytes: 18176
                }, {
                    name: "ui/btn_base2.png",
                    md5: "b55e8ea9ce4b85eac1fd6092497fcf37",
                    bytes: 66013
                }, {
                    name: "flump_zap/library.json",
                    md5: "84dd86da3b5bd790cba539f139f65166",
                    bytes: 572
                }, {
                    name: "flump_zap/atlas1.png",
                    md5: "7cfc8ebd1dad5ac8f180335949ce6b53",
                    bytes: 89680
                }, {
                    name: "flump_zap/atlas0.png",
                    md5: "84cb218f52c11a6622297c8a489a3a77",
                    bytes: 78797
                }, {
                    name: "flump_marbles/library.json",
                    md5: "3d69062f5e638169f7e36a019106fa4b",
                    bytes: 21720
                }, {
                    name: "flump_marbles/atlas0.png",
                    md5: "e29b29b102036951a536cc1ebd220a11",
                    bytes: 234681
                }, {
                    name: "flump_line/library.json",
                    md5: "4acfd410b178003a383fba79c50b8365",
                    bytes: 3806
                }, {
                    name: "flump_line/atlas1.png",
                    md5: "b420d7cdc7688795339c233f36b7f601",
                    bytes: 851
                }, {
                    name: "flump_line/atlas0.png",
                    md5: "509c4e349f7693a7b9e0ede5cefc4fd3",
                    bytes: 3704
                }, {
                    name: "flump_border/library.json",
                    md5: "459e42886245586b3c32d9047eb23b4f",
                    bytes: 4435
                }, {
                    name: "flump_border/atlas0.png",
                    md5: "d16e43fe9d72bb51ef938fe7c2b598c3",
                    bytes: 16772
                }, {
                    name: "elements/sign_red.png",
                    md5: "2d8025314b4cfd1582b61a6a82e807d4",
                    bytes: 49407
                }, {
                    name: "elements/sign_green.png",
                    md5: "24349dab9f918b7e11ac26d7bf93c804",
                    bytes: 50752
                }, {
                    name: "elements/pipe.png",
                    md5: "54ce1a01686ccff1ff278ac79e4f55f2",
                    bytes: 296900
                },
                {
                    name: "elements/fist.png",
                    md5: "6ef2b6de3b912d28b4409dbde944b969",
                    bytes: 380186
                }, {
                    name: "elements/cursor.png",
                    md5: "94ebf8ec6a2294dc61f85f6cf163dfba",
                    bytes: 12448
                }, {
                    name: "elements/bonus_squidward.png",
                    md5: "949848b3a620a44d97369142dbe994cc",
                    bytes: 34808
                }, {
                    name: "elements/bonus_spongebob.png",
                    md5: "410f07f043299911d343b9f54325f25a",
                    bytes: 29125
                }, {
                    name: "elements/bonus_sandy.png",
                    md5: "4ea1d7f69f1c9b74dc1b13c43461b502",
                    bytes: 37263
                }, {
                    name: "elements/bonus_plankton.png",
                    md5: "a6d1cf9fc14d9fd998ab5fdd43a60310",
                    bytes: 22639
                },
                {
                    name: "elements/bonus_patrick.png",
                    md5: "b8d0026232655291a2a55c51c9b3237e",
                    bytes: 51894
                }, {
                    name: "elements/bonus_gary.png",
                    md5: "aca8287e0ae6ad4e64c91956b684350b",
                    bytes: 23707
                }, {
                    name: "elements/arrow.png",
                    md5: "2442155c0ff223e50f4ad3847c9d18ee",
                    bytes: 5129
                }, {
                    name: "bg/background_9.jpg",
                    md5: "22ed2ee513b2a74ffcaad311c688ce60",
                    bytes: 52280
                }, {
                    name: "bg/background_8.jpg",
                    md5: "eeaf65b2b1a758071dd6f4388f86a74d",
                    bytes: 71445
                }, {
                    name: "bg/background_7.jpg",
                    md5: "e7fb880a9abacabc0aa0cd77933b32eb",
                    bytes: 130130
                }, {
                    name: "bg/background_6.jpg",
                    md5: "0fe7b7b8687a2aa80bf5968aace9781a",
                    bytes: 100706
                }, {
                    name: "bg/background_5.jpg",
                    md5: "f0fc27113ced34ba03ca2dc06a85606a",
                    bytes: 106109
                }, {
                    name: "bg/background_40.jpg",
                    md5: "0daedf0a3817cdedd737aefaee0a190d",
                    bytes: 80332
                }, {
                    name: "bg/background_4.jpg",
                    md5: "54af808368336fdd895bb57b488ecccd",
                    bytes: 80905
                }, {
                    name: "bg/background_39.jpg",
                    md5: "7bc6c644e601ec2d996f02160a2e5022",
                    bytes: 68543
                }, {
                    name: "bg/background_38.jpg",
                    md5: "ea914bf90ed2a93012655cc6affbfffe",
                    bytes: 81079
                }, {
                    name: "bg/background_37.jpg",
                    md5: "eac827b12ec6e44320b47a637c85863d",
                    bytes: 66614
                }, {
                    name: "bg/background_36.jpg",
                    md5: "22ee0ecde5e68ca4fc2afa14038c7b08",
                    bytes: 48609
                }, {
                    name: "bg/background_35.jpg",
                    md5: "265af7d0d0ec5ad84c41d200c0241768",
                    bytes: 37086
                }, {
                    name: "bg/background_34.jpg",
                    md5: "00f9c4fe41ef02e39652903328b1aa2a",
                    bytes: 95425
                }, {
                    name: "bg/background_33.jpg",
                    md5: "157eb792bf5ada4bbbb33d968af7b9c3",
                    bytes: 58177
                }, {
                    name: "bg/background_32.jpg",
                    md5: "79670e45c9c94da25b7c2a1f6f5c9776",
                    bytes: 74265
                }, {
                    name: "bg/background_31.jpg",
                    md5: "57c38971147bf01773bac849b97a166a",
                    bytes: 91890
                }, {
                    name: "bg/background_30.jpg",
                    md5: "82156b43e6ea90b10baac3fb7070b816",
                    bytes: 67367
                }, {
                    name: "bg/background_3.jpg",
                    md5: "c3001cd5e957e63a758b82eec5d20a54",
                    bytes: 102974
                }, {
                    name: "bg/background_29.jpg",
                    md5: "108ca0e8ec4674e85c3e6a09387624ae",
                    bytes: 68161
                }, {
                    name: "bg/background_28.jpg",
                    md5: "dc4a2d41890b397b2ca99c2693e6f6ce",
                    bytes: 83287
                }, {
                    name: "bg/background_27.jpg",
                    md5: "d5bdf6b03f925bd357ed09aed603321e",
                    bytes: 59440
                }, {
                    name: "bg/background_26.jpg",
                    md5: "cb676e24219744743311744852a14c65",
                    bytes: 69189
                }, {
                    name: "bg/background_25.jpg",
                    md5: "1d52c5ab97e0574b041dff8489bec821",
                    bytes: 30281
                }, {
                    name: "bg/background_24.jpg",
                    md5: "50e89254d398a503b7d5a688788ab830",
                    bytes: 97440
                }, {
                    name: "bg/background_23.jpg",
                    md5: "34d7e4de4d263edffbcdde09a30c99c5",
                    bytes: 55526
                }, {
                    name: "bg/background_22.jpg",
                    md5: "431d694bef3fe94beb2287cf1eba7596",
                    bytes: 71815
                }, {
                    name: "bg/background_21.jpg",
                    md5: "e79652f2ebf7856b911530fdb870ec87",
                    bytes: 28847
                }, {
                    name: "bg/background_20.jpg",
                    md5: "9c6a1b565aa29687a582667e5b7c2bc8",
                    bytes: 62975
                }, {
                    name: "bg/background_2.jpg",
                    md5: "e72d5c5e681deffd74b7804629f609d5",
                    bytes: 86514
                }, {
                    name: "bg/background_19.jpg",
                    md5: "02eb5c2cb4f068592c7a6d86527866eb",
                    bytes: 39651
                }, {
                    name: "bg/background_18.jpg",
                    md5: "c5539e435ff57b229a294435644f54e4",
                    bytes: 83739
                }, {
                    name: "bg/background_17.jpg",
                    md5: "49d80bd16f3cfc5b97e3d785fd05c0c3",
                    bytes: 50098
                }, {
                    name: "bg/background_16.jpg",
                    md5: "c202868afe50c8db76e48c291f3d7ae3",
                    bytes: 78272
                }, {
                    name: "bg/background_15.jpg",
                    md5: "8a13e9447c2e23c3d1e6162e5125134f",
                    bytes: 39814
                }, {
                    name: "bg/background_14.jpg",
                    md5: "b80c15e509902f54f5324ec31a6e224b",
                    bytes: 25178
                }, {
                    name: "bg/background_13.jpg",
                    md5: "dc555d090a6733ee6c8754090585870b",
                    bytes: 59957
                }, {
                    name: "bg/background_12.jpg",
                    md5: "6b86d90029c3a6648e9417f691d4a60d",
                    bytes: 57267
                }, {
                    name: "bg/background_11.jpg",
                    md5: "6e39a703cc48ab15ab2e5163edfd964c",
                    bytes: 89885
                }, {
                    name: "bg/background_10.jpg",
                    md5: "2b5f7330b3240d2a073c30329fdf70b3",
                    bytes: 39793
                }, {
                    name: "bg/background_1.jpg",
                    md5: "7e3d7fce05b7d8f1c66946634d9d6541",
                    bytes: 48417
                }, {
                    name: "audio/warble2.ogg",
                    md5: "ce0340c2a62a7c76b24927b4194d0164",
                    bytes: 8989
                }, {
                    name: "audio/warble2.mp3",
                    md5: "19e50b4e3d7136c081087f4a0454ac69",
                    bytes: 14930
                }, {
                    name: "audio/Squish1.ogg",
                    md5: "da69819a3263004d1af979bed4ab3c83",
                    bytes: 6119
                }, {
                    name: "audio/Squish1.mp3",
                    md5: "6f7f51a72dba2749103f5fac91f277ec",
                    bytes: 3174
                }, {
                    name: "audio/SlideWhistle_DN1.ogg",
                    md5: "85d6e841ddf5987b99597a0b40f7a568",
                    bytes: 7045
                }, {
                    name: "audio/SlideWhistle_DN1.mp3",
                    md5: "814d5ab2ae2ea46b53358e0f5d983674",
                    bytes: 5221
                }, {
                    name: "audio/sbmsg_transitionv3.ogg",
                    md5: "d2869f2a4c169653507645310fe8f743",
                    bytes: 38176
                }, {
                    name: "audio/sbmsg_transitionv3.mp3",
                    md5: "b6a50523a59a9eabc0b335407d33bb33",
                    bytes: 39234
                }, {
                    name: "audio/sbmsg_transitionv2.ogg",
                    md5: "366af78dfed9b40b4f6781e7b03f93cc",
                    bytes: 19900
                }, {
                    name: "audio/sbmsg_transitionv2.mp3",
                    md5: "3d6a9c95b3ed6bbe2c5e19c9f208094b",
                    bytes: 23561
                }, {
                    name: "audio/pop_4.ogg",
                    md5: "acc5fba62035c0eef2eb0689478a625a",
                    bytes: 4025
                }, {
                    name: "audio/pop_4.mp3",
                    md5: "e627307a41b0d0d3d0799fbe4c32b4a7",
                    bytes: 979
                }, {
                    name: "audio/pop_3.ogg",
                    md5: "4505e033b2fbf99925a581a93dc325a3",
                    bytes: 4171
                }, {
                    name: "audio/pop_3.mp3",
                    md5: "2d3a48795dd3dd6d8537fb490b695b3c",
                    bytes: 1293
                }, {
                    name: "audio/pop_2.ogg",
                    md5: "6fefeb7b6e8ea16d032e6c55ebb71c7e",
                    bytes: 4175
                }, {
                    name: "audio/pop_2.mp3",
                    md5: "9584a3a8082e4432c567ef4173d8f718",
                    bytes: 1293
                }, {
                    name: "audio/pop_1.ogg",
                    md5: "4b0b07d319b1af5244128ab586c75d76",
                    bytes: 4182
                }, {
                    name: "audio/pop_1.mp3",
                    md5: "d1573cafafffda5a1bcd2bbf32b45a03",
                    bytes: 1293
                }, {
                    name: "audio/piano9.ogg",
                    md5: "bcf46f73363e7913227a89245c17eccc",
                    bytes: 5405
                }, {
                    name: "audio/piano9.mp3",
                    md5: "8e8efed444319adb19e92388d6423dfa",
                    bytes: 3488
                }, {
                    name: "audio/piano8.ogg",
                    md5: "01f00d43f6755967db9e997440d4436f",
                    bytes: 5467
                }, {
                    name: "audio/piano8.mp3",
                    md5: "937bfbd13b2d4bf287a9e9c285d7a497",
                    bytes: 3488
                }, {
                    name: "audio/piano7.ogg",
                    md5: "1a505dfa319a4e6084cae33d25aa3639",
                    bytes: 5708
                }, {
                    name: "audio/piano7.mp3",
                    md5: "1a185b9e5820ea6d7f58ea7e49a87da7",
                    bytes: 3958
                }, {
                    name: "audio/piano6.ogg",
                    md5: "7cdea18bd8854792e339acc9c65832a4",
                    bytes: 5637
                }, {
                    name: "audio/piano6.mp3",
                    md5: "52b762736ae0eaf9890f2040325604ae",
                    bytes: 3958
                }, {
                    name: "audio/piano5.ogg",
                    md5: "5df26b27757d89a6ab50eef6fd29c5bc",
                    bytes: 5845
                }, {
                    name: "audio/piano5.mp3",
                    md5: "78c0083fc95d6a836e09a49b214d0358",
                    bytes: 4272
                }, {
                    name: "audio/piano4.ogg",
                    md5: "a15479d6fede7eff8af412b663b14b32",
                    bytes: 5759
                }, {
                    name: "audio/piano4.mp3",
                    md5: "562aed77b3ea14c4ab7b802990242be9",
                    bytes: 4115
                }, {
                    name: "audio/piano3.ogg",
                    md5: "1e590a31356525a0c551eaa8372a5d97",
                    bytes: 5934
                }, {
                    name: "audio/piano3.mp3",
                    md5: "4801e40ecdd7a6a312917ce09cb78ad2",
                    bytes: 3957
                }, {
                    name: "audio/piano2.ogg",
                    md5: "0d523917bded121cb81237bb27f47268",
                    bytes: 5689
                }, {
                    name: "audio/piano2.mp3",
                    md5: "7db8aa5f68c4e5f016e7fce17568f031",
                    bytes: 3644
                }, {
                    name: "audio/piano15.ogg",
                    md5: "3af2f0aa1f35f20ccd563d38ab6e55c5",
                    bytes: 5096
                }, {
                    name: "audio/piano15.mp3",
                    md5: "4f5e32dc7492269cf6e442727c9b29f2",
                    bytes: 3174
                }, {
                    name: "audio/piano14.ogg",
                    md5: "0cb67dac5527c69c68f1fa51268f0ae1",
                    bytes: 5456
                }, {
                    name: "audio/piano14.mp3",
                    md5: "3c7493ca102c4720e1963d5678ccbbe9",
                    bytes: 3645
                }, {
                    name: "audio/piano13.ogg",
                    md5: "648d45c9d28e68415cf4f573f4cfeb3d",
                    bytes: 5286
                }, {
                    name: "audio/piano13.mp3",
                    md5: "386f4e682fe2c833cf52398e77ce7c36",
                    bytes: 3801
                }, {
                    name: "audio/piano12.ogg",
                    md5: "c564b6d4d340ecbcc75d14afc23b83a8",
                    bytes: 5445
                }, {
                    name: "audio/piano12.mp3",
                    md5: "08372ff46a40d4cad5d73ddd1cc271e0",
                    bytes: 4115
                }, {
                    name: "audio/piano11.ogg",
                    md5: "9029426713e9e88511346726596a62ab",
                    bytes: 5203
                }, {
                    name: "audio/piano11.mp3",
                    md5: "05c46df95e09eca476202817ea546eee",
                    bytes: 3645
                }, {
                    name: "audio/piano10.ogg",
                    md5: "19675bfa32ca287e963be535db11d189",
                    bytes: 5404
                }, {
                    name: "audio/piano10.mp3",
                    md5: "bef990dc78c4de4caec10204c7494d55",
                    bytes: 4115
                }, {
                    name: "audio/piano1.ogg",
                    md5: "9e3d24098f5dc161141c865efb102788",
                    bytes: 6229
                }, {
                    name: "audio/piano1.mp3",
                    md5: "2c28f2bfefd2530c58f28b83c48471e7",
                    bytes: 4427
                }, {
                    name: "audio/newboing1.ogg",
                    md5: "a1f6d36956f71b7394352cc838f9fa1d",
                    bytes: 5056
                }, {
                    name: "audio/newboing1.mp3",
                    md5: "267a3565d6fa242e2044f2ec1ad46cd7",
                    bytes: 2551
                }, {
                    name: "audio/jellybuzz.ogg",
                    md5: "4dc0c50b9c8e2794725cd195fa6b7db6",
                    bytes: 20866
                }, {
                    name: "audio/jellybuzz.mp3",
                    md5: "fcc1218314ead866a3566dcd3e6ab2d4",
                    bytes: 20732
                }, {
                    name: "audio/Honk1.ogg",
                    md5: "0e18927e06c4b97933f080e2b8e07d46",
                    bytes: 5491
                }, {
                    name: "audio/Honk1.mp3",
                    md5: "95ea1d0add979ece05a3365a038173b8",
                    bytes: 2390
                }, {
                    name: "audio/harp_flourish_06.ogg",
                    md5: "27f4cbbefc1d19309b93ad91dd315cd3",
                    bytes: 13730
                }, {
                    name: "audio/harp_flourish_06.mp3",
                    md5: "240dfc656771b0b0126550199d80de2b",
                    bytes: 14940
                }, {
                    name: "audio/floot1.ogg",
                    md5: "ec8df647f252173153619e6c4767d82b",
                    bytes: 6181
                }, {
                    name: "audio/floot1.mp3",
                    md5: "ad8b5e2f5e029f5e4b657115acd1222c",
                    bytes: 3958
                }, {
                    name: "audio/fireball_by_13.ogg",
                    md5: "ed5de50cd030c65f9934812ccccf41d7",
                    bytes: 17563
                }, {
                    name: "audio/fireball_by_13.mp3",
                    md5: "330f6f1fec74fc0c8e0c181843641f00",
                    bytes: 16818
                }, {
                    name: "audio/fartbutton2.ogg",
                    md5: "bc60972b8bbaba2cd7dc03f7ff88f71c",
                    bytes: 5297
                }, {
                    name: "audio/fartbutton2.mp3",
                    md5: "9800a2edcb95a4fa87ed1a297eb459c3",
                    bytes: 1926
                }, {
                    name: "audio/electrical_burst_02.ogg",
                    md5: "11f3e883a309c2b8d6053e19760c6049",
                    bytes: 11880
                }, {
                    name: "audio/electrical_burst_02.mp3",
                    md5: "8af23fbf01ef50e5f205346713d4b148",
                    bytes: 9927
                }, {
                    name: "audio/clink8.ogg",
                    md5: "df3b161712faf386aedb0f2eaa628f31",
                    bytes: 3674
                }, {
                    name: "audio/clink8.mp3",
                    md5: "615bc954ca9ae4d525bd89c45d43e9df",
                    bytes: 667
                }, {
                    name: "audio/clink7.ogg",
                    md5: "10de8c6c326f1af53c576f1c6bcf9dfb",
                    bytes: 3926
                }, {
                    name: "audio/clink7.mp3",
                    md5: "67b8c0614ef7c12c12be2e0cd710e310",
                    bytes: 823
                }, {
                    name: "audio/clink6.ogg",
                    md5: "d203c0390f8470e39aac2d2e3deace4d",
                    bytes: 3720
                }, {
                    name: "audio/clink6.mp3",
                    md5: "2ac10fd5c23dc8dc749e8f3ffd2d49a5",
                    bytes: 667
                }, {
                    name: "audio/clink5.ogg",
                    md5: "4992bb7afb1e31bcaa4244140984274b",
                    bytes: 3953
                }, {
                    name: "audio/clink5.mp3",
                    md5: "a22a237f2139577d26ec42b688759abd",
                    bytes: 823
                }, {
                    name: "audio/clink4.ogg",
                    md5: "6400f9708b9a3cd6589b30a494e8c779",
                    bytes: 3762
                }, {
                    name: "audio/clink4.mp3",
                    md5: "7fee66abf1b3e588f6edddd915afba78",
                    bytes: 667
                }, {
                    name: "audio/clink3.ogg",
                    md5: "f75a8886b5a26c389153b392caa304b5",
                    bytes: 3861
                }, {
                    name: "audio/clink3.mp3",
                    md5: "7190bacad0ee26ca5ef89985e1325f4e",
                    bytes: 823
                }, {
                    name: "audio/clink2.ogg",
                    md5: "18e38e9d619afcca7dbac5357a954fca",
                    bytes: 3938
                }, {
                    name: "audio/clink2.mp3",
                    md5: "1df7298283ce78550b6ed1af456b43ba",
                    bytes: 823
                }, {
                    name: "audio/clink1.ogg",
                    md5: "64bbf179ebae2bb827e2820f15db72b9",
                    bytes: 3756
                }, {
                    name: "audio/clink1.mp3",
                    md5: "b3b86313c9e14863d49eac77d0246b26",
                    bytes: 667
                }, {
                    name: "audio/check_bell.ogg",
                    md5: "cd3e3c626e8d8fce8d9b23be4b3d2be6",
                    bytes: 5344
                }, {
                    name: "audio/check_bell.mp3",
                    md5: "3a81b1249608be9bf41f4da601d99b74",
                    bytes: 3492
                }, {
                    name: "audio/cash_register.ogg",
                    md5: "d3ebefd6019fd6378a2e7697db4428c3",
                    bytes: 16769
                }, {
                    name: "audio/cash_register.mp3",
                    md5: "111b5ced60793632583d13aa45e76855",
                    bytes: 15719
                }, {
                    name: "audio/banjostrum2.ogg",
                    md5: "7646c80cfff1ad17e22795440a768588",
                    bytes: 7806
                }, {
                    name: "audio/banjostrum2.mp3",
                    md5: "f96bdda46aa391b23d3a3b9adfe8d059",
                    bytes: 5686
                }, {
                    name: "audio/bang_fist.ogg",
                    md5: "da9608a9b338a399dfa21982ea92204e",
                    bytes: 11131
                }, {
                    name: "audio/bang_fist.mp3",
                    md5: "d17c9a47b99b8d3eb98ae7dbd9e5bd77",
                    bytes: 8976
                }, {
                    name: "audio/alert_17_descending.ogg",
                    md5: "cca9ea987ec283c6458d0631e97cbed7",
                    bytes: 8606
                }, {
                    name: "audio/alert_17_descending.mp3",
                    md5: "5290005dcdf45f01e9c44adda0584986",
                    bytes: 11650
                }
            ]);
            a.set("fonts_la", [{
                name: "spongeboy_yellow.png",
                md5: "df221116071efdec38a5c758d17ade88",
                bytes: 150710
            }, {
                name: "spongeboy_yellow.fnt",
                md5: "31fc77bbbb5c918ba5b935b2ca944fd2",
                bytes: 24916
            }, {
                name: "spongeboy_glow.png",
                md5: "7ceb083ef0fde0beeb1ad8c61486fcc3",
                bytes: 658514
            }, {
                name: "spongeboy_glow.fnt",
                md5: "11efba0464dff7ee785f0166de76781b",
                bytes: 24917
            }, {
                name: "spongeboy.png",
                md5: "f54dff99c3d1b5844b71a6f547e256e2",
                bytes: 160497
            }, {
                name: "spongeboy.fnt",
                md5: "8dc5aa85221650785f36c951b8d21a5f",
                bytes: 24911
            }, {
                name: "Basic.png",
                md5: "6a36225f74ea1a7793667cffcb1047ce",
                bytes: 622185
            }, {
                name: "Basic.fnt",
                md5: "a0e96df3ee1859e9a082bb8b061791c5",
                bytes: 25155
            }]);
            a.set("fonts_kr", [{
                name: "spongeboy_yellow.png",
                md5: "df221116071efdec38a5c758d17ade88",
                bytes: 150710
            }, {
                name: "spongeboy_yellow.fnt",
                md5: "31fc77bbbb5c918ba5b935b2ca944fd2",
                bytes: 24916
            }, {
                name: "spongeboy_glow.png",
                md5: "7ceb083ef0fde0beeb1ad8c61486fcc3",
                bytes: 658514
            }, {
                name: "spongeboy_glow.fnt",
                md5: "11efba0464dff7ee785f0166de76781b",
                bytes: 24917
            }, {
                name: "spongeboy.png",
                md5: "f54dff99c3d1b5844b71a6f547e256e2",
                bytes: 160497
            }, {
                name: "spongeboy.fnt",
                md5: "8dc5aa85221650785f36c951b8d21a5f",
                bytes: 24911
            }, {
                name: "Basic.png",
                md5: "6a36225f74ea1a7793667cffcb1047ce",
                bytes: 622185
            }, {
                name: "Basic.fnt",
                md5: "a0e96df3ee1859e9a082bb8b061791c5",
                bytes: 25155
            }]);
            a.set("fonts_jp", [{
                name: "spongeboy_yellow.png",
                md5: "df221116071efdec38a5c758d17ade88",
                bytes: 150710
            }, {
                name: "spongeboy_yellow.fnt",
                md5: "31fc77bbbb5c918ba5b935b2ca944fd2",
                bytes: 24916
            }, {
                name: "spongeboy_glow.png",
                md5: "7ceb083ef0fde0beeb1ad8c61486fcc3",
                bytes: 658514
            }, {
                name: "spongeboy_glow.fnt",
                md5: "11efba0464dff7ee785f0166de76781b",
                bytes: 24917
            }, {
                name: "spongeboy.png",
                md5: "f54dff99c3d1b5844b71a6f547e256e2",
                bytes: 160497
            }, {
                name: "spongeboy.fnt",
                md5: "8dc5aa85221650785f36c951b8d21a5f",
                bytes: 24911
            }, {
                name: "Basic.png",
                md5: "6a36225f74ea1a7793667cffcb1047ce",
                bytes: 622185
            }, {
                name: "Basic.fnt",
                md5: "a0e96df3ee1859e9a082bb8b061791c5",
                bytes: 25155
            }]);
            a.set("fonts_en", [{
                    name: "spongeboy_yellow.png",
                    md5: "df221116071efdec38a5c758d17ade88",
                    bytes: 150710
                }, {
                    name: "spongeboy_yellow.fnt",
                    md5: "31fc77bbbb5c918ba5b935b2ca944fd2",
                    bytes: 24916
                }, {
                    name: "spongeboy_glow.png",
                    md5: "7ceb083ef0fde0beeb1ad8c61486fcc3",
                    bytes: 658514
                }, {
                    name: "spongeboy_glow.fnt",
                    md5: "11efba0464dff7ee785f0166de76781b",
                    bytes: 24917
                }, {
                    name: "spongeboy.png",
                    md5: "f54dff99c3d1b5844b71a6f547e256e2",
                    bytes: 160497
                }, {
                    name: "spongeboy.fnt",
                    md5: "8dc5aa85221650785f36c951b8d21a5f",
                    bytes: 24911
                }, {
                    name: "Basic.png",
                    md5: "cf7a6a09922da8eff284000b0de322e7",
                    bytes: 275327
                },
                {
                    name: "Basic.fnt",
                    md5: "b8544d3108a0eb3b425441d6598fd234",
                    bytes: 12012
                }
            ]);
            a.set("fonts_cn", [{
                name: "spongeboy_yellow.png",
                md5: "df221116071efdec38a5c758d17ade88",
                bytes: 150710
            }, {
                name: "spongeboy_yellow.fnt",
                md5: "31fc77bbbb5c918ba5b935b2ca944fd2",
                bytes: 24916
            }, {
                name: "spongeboy_glow.png",
                md5: "7ceb083ef0fde0beeb1ad8c61486fcc3",
                bytes: 658514
            }, {
                name: "spongeboy_glow.fnt",
                md5: "11efba0464dff7ee785f0166de76781b",
                bytes: 24917
            }, {
                name: "spongeboy.png",
                md5: "f54dff99c3d1b5844b71a6f547e256e2",
                bytes: 160497
            }, {
                name: "spongeboy.fnt",
                md5: "8dc5aa85221650785f36c951b8d21a5f",
                bytes: 24911
            }, {
                name: "Basic.png",
                md5: "6a36225f74ea1a7793667cffcb1047ce",
                bytes: 622185
            }, {
                name: "Basic.fnt",
                md5: "a0e96df3ee1859e9a082bb8b061791c5",
                bytes: 25155
            }]);
            a.set("bootstrap", [{
                name: "ui/loading_panel_localized.jpg",
                md5: "12a1fff0444c2e8c43f8f7edcd467661",
                bytes: 137182
            }, {
                name: "ui/loading_panel.jpg",
                md5: "12a1fff0444c2e8c43f8f7edcd467661",
                bytes: 137182
            }, {
                name: "ui/loading_bar_outline.png",
                md5: "655869802b6f3a1c36edf7cfb18bca4b",
                bytes: 342
            }, {
                name: "ui/loading_bar.png",
                md5: "35f0e3103ecfdb81e04812d7a20d83c0",
                bytes: 249
            }, {
                name: "config/translation_la.xml",
                md5: "258edca6e2720c73b81674c421e5d002",
                bytes: 13799
            }, {
                name: "config/translation_kr.xml",
                md5: "258edca6e2720c73b81674c421e5d002",
                bytes: 13799
            }, {
                name: "config/translation_jp.xml",
                md5: "258edca6e2720c73b81674c421e5d002",
                bytes: 13799
            }, {
                name: "config/translation_en.xml",
                md5: "258edca6e2720c73b81674c421e5d002",
                bytes: 13799
            }, {
                name: "config/translation_cn.xml",
                md5: "258edca6e2720c73b81674c421e5d002",
                bytes: 13799
            }, {
                name: "config/config.xml",
                md5: "58f209c602815523db4719df8902d90f",
                bytes: 1614
            }, {
                name: "audio/silent.ogg",
                md5: "3526550092a0e091f382852de5ef2315",
                bytes: 5514
            }, {
                name: "audio/silent.mp3",
                md5: "ba9e6829ba32e427142251a85cbd4fbb",
                bytes: 2114
            }]);
            a.set("air", [{
                name: "icons/icon48.png",
                md5: "e310873f7870789ec2ddffb01e3b9c23",
                bytes: 9187
            }, {
                name: "icons/icon32.png",
                md5: "db4c0e02b46c24bfabbcf33c6807fbb8",
                bytes: 6111
            }, {
                name: "icons/icon16.png",
                md5: "9160a9857f1d99d4d1a5722de41941ba",
                bytes: 3411
            }, {
                name: "icons/icon128.png",
                md5: "0c8d573ff622474a53b7e4c76b75cda7",
                bytes: 34016
            }, {
                name: "Default.png",
                md5: "6617a9132c7566551711a15f42584d38",
                bytes: 4588
            }, {
                name: "Default-568h@2x.png",
                md5: "dc1b6528f2e9312e068aad2f53366b7e",
                bytes: 4912
            }]);
            for (var b = new T, c = a.keys(); c.hasNext();) {
                var d = c.next(),
                    f = new X.Manifest;
                f.set_relativeBasePath("assets");
                for (var n = 0, e = a.get(d); n < e.length;) {
                    var s = e[n];
                    ++n;
                    var F = s.name,
                        g = d + "/" + F + "?v=" + I.string(s.md5),
                        i = X.Manifest.inferType(F);
                    if (i == X.AssetType.Image || i == X.AssetType.Audio) F = z.Strings.removeFileExtension(F);
                    f.add(F, g, s.bytes, i)
                }
                b.set(d, f)
            }
            return b
        };
    X.Manifest.prototype = {
        set_externalBasePath: function(a) {
            this._externalBasePath = a;
            null != a && null;
            return a
        },
        get_externalBasePath: function() {
            return this._externalBasePath
        },
        set_relativeBasePath: function(a) {
            this._relativeBasePath = a;
            null != a && null;
            return a
        },
        get_relativeBasePath: function() {
            return this._relativeBasePath
        },
        getFullURL: function(a) {
            var b = null != this.get_externalBasePath() && X.Manifest._supportsCrossOrigin ? this.get_externalBasePath() : this.get_relativeBasePath(),
                c = null != this.get_externalBasePath() ? this.get_externalBasePath() :
                this.get_relativeBasePath();
            a.type == X.AssetType.Data && (c = b);
            return null != c ? z.Strings.joinPath(c, a.url) : a.url
        },
        clone: function() {
            var a = new X.Manifest;
            a.set_relativeBasePath(this.get_relativeBasePath());
            a.set_externalBasePath(this.get_externalBasePath());
            a._entries = this._entries.slice();
            return a
        },
        iterator: function() {
            return S.iter(this._entries)
        },
        add: function(a, b, c, d) {
            null == c && (c = 0);
            null == d && (d = X.Manifest.inferType(b));
            a = new X.AssetEntry(a, b, d, c);
            this._entries.push(a);
            return a
        },
        __class__: X.Manifest,
        __properties__: {
            set_relativeBasePath: "set_relativeBasePath",
            get_relativeBasePath: "get_relativeBasePath",
            set_externalBasePath: "set_externalBasePath",
            get_externalBasePath: "get_externalBasePath"
        }
    };
    E = {};
    E.BlendMode = j["flambe.display.BlendMode"] = {
        __ename__: ["flambe", "display", "BlendMode"],
        __constructs__: ["Normal", "Add", "CopyExperimental"]
    };
    E.BlendMode.Normal = ["Normal", 0];
    E.BlendMode.Normal.toString = J;
    E.BlendMode.Normal.__enum__ = E.BlendMode;
    E.BlendMode.Add = ["Add", 1];
    E.BlendMode.Add.toString = J;
    E.BlendMode.Add.__enum__ = E.BlendMode;
    E.BlendMode.CopyExperimental = ["CopyExperimental",
        2
    ];
    E.BlendMode.CopyExperimental.toString = J;
    E.BlendMode.CopyExperimental.__enum__ = E.BlendMode;
    fa = {
        Point: function(a, b) {
            null == b && (b = 0);
            null == a && (a = 0);
            this.x = a;
            this.y = b
        }
    };
    j["flambe.math.Point"] = fa.Point;
    fa.Point.__name__ = ["flambe", "math", "Point"];
    fa.Point.prototype = {
        __class__: fa.Point
    };
    E.Sprite = function() {
        this.blendMode = this.scissor = null;
        var a = this;
        this._flags = 11;
        this._localMatrix = new fa.Matrix;
        var b = function() {
            a._flags |= 12
        };
        this.x = new ca.AnimatedFloat(0, b);
        this.y = new ca.AnimatedFloat(0, b);
        this.rotation =
            new ca.AnimatedFloat(0, b);
        this.scaleX = new ca.AnimatedFloat(1, b);
        this.scaleY = new ca.AnimatedFloat(1, b);
        this.anchorX = new ca.AnimatedFloat(0, b);
        this.anchorY = new ca.AnimatedFloat(0, b);
        this.alpha = new ca.AnimatedFloat(1)
    };
    j["flambe.display.Sprite"] = E.Sprite;
    E.Sprite.__name__ = ["flambe", "display", "Sprite"];
    E.Sprite.hitTest = function(a, b, c) {
        var d = a._compMap.Sprite_1;
        if (null != d) {
            if (3 != (d._flags & 3)) return null;
            d.getLocalMatrix().inverseTransform(b, c, E.Sprite._scratchPoint) && (b = E.Sprite._scratchPoint.x, c = E.Sprite._scratchPoint.y);
            var f = d.scissor;
            if (null != f && !f.contains(b, c)) return null
        }
        a = E.Sprite.hitTestBackwards(a.firstChild, b, c);
        return null != a ? a : null != d && d.containsLocal(b, c) ? d : null
    };
    E.Sprite.render = function(a, b) {
        var c = a._compMap.Sprite_1;
        if (null != c) {
            var d = c.alpha._value;
            if (0 == (c._flags & 1) || 0 >= d) return;
            b.save();
            1 > d && b.multiplyAlpha(d);
            null != c.blendMode && b.setBlendMode(c.blendMode);
            d = c.getLocalMatrix();
            b.transform(d.m00, d.m10, d.m01, d.m11, d.m02, d.m12);
            d = c.scissor;
            null != d && b.applyScissor(d.x, d.y, d.width, d.height);
            c.draw(b)
        }
        d =
            a._compMap.Director_0;
        if (null != d)
            for (var d = d.occludedScenes, f = 0; f < d.length;) {
                var n = d[f];
                ++f;
                E.Sprite.render(n, b)
            }
        for (d = a.firstChild; null != d;) f = d.next, E.Sprite.render(d, b), d = f;
        null != c && b.restore()
    };
    E.Sprite.hitTestBackwards = function(a, b, c) {
        if (null != a) {
            var d = E.Sprite.hitTestBackwards(a.next, b, c);
            return null != d ? d : E.Sprite.hitTest(a, b, c)
        }
        return null
    };
    E.Sprite.__super__ = ha;
    E.Sprite.prototype = C(ha.prototype, {
        set_pointerEnabled: function(a) {
            this._flags = z.BitSets.set(this._flags, 2, a);
            return a
        },
        set_visible: function(a) {
            this._flags =
                z.BitSets.set(this._flags, 1, a);
            return a
        },
        get_pointerUp: function() {
            null == this._internal_pointerUp && (this._internal_pointerUp = new z.Signal1);
            return this._internal_pointerUp
        },
        get_pointerMove: function() {
            null == this._internal_pointerMove && (this._internal_pointerMove = new z.Signal1);
            return this._internal_pointerMove
        },
        get_pointerDown: function() {
            null == this._internal_pointerDown && (this._internal_pointerDown = new z.Signal1);
            return this._internal_pointerDown
        },
        draw: function() {},
        onUpdate: function(a) {
            this.x.update(a);
            this.y.update(a);
            this.rotation.update(a);
            this.scaleX.update(a);
            this.scaleY.update(a);
            this.alpha.update(a);
            this.anchorX.update(a);
            this.anchorY.update(a)
        },
        getLocalMatrix: function() {
            0 != (this._flags & 4) && (this._flags &= -5, this._localMatrix.compose(this.x._value, this.y._value, this.scaleX._value, this.scaleY._value, 3.141592653589793 * this.rotation._value / 180), this._localMatrix.translate(-this.anchorX._value, -this.anchorY._value));
            return this._localMatrix
        },
        containsLocal: function(a, b) {
            return 0 <= a && a < this.getNaturalWidth() &&
                0 <= b && b < this.getNaturalHeight()
        },
        getNaturalHeight: function() {
            return 0
        },
        getNaturalWidth: function() {
            return 0
        },
        get_name: function() {
            return "Sprite_1"
        },
        __class__: E.Sprite,
        __properties__: C(ha.prototype.__properties__, {
            set_visible: "set_visible",
            get_visible: "get_visible",
            get_pointerDown: "get_pointerDown",
            get_pointerUp: "get_pointerUp",
            set_pointerEnabled: "set_pointerEnabled",
            get_pointerEnabled: "get_pointerEnabled"
        })
    });
    E.FillSprite = function(a, b, c) {
        E.Sprite.call(this);
        this.color = a;
        this.width = new ca.AnimatedFloat(b);
        this.height = new ca.AnimatedFloat(c)
    };
    j["flambe.display.FillSprite"] = E.FillSprite;
    E.FillSprite.__name__ = ["flambe", "display", "FillSprite"];
    E.FillSprite.__super__ = E.Sprite;
    E.FillSprite.prototype = C(E.Sprite.prototype, {
        onUpdate: function(a) {
            E.Sprite.prototype.onUpdate.call(this, a);
            this.width.update(a);
            this.height.update(a)
        },
        getNaturalHeight: function() {
            return this.height._value
        },
        getNaturalWidth: function() {
            return this.width._value
        },
        draw: function(a) {
            a.fillRect(this.color, 0, 0, this.width._value, this.height._value)
        },
        __class__: E.FillSprite
    });
    E.Font = function(a, b) {
        this.name = b;
        this._glyphs = new va;
        for (var c = new E._Font.ConfigParser(a.getFile(b + ".fnt")), d = new va, f = b.lastIndexOf("/"), f = 0 <= f ? S.substr(b, 0, f + 1) : "", n = c.keywords(); n.hasNext();) switch (n.next()) {
            case "info":
                for (var e = c.pairs(); e.hasNext();) {
                    var s = e.next();
                    switch (s.key) {
                        case "size":
                            this.size = s.getInt()
                    }
                }
                break;
            case "page":
                for (var e = 0, F = null, g = c.pairs(); g.hasNext();) switch (s = g.next(), s.key) {
                    case "id":
                        e = s.getInt();
                        break;
                    case "file":
                        F = s.getString()
                }
                d.set(e, a.getTexture(f +
                    z.Strings.removeFileExtension(F)));
                break;
            case "char":
                e = null;
                for (F = c.pairs(); F.hasNext();) switch (s = F.next(), s.key) {
                    case "id":
                        e = new E.Glyph(s.getInt());
                        break;
                    case "x":
                        e.x = s.getInt();
                        break;
                    case "y":
                        e.y = s.getInt();
                        break;
                    case "width":
                        e.width = s.getInt();
                        break;
                    case "height":
                        e.height = s.getInt();
                        break;
                    case "page":
                        e.page = d.get(s.getInt());
                        break;
                    case "xoffset":
                        e.xOffset = s.getInt();
                        break;
                    case "yoffset":
                        e.yOffset = s.getInt();
                        break;
                    case "xadvance":
                        e.xAdvance = s.getInt()
                }
                this._glyphs.set(e.charCode, e);
                break;
            case "kerning":
                e =
                    null;
                F = -1;
                for (g = c.pairs(); g.hasNext();) switch (s = g.next(), s.key) {
                    case "first":
                        e = this._glyphs.get(s.getInt());
                        break;
                    case "second":
                        F = s.getInt();
                        break;
                    case "amount":
                        e._internal_setKerning(F, s.getInt())
                }
        }
    };
    j["flambe.display.Font"] = E.Font;
    E.Font.__name__ = ["flambe", "display", "Font"];
    E.Font.prototype = {
        getGlyphs: function(a) {
            for (var b = [], c = 0, d = a.length; c < d;) {
                var f = c++,
                    f = a.charCodeAt(f),
                    n = this._glyphs.get(f);
                null != n ? b.push(n) : ga.logger.warn("Requested a missing character from font", ["font", this.name, "charCode",
                    f
                ])
            }
            return b
        },
        __class__: E.Font
    };
    E.Glyph = function(a) {
        this.charCode = a
    };
    j["flambe.display.Glyph"] = E.Glyph;
    E.Glyph.__name__ = ["flambe", "display", "Glyph"];
    E.Glyph.prototype = {
        _internal_setKerning: function(a, b) {
            null == this._kernings && (this._kernings = new va);
            this._kernings.set(a, b)
        },
        getKerning: function(a) {
            return null != this._kernings ? this._kernings.get(a) | 0 : 0
        },
        draw: function(a, b, c) {
            0 < this.width && a.drawSubImage(this.page, b + this.xOffset, c + this.yOffset, this.x, this.y, this.width, this.height)
        },
        __class__: E.Glyph
    };
    E._Font = {};
    E._Font.ConfigParser = function(a) {
        this._configText = a;
        this._keywordPattern = new wa("([a-z]+)(.*)", "");
        this._pairPattern = new wa('([a-z]+)=("[^"]*"|[^\\s]+)', "")
    };
    j["flambe.display._Font.ConfigParser"] = E._Font.ConfigParser;
    E._Font.ConfigParser.__name__ = ["flambe", "display", "_Font", "ConfigParser"];
    E._Font.ConfigParser.advance = function(a, b) {
        var c = b.matchedPos();
        return S.substr(a, c.pos + c.len, a.length)
    };
    E._Font.ConfigParser.prototype = {
        pairs: function() {
            var a = this,
                b = this._pairText;
            return {
                next: function() {
                    b =
                        E._Font.ConfigParser.advance(b, a._pairPattern);
                    return new E._Font.ConfigPair(a._pairPattern.matched(1), a._pairPattern.matched(2))
                },
                hasNext: function() {
                    return a._pairPattern.match(b)
                }
            }
        },
        keywords: function() {
            var a = this,
                b = this._configText;
            return {
                next: function() {
                    b = E._Font.ConfigParser.advance(b, a._keywordPattern);
                    a._pairText = a._keywordPattern.matched(2);
                    return a._keywordPattern.matched(1)
                },
                hasNext: function() {
                    return a._keywordPattern.match(b)
                }
            }
        },
        __class__: E._Font.ConfigParser
    };
    E._Font.ConfigPair = function(a,
        b) {
        this.key = a;
        this._value = b
    };
    j["flambe.display._Font.ConfigPair"] = E._Font.ConfigPair;
    E._Font.ConfigPair.__name__ = ["flambe", "display", "_Font", "ConfigPair"];
    E._Font.ConfigPair.prototype = {
        getString: function() {
            return 34 != this._value.charCodeAt(0) ? null : S.substr(this._value, 1, this._value.length - 2)
        },
        getInt: function() {
            return I.parseInt(this._value)
        },
        __class__: E._Font.ConfigPair
    };
    E.Graphics = function() {};
    j["flambe.display.Graphics"] = E.Graphics;
    E.Graphics.__name__ = ["flambe", "display", "Graphics"];
    E.Graphics.prototype = {
        __class__: E.Graphics
    };
    E.ImageSprite = function(a) {
        E.Sprite.call(this);
        this.texture = a
    };
    j["flambe.display.ImageSprite"] = E.ImageSprite;
    E.ImageSprite.__name__ = ["flambe", "display", "ImageSprite"];
    E.ImageSprite.__super__ = E.Sprite;
    E.ImageSprite.prototype = C(E.Sprite.prototype, {
        getNaturalHeight: function() {
            return this.texture.get_height()
        },
        getNaturalWidth: function() {
            return this.texture.get_width()
        },
        draw: function(a) {
            a.drawImage(this.texture, 0, 0)
        },
        __class__: E.ImageSprite
    });
    E.Orientation = j["flambe.display.Orientation"] = {
        __ename__: ["flambe", "display", "Orientation"],
        __constructs__: ["Portrait", "Landscape"]
    };
    E.Orientation.Portrait = ["Portrait", 0];
    E.Orientation.Portrait.toString = J;
    E.Orientation.Portrait.__enum__ = E.Orientation;
    E.Orientation.Landscape = ["Landscape", 1];
    E.Orientation.Landscape.toString = J;
    E.Orientation.Landscape.__enum__ = E.Orientation;
    E.Stage = function() {};
    j["flambe.display.Stage"] = E.Stage;
    E.Stage.__name__ = ["flambe", "display", "Stage"];
    E.Stage.prototype = {
        __class__: E.Stage,
        __properties__: {
            get_width: "get_width",
            get_height: "get_height",
            get_fullscreenSupported: "get_fullscreenSupported"
        }
    };
    E.TextSprite = function(a, b) {
        null == b && (b = "");
        this._width = this._height = 0;
        this._glyphs = this._offsets = this._font = this._text = null;
        E.Sprite.call(this);
        this._font = a;
        this._text = b;
        this._flags |= 32
    };
    j["flambe.display.TextSprite"] = E.TextSprite;
    E.TextSprite.__name__ = ["flambe", "display", "TextSprite"];
    E.TextSprite.__super__ = E.Sprite;
    E.TextSprite.prototype = C(E.Sprite.prototype, {
        updateGlyphs: function() {
            if (0 != (this._flags & 32)) {
                this._flags &=
                    -33;
                this._glyphs = this._font.getGlyphs(this._text);
                this._offsets = [0];
                for (var a = this._height = this._width = 0, b = this._glyphs.length; a < b;) {
                    var c = this._glyphs[a];
                    ++a;
                    a == b ? this._width += c.width : (this._width += c.xAdvance + c.getKerning(this._glyphs[a].charCode), this._offsets.push(this._width));
                    this._height = fa.FMath.max(this._height, c.height + c.yOffset)
                }
            }
        },
        set_font: function(a) {
            this._font = a;
            this._flags |= 32;
            return a
        },
        set_text: function(a) {
            this._text = a;
            this._flags |= 32;
            return a
        },
        getNaturalHeight: function() {
            this.updateGlyphs();
            return this._height
        },
        getNaturalWidth: function() {
            this.updateGlyphs();
            return this._width
        },
        draw: function(a) {
            this.updateGlyphs();
            for (var b = 0, c = this._glyphs.length; b < c;) this._glyphs[b].draw(a, this._offsets[b], 0), ++b
        },
        __class__: E.TextSprite,
        __properties__: C(E.Sprite.prototype.__properties__, {
            set_text: "set_text",
            get_text: "get_text",
            set_font: "set_font",
            get_font: "get_font"
        })
    });
    E.Texture = function() {};
    j["flambe.display.Texture"] = E.Texture;
    E.Texture.__name__ = ["flambe", "display", "Texture"];
    E.Texture.prototype = {
        __class__: E.Texture,
        __properties__: {
            get_width: "get_width",
            get_height: "get_height",
            get_graphics: "get_graphics"
        }
    };
    U = {
        External: function() {}
    };
    j["flambe.external.External"] = U.External;
    U.External.__name__ = ["flambe", "external", "External"];
    U.External.prototype = {
        __class__: U.External,
        __properties__: {
            get_supported: "get_supported"
        }
    };
    h = {};
    h.Key = j["flambe.input.Key"] = {
        __ename__: ["flambe", "input", "Key"],
        __constructs__: "A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,Number0,Number1,Number2,Number3,Number4,Number5,Number6,Number7,Number8,Number9,Numpad0,Numpad1,Numpad2,Numpad3,Numpad4,Numpad5,Numpad6,Numpad7,Numpad8,Numpad9,NumpadAdd,NumpadDecimal,NumpadDivide,NumpadEnter,NumpadMultiply,NumpadSubtract,F1,F2,F3,F4,F5,F6,F7,F8,F9,F10,F11,F12,F13,F14,F15,Left,Up,Right,Down,Alt,Backquote,Backslash,Backspace,CapsLock,Comma,Command,Control,Delete,End,Enter,Equals,Escape,Home,Insert,LeftBracket,Minus,PageDown,PageUp,Period,Quote,RightBracket,Semicolon,Shift,Slash,Space,Tab,Menu,Search,Unknown".split(",")
    };
    h.Key.A = ["A", 0];
    h.Key.A.toString = J;
    h.Key.A.__enum__ = h.Key;
    h.Key.B = ["B", 1];
    h.Key.B.toString = J;
    h.Key.B.__enum__ = h.Key;
    h.Key.C = ["C", 2];
    h.Key.C.toString = J;
    h.Key.C.__enum__ = h.Key;
    h.Key.D = ["D", 3];
    h.Key.D.toString = J;
    h.Key.D.__enum__ = h.Key;
    h.Key.E = ["E", 4];
    h.Key.E.toString = J;
    h.Key.E.__enum__ = h.Key;
    h.Key.F = ["F", 5];
    h.Key.F.toString = J;
    h.Key.F.__enum__ = h.Key;
    h.Key.G = ["G", 6];
    h.Key.G.toString = J;
    h.Key.G.__enum__ = h.Key;
    h.Key.H = ["H", 7];
    h.Key.H.toString = J;
    h.Key.H.__enum__ = h.Key;
    h.Key.I = ["I", 8];
    h.Key.I.toString = J;
    h.Key.I.__enum__ =
        h.Key;
    h.Key.J = ["J", 9];
    h.Key.J.toString = J;
    h.Key.J.__enum__ = h.Key;
    h.Key.K = ["K", 10];
    h.Key.K.toString = J;
    h.Key.K.__enum__ = h.Key;
    h.Key.L = ["L", 11];
    h.Key.L.toString = J;
    h.Key.L.__enum__ = h.Key;
    h.Key.M = ["M", 12];
    h.Key.M.toString = J;
    h.Key.M.__enum__ = h.Key;
    h.Key.N = ["N", 13];
    h.Key.N.toString = J;
    h.Key.N.__enum__ = h.Key;
    h.Key.O = ["O", 14];
    h.Key.O.toString = J;
    h.Key.O.__enum__ = h.Key;
    h.Key.P = ["P", 15];
    h.Key.P.toString = J;
    h.Key.P.__enum__ = h.Key;
    h.Key.Q = ["Q", 16];
    h.Key.Q.toString = J;
    h.Key.Q.__enum__ = h.Key;
    h.Key.R = ["R", 17];
    h.Key.R.toString =
        J;
    h.Key.R.__enum__ = h.Key;
    h.Key.S = ["S", 18];
    h.Key.S.toString = J;
    h.Key.S.__enum__ = h.Key;
    h.Key.T = ["T", 19];
    h.Key.T.toString = J;
    h.Key.T.__enum__ = h.Key;
    h.Key.U = ["U", 20];
    h.Key.U.toString = J;
    h.Key.U.__enum__ = h.Key;
    h.Key.V = ["V", 21];
    h.Key.V.toString = J;
    h.Key.V.__enum__ = h.Key;
    h.Key.W = ["W", 22];
    h.Key.W.toString = J;
    h.Key.W.__enum__ = h.Key;
    h.Key.X = ["X", 23];
    h.Key.X.toString = J;
    h.Key.X.__enum__ = h.Key;
    h.Key.Y = ["Y", 24];
    h.Key.Y.toString = J;
    h.Key.Y.__enum__ = h.Key;
    h.Key.Z = ["Z", 25];
    h.Key.Z.toString = J;
    h.Key.Z.__enum__ = h.Key;
    h.Key.Number0 = ["Number0", 26];
    h.Key.Number0.toString = J;
    h.Key.Number0.__enum__ = h.Key;
    h.Key.Number1 = ["Number1", 27];
    h.Key.Number1.toString = J;
    h.Key.Number1.__enum__ = h.Key;
    h.Key.Number2 = ["Number2", 28];
    h.Key.Number2.toString = J;
    h.Key.Number2.__enum__ = h.Key;
    h.Key.Number3 = ["Number3", 29];
    h.Key.Number3.toString = J;
    h.Key.Number3.__enum__ = h.Key;
    h.Key.Number4 = ["Number4", 30];
    h.Key.Number4.toString = J;
    h.Key.Number4.__enum__ = h.Key;
    h.Key.Number5 = ["Number5", 31];
    h.Key.Number5.toString = J;
    h.Key.Number5.__enum__ = h.Key;
    h.Key.Number6 = ["Number6",
        32
    ];
    h.Key.Number6.toString = J;
    h.Key.Number6.__enum__ = h.Key;
    h.Key.Number7 = ["Number7", 33];
    h.Key.Number7.toString = J;
    h.Key.Number7.__enum__ = h.Key;
    h.Key.Number8 = ["Number8", 34];
    h.Key.Number8.toString = J;
    h.Key.Number8.__enum__ = h.Key;
    h.Key.Number9 = ["Number9", 35];
    h.Key.Number9.toString = J;
    h.Key.Number9.__enum__ = h.Key;
    h.Key.Numpad0 = ["Numpad0", 36];
    h.Key.Numpad0.toString = J;
    h.Key.Numpad0.__enum__ = h.Key;
    h.Key.Numpad1 = ["Numpad1", 37];
    h.Key.Numpad1.toString = J;
    h.Key.Numpad1.__enum__ = h.Key;
    h.Key.Numpad2 = ["Numpad2", 38];
    h.Key.Numpad2.toString = J;
    h.Key.Numpad2.__enum__ = h.Key;
    h.Key.Numpad3 = ["Numpad3", 39];
    h.Key.Numpad3.toString = J;
    h.Key.Numpad3.__enum__ = h.Key;
    h.Key.Numpad4 = ["Numpad4", 40];
    h.Key.Numpad4.toString = J;
    h.Key.Numpad4.__enum__ = h.Key;
    h.Key.Numpad5 = ["Numpad5", 41];
    h.Key.Numpad5.toString = J;
    h.Key.Numpad5.__enum__ = h.Key;
    h.Key.Numpad6 = ["Numpad6", 42];
    h.Key.Numpad6.toString = J;
    h.Key.Numpad6.__enum__ = h.Key;
    h.Key.Numpad7 = ["Numpad7", 43];
    h.Key.Numpad7.toString = J;
    h.Key.Numpad7.__enum__ = h.Key;
    h.Key.Numpad8 = ["Numpad8", 44];
    h.Key.Numpad8.toString =
        J;
    h.Key.Numpad8.__enum__ = h.Key;
    h.Key.Numpad9 = ["Numpad9", 45];
    h.Key.Numpad9.toString = J;
    h.Key.Numpad9.__enum__ = h.Key;
    h.Key.NumpadAdd = ["NumpadAdd", 46];
    h.Key.NumpadAdd.toString = J;
    h.Key.NumpadAdd.__enum__ = h.Key;
    h.Key.NumpadDecimal = ["NumpadDecimal", 47];
    h.Key.NumpadDecimal.toString = J;
    h.Key.NumpadDecimal.__enum__ = h.Key;
    h.Key.NumpadDivide = ["NumpadDivide", 48];
    h.Key.NumpadDivide.toString = J;
    h.Key.NumpadDivide.__enum__ = h.Key;
    h.Key.NumpadEnter = ["NumpadEnter", 49];
    h.Key.NumpadEnter.toString = J;
    h.Key.NumpadEnter.__enum__ =
        h.Key;
    h.Key.NumpadMultiply = ["NumpadMultiply", 50];
    h.Key.NumpadMultiply.toString = J;
    h.Key.NumpadMultiply.__enum__ = h.Key;
    h.Key.NumpadSubtract = ["NumpadSubtract", 51];
    h.Key.NumpadSubtract.toString = J;
    h.Key.NumpadSubtract.__enum__ = h.Key;
    h.Key.F1 = ["F1", 52];
    h.Key.F1.toString = J;
    h.Key.F1.__enum__ = h.Key;
    h.Key.F2 = ["F2", 53];
    h.Key.F2.toString = J;
    h.Key.F2.__enum__ = h.Key;
    h.Key.F3 = ["F3", 54];
    h.Key.F3.toString = J;
    h.Key.F3.__enum__ = h.Key;
    h.Key.F4 = ["F4", 55];
    h.Key.F4.toString = J;
    h.Key.F4.__enum__ = h.Key;
    h.Key.F5 = ["F5", 56];
    h.Key.F5.toString =
        J;
    h.Key.F5.__enum__ = h.Key;
    h.Key.F6 = ["F6", 57];
    h.Key.F6.toString = J;
    h.Key.F6.__enum__ = h.Key;
    h.Key.F7 = ["F7", 58];
    h.Key.F7.toString = J;
    h.Key.F7.__enum__ = h.Key;
    h.Key.F8 = ["F8", 59];
    h.Key.F8.toString = J;
    h.Key.F8.__enum__ = h.Key;
    h.Key.F9 = ["F9", 60];
    h.Key.F9.toString = J;
    h.Key.F9.__enum__ = h.Key;
    h.Key.F10 = ["F10", 61];
    h.Key.F10.toString = J;
    h.Key.F10.__enum__ = h.Key;
    h.Key.F11 = ["F11", 62];
    h.Key.F11.toString = J;
    h.Key.F11.__enum__ = h.Key;
    h.Key.F12 = ["F12", 63];
    h.Key.F12.toString = J;
    h.Key.F12.__enum__ = h.Key;
    h.Key.F13 = ["F13", 64];
    h.Key.F13.toString =
        J;
    h.Key.F13.__enum__ = h.Key;
    h.Key.F14 = ["F14", 65];
    h.Key.F14.toString = J;
    h.Key.F14.__enum__ = h.Key;
    h.Key.F15 = ["F15", 66];
    h.Key.F15.toString = J;
    h.Key.F15.__enum__ = h.Key;
    h.Key.Left = ["Left", 67];
    h.Key.Left.toString = J;
    h.Key.Left.__enum__ = h.Key;
    h.Key.Up = ["Up", 68];
    h.Key.Up.toString = J;
    h.Key.Up.__enum__ = h.Key;
    h.Key.Right = ["Right", 69];
    h.Key.Right.toString = J;
    h.Key.Right.__enum__ = h.Key;
    h.Key.Down = ["Down", 70];
    h.Key.Down.toString = J;
    h.Key.Down.__enum__ = h.Key;
    h.Key.Alt = ["Alt", 71];
    h.Key.Alt.toString = J;
    h.Key.Alt.__enum__ =
        h.Key;
    h.Key.Backquote = ["Backquote", 72];
    h.Key.Backquote.toString = J;
    h.Key.Backquote.__enum__ = h.Key;
    h.Key.Backslash = ["Backslash", 73];
    h.Key.Backslash.toString = J;
    h.Key.Backslash.__enum__ = h.Key;
    h.Key.Backspace = ["Backspace", 74];
    h.Key.Backspace.toString = J;
    h.Key.Backspace.__enum__ = h.Key;
    h.Key.CapsLock = ["CapsLock", 75];
    h.Key.CapsLock.toString = J;
    h.Key.CapsLock.__enum__ = h.Key;
    h.Key.Comma = ["Comma", 76];
    h.Key.Comma.toString = J;
    h.Key.Comma.__enum__ = h.Key;
    h.Key.Command = ["Command", 77];
    h.Key.Command.toString = J;
    h.Key.Command.__enum__ =
        h.Key;
    h.Key.Control = ["Control", 78];
    h.Key.Control.toString = J;
    h.Key.Control.__enum__ = h.Key;
    h.Key.Delete = ["Delete", 79];
    h.Key.Delete.toString = J;
    h.Key.Delete.__enum__ = h.Key;
    h.Key.End = ["End", 80];
    h.Key.End.toString = J;
    h.Key.End.__enum__ = h.Key;
    h.Key.Enter = ["Enter", 81];
    h.Key.Enter.toString = J;
    h.Key.Enter.__enum__ = h.Key;
    h.Key.Equals = ["Equals", 82];
    h.Key.Equals.toString = J;
    h.Key.Equals.__enum__ = h.Key;
    h.Key.Escape = ["Escape", 83];
    h.Key.Escape.toString = J;
    h.Key.Escape.__enum__ = h.Key;
    h.Key.Home = ["Home", 84];
    h.Key.Home.toString =
        J;
    h.Key.Home.__enum__ = h.Key;
    h.Key.Insert = ["Insert", 85];
    h.Key.Insert.toString = J;
    h.Key.Insert.__enum__ = h.Key;
    h.Key.LeftBracket = ["LeftBracket", 86];
    h.Key.LeftBracket.toString = J;
    h.Key.LeftBracket.__enum__ = h.Key;
    h.Key.Minus = ["Minus", 87];
    h.Key.Minus.toString = J;
    h.Key.Minus.__enum__ = h.Key;
    h.Key.PageDown = ["PageDown", 88];
    h.Key.PageDown.toString = J;
    h.Key.PageDown.__enum__ = h.Key;
    h.Key.PageUp = ["PageUp", 89];
    h.Key.PageUp.toString = J;
    h.Key.PageUp.__enum__ = h.Key;
    h.Key.Period = ["Period", 90];
    h.Key.Period.toString = J;
    h.Key.Period.__enum__ =
        h.Key;
    h.Key.Quote = ["Quote", 91];
    h.Key.Quote.toString = J;
    h.Key.Quote.__enum__ = h.Key;
    h.Key.RightBracket = ["RightBracket", 92];
    h.Key.RightBracket.toString = J;
    h.Key.RightBracket.__enum__ = h.Key;
    h.Key.Semicolon = ["Semicolon", 93];
    h.Key.Semicolon.toString = J;
    h.Key.Semicolon.__enum__ = h.Key;
    h.Key.Shift = ["Shift", 94];
    h.Key.Shift.toString = J;
    h.Key.Shift.__enum__ = h.Key;
    h.Key.Slash = ["Slash", 95];
    h.Key.Slash.toString = J;
    h.Key.Slash.__enum__ = h.Key;
    h.Key.Space = ["Space", 96];
    h.Key.Space.toString = J;
    h.Key.Space.__enum__ = h.Key;
    h.Key.Tab = ["Tab", 97];
    h.Key.Tab.toString = J;
    h.Key.Tab.__enum__ = h.Key;
    h.Key.Menu = ["Menu", 98];
    h.Key.Menu.toString = J;
    h.Key.Menu.__enum__ = h.Key;
    h.Key.Search = ["Search", 99];
    h.Key.Search.toString = J;
    h.Key.Search.__enum__ = h.Key;
    h.Key.Unknown = function(a) {
        a = ["Unknown", 100, a];
        a.__enum__ = h.Key;
        a.toString = J;
        return a
    };
    h.Keyboard = function() {};
    j["flambe.input.Keyboard"] = h.Keyboard;
    h.Keyboard.__name__ = ["flambe", "input", "Keyboard"];
    h.Keyboard.prototype = {
        __class__: h.Keyboard,
        __properties__: {
            get_supported: "get_supported"
        }
    };
    h.KeyboardEvent =
        function() {
            this._internal_init(0, null)
        };
    j["flambe.input.KeyboardEvent"] = h.KeyboardEvent;
    h.KeyboardEvent.__name__ = ["flambe", "input", "KeyboardEvent"];
    h.KeyboardEvent.prototype = {
        _internal_init: function(a, b) {
            this.id = a;
            this.key = b
        },
        __class__: h.KeyboardEvent
    };
    h.Mouse = function() {};
    j["flambe.input.Mouse"] = h.Mouse;
    h.Mouse.__name__ = ["flambe", "input", "Mouse"];
    h.Mouse.prototype = {
        __class__: h.Mouse,
        __properties__: {
            get_supported: "get_supported",
            get_x: "get_x",
            get_y: "get_y",
            set_cursor: "set_cursor",
            get_cursor: "get_cursor"
        }
    };
    h.MouseButton = j["flambe.input.MouseButton"] = {
        __ename__: ["flambe", "input", "MouseButton"],
        __constructs__: ["Left", "Middle", "Right", "Unknown"]
    };
    h.MouseButton.Left = ["Left", 0];
    h.MouseButton.Left.toString = J;
    h.MouseButton.Left.__enum__ = h.MouseButton;
    h.MouseButton.Middle = ["Middle", 1];
    h.MouseButton.Middle.toString = J;
    h.MouseButton.Middle.__enum__ = h.MouseButton;
    h.MouseButton.Right = ["Right", 2];
    h.MouseButton.Right.toString = J;
    h.MouseButton.Right.__enum__ = h.MouseButton;
    h.MouseButton.Unknown = function(a) {
        a = ["Unknown",
            3, a
        ];
        a.__enum__ = h.MouseButton;
        a.toString = J;
        return a
    };
    h.MouseCursor = j["flambe.input.MouseCursor"] = {
        __ename__: ["flambe", "input", "MouseCursor"],
        __constructs__: ["Default", "Button", "None"]
    };
    h.MouseCursor.Default = ["Default", 0];
    h.MouseCursor.Default.toString = J;
    h.MouseCursor.Default.__enum__ = h.MouseCursor;
    h.MouseCursor.Button = ["Button", 1];
    h.MouseCursor.Button.toString = J;
    h.MouseCursor.Button.__enum__ = h.MouseCursor;
    h.MouseCursor.None = ["None", 2];
    h.MouseCursor.None.toString = J;
    h.MouseCursor.None.__enum__ = h.MouseCursor;
    h.MouseEvent = function() {
        this._internal_init(0, 0, 0, null)
    };
    j["flambe.input.MouseEvent"] = h.MouseEvent;
    h.MouseEvent.__name__ = ["flambe", "input", "MouseEvent"];
    h.MouseEvent.prototype = {
        _internal_init: function(a, b, c, d) {
            this.id = a;
            this.viewX = b;
            this.viewY = c;
            this.button = d
        },
        __class__: h.MouseEvent
    };
    h.Pointer = function() {};
    j["flambe.input.Pointer"] = h.Pointer;
    h.Pointer.__name__ = ["flambe", "input", "Pointer"];
    h.Pointer.prototype = {
        __class__: h.Pointer,
        __properties__: {
            get_supported: "get_supported",
            get_x: "get_x",
            get_y: "get_y"
        }
    };
    h.EventSource = j["flambe.input.EventSource"] = {
        __ename__: ["flambe", "input", "EventSource"],
        __constructs__: ["Mouse", "Touch"]
    };
    h.EventSource.Mouse = function(a) {
        a = ["Mouse", 0, a];
        a.__enum__ = h.EventSource;
        a.toString = J;
        return a
    };
    h.EventSource.Touch = function(a) {
        a = ["Touch", 1, a];
        a.__enum__ = h.EventSource;
        a.toString = J;
        return a
    };
    h.PointerEvent = function() {
        this._internal_init(0, 0, 0, null, null)
    };
    j["flambe.input.PointerEvent"] = h.PointerEvent;
    h.PointerEvent.__name__ = ["flambe", "input", "PointerEvent"];
    h.PointerEvent.prototype = {
        _internal_init: function(a, b, c, d, f) {
            this.id = a;
            this.viewX = b;
            this.viewY = c;
            this.hit = d;
            this.source = f;
            this._internal_stopped = !1
        },
        __class__: h.PointerEvent
    };
    h.Touch = function() {};
    j["flambe.input.Touch"] = h.Touch;
    h.Touch.__name__ = ["flambe", "input", "Touch"];
    h.Touch.prototype = {
        __class__: h.Touch,
        __properties__: {
            get_supported: "get_supported",
            get_maxPoints: "get_maxPoints",
            get_points: "get_points"
        }
    };
    h.TouchPoint = function(a) {
        this.id = a;
        this._internal_source = h.EventSource.Touch(this)
    };
    j["flambe.input.TouchPoint"] = h.TouchPoint;
    h.TouchPoint.__name__ = ["flambe", "input", "TouchPoint"];
    h.TouchPoint.prototype = {
        _internal_init: function(a, b) {
            this.viewX = a;
            this.viewY = b
        },
        __class__: h.TouchPoint
    };
    fa.FMath = function() {};
    j["flambe.math.FMath"] = fa.FMath;
    fa.FMath.__name__ = ["flambe", "math", "FMath"];
    fa.FMath.max = function(a, b) {
        return a > b ? a : b
    };
    fa.FMath.clamp = function(a, b, c) {
        return a < b ? b : a > c ? c : a
    };
    fa.Matrix = function() {
        this.identity()
    };
    j["flambe.math.Matrix"] = fa.Matrix;
    fa.Matrix.__name__ = ["flambe", "math", "Matrix"];
    fa.Matrix.prototype = {
        inverseTransform: function(a,
            b, c) {
            var d = this.determinant();
            if (0 == d) return !1;
            a -= this.m02;
            b -= this.m12;
            c.x = (a * this.m11 - b * this.m01) / d;
            c.y = (b * this.m00 - a * this.m10) / d;
            return !0
        },
        determinant: function() {
            return this.m00 * this.m11 - this.m01 * this.m10
        },
        translate: function(a, b) {
            this.m02 += this.m00 * a + this.m01 * b;
            this.m12 += this.m11 * b + this.m10 * a
        },
        compose: function(a, b, c, d, f) {
            var n = Math.sin(f),
                f = Math.cos(f);
            this.set(f * c, n * c, -n * d, f * d, a, b)
        },
        identity: function() {
            this.set(1, 0, 0, 1, 0, 0)
        },
        set: function(a, b, c, d, f, n) {
            this.m00 = a;
            this.m01 = c;
            this.m02 = f;
            this.m10 = b;
            this.m11 = d;
            this.m12 = n
        },
        __class__: fa.Matrix
    };
    fa.Rectangle = function(a, b, c, d) {
        null == d && (d = 0);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.set(a, b, c, d)
    };
    j["flambe.math.Rectangle"] = fa.Rectangle;
    fa.Rectangle.__name__ = ["flambe", "math", "Rectangle"];
    fa.Rectangle.prototype = {
        contains: function(a, b) {
            a -= this.x;
            b -= this.y;
            return 0 <= a && 0 <= b && a <= this.width && b <= this.height
        },
        set: function(a, b, c, d) {
            this.x = a;
            this.y = b;
            this.width = c;
            this.height = d
        },
        __class__: fa.Rectangle
    };
    m.BasicAssetPackLoader = function(a, b) {
        this._platform =
            a;
        this.promise = new z.Promise;
        this._bytesLoaded = new T;
        this._pack = new m._BasicAssetPackLoader.BasicAssetPack(b);
        var c = pa.array(b);
        if (0 == c.length) this.handleSuccess();
        else {
            for (var d = 0, f = new T, n = 0; n < c.length;) {
                var e = c[n];
                ++n;
                var s = f.get(e.name);
                null == s && (s = [], f.set(e.name, s));
                s.push(e)
            }
            this._assetsRemaining = pa.count(f);
            for (c = f.iterator(); c.hasNext();)
                if (s = c.next(), s = 1 < s.length ? this.pickBestEntry(s) : s[0], f = this.createPlaceholder(s), null != f) ga.logger.warn("Using an asset placeholder", ["name", s.name, "type",
                    s.type
                ]), this.handleLoad(s, f);
                else {
                    d += s.bytes;
                    f = b.getFullURL(s);
                    try {
                        this.loadEntry(f, s)
                    } catch (F) {
                        this.handleError(s, "Unexpected error: " + I.string(F))
                    }
                }
            this.promise.set_total(d)
        }
    };
    j["flambe.platform.BasicAssetPackLoader"] = m.BasicAssetPackLoader;
    m.BasicAssetPackLoader.__name__ = ["flambe", "platform", "BasicAssetPackLoader"];
    m.BasicAssetPackLoader.prototype = {
        handleTextureError: function(a) {
            this.handleError(a, "Failed to create texture. Is the GPU context unavailable?")
        },
        handleError: function(a, b) {
            ga.logger.warn("Error loading asset pack", ["error", b, "url", a.url]);
            this.promise.error.emit1(z.Strings.withFields(b, ["url", a.url]))
        },
        handleSuccess: function() {
            this.promise.set_result(this._pack)
        },
        handleProgress: function(a, b) {
            this._bytesLoaded.set(a.name, b);
            for (var c = 0, d = this._bytesLoaded.iterator(); d.hasNext();) var f = d.next(),
                c = c + f;
            this.promise.set_progress(c)
        },
        handleLoad: function(a, b) {
            this.handleProgress(a, a.bytes);
            var c = a.name;
            switch (a.type[1]) {
                case 0:
                    this._pack.textures.set(c, b);
                    break;
                case 1:
                    this._pack.sounds.set(c, b);
                    break;
                case 2:
                    this._pack.files.set(c,
                        b)
            }
            this._assetsRemaining -= 1;
            0 >= this._assetsRemaining && this.handleSuccess()
        },
        getAudioFormats: function() {
            return []
        },
        loadEntry: function() {},
        createPlaceholder: function(a) {
            switch (a.type[1]) {
                case 1:
                    if (!pa.has(this.getAudioFormats(), a.getUrlExtension())) return m.DummySound.getInstance()
            }
            return null
        },
        pickBestEntry: function(a) {
            switch (a[0].type[1]) {
                case 1:
                    for (var b = this.getAudioFormats(), c = 0; c < b.length;) {
                        var d = b[c];
                        ++c;
                        for (var f = 0; f < a.length;) {
                            var n = a[f];
                            ++f;
                            if (n.getUrlExtension() == d) return n
                        }
                    }
            }
            return a[0]
        },
        __class__: m.BasicAssetPackLoader
    };
    m._BasicAssetPackLoader = {};
    m._BasicAssetPackLoader.BasicAssetPack = function(a) {
        this._manifest = a;
        this.textures = new T;
        this.sounds = new T;
        this.files = new T
    };
    j["flambe.platform._BasicAssetPackLoader.BasicAssetPack"] = m._BasicAssetPackLoader.BasicAssetPack;
    m._BasicAssetPackLoader.BasicAssetPack.__name__ = ["flambe", "platform", "_BasicAssetPackLoader", "BasicAssetPack"];
    m._BasicAssetPackLoader.BasicAssetPack.__interfaces__ = [X.AssetPack];
    m._BasicAssetPackLoader.BasicAssetPack.prototype = {
        get_manifest: function() {
            return this._manifest
        },
        getFile: function(a, b) {
            null == b && (b = !0);
            var c = this.files.get(a);
            if (null == c && b) throw z.Strings.withFields("Missing file", ["name", a]);
            return c
        },
        getSound: function(a, b) {
            null == b && (b = !0);
            var c = this.sounds.get(a);
            if (null == c && b) throw z.Strings.withFields("Missing sound", ["name", a]);
            return c
        },
        getTexture: function(a, b) {
            null == b && (b = !0);
            var c = this.textures.get(a);
            if (null == c && b) throw z.Strings.withFields("Missing texture", ["name", a]);
            return c
        },
        __class__: m._BasicAssetPackLoader.BasicAssetPack,
        __properties__: {
            get_manifest: "get_manifest"
        }
    };
    m.BasicKeyboard = function() {
        this.down = new z.Signal1;
        this.up = new z.Signal1;
        this.backButton = new z.Signal0;
        this._keyStates = new va
    };
    j["flambe.platform.BasicKeyboard"] = m.BasicKeyboard;
    m.BasicKeyboard.__name__ = ["flambe", "platform", "BasicKeyboard"];
    m.BasicKeyboard.__interfaces__ = [h.Keyboard];
    m.BasicKeyboard.prototype = {
        submitUp: function(a) {
            this._keyStates.exists(a) && (this._keyStates.remove(a), m.BasicKeyboard._sharedEvent._internal_init(m.BasicKeyboard._sharedEvent.id +
                1, m.KeyCodes.toKey(a)), this.up.emit1(m.BasicKeyboard._sharedEvent))
        },
        submitDown: function(a) {
            if (16777238 == a) return null != this.backButton._head ? (this.backButton.emit0(), !0) : !1;
            this._keyStates.exists(a) || (this._keyStates.set(a, !0), m.BasicKeyboard._sharedEvent._internal_init(m.BasicKeyboard._sharedEvent.id + 1, m.KeyCodes.toKey(a)), this.down.emit1(m.BasicKeyboard._sharedEvent));
            return !0
        },
        isDown: function(a) {
            return this._keyStates.exists(m.KeyCodes.toKeyCode(a))
        },
        get_supported: function() {
            return !0
        },
        __class__: m.BasicKeyboard,
        __properties__: {
            get_supported: "get_supported"
        }
    };
    m.BasicMouse = function(a) {
        this._pointer = a;
        this._source = h.EventSource.Mouse(m.BasicMouse._sharedEvent);
        this.down = new z.Signal1;
        this.move = new z.Signal1;
        this.up = new z.Signal1;
        this.scroll = new z.Signal1;
        this._y = this._x = 0;
        this._cursor = h.MouseCursor.Default;
        this._buttonStates = new va
    };
    j["flambe.platform.BasicMouse"] = m.BasicMouse;
    m.BasicMouse.__name__ = ["flambe", "platform", "BasicMouse"];
    m.BasicMouse.__interfaces__ = [h.Mouse];
    m.BasicMouse.prototype = {
        prepare: function(a,
            b, c) {
            this._x = a;
            this._y = b;
            m.BasicMouse._sharedEvent._internal_init(m.BasicMouse._sharedEvent.id + 1, a, b, c)
        },
        submitScroll: function(a, b, c) {
            this._x = a;
            this._y = b;
            if (null == this.scroll._head) return !1;
            this.scroll.emit1(c);
            return !0
        },
        submitUp: function(a, b, c) {
            this._buttonStates.exists(c) && (this._buttonStates.remove(c), this.prepare(a, b, m.MouseCodes.toButton(c)), this._pointer.submitUp(a, b, this._source), this.up.emit1(m.BasicMouse._sharedEvent))
        },
        submitMove: function(a, b) {
            this.prepare(a, b, null);
            this._pointer.submitMove(a,
                b, this._source);
            this.move.emit1(m.BasicMouse._sharedEvent)
        },
        submitDown: function(a, b, c) {
            this._buttonStates.exists(c) || (this._buttonStates.set(c, !0), this.prepare(a, b, m.MouseCodes.toButton(c)), this._pointer.submitDown(a, b, this._source), this.down.emit1(m.BasicMouse._sharedEvent))
        },
        isDown: function(a) {
            return this._buttonStates.exists(m.MouseCodes.toButtonCode(a))
        },
        set_cursor: function(a) {
            return this._cursor = a
        },
        get_cursor: function() {
            return this._cursor
        },
        get_y: function() {
            return this._y
        },
        get_x: function() {
            return this._x
        },
        get_supported: function() {
            return !0
        },
        __class__: m.BasicMouse,
        __properties__: {
            get_supported: "get_supported",
            get_x: "get_x",
            get_y: "get_y",
            set_cursor: "set_cursor",
            get_cursor: "get_cursor"
        }
    };
    m.BasicPointer = function(a, b, c) {
        null == c && (c = !1);
        null == b && (b = 0);
        null == a && (a = 0);
        this.down = new z.Signal1;
        this.move = new z.Signal1;
        this.up = new z.Signal1;
        this._x = a;
        this._y = b;
        this._isDown = c
    };
    j["flambe.platform.BasicPointer"] = m.BasicPointer;
    m.BasicPointer.__name__ = ["flambe", "platform", "BasicPointer"];
    m.BasicPointer.__interfaces__ = [h.Pointer];
    m.BasicPointer.prototype = {
        prepare: function(a, b, c, d) {
            this._x = a;
            this._y = b;
            m.BasicPointer._sharedEvent._internal_init(m.BasicPointer._sharedEvent.id + 1, a, b, c, d)
        },
        submitUp: function(a, b, c) {
            if (this._isDown) {
                this._isDown = !1;
                var d = [],
                    f = E.Sprite.hitTest(W.root, a, b);
                if (null != f) {
                    var n = f.owner;
                    do {
                        var e = n._compMap.Sprite_1;
                        null != e && d.push(e);
                        n = n.parent
                    } while (null != n)
                }
                this.prepare(a, b, f, c);
                for (a = 0; a < d.length;)
                    if (e = d[a], ++a, e = e._internal_pointerUp, null != e && (e.emit1(m.BasicPointer._sharedEvent), m.BasicPointer._sharedEvent._internal_stopped)) return;
                this.up.emit1(m.BasicPointer._sharedEvent)
            }
        },
        submitMove: function(a, b, c) {
            var d = [],
                f = E.Sprite.hitTest(W.root, a, b);
            if (null != f) {
                var n = f.owner;
                do {
                    var e = n._compMap.Sprite_1;
                    null != e && d.push(e);
                    n = n.parent
                } while (null != n)
            }
            this.prepare(a, b, f, c);
            for (a = 0; a < d.length;)
                if (e = d[a], ++a, e = e._internal_pointerMove, null != e && (e.emit1(m.BasicPointer._sharedEvent), m.BasicPointer._sharedEvent._internal_stopped)) return;
            this.move.emit1(m.BasicPointer._sharedEvent)
        },
        submitDown: function(a, b, c) {
            if (!this._isDown) {
                this._isDown = !0;
                var d = [],
                    f = E.Sprite.hitTest(W.root, a, b);
                if (null != f) {
                    var n = f.owner;
                    do {
                        var e = n._compMap.Sprite_1;
                        null != e && d.push(e);
                        n = n.parent
                    } while (null != n)
                }
                this.prepare(a, b, f, c);
                for (a = 0; a < d.length;)
                    if (e = d[a], ++a, e = e._internal_pointerDown, null != e && (e.emit1(m.BasicPointer._sharedEvent), m.BasicPointer._sharedEvent._internal_stopped)) return;
                this.down.emit1(m.BasicPointer._sharedEvent)
            }
        },
        isDown: function() {
            return this._isDown
        },
        get_y: function() {
            return this._y
        },
        get_x: function() {
            return this._x
        },
        get_supported: function() {
            return !0
        },
        __class__: m.BasicPointer,
        __properties__: {
            get_supported: "get_supported",
            get_x: "get_x",
            get_y: "get_y"
        }
    };
    m.BasicTouch = function(a, b) {
        null == b && (b = 4);
        this._pointer = a;
        this._maxPoints = b;
        this._pointMap = new va;
        this._points = [];
        this.down = new z.Signal1;
        this.move = new z.Signal1;
        this.up = new z.Signal1
    };
    j["flambe.platform.BasicTouch"] = m.BasicTouch;
    m.BasicTouch.__name__ = ["flambe", "platform", "BasicTouch"];
    m.BasicTouch.__interfaces__ = [h.Touch];
    m.BasicTouch.prototype = {
        submitUp: function(a, b, c) {
            var d = this._pointMap.get(a);
            null != d && (d._internal_init(b, c), this._pointMap.remove(a), S.remove(this._points, d), this._pointerTouch == d && (this._pointerTouch = null, this._pointer.submitUp(b, c, d._internal_source)), this.up.emit1(d))
        },
        submitMove: function(a, b, c) {
            a = this._pointMap.get(a);
            null != a && (a._internal_init(b, c), this._pointerTouch == a && this._pointer.submitMove(b, c, a._internal_source), this.move.emit1(a))
        },
        submitDown: function(a, b, c) {
            if (!this._pointMap.exists(a)) {
                var d = new h.TouchPoint(a);
                d._internal_init(b, c);
                this._pointMap.set(a, d);
                this._points.push(d);
                null == this._pointerTouch && (this._pointerTouch = d, this._pointer.submitDown(b, c, d._internal_source));
                this.down.emit1(d)
            }
        },
        get_points: function() {
            return this._points.slice()
        },
        get_maxPoints: function() {
            return this._maxPoints
        },
        get_supported: function() {
            return !0
        },
        __class__: m.BasicTouch,
        __properties__: {
            get_supported: "get_supported",
            get_maxPoints: "get_maxPoints",
            get_points: "get_points"
        }
    };
    da.Sound = function() {};
    j["flambe.sound.Sound"] = da.Sound;
    da.Sound.__name__ = ["flambe", "sound", "Sound"];
    da.Sound.prototype = {
        __class__: da.Sound,
        __properties__: {
            get_duration: "get_duration"
        }
    };
    m.DummySound = function() {
        this._playback = new m.DummyPlayback(this)
    };
    j["flambe.platform.DummySound"] = m.DummySound;
    m.DummySound.__name__ = ["flambe", "platform", "DummySound"];
    m.DummySound.__interfaces__ = [da.Sound];
    m.DummySound.getInstance = function() {
        null == m.DummySound._instance && (m.DummySound._instance = new m.DummySound);
        return m.DummySound._instance
    };
    m.DummySound.prototype = {
        get_duration: function() {
            return 0
        },
        loop: function() {
            return this._playback
        },
        play: function() {
            return this._playback
        },
        __class__: m.DummySound,
        __properties__: {
            get_duration: "get_duration"
        }
    };
    da.Playback = function() {};
    j["flambe.sound.Playback"] = da.Playback;
    da.Playback.__name__ = ["flambe", "sound", "Playback"];
    da.Playback.__interfaces__ = [z.Disposable];
    da.Playback.prototype = {
        __class__: da.Playback,
        __properties__: {
            set_paused: "set_paused",
            get_paused: "get_paused",
            get_ended: "get_ended",
            set_position: "set_position",
            get_position: "get_position",
            get_sound: "get_sound"
        }
    };
    m.DummyPlayback = function(a) {
        this._sound =
            a;
        this.volume = new ca.AnimatedFloat(0)
    };
    j["flambe.platform.DummyPlayback"] = m.DummyPlayback;
    m.DummyPlayback.__name__ = ["flambe", "platform", "DummyPlayback"];
    m.DummyPlayback.__interfaces__ = [da.Playback];
    m.DummyPlayback.prototype = {
        dispose: function() {},
        set_position: function(a) {
            return a
        },
        get_position: function() {
            return 0
        },
        get_ended: function() {
            return !0
        },
        set_paused: function() {
            return !0
        },
        get_paused: function() {
            return !0
        },
        get_sound: function() {
            return this._sound
        },
        __class__: m.DummyPlayback,
        __properties__: {
            set_paused: "set_paused",
            get_paused: "get_paused",
            get_ended: "get_ended",
            set_position: "set_position",
            get_position: "get_position",
            get_sound: "get_sound"
        }
    };
    Aa = {
        Storage: function() {}
    };
    j["flambe.storage.Storage"] = Aa.Storage;
    Aa.Storage.__name__ = ["flambe", "storage", "Storage"];
    Aa.Storage.prototype = {
        __class__: Aa.Storage,
        __properties__: {
            get_supported: "get_supported"
        }
    };
    m.DummyStorage = function() {
        this.clear()
    };
    j["flambe.platform.DummyStorage"] = m.DummyStorage;
    m.DummyStorage.__name__ = ["flambe", "platform", "DummyStorage"];
    m.DummyStorage.__interfaces__ = [Aa.Storage];
    m.DummyStorage.prototype = {
        clear: function() {
            this._hash = new T
        },
        remove: function(a) {
            this._hash.remove(a)
        },
        get: function(a, b) {
            return this._hash.exists(a) ? this._hash.get(a) : b
        },
        set: function(a, b) {
            this._hash.set(a, b);
            return !0
        },
        get_supported: function() {
            return !1
        },
        __class__: m.DummyStorage,
        __properties__: {
            get_supported: "get_supported"
        }
    };
    m.DummyTouch = function() {
        this.down = new z.Signal1;
        this.move = new z.Signal1;
        this.up = new z.Signal1
    };
    j["flambe.platform.DummyTouch"] = m.DummyTouch;
    m.DummyTouch.__name__ = ["flambe",
        "platform", "DummyTouch"
    ];
    m.DummyTouch.__interfaces__ = [h.Touch];
    m.DummyTouch.prototype = {
        get_points: function() {
            return []
        },
        get_maxPoints: function() {
            return 0
        },
        get_supported: function() {
            return !1
        },
        __class__: m.DummyTouch,
        __properties__: {
            get_supported: "get_supported",
            get_maxPoints: "get_maxPoints",
            get_points: "get_points"
        }
    };
    m.EventGroup = function() {
        this._entries = []
    };
    j["flambe.platform.EventGroup"] = m.EventGroup;
    m.EventGroup.__name__ = ["flambe", "platform", "EventGroup"];
    m.EventGroup.__interfaces__ = [z.Disposable];
    m.EventGroup.prototype = {
        dispose: function() {
            for (var a = 0, b = this._entries; a < b.length;) {
                var c = b[a];
                ++a;
                c.dispatcher.removeEventListener(c.type, c.listener, !1)
            }
            this._entries = []
        },
        addDisposingListener: function(a, b, c) {
            var d = this;
            this.addListener(a, b, function(a) {
                d.dispose();
                c(a)
            })
        },
        addListener: function(a, b, c) {
            a.addEventListener(b, c, !1);
            this._entries.push(new m._EventGroup.Entry(a, b, c))
        },
        __class__: m.EventGroup
    };
    m._EventGroup = {};
    m._EventGroup.Entry = function(a, b, c) {
        this.dispatcher = a;
        this.type = b;
        this.listener =
            c
    };
    j["flambe.platform._EventGroup.Entry"] = m._EventGroup.Entry;
    m._EventGroup.Entry.__name__ = ["flambe", "platform", "_EventGroup", "Entry"];
    m._EventGroup.Entry.prototype = {
        __class__: m._EventGroup.Entry
    };
    m.KeyCodes = function() {};
    j["flambe.platform.KeyCodes"] = m.KeyCodes;
    m.KeyCodes.__name__ = ["flambe", "platform", "KeyCodes"];
    m.KeyCodes.toKey = function(a) {
        switch (a) {
            case 65:
                return h.Key.A;
            case 66:
                return h.Key.B;
            case 67:
                return h.Key.C;
            case 68:
                return h.Key.D;
            case 69:
                return h.Key.E;
            case 70:
                return h.Key.F;
            case 71:
                return h.Key.G;
            case 72:
                return h.Key.H;
            case 73:
                return h.Key.I;
            case 74:
                return h.Key.J;
            case 75:
                return h.Key.K;
            case 76:
                return h.Key.L;
            case 77:
                return h.Key.M;
            case 78:
                return h.Key.N;
            case 79:
                return h.Key.O;
            case 80:
                return h.Key.P;
            case 81:
                return h.Key.Q;
            case 82:
                return h.Key.R;
            case 83:
                return h.Key.S;
            case 84:
                return h.Key.T;
            case 85:
                return h.Key.U;
            case 86:
                return h.Key.V;
            case 87:
                return h.Key.W;
            case 88:
                return h.Key.X;
            case 89:
                return h.Key.Y;
            case 90:
                return h.Key.Z;
            case 48:
                return h.Key.Number0;
            case 49:
                return h.Key.Number1;
            case 50:
                return h.Key.Number2;
            case 51:
                return h.Key.Number3;
            case 52:
                return h.Key.Number4;
            case 53:
                return h.Key.Number5;
            case 54:
                return h.Key.Number6;
            case 55:
                return h.Key.Number7;
            case 56:
                return h.Key.Number8;
            case 57:
                return h.Key.Number9;
            case 96:
                return h.Key.Numpad0;
            case 97:
                return h.Key.Numpad1;
            case 98:
                return h.Key.Numpad2;
            case 99:
                return h.Key.Numpad3;
            case 100:
                return h.Key.Numpad4;
            case 101:
                return h.Key.Numpad5;
            case 102:
                return h.Key.Numpad6;
            case 103:
                return h.Key.Numpad7;
            case 104:
                return h.Key.Numpad8;
            case 105:
                return h.Key.Numpad9;
            case 107:
                return h.Key.NumpadAdd;
            case 110:
                return h.Key.NumpadDecimal;
            case 111:
                return h.Key.NumpadDivide;
            case 108:
                return h.Key.NumpadEnter;
            case 106:
                return h.Key.NumpadMultiply;
            case 109:
                return h.Key.NumpadSubtract;
            case 112:
                return h.Key.F1;
            case 113:
                return h.Key.F2;
            case 114:
                return h.Key.F3;
            case 115:
                return h.Key.F4;
            case 116:
                return h.Key.F5;
            case 117:
                return h.Key.F6;
            case 118:
                return h.Key.F7;
            case 119:
                return h.Key.F8;
            case 120:
                return h.Key.F9;
            case 121:
                return h.Key.F10;
            case 122:
                return h.Key.F11;
            case 123:
                return h.Key.F12;
            case 37:
                return h.Key.Left;
            case 38:
                return h.Key.Up;
            case 39:
                return h.Key.Right;
            case 40:
                return h.Key.Down;
            case 18:
                return h.Key.Alt;
            case 192:
                return h.Key.Backquote;
            case 220:
                return h.Key.Backslash;
            case 8:
                return h.Key.Backspace;
            case 20:
                return h.Key.CapsLock;
            case 188:
                return h.Key.Comma;
            case 15:
                return h.Key.Command;
            case 17:
                return h.Key.Control;
            case 46:
                return h.Key.Delete;
            case 35:
                return h.Key.End;
            case 13:
                return h.Key.Enter;
            case 187:
                return h.Key.Equals;
            case 27:
                return h.Key.Escape;
            case 36:
                return h.Key.Home;
            case 45:
                return h.Key.Insert;
            case 219:
                return h.Key.LeftBracket;
            case 189:
                return h.Key.Minus;
            case 34:
                return h.Key.PageDown;
            case 33:
                return h.Key.PageUp;
            case 190:
                return h.Key.Period;
            case 222:
                return h.Key.Quote;
            case 221:
                return h.Key.RightBracket;
            case 186:
                return h.Key.Semicolon;
            case 16:
                return h.Key.Shift;
            case 191:
                return h.Key.Slash;
            case 32:
                return h.Key.Space;
            case 9:
                return h.Key.Tab;
            case 16777234:
                return h.Key.Menu;
            case 16777247:
                return h.Key.Search
        }
        return h.Key.Unknown(a)
    };
    m.KeyCodes.toKeyCode = function(a) {
        switch (a[1]) {
            case 0:
                return 65;
            case 1:
                return 66;
            case 2:
                return 67;
            case 3:
                return 68;
            case 4:
                return 69;
            case 5:
                return 70;
            case 6:
                return 71;
            case 7:
                return 72;
            case 8:
                return 73;
            case 9:
                return 74;
            case 10:
                return 75;
            case 11:
                return 76;
            case 12:
                return 77;
            case 13:
                return 78;
            case 14:
                return 79;
            case 15:
                return 80;
            case 16:
                return 81;
            case 17:
                return 82;
            case 18:
                return 83;
            case 19:
                return 84;
            case 20:
                return 85;
            case 21:
                return 86;
            case 22:
                return 87;
            case 23:
                return 88;
            case 24:
                return 89;
            case 25:
                return 90;
            case 26:
                return 48;
            case 27:
                return 49;
            case 28:
                return 50;
            case 29:
                return 51;
            case 30:
                return 52;
            case 31:
                return 53;
            case 32:
                return 54;
            case 33:
                return 55;
            case 34:
                return 56;
            case 35:
                return 57;
            case 36:
                return 96;
            case 37:
                return 97;
            case 38:
                return 98;
            case 39:
                return 99;
            case 40:
                return 100;
            case 41:
                return 101;
            case 42:
                return 102;
            case 43:
                return 103;
            case 44:
                return 104;
            case 45:
                return 105;
            case 46:
                return 107;
            case 47:
                return 110;
            case 48:
                return 111;
            case 49:
                return 108;
            case 50:
                return 106;
            case 51:
                return 109;
            case 52:
                return 112;
            case 53:
                return 113;
            case 54:
                return 114;
            case 55:
                return 115;
            case 56:
                return 116;
            case 57:
                return 117;
            case 58:
                return 118;
            case 59:
                return 119;
            case 60:
                return 120;
            case 61:
                return 121;
            case 62:
                return 122;
            case 63:
                return 123;
            case 64:
                return 124;
            case 65:
                return 125;
            case 66:
                return 126;
            case 67:
                return 37;
            case 68:
                return 38;
            case 69:
                return 39;
            case 70:
                return 40;
            case 71:
                return 18;
            case 72:
                return 192;
            case 73:
                return 220;
            case 74:
                return 8;
            case 75:
                return 20;
            case 76:
                return 188;
            case 77:
                return 15;
            case 78:
                return 17;
            case 79:
                return 46;
            case 80:
                return 35;
            case 81:
                return 13;
            case 82:
                return 187;
            case 83:
                return 27;
            case 84:
                return 36;
            case 85:
                return 45;
            case 86:
                return 219;
            case 87:
                return 189;
            case 88:
                return 34;
            case 89:
                return 33;
            case 90:
                return 190;
            case 91:
                return 222;
            case 92:
                return 221;
            case 93:
                return 186;
            case 94:
                return 16;
            case 95:
                return 191;
            case 96:
                return 32;
            case 97:
                return 9;
            case 98:
                return 16777234;
            case 99:
                return 16777247;
            case 100:
                return a[2]
        }
    };
    m.MainLoop = function() {
        this._tickables = []
    };
    j["flambe.platform.MainLoop"] = m.MainLoop;
    m.MainLoop.__name__ = ["flambe", "platform", "MainLoop"];
    m.MainLoop.updateEntity = function(a, b) {
        var c = a._compMap.SpeedAdjuster_5;
        if (null != c && (c._internal_realDt = b, b *= c.scale._value, 0 >= b)) {
            c.onUpdate(b);
            return
        }
        for (var d = a.firstComponent; null != d;) c = d.next, d.onUpdate(b), d = c;
        for (d = a.firstChild; null != d;) c = d.next, m.MainLoop.updateEntity(d, b), d = c
    };
    m.MainLoop.prototype = {
        addTickable: function(a) {
            this._tickables.push(a)
        },
        render: function(a) {
            var b = a.willRender();
            null != b && (E.Sprite.render(W.root, b), a.didRender())
        },
        update: function(a) {
            if (0 >= a) ga.logger.warn("Zero or negative time elapsed since the last frame!", ["dt", a]);
            else {
                1 < a && (a = 1);
                for (var b =
                        0; b < this._tickables.length;) {
                    var c = this._tickables[b];
                    null == c || c.update(a) ? this._tickables.splice(b, 1) : ++b
                }
                W.volume.update(a);
                m.MainLoop.updateEntity(W.root, a)
            }
        },
        __class__: m.MainLoop
    };
    m.ManifestBuilder = function() {};
    j["flambe.platform.ManifestBuilder"] = m.ManifestBuilder;
    m.ManifestBuilder.__name__ = ["flambe", "platform", "ManifestBuilder"];
    m.MouseCodes = function() {};
    j["flambe.platform.MouseCodes"] = m.MouseCodes;
    m.MouseCodes.__name__ = ["flambe", "platform", "MouseCodes"];
    m.MouseCodes.toButton = function(a) {
        switch (a) {
            case 0:
                return h.MouseButton.Left;
            case 1:
                return h.MouseButton.Middle;
            case 2:
                return h.MouseButton.Right
        }
        return h.MouseButton.Unknown(a)
    };
    m.MouseCodes.toButtonCode = function(a) {
        switch (a[1]) {
            case 0:
                return 0;
            case 1:
                return 1;
            case 2:
                return 2;
            case 3:
                return a[2]
        }
    };
    m.Renderer = function() {};
    j["flambe.platform.Renderer"] = m.Renderer;
    m.Renderer.__name__ = ["flambe", "platform", "Renderer"];
    m.Renderer.prototype = {
        __class__: m.Renderer
    };
    m.Tickable = function() {};
    j["flambe.platform.Tickable"] = m.Tickable;
    m.Tickable.__name__ = ["flambe", "platform", "Tickable"];
    m.Tickable.prototype = {
        __class__: m.Tickable
    };
    m.html.CanvasGraphics = function(a) {
        this._firstDraw = !1;
        this._canvasCtx = a.getContext("2d");
        this.clear()
    };
    j["flambe.platform.html.CanvasGraphics"] = m.html.CanvasGraphics;
    m.html.CanvasGraphics.__name__ = ["flambe", "platform", "html", "CanvasGraphics"];
    m.html.CanvasGraphics.__interfaces__ = [E.Graphics];
    m.html.CanvasGraphics.prototype = {
        willRender: function() {
            this._firstDraw = !0
        },
        applyScissor: function(a, b, c, d) {
            this._canvasCtx.beginPath();
            this._canvasCtx.rect(a | 0, b | 0, c |
                0, d | 0);
            this._canvasCtx.clip()
        },
        setBlendMode: function(a) {
            var b;
            switch (a[1]) {
                case 0:
                    b = "source-over";
                    break;
                case 1:
                    b = "lighter";
                    break;
                case 2:
                    b = "source-over"
            }
            this._canvasCtx.globalCompositeOperation = b
        },
        setAlpha: function(a) {
            this._canvasCtx.globalAlpha = a
        },
        multiplyAlpha: function(a) {
            this._canvasCtx.globalAlpha *= a
        },
        fillRect: function(a, b, c, d, f) {
            this._firstDraw ? (this._firstDraw = !1, this._canvasCtx.globalCompositeOperation = "copy", this.fillRect(a, b, c, d, f), this._canvasCtx.globalCompositeOperation = "source-over") : (this._canvasCtx.fillStyle =
                "#" + ("00000" + a.toString(16)).slice(-6), this._canvasCtx.fillRect(b | 0, c | 0, d | 0, f | 0))
        },
        drawPattern: function(a, b, c, d, f) {
            this._firstDraw ? (this._firstDraw = !1, this._canvasCtx.globalCompositeOperation = "copy", this.drawPattern(a, b, c, d, f), this._canvasCtx.globalCompositeOperation = "source-over") : (null == a.pattern && (a.pattern = this._canvasCtx.createPattern(a.image, "repeat")), this._canvasCtx.fillStyle = a.pattern, this._canvasCtx.fillRect(b | 0, c | 0, d | 0, f | 0))
        },
        drawSubImage: function(a, b, c, d, f, e, l) {
            this._firstDraw ? (this._firstDraw = !1, this._canvasCtx.globalCompositeOperation = "copy", this.drawSubImage(a, b, c, d, f, e, l), this._canvasCtx.globalCompositeOperation = "source-over") : this._canvasCtx.drawImage(a.image, d | 0, f | 0, e | 0, l | 0, b | 0, c | 0, e | 0, l | 0)
        },
        drawImage: function(a, b, c) {
            this._firstDraw ? (this._firstDraw = !1, this._canvasCtx.globalCompositeOperation = "copy", this.drawImage(a, b, c), this._canvasCtx.globalCompositeOperation = "source-over") : this._canvasCtx.drawImage(a.image, b | 0, c | 0)
        },
        restore: function() {
            this._canvasCtx.restore()
        },
        transform: function(a,
            b, c, d, f, e) {
            this._canvasCtx.transform(a, b, c, d, f | 0, e | 0)
        },
        rotate: function(a) {
            this._canvasCtx.rotate(3.141592653589793 * a / 180)
        },
        scale: function(a, b) {
            this._canvasCtx.scale(a, b)
        },
        translate: function(a, b) {
            this._canvasCtx.translate(a | 0, b | 0)
        },
        save: function() {
            this._canvasCtx.save()
        },
        clear: function() {
            this._canvasCtx.fillStyle = "rgba(0,0,0,0)";
            this._canvasCtx.fillRect(0, 0, this._canvasCtx.canvas.width, this._canvasCtx.canvas.height)
        },
        __class__: m.html.CanvasGraphics
    };
    m.html.CanvasRenderer = function(a) {
        this._graphics =
            new m.html.CanvasGraphics(a);
        this._graphics.clear()
    };
    j["flambe.platform.html.CanvasRenderer"] = m.html.CanvasRenderer;
    m.html.CanvasRenderer.__name__ = ["flambe", "platform", "html", "CanvasRenderer"];
    m.html.CanvasRenderer.__interfaces__ = [m.Renderer];
    m.html.CanvasRenderer.prototype = {
        didRender: function() {},
        willRender: function() {
            this._graphics.willRender();
            return this._graphics
        },
        createEmptyTexture: function(a, b) {
            return new m.html.CanvasTexture(m.html.HtmlUtil.createEmptyCanvas(a, b))
        },
        createTexture: function(a) {
            return new m.html.CanvasTexture(m.html.CanvasRenderer.CANVAS_TEXTURES ?
                m.html.HtmlUtil.createCanvas(a) : a)
        },
        __class__: m.html.CanvasRenderer
    };
    m.html.CanvasTexture = function(a) {
        this._graphics = null;
        this.image = a
    };
    j["flambe.platform.html.CanvasTexture"] = m.html.CanvasTexture;
    m.html.CanvasTexture.__name__ = ["flambe", "platform", "html", "CanvasTexture"];
    m.html.CanvasTexture.__interfaces__ = [E.Texture];
    m.html.CanvasTexture.prototype = {
        getContext2d: function() {
            ba.__instanceof(this.image, HTMLCanvasElement) || (this.image = m.html.HtmlUtil.createCanvas(this.image));
            return this.image.getContext("2d")
        },
        get_graphics: function() {
            null == this._graphics && (this.getContext2d(), this._graphics = new m.html._CanvasTexture.InternalGraphics(this));
            return this._graphics
        },
        get_height: function() {
            return this.image.height
        },
        get_width: function() {
            return this.image.width
        },
        writePixels: function(a, b, c, d, f) {
            var e = this.getContext2d(),
                l = e.createImageData(d, f),
                s = l.data;
            if (null != s.set) s.set(a.b);
            else {
                d = 4 * d * f;
                for (f = 0; f < d;) {
                    var F = f++;
                    s[F] = a.b[F]
                }
            }
            e.putImageData(l, b, c);
            this.pattern = null
        },
        readPixels: function(a, b, c, d) {
            return ua.Bytes.ofData(this.getContext2d().getImageData(a,
                b, c, d).data)
        },
        __class__: m.html.CanvasTexture,
        __properties__: {
            get_width: "get_width",
            get_height: "get_height",
            get_graphics: "get_graphics"
        }
    };
    m.html._CanvasTexture = {};
    m.html._CanvasTexture.InternalGraphics = function(a) {
        m.html.CanvasGraphics.call(this, a.image);
        this._renderTarget = a
    };
    j["flambe.platform.html._CanvasTexture.InternalGraphics"] = m.html._CanvasTexture.InternalGraphics;
    m.html._CanvasTexture.InternalGraphics.__name__ = ["flambe", "platform", "html", "_CanvasTexture", "InternalGraphics"];
    m.html._CanvasTexture.InternalGraphics.__super__ =
        m.html.CanvasGraphics;
    m.html._CanvasTexture.InternalGraphics.prototype = C(m.html.CanvasGraphics.prototype, {
        fillRect: function(a, b, c, d, f) {
            m.html.CanvasGraphics.prototype.fillRect.call(this, a, b, c, d, f);
            this._renderTarget.pattern = null
        },
        drawPattern: function(a, b, c, d, f) {
            m.html.CanvasGraphics.prototype.drawPattern.call(this, a, b, c, d, f);
            this._renderTarget.pattern = null
        },
        drawSubImage: function(a, b, c, d, f, e, l) {
            m.html.CanvasGraphics.prototype.drawSubImage.call(this, a, b, c, d, f, e, l);
            this._renderTarget.pattern = null
        },
        drawImage: function(a,
            b, c) {
            m.html.CanvasGraphics.prototype.drawImage.call(this, a, b, c);
            this._renderTarget.pattern = null
        },
        __class__: m.html._CanvasTexture.InternalGraphics
    });
    m.html.HtmlAssetPackLoader = function(a, b) {
        m.BasicAssetPackLoader.call(this, a, b)
    };
    j["flambe.platform.html.HtmlAssetPackLoader"] = m.html.HtmlAssetPackLoader;
    m.html.HtmlAssetPackLoader.__name__ = ["flambe", "platform", "html", "HtmlAssetPackLoader"];
    m.html.HtmlAssetPackLoader.detectAudioFormats = function() {
        var a = R.document.createElement("audio");
        if (null == a || null ==
            a.canPlayType) return [];
        var b = new wa("\\b(iPhone|iPod|iPad)\\b", "");
        if (!m.html.WebAudioSound.get_supported() && b.match(R.window.navigator.userAgent)) return [];
        for (var b = [{
                extension: "m4a",
                type: "audio/mp4; codecs=mp4a"
            }, {
                extension: "mp3",
                type: "audio/mpeg"
            }, {
                extension: "ogg",
                type: "audio/ogg; codecs=vorbis"
            }, {
                extension: "wav",
                type: "audio/wav"
            }], c = [], d = 0; d < b.length;) {
            var f = b[d];
            ++d;
            var e = "";
            try {
                e = a.canPlayType(f.type)
            } catch (l) {}
            "" != e && c.push(f.extension)
        }
        return c
    };
    m.html.HtmlAssetPackLoader.supportsBlob = function() {
        if (m.html.HtmlAssetPackLoader._detectBlobSupport) {
            m.html.HtmlAssetPackLoader._detectBlobSupport = !1;
            try {
                (new XMLHttpRequest).responseType = "blob"
            } catch (a) {
                return !1
            }
            m.html.HtmlAssetPackLoader._URL = m.html.HtmlUtil.loadExtension("URL").value
        }
        return null != m.html.HtmlAssetPackLoader._URL && null != m.html.HtmlAssetPackLoader._URL.createObjectURL
    };
    m.html.HtmlAssetPackLoader.__super__ = m.BasicAssetPackLoader;
    m.html.HtmlAssetPackLoader.prototype = C(m.BasicAssetPackLoader.prototype, {
        sendRequest: function(a, b, c, d) {
            var f = this,
                e = new XMLHttpRequest,
                l = 0,
                s = function() {
                    l = Date.now();
                    e.open("GET", a, !0);
                    e.responseType =
                        c;
                    "" == e.responseType && (e.responseType = "arraybuffer");
                    e.send()
                },
                F = 0;
            if ("undefined" != typeof e.onprogress) {
                var g = 4;
                e.onprogress = function(a) {
                    l = Date.now();
                    f.handleProgress(b, a.loaded)
                };
                F = R.window.setInterval(function() {
                    5E3 < Date.now() - l && (e.abort(), --g, 0 < g ? s() : (R.window.clearInterval(F), f.handleError(b, "Failed to load asset: timeout")))
                }, 1E3)
            }
            e.onload = function() {
                R.window.clearInterval(F);
                var a = e.response;
                null == a ? a = e.responseText : "blob" == c && "arraybuffer" == e.responseType && (a = new Blob([e.response]));
                d(a)
            };
            e.onerror = function() {
                R.window.clearInterval(F);
                f.handleError(b, "Failed to load asset: error #" + I.string(e.status))
            };
            s();
            return e
        },
        getAudioFormats: function() {
            null == m.html.HtmlAssetPackLoader._audioFormats && (m.html.HtmlAssetPackLoader._audioFormats = m.html.HtmlAssetPackLoader.detectAudioFormats());
            return m.html.HtmlAssetPackLoader._audioFormats
        },
        loadEntry: function(a, b) {
            var c = this;
            switch (b.type[1]) {
                case 0:
                    var d = new Image,
                        f = new m.EventGroup;
                    f.addDisposingListener(d, "load", function() {
                        m.html.HtmlAssetPackLoader.supportsBlob() &&
                            m.html.HtmlAssetPackLoader._URL.revokeObjectURL(d.src);
                        var a = c._platform.getRenderer().createTexture(d);
                        null != a ? c.handleLoad(b, a) : c.handleTextureError(b)
                    });
                    f.addDisposingListener(d, "error", function() {
                        c.handleError(b, "Failed to load image")
                    });
                    m.html.HtmlAssetPackLoader.supportsBlob() ? this.sendRequest(a, b, "blob", function(a) {
                        d.src = m.html.HtmlAssetPackLoader._URL.createObjectURL(a)
                    }) : d.src = a;
                    break;
                case 1:
                    if (m.html.WebAudioSound.get_supported()) this.sendRequest(a, b, "arraybuffer", function(d) {
                        m.html.WebAudioSound.ctx.decodeAudioData(d,
                            function(a) {
                                c.handleLoad(b, new m.html.WebAudioSound(a))
                            },
                            function() {
                                ga.logger.warn("Couldn't decode Web Audio, ignoring this asset", ["url", a]);
                                c.handleLoad(b, m.DummySound.getInstance())
                            })
                    });
                    else {
                        var e = R.document.createElement("audio");
                        e.preload = "auto";
                        var l = ++m.html.HtmlAssetPackLoader._mediaRefCount;
                        null == m.html.HtmlAssetPackLoader._mediaElements && (m.html.HtmlAssetPackLoader._mediaElements = new va);
                        m.html.HtmlAssetPackLoader._mediaElements.set(l, e);
                        f = new m.EventGroup;
                        f.addDisposingListener(e, "canplaythrough",
                            function() {
                                m.html.HtmlAssetPackLoader._mediaElements.remove(l);
                                c.handleLoad(b, new m.html.HtmlSound(e))
                            });
                        f.addDisposingListener(e, "error", function() {
                            m.html.HtmlAssetPackLoader._mediaElements.remove(l);
                            var d = e.error.code;
                            3 == d || 4 == d ? (ga.logger.warn("Couldn't decode HTML5 audio, ignoring this asset", ["url", a, "code", d]), c.handleLoad(b, m.DummySound.getInstance())) : c.handleError(b, "Failed to load audio: " + I.string(e.error.code))
                        });
                        f.addListener(e, "progress", function() {
                            if (0 < e.buffered.length && 0 < e.duration) {
                                var a =
                                    e.buffered.end(0) / e.duration;
                                c.handleProgress(b, a * b.bytes | 0)
                            }
                        });
                        e.src = a;
                        e.load()
                    }
                    break;
                case 2:
                    this.sendRequest(a, b, "text", function(a) {
                        c.handleLoad(b, a)
                    })
            }
        },
        __class__: m.html.HtmlAssetPackLoader
    });
    m.html.HtmlExternal = function() {};
    j["flambe.platform.html.HtmlExternal"] = m.html.HtmlExternal;
    m.html.HtmlExternal.__name__ = ["flambe", "platform", "html", "HtmlExternal"];
    m.html.HtmlExternal.__interfaces__ = [U.External];
    m.html.HtmlExternal.prototype = {
        bind: function(a, b) {
            R.window[a] = b
        },
        call: function(a, b) {
            null == b &&
                (b = []);
            return ia.field(R.window, a).apply(null, b)
        },
        get_supported: function() {
            return !0
        },
        __class__: m.html.HtmlExternal,
        __properties__: {
            get_supported: "get_supported"
        }
    };
    z.LogHandler = function() {};
    j["flambe.util.LogHandler"] = z.LogHandler;
    z.LogHandler.__name__ = ["flambe", "util", "LogHandler"];
    z.LogHandler.prototype = {
        __class__: z.LogHandler
    };
    m.html.HtmlLogHandler = function(a) {
        this._tagPrefix = a + ": "
    };
    j["flambe.platform.html.HtmlLogHandler"] = m.html.HtmlLogHandler;
    m.html.HtmlLogHandler.__name__ = ["flambe", "platform",
        "html", "HtmlLogHandler"
    ];
    m.html.HtmlLogHandler.__interfaces__ = [z.LogHandler];
    m.html.HtmlLogHandler.isSupported = function() {
        return "object" == typeof console && null != console.info
    };
    m.html.HtmlLogHandler.prototype = {
        log: function(a, b) {
            b = this._tagPrefix + b;
            switch (a[1]) {
                case 0:
                    console.info(b);
                    break;
                case 1:
                    console.warn(b);
                    break;
                case 2:
                    console.error(b)
            }
        },
        __class__: m.html.HtmlLogHandler
    };
    m.html.HtmlMouse = function(a, b) {
        m.BasicMouse.call(this, a);
        this._canvas = b
    };
    j["flambe.platform.html.HtmlMouse"] = m.html.HtmlMouse;
    m.html.HtmlMouse.__name__ = ["flambe", "platform", "html", "HtmlMouse"];
    m.html.HtmlMouse.__super__ = m.BasicMouse;
    m.html.HtmlMouse.prototype = C(m.BasicMouse.prototype, {
        set_cursor: function(a) {
            var b;
            switch (a[1]) {
                case 0:
                    b = "";
                    break;
                case 1:
                    b = "pointer";
                    break;
                case 2:
                    b = "none"
            }
            this._canvas.style.cursor = b;
            return m.BasicMouse.prototype.set_cursor.call(this, a)
        },
        __class__: m.html.HtmlMouse
    });
    m.html.HtmlSound = function(a) {
        this.audioElement = a
    };
    j["flambe.platform.html.HtmlSound"] = m.html.HtmlSound;
    m.html.HtmlSound.__name__ = ["flambe", "platform", "html", "HtmlSound"];
    m.html.HtmlSound.__interfaces__ = [da.Sound];
    m.html.HtmlSound.prototype = {
        get_duration: function() {
            return this.audioElement.duration
        },
        loop: function(a) {
            null == a && (a = 1);
            return new m.html._HtmlSound.HtmlPlayback(this, a, !0)
        },
        play: function(a) {
            null == a && (a = 1);
            return new m.html._HtmlSound.HtmlPlayback(this, a, !1)
        },
        __class__: m.html.HtmlSound,
        __properties__: {
            get_duration: "get_duration"
        }
    };
    m.html._HtmlSound = {};
    m.html._HtmlSound.HtmlPlayback = function(a, b, c) {
        var d = this;
        this._sound =
            a;
        this._tickableAdded = !1;
        this._clonedElement = R.document.createElement("audio");
        this._clonedElement.loop = c;
        this._clonedElement.src = a.audioElement.src;
        this.volume = new ca.AnimatedFloat(b, function() {
            d.updateVolume()
        });
        this.updateVolume();
        this.playAudio()
    };
    j["flambe.platform.html._HtmlSound.HtmlPlayback"] = m.html._HtmlSound.HtmlPlayback;
    m.html._HtmlSound.HtmlPlayback.__name__ = ["flambe", "platform", "html", "_HtmlSound", "HtmlPlayback"];
    m.html._HtmlSound.HtmlPlayback.__interfaces__ = [m.Tickable, da.Playback];
    m.html._HtmlSound.HtmlPlayback.prototype = {
        updateVolume: function() {
            this._clonedElement.volume = W.volume._value * this.volume._value
        },
        playAudio: function() {
            var a = this;
            this._clonedElement.play();
            this._tickableAdded || (m.html.HtmlPlatform.instance.mainLoop.addTickable(this), this._tickableAdded = !0, this._volumeBinding = W.volume.get_changed().connect(function() {
                a.updateVolume()
            }))
        },
        dispose: function() {
            this.set_paused(!0)
        },
        update: function(a) {
            this.volume.update(a);
            return this._clonedElement.ended || this._clonedElement.paused ?
                (this._tickableAdded = !1, this._volumeBinding.dispose(), !0) : !1
        },
        set_position: function(a) {
            return this._clonedElement.currentTime = a
        },
        get_position: function() {
            return this._clonedElement.currentTime
        },
        get_ended: function() {
            return this._clonedElement.ended
        },
        set_paused: function(a) {
            this._clonedElement.paused != a && (a ? this._clonedElement.pause() : this.playAudio());
            return a
        },
        get_paused: function() {
            return this._clonedElement.paused
        },
        get_sound: function() {
            return this._sound
        },
        __class__: m.html._HtmlSound.HtmlPlayback,
        __properties__: {
            set_paused: "set_paused",
            get_paused: "get_paused",
            get_ended: "get_ended",
            set_position: "set_position",
            get_position: "get_position",
            get_sound: "get_sound"
        }
    };
    m.html.HtmlStage = function(a) {
        var b = this;
        this._canvas = a;
        this.resize = new z.Signal0;
        this.scaleFactor = m.html.HtmlStage.computeScaleFactor();
        1 != this.scaleFactor && (ga.logger.info("Reversing device DPI scaling", ["scaleFactor", this.scaleFactor]), m.html.HtmlUtil.setVendorStyle(this._canvas, "transform-origin", "top left"), m.html.HtmlUtil.setVendorStyle(this._canvas, "transform", "scale(" +
            1 / this.scaleFactor + ")"));
        m.html.HtmlUtil.SHOULD_HIDE_MOBILE_BROWSER && (window.addEventListener("orientationchange", function() {
            m.html.HtmlUtil.callLater(w(b, b.hideMobileBrowser), 200)
        }, !1), this.hideMobileBrowser());
        window.addEventListener("resize", w(this, this.onWindowResize), !1);
        this.onWindowResize();
        this.orientation = new z.Value(null);
        null != window.orientation && (window.addEventListener("orientationchange", w(this, this.onOrientationChange), !1), this.onOrientationChange());
        this.fullscreen = new z.Value(!1);
        m.html.HtmlUtil.addVendorListener(R.document, "fullscreenchange", function() {
            b.updateFullscreen()
        }, !1);
        this.updateFullscreen()
    };
    j["flambe.platform.html.HtmlStage"] = m.html.HtmlStage;
    m.html.HtmlStage.__name__ = ["flambe", "platform", "html", "HtmlStage"];
    m.html.HtmlStage.__interfaces__ = [E.Stage];
    m.html.HtmlStage.computeScaleFactor = function() {
        var a = window.devicePixelRatio;
        null == a && (a = 1);
        var b = R.document.createElement("canvas").getContext("2d"),
            b = m.html.HtmlUtil.loadExtension("backingStorePixelRatio", b).value;
        null == b && (b = 1);
        a /= b;
        b = screen.height;
        return 1136 < a * screen.width || 1136 < a * b ? 1 : a
    };
    m.html.HtmlStage.prototype = {
        updateFullscreen: function() {
            this.fullscreen.set__(!0 == m.html.HtmlUtil.loadFirstExtension(["fullscreen", "fullScreen", "isFullScreen"], R.document).value)
        },
        onOrientationChange: function() {
            this.orientation.set__(m.html.HtmlUtil.orientation(window.orientation))
        },
        hideMobileBrowser: function() {
            var a = this,
                b = R.document.documentElement.style;
            b.height = R.window.innerHeight + 100 + "px";
            b.width = R.window.innerWidth +
                "px";
            b.overflow = "visible";
            m.html.HtmlUtil.callLater(function() {
                m.html.HtmlUtil.hideMobileBrowser();
                m.html.HtmlUtil.callLater(function() {
                    b.height = R.window.innerHeight + "px";
                    a.onWindowResize()
                }, 100)
            })
        },
        resizeCanvas: function(a, b) {
            var c = this.scaleFactor * a,
                d = this.scaleFactor * b;
            if (this._canvas.width == c && this._canvas.height == d) return !1;
            this._canvas.width = c;
            this._canvas.height = d;
            this.resize.emit0();
            return !0
        },
        onWindowResize: function() {
            var a = this._canvas.parentNode.getBoundingClientRect();
            this.resizeCanvas(a.width,
                a.height)
        },
        requestFullscreen: function(a) {
            null == a && (a = !0);
            if (a) {
                var a = R.document.documentElement,
                    b = m.html.HtmlUtil.loadFirstExtension(["requestFullscreen", "requestFullScreen"], a).value;
                null != b && b.apply(a, [])
            } else a = m.html.HtmlUtil.loadFirstExtension(["cancelFullscreen", "cancelFullScreen"], R.document).value, null != a && a.apply(R.document, [])
        },
        requestResize: function(a, b) {
            if (this.resizeCanvas(a, b)) {
                var c = this._canvas.parentNode;
                c.style.width = a + "px";
                c.style.height = b + "px"
            }
        },
        unlockOrientation: function() {},
        lockOrientation: function() {},
        get_fullscreenSupported: function() {
            return !0 == m.html.HtmlUtil.loadFirstExtension(["fullscreenEnabled", "fullScreenEnabled"], R.document).value
        },
        get_height: function() {
            return this._canvas.height
        },
        get_width: function() {
            return this._canvas.width
        },
        __class__: m.html.HtmlStage,
        __properties__: {
            get_width: "get_width",
            get_height: "get_height",
            get_fullscreenSupported: "get_fullscreenSupported"
        }
    };
    m.html.HtmlStorage = function(a) {
        this._storage = a
    };
    j["flambe.platform.html.HtmlStorage"] = m.html.HtmlStorage;
    m.html.HtmlStorage.__name__ = ["flambe", "platform", "html", "HtmlStorage"];
    m.html.HtmlStorage.__interfaces__ = [Aa.Storage];
    m.html.HtmlStorage.prototype = {
        clear: function() {
            try {
                this._storage.clear()
            } catch (a) {
                ga.logger.warn("localStorage.clear failed", ["message", a.message])
            }
        },
        remove: function(a) {
            try {
                this._storage.removeItem("flambe:" + a)
            } catch (b) {
                ga.logger.warn("localStorage.removeItem failed", ["message", b.message])
            }
        },
        get: function(a, b) {
            var c = null;
            try {
                c = this._storage.getItem("flambe:" + a)
            } catch (d) {
                ga.logger.warn("localStorage.getItem failed", ["message", d.message])
            }
            if (null != c) try {
                return oa.run(c)
            } catch (f) {
                ga.logger.warn("Storage unserialization failed", ["message", f])
            }
            return b
        },
        set: function(a, b) {
            var c;
            try {
                var d = new sa;
                d.useCache = !0;
                d.useEnumIndex = !1;
                d.serialize(b);
                c = d.toString()
            } catch (f) {
                return ga.logger.warn("Storage serialization failed", ["message", f]), !1
            }
            try {
                this._storage.setItem("flambe:" + a, c)
            } catch (e) {
                return ga.logger.warn("localStorage.setItem failed", ["message", e.message]), !1
            }
            return !0
        },
        get_supported: function() {
            return !0
        },
        __class__: m.html.HtmlStorage,
        __properties__: {
            get_supported: "get_supported"
        }
    };
    m.html.HtmlUtil = function() {};
    j["flambe.platform.html.HtmlUtil"] = m.html.HtmlUtil;
    m.html.HtmlUtil.__name__ = ["flambe", "platform", "html", "HtmlUtil"];
    m.html.HtmlUtil.callLater = function(a, b) {
        null == b && (b = 0);
        R.window.setTimeout(a, b)
    };
    m.html.HtmlUtil.hideMobileBrowser = function() {
        R.window.scrollTo(1, 0)
    };
    m.html.HtmlUtil.loadExtension = function(a, b) {
        null == b && (b = R.window);
        var c = ia.field(b, a);
        if (null != c) return {
            prefix: null,
            field: a,
            value: c
        };
        for (var c = a.charAt(0).toUpperCase() +
                S.substr(a, 1, null), d = 0, f = m.html.HtmlUtil.VENDOR_PREFIXES; d < f.length;) {
            var e = f[d];
            ++d;
            var l = e + c,
                s = ia.field(b, l);
            if (null != s) return {
                prefix: e,
                field: l,
                value: s
            }
        }
        return {
            prefix: null,
            field: null,
            value: null
        }
    };
    m.html.HtmlUtil.loadFirstExtension = function(a, b) {
        for (var c = 0; c < a.length;) {
            var d = a[c];
            ++c;
            d = m.html.HtmlUtil.loadExtension(d, b);
            if (null != d.field) return d
        }
        return {
            prefix: null,
            field: null,
            value: null
        }
    };
    m.html.HtmlUtil.polyfill = function(a, b) {
        null == b && (b = R.window);
        var c = m.html.HtmlUtil.loadExtension(a, b).value;
        if (null == c) return !1;
        b[a] = c;
        return !0
    };
    m.html.HtmlUtil.setVendorStyle = function(a, b, c) {
        for (var a = a.style, d = 0, f = m.html.HtmlUtil.VENDOR_PREFIXES; d < f.length;) {
            var e = f[d];
            ++d;
            a.setProperty("-" + e + "-" + b, c)
        }
        a.setProperty(b, c)
    };
    m.html.HtmlUtil.addVendorListener = function(a, b, c, d) {
        for (var f = 0, e = m.html.HtmlUtil.VENDOR_PREFIXES; f < e.length;) {
            var l = e[f];
            ++f;
            a.addEventListener(l + b, c, d)
        }
        a.addEventListener(b, c, d)
    };
    m.html.HtmlUtil.orientation = function(a) {
        switch (a) {
            case -90:
            case 90:
                return E.Orientation.Landscape;
            default:
                return E.Orientation.Portrait
        }
    };
    m.html.HtmlUtil.createEmptyCanvas = function(a, b) {
        var c = R.document.createElement("canvas");
        c.width = a;
        c.height = b;
        return c
    };
    m.html.HtmlUtil.createCanvas = function(a) {
        var b = m.html.HtmlUtil.createEmptyCanvas(a.width, a.height),
            c = b.getContext("2d");
        c.save();
        c.globalCompositeOperation = "copy";
        c.drawImage(a, 0, 0);
        c.restore();
        return b
    };
    m.html.HtmlUtil.fixAndroidMath = function() {
        if (0 <= R.window.navigator.userAgent.indexOf("Linux; U; Android 4")) {
            ga.logger.warn("Monkey patching around Android sin/cos bug", null);
            var a =
                Math.sin,
                b = Math.cos;
            Math.sin = function(b) {
                return 0 == b ? 0 : a(b)
            };
            Math.cos = function(a) {
                return 0 == a ? 1 : b(a)
            }
        }
    };
    U = {
        Web: function() {}
    };
    j["flambe.web.Web"] = U.Web;
    U.Web.__name__ = ["flambe", "web", "Web"];
    U.Web.prototype = {
        __class__: U.Web,
        __properties__: {
            get_supported: "get_supported"
        }
    };
    m.html.HtmlWeb = function(a) {
        this._container = a
    };
    j["flambe.platform.html.HtmlWeb"] = m.html.HtmlWeb;
    m.html.HtmlWeb.__name__ = ["flambe", "platform", "html", "HtmlWeb"];
    m.html.HtmlWeb.__interfaces__ = [U.Web];
    m.html.HtmlWeb.prototype = {
        openBrowser: function(a) {
            R.window.open(a,
                "_blank")
        },
        createView: function(a, b, c, d) {
            var f = R.document.createElement("iframe");
            f.style.position = "absolute";
            f.style.border = "0";
            f.scrolling = "no";
            this._container.appendChild(f);
            a = new m.html.HtmlWebView(f, a, b, c, d);
            m.html.HtmlPlatform.instance.mainLoop.addTickable(a);
            return a
        },
        get_supported: function() {
            return !0
        },
        __class__: m.html.HtmlWeb,
        __properties__: {
            get_supported: "get_supported"
        }
    };
    U.WebView = function() {};
    j["flambe.web.WebView"] = U.WebView;
    U.WebView.__name__ = ["flambe", "web", "WebView"];
    U.WebView.__interfaces__ = [z.Disposable];
    U.WebView.prototype = {
        __class__: U.WebView
    };
    m.html.HtmlWebView = function(a, b, c, d, f) {
        var e = this;
        this.iframe = a;
        a = function() {
            e.updateBounds()
        };
        this.x = new ca.AnimatedFloat(b, a);
        this.y = new ca.AnimatedFloat(c, a);
        this.width = new ca.AnimatedFloat(d, a);
        this.height = new ca.AnimatedFloat(f, a);
        this.updateBounds();
        this.url = new z.Value(null, function(a) {
            e.loadUrl(a)
        });
        this.error = new z.Signal1
    };
    j["flambe.platform.html.HtmlWebView"] = m.html.HtmlWebView;
    m.html.HtmlWebView.__name__ = ["flambe", "platform", "html",
        "HtmlWebView"
    ];
    m.html.HtmlWebView.__interfaces__ = [m.Tickable, U.WebView];
    m.html.HtmlWebView.prototype = {
        loadUrl: function(a) {
            null != this.iframe && (this.iframe.src = a)
        },
        updateBounds: function() {
            null != this.iframe && (this.iframe.style.left = this.x._value + "px", this.iframe.style.top = this.y._value + "px", this.iframe.width = this.width._value, this.iframe.height = this.height._value)
        },
        update: function(a) {
            this.x.update(a);
            this.y.update(a);
            this.width.update(a);
            this.height.update(a);
            return null == this.iframe
        },
        dispose: function() {
            null !=
                this.iframe && (this.iframe.parentNode.removeChild(this.iframe), this.iframe = null)
        },
        __class__: m.html.HtmlWebView
    };
    m.html.WebAudioSound = function(a) {
        this.buffer = a
    };
    j["flambe.platform.html.WebAudioSound"] = m.html.WebAudioSound;
    m.html.WebAudioSound.__name__ = ["flambe", "platform", "html", "WebAudioSound"];
    m.html.WebAudioSound.__interfaces__ = [da.Sound];
    m.html.WebAudioSound.__properties__ = {
        get_supported: "get_supported"
    };
    m.html.WebAudioSound.get_supported = function() {
        if (m.html.WebAudioSound._detectSupport) {
            m.html.WebAudioSound._detectSupport = !1;
            var a = m.html.HtmlUtil.loadExtension("AudioContext").value;
            null != a && (m.html.WebAudioSound.ctx = new a, m.html.WebAudioSound.gain = (m.html.WebAudioSound.ctx.createGain) ? m.html.WebAudioSound.ctx.createGain() : m.html.WebAudioSound.ctx.createGainNode(), m.html.WebAudioSound.gain.connect(m.html.WebAudioSound.ctx.destination), W.volume.watch(function(a) {
                m.html.WebAudioSound.gain.gain.value = a
            }))
        }
        return null != m.html.WebAudioSound.ctx
    };
    m.html.WebAudioSound.prototype = {
        get_duration: function() {
            return this.buffer.duration
        },
        loop: function(a) {
            null == a && (a = 1);
            return new m.html._WebAudioSound.WebAudioPlayback(this,
                a, !0)
        },
        play: function(a) {
            null == a && (a = 1);
            return new m.html._WebAudioSound.WebAudioPlayback(this, a, !1)
        },
        __class__: m.html.WebAudioSound,
        __properties__: {
            get_duration: "get_duration"
        }
    };
    m.html._WebAudioSound = {};
    m.html._WebAudioSound.WebAudioPlayback = function(a, b, c) {
        var d = this;
        this._sound = a;
        this._head = m.html.WebAudioSound.gain;
        this._sourceNode = m.html.WebAudioSound.ctx.createBufferSource();
        this._sourceNode.buffer = a.buffer;
        this._sourceNode.loop = c;
        (this._sourceNode.start) ? this._sourceNode.start(0): this._sourceNode.noteOn(0);
        this.playAudio();
        this.volume = new ca.AnimatedFloat(b,
            function(a) {
                d.setVolume(a)
            });
        1 != b && this.setVolume(b)
    };
    j["flambe.platform.html._WebAudioSound.WebAudioPlayback"] = m.html._WebAudioSound.WebAudioPlayback;
    m.html._WebAudioSound.WebAudioPlayback.__name__ = ["flambe", "platform", "html", "_WebAudioSound", "WebAudioPlayback"];
    m.html._WebAudioSound.WebAudioPlayback.__interfaces__ = [m.Tickable, da.Playback];
    m.html._WebAudioSound.WebAudioPlayback.prototype = {
        playAudio: function() {
            this._sourceNode.connect(this._head);
            this._startedAt = m.html.WebAudioSound.ctx.currentTime;
            this._pausedAt = -1;
            this._tickableAdded || (this._tickableAdded = !0, m.html.HtmlPlatform.instance.mainLoop.addTickable(this))
        },
        insertNode: function(a) {
            0 <= this._pausedAt || (this._sourceNode.disconnect(), this._sourceNode.connect(a));
            a.connect(this._head);
            this._head = a
        },
        setVolume: function(a) {
            null == this._gainNode && (this._gainNode = (m.html.WebAudioSound.ctx.createGain)?m.html.WebAudioSound.ctx.createGain():m.html.WebAudioSound.ctx.createGainNode(), this.insertNode(this._gainNode));
            this._gainNode.gain.value = a
        },
        dispose: function() {
            this.set_paused(!0)
        },
        update: function(a) {
            this.volume.update(a);
            return 3 == this._sourceNode.playbackState || 0 <= this._pausedAt ? (this._tickableAdded = !1, !0) : !1
        },
        set_position: function(a) {
            return a
        },
        get_position: function() {
            return 3 == this._sourceNode.playbackState ? this._sound.get_duration() : 0 <= this._pausedAt ? this._pausedAt : (m.html.WebAudioSound.ctx.currentTime - this._startedAt) % this._sound.get_duration()
        },
        get_ended: function() {
            return 3 == this._sourceNode.playbackState
        },
        set_paused: function(a) {
            a != 0 <= this._pausedAt && (a ? (this._sourceNode.disconnect(), this._pausedAt = this.get_position()) :
                this.playAudio());
            return a
        },
        get_paused: function() {
            return 0 <= this._pausedAt
        },
        get_sound: function() {
            return this._sound
        },
        __class__: m.html._WebAudioSound.WebAudioPlayback,
        __properties__: {
            set_paused: "set_paused",
            get_paused: "get_paused",
            get_ended: "get_ended",
            set_position: "set_position",
            get_position: "get_position",
            get_sound: "get_sound"
        }
    };
    U = {
        Director: function() {
            this._width = this._height = -1;
            this._transitor = null;
            this.scenes = [];
            this.occludedScenes = [];
            this._root = new ma
        }
    };
    j["flambe.scene.Director"] = U.Director;
    U.Director.__name__ = ["flambe", "scene", "Director"];
    U.Director.__super__ = ha;
    U.Director.prototype = C(ha.prototype, {
        get_height: function() {
            return 0 > this._height ? W._platform.getStage().get_height() : this._height
        },
        get_width: function() {
            return 0 > this._width ? W._platform.getStage().get_width() : this._width
        },
        completeTransition: function() {
            null != this._transitor && (this._transitor.complete(), this._transitor = null, this.invalidateVisibility())
        },
        invalidateVisibility: function() {
            for (var a = this.scenes.length; 0 < a;) {
                var b = this.scenes[--a],
                    b = b._compMap.Scene_4;
                if (null == b || b.opaque) break
            }
            this.occludedScenes = 0 < this.scenes.length ? this.scenes.slice(a, this.scenes.length - 1) : [];
            b = this.get_topScene();
            null != b && this.show(b)
        },
        show: function(a) {
            a = a._compMap.Scene_4;
            null != a && a.shown.emit0()
        },
        get_topScene: function() {
            var a = this.scenes.length;
            return 0 < a ? this.scenes[a - 1] : null
        },
        onUpdate: function(a) {
            null != this._transitor && this._transitor.update(a) && this.completeTransition()
        },
        onRemoved: function() {
            this.completeTransition();
            for (var a = 0, b = this.scenes; a < b.length;) {
                var c = b[a];
                ++a;
                c.dispose()
            }
            this.scenes = [];
            this.occludedScenes = [];
            this._root.dispose()
        },
        onAdded: function() {
            this.owner.addChild(this._root)
        },
        get_name: function() {
            return "Director_0"
        },
        __class__: U.Director
    });
    U._Director = {};
    U._Director.Transitor = function() {};
    j["flambe.scene._Director.Transitor"] = U._Director.Transitor;
    U._Director.Transitor.__name__ = ["flambe", "scene", "_Director", "Transitor"];
    U._Director.Transitor.prototype = {
        complete: function() {
            this._transition.complete();
            this._onComplete()
        },
        update: function(a) {
            return this._transition.update(a)
        },
        __class__: U._Director.Transitor
    };
    U.Scene = function(a) {
        null == a && (a = !0);
        this.opaque = a;
        this.shown = new z.Signal0;
        this.hidden = new z.Signal0
    };
    j["flambe.scene.Scene"] = U.Scene;
    U.Scene.__name__ = ["flambe", "scene", "Scene"];
    U.Scene.__super__ = ha;
    U.Scene.prototype = C(ha.prototype, {
        get_name: function() {
            return "Scene_4"
        },
        __class__: U.Scene
    });
    U.Transition = function() {};
    j["flambe.scene.Transition"] = U.Transition;
    U.Transition.__name__ = ["flambe", "scene", "Transition"];
    U.Transition.prototype = {
        complete: function() {},
        update: function() {
            return !0
        },
        __class__: U.Transition
    };
    da._Mixer = {};
    da._Mixer.MixerSound = function(a, b) {
        this._source = a;
        this._channels = b;
        this._playbacks = []
    };
    j["flambe.sound._Mixer.MixerSound"] = da._Mixer.MixerSound;
    da._Mixer.MixerSound.__name__ = ["flambe", "sound", "_Mixer", "MixerSound"];
    da._Mixer.MixerSound.__interfaces__ = [z.Disposable, da.Sound];
    da._Mixer.MixerSound.prototype = {
        dispose: function() {
            for (var a = 0, b = this._playbacks; a < b.length;) {
                var c = b[a];
                ++a;
                c.dispose()
            }
            this._playbacks = []
        },
        get_duration: function() {
            return this._source.get_duration()
        },
        findOpenChannel: function() {
            for (var a = 0, b = this._channels; a < b;) {
                var c = a++,
                    d = this._playbacks[c];
                if (null == d || d.get_ended()) return c
            }
            return -1
        },
        playOrLoop: function(a, b) {
            var c = this.findOpenChannel();
            if (0 > c) return new m.DummyPlayback(this);
            var d = b ? this._source.loop(a) : this._source.play(a);
            return this._playbacks[c] = d
        },
        loop: function(a) {
            null == a && (a = 1);
            return this.playOrLoop(a, !0)
        },
        play: function(a) {
            null == a && (a = 1);
            return this.playOrLoop(a, !1)
        },
        __class__: da._Mixer.MixerSound,
        __properties__: {
            get_duration: "get_duration"
        }
    };
    Q = {
        BitmapSprite: function(a) {
            E.Sprite.call(this);
            this.symbol = a;
            this.anchorX.set__(a.anchorX);
            this.anchorY.set__(a.anchorY)
        }
    };
    j["flambe.swf.BitmapSprite"] = Q.BitmapSprite;
    Q.BitmapSprite.__name__ = ["flambe", "swf", "BitmapSprite"];
    Q.BitmapSprite.__super__ = E.Sprite;
    Q.BitmapSprite.prototype = C(E.Sprite.prototype, {
        getNaturalHeight: function() {
            return this.symbol.height
        },
        getNaturalWidth: function() {
            return this.symbol.width
        },
        draw: function(a) {
            a.drawSubImage(this.symbol.atlas, 0, 0, this.symbol.x, this.symbol.y, this.symbol.width,
                this.symbol.height)
        },
        __class__: Q.BitmapSprite
    });
    Q.Symbol = function() {};
    j["flambe.swf.Symbol"] = Q.Symbol;
    Q.Symbol.__name__ = ["flambe", "swf", "Symbol"];
    Q.Symbol.prototype = {
        __class__: Q.Symbol,
        __properties__: {
            get_name: "get_name"
        }
    };
    Q.BitmapSymbol = function(a, b) {
        this._name = a.symbol;
        this.atlas = b;
        var c = a.rect;
        this.x = c[0];
        this.y = c[1];
        this.width = c[2];
        this.height = c[3];
        c = a.origin;
        null != c ? (this.anchorX = c[0], this.anchorY = c[1]) : this.anchorY = this.anchorX = 0
    };
    j["flambe.swf.BitmapSymbol"] = Q.BitmapSymbol;
    Q.BitmapSymbol.__name__ = ["flambe", "swf", "BitmapSymbol"];
    Q.BitmapSymbol.__interfaces__ = [Q.Symbol];
    Q.BitmapSymbol.prototype = {
        get_name: function() {
            return this._name
        },
        createSprite: function() {
            return new Q.BitmapSprite(this)
        },
        __class__: Q.BitmapSymbol,
        __properties__: {
            get_name: "get_name"
        }
    };
    Q.Library = function(a, b) {
        this._symbols = new T;
        var c = xa.parse(a.getFile(b + "/library.json"));
        this.frameRate = c.frameRate;
        for (var d = [], f = 0, e = c.movies; f < e.length;) {
            var l = e[f];
            ++f;
            l = new Q.MovieSymbol(this, l);
            d.push(l);
            this._symbols.set(l.get_name(), l)
        }
        f =
            c.textureGroups;
        (1 != f[0].scaleFactor || 1 < f.length) && ga.logger.warn("Flambe doesn't support Flump's Additional Scale Factors. Use Base Scales and load from different asset packs instead.", null);
        l = f[0].atlases;
        for (f = 0; f < l.length;) {
            c = l[f];
            ++f;
            for (var s = a.getTexture(b + "/" + z.Strings.removeFileExtension(c.file)), e = 0, c = c.textures; e < c.length;) {
                var F = c[e];
                ++e;
                F = new Q.BitmapSymbol(F, s);
                this._symbols.set(F.get_name(), F)
            }
        }
        for (f = 0; f < d.length;) {
            l = d[f];
            ++f;
            e = 0;
            for (c = l.layers; e < c.length;) {
                l = c[e];
                ++e;
                s = 0;
                for (F = l.keyframes; s <
                    F.length;) {
                    var g = F[s];
                    ++s;
                    if (null != g.symbolName) {
                        var i = this._symbols.get(g.symbolName);
                        null == l.lastSymbol ? l.lastSymbol = i : l.lastSymbol != i && (l.multipleSymbols = !0);
                        g.symbol = i
                    }
                }
            }
        }
    };
    j["flambe.swf.Library"] = Q.Library;
    Q.Library.__name__ = ["flambe", "swf", "Library"];
    Q.Library.prototype = {
        __class__: Q.Library
    };
    Q.MovieSprite = function(a) {
        this._looped = null;
        E.Sprite.call(this);
        this.symbol = a;
        this.speed = new ca.AnimatedFloat(1);
        this._animators = Array(a.layers.length);
        for (var b = 0, c = this._animators.length; b < c;) {
            var d = b++;
            this._animators[d] = new Q._MovieSprite.LayerAnimator(a.layers[d])
        }
        this._position = this._frame = 0;
        this["goto"](1)
    };
    j["flambe.swf.MovieSprite"] = Q.MovieSprite;
    Q.MovieSprite.__name__ = ["flambe", "swf", "MovieSprite"];
    Q.MovieSprite.__super__ = E.Sprite;
    Q.MovieSprite.prototype = C(E.Sprite.prototype, {
        get_looped: function() {
            null == this._looped && (this._looped = new z.Signal0);
            return this._looped
        },
        set_paused: function(a) {
            this._flags = z.BitSets.set(this._flags, 16, a);
            return a
        },
        set_position: function(a) {
            return this._position =
                fa.FMath.clamp(a, 0, this.symbol.duration)
        },
        "goto": function(a) {
            if (this._frame != a) {
                if (a < this._frame)
                    for (var b = 0, c = this._animators; b < c.length;) {
                        var d = c[b];
                        ++b;
                        d.changedKeyframe = !0;
                        d.keyframeIdx = 0
                    }
                b = 0;
                for (c = this._animators; b < c.length;) d = c[b], ++b, d.composeFrame(a);
                this._frame = a
            }
        },
        onUpdate: function(a) {
            E.Sprite.prototype.onUpdate.call(this, a);
            this.speed.update(a);
            var b = !1;
            0 == (this._flags & 16) && (this._position += this.speed._value * a, this._position > this.symbol.duration && (this._position %= this.symbol.duration, b = !0));
            this["goto"](this._position * this.symbol.frameRate);
            b && null != this._looped && this._looped.emit0()
        },
        onRemoved: function() {
            E.Sprite.prototype.onRemoved.call(this);
            for (var a = 0, b = this._animators; a < b.length;) {
                var c = b[a];
                ++a;
                this.owner.removeChild(c.content)
            }
        },
        onAdded: function() {
            E.Sprite.prototype.onAdded.call(this);
            for (var a = 0, b = this._animators; a < b.length;) {
                var c = b[a];
                ++a;
                this.owner.addChild(c.content)
            }
        },
        __class__: Q.MovieSprite,
        __properties__: C(E.Sprite.prototype.__properties__, {
            set_position: "set_position",
            get_position: "get_position",
            set_paused: "set_paused",
            get_paused: "get_paused"
        })
    });
    Q._MovieSprite = {};
    Q._MovieSprite.LayerAnimator = function(a) {
        this._sprites = null;
        this.changedKeyframe = !1;
        this.keyframeIdx = 0;
        this.layer = a;
        if (a.multipleSymbols) {
            this._sprites = Array(a.keyframes.length);
            for (var b = 0, c = this._sprites.length; b < c;) {
                var d = b++,
                    f = a.keyframes[d];
                this._sprites[d] = null != f.symbol ? f.symbol.createSprite() : new E.Sprite
            }
            a = this._sprites[0]
        } else a = null != a.lastSymbol ? a.lastSymbol.createSprite() : new E.Sprite;
        this.content =
            (new ma).add(a)
    };
    j["flambe.swf._MovieSprite.LayerAnimator"] = Q._MovieSprite.LayerAnimator;
    Q._MovieSprite.LayerAnimator.__name__ = ["flambe", "swf", "_MovieSprite", "LayerAnimator"];
    Q._MovieSprite.LayerAnimator.prototype = {
        composeFrame: function(a) {
            for (var b = this.layer.keyframes, c = b.length - 1; this.keyframeIdx < c && b[this.keyframeIdx + 1].index <= a;) ++this.keyframeIdx, this.changedKeyframe = !0;
            var d;
            this.changedKeyframe && null != this._sprites ? (d = this._sprites[this.keyframeIdx], this.content.add(d)) : d = this.content._compMap.Sprite_1;
            this.changedKeyframe = !1;
            var f = b[this.keyframeIdx],
                e = f.visible && null != f.symbol;
            d.set_visible(e);
            if (e) {
                var e = f.x,
                    l = f.y,
                    s = f.scaleX,
                    F = f.scaleY,
                    g = f.skewX,
                    i = f.skewY,
                    h = f.alpha;
                if (f.tweened && this.keyframeIdx < c) {
                    a = (a - f.index) / f.duration;
                    c = f.ease;
                    if (0 != c) {
                        var j;
                        0 > c ? (j = 1 - a, j = 1 - j * j, c = -c) : j = a * a;
                        a = c * j + (1 - c) * a
                    }
                    b = b[this.keyframeIdx + 1];
                    e += (b.x - e) * a;
                    l += (b.y - l) * a;
                    s += (b.scaleX - s) * a;
                    F += (b.scaleY - F) * a;
                    g += (b.skewX - g) * a;
                    i += (b.skewY - i) * a;
                    h += (b.alpha - h) * a
                }
                b = d.getLocalMatrix();
                a = Math.sin(g);
                g = Math.cos(g);
                c = Math.sin(i);
                i = Math.cos(i);
                b.set(i * s, c * s, -a * F, g * F, e, l);
                b.translate(-f.pivotX, -f.pivotY);
                d.alpha.set__(h)
            }
        },
        __class__: Q._MovieSprite.LayerAnimator
    };
    Q.MovieSymbol = function(a, b) {
        this._name = b.id;
        this.frameRate = a.frameRate;
        this.frames = 0;
        this.layers = Array(b.layers.length);
        for (var c = 0, d = this.layers.length; c < d;) {
            var f = c++,
                e = new Q.MovieLayer(b.layers[f]);
            this.frames = Math.max(e.get_frames(), this.frames);
            this.layers[f] = e
        }
        this.duration = this.frames / this.frameRate
    };
    j["flambe.swf.MovieSymbol"] = Q.MovieSymbol;
    Q.MovieSymbol.__name__ = ["flambe",
        "swf", "MovieSymbol"
    ];
    Q.MovieSymbol.__interfaces__ = [Q.Symbol];
    Q.MovieSymbol.prototype = {
        createSprite: function() {
            return new Q.MovieSprite(this)
        },
        get_name: function() {
            return this._name
        },
        __class__: Q.MovieSymbol,
        __properties__: {
            get_name: "get_name"
        }
    };
    Q.MovieLayer = function(a) {
        this.multipleSymbols = !1;
        this.lastSymbol = null;
        this.name = a.name;
        var b = null;
        this.keyframes = Array(a.keyframes.length);
        for (var c = 0, d = this.keyframes.length; c < d;) {
            var f = c++,
                b = new Q.MovieKeyframe(a.keyframes[f], b);
            this.keyframes[f] = b
        }
    };
    j["flambe.swf.MovieLayer"] =
        Q.MovieLayer;
    Q.MovieLayer.__name__ = ["flambe", "swf", "MovieLayer"];
    Q.MovieLayer.prototype = {
        get_frames: function() {
            var a = this.keyframes[this.keyframes.length - 1];
            return a.index + (a.duration | 0)
        },
        __class__: Q.MovieLayer,
        __properties__: {
            get_frames: "get_frames"
        }
    };
    Q.MovieKeyframe = function(a, b) {
        this.ease = 0;
        this.visible = this.tweened = !0;
        this.alpha = 1;
        this.skewX = this.skewY = this.pivotX = this.pivotY = 0;
        this.scaleX = this.scaleY = 1;
        this.x = this.y = 0;
        this.symbol = null;
        this.index = null != b ? b.index + b.duration : 0;
        this.duration = a.duration;
        this.label = a.label;
        this.symbolName = a.ref;
        var c = a.loc;
        null != c && (this.x = c[0], this.y = c[1]);
        c = a.scale;
        null != c && (this.scaleX = c[0], this.scaleY = c[1]);
        c = a.skew;
        null != c && (this.skewX = c[0], this.skewY = c[1]);
        c = a.pivot;
        null != c && (this.pivotX = c[0], this.pivotY = c[1]);
        null != a.alpha && (this.alpha = a.alpha);
        null != a.visible && (this.visible = a.visible);
        null != a.tweened && (this.tweened = a.tweened);
        null != a.ease && (this.ease = a.ease)
    };
    j["flambe.swf.MovieKeyframe"] = Q.MovieKeyframe;
    Q.MovieKeyframe.__name__ = ["flambe", "swf", "MovieKeyframe"];
    Q.MovieKeyframe.prototype = {
        __class__: Q.MovieKeyframe
    };
    z.Arrays = function() {};
    j["flambe.util.Arrays"] = z.Arrays;
    z.Arrays.__name__ = ["flambe", "util", "Arrays"];
    z.Assert = function() {};
    j["flambe.util.Assert"] = z.Assert;
    z.Assert.__name__ = ["flambe", "util", "Assert"];
    z.BitSets = function() {};
    j["flambe.util.BitSets"] = z.BitSets;
    z.BitSets.__name__ = ["flambe", "util", "BitSets"];
    z.BitSets.set = function(a, b, c) {
        return c ? a | b : a & ~b
    };
    z.LogLevel = j["flambe.util.LogLevel"] = {
        __ename__: ["flambe", "util", "LogLevel"],
        __constructs__: ["Info",
            "Warn", "Error"
        ]
    };
    z.LogLevel.Info = ["Info", 0];
    z.LogLevel.Info.toString = J;
    z.LogLevel.Info.__enum__ = z.LogLevel;
    z.LogLevel.Warn = ["Warn", 1];
    z.LogLevel.Warn.toString = J;
    z.LogLevel.Warn.__enum__ = z.LogLevel;
    z.LogLevel.Error = ["Error", 2];
    z.LogLevel.Error.toString = J;
    z.LogLevel.Error.__enum__ = z.LogLevel;
    z.Promise = function() {
        this.success = new z.Signal1;
        this.error = new z.Signal1;
        this.progressChanged = new z.Signal0;
        this.hasResult = !1;
        this._total = this._progress = 0
    };
    j["flambe.util.Promise"] = z.Promise;
    z.Promise.__name__ = ["flambe", "util", "Promise"];
    z.Promise.prototype = {
        set_total: function(a) {
            this._total != a && (this._total = a, this.progressChanged.emit0());
            return a
        },
        set_progress: function(a) {
            this._progress != a && (this._progress = a, this.progressChanged.emit0());
            return a
        },
        get: function(a) {
            return this.hasResult ? (a(this._result), null) : this.success.connect(a).once()
        },
        set_result: function(a) {
            if (this.hasResult) throw "Promise result already assigned";
            this._result = a;
            this.hasResult = !0;
            this.success.emit1(a);
            return a
        },
        get_result: function() {
            if (!this.hasResult) throw "Promise result not yet available";
            return this._result
        },
        __class__: z.Promise,
        __properties__: {
            set_result: "set_result",
            get_result: "get_result",
            set_progress: "set_progress",
            get_progress: "get_progress",
            set_total: "set_total",
            get_total: "get_total"
        }
    };
    z.Signal0 = function(a) {
        z.SignalBase.call(this, a)
    };
    j["flambe.util.Signal0"] = z.Signal0;
    z.Signal0.__name__ = ["flambe", "util", "Signal0"];
    z.Signal0.__super__ = z.SignalBase;
    z.Signal0.prototype = C(z.SignalBase.prototype, {
        connect: function(a, b) {
            null == b && (b = !1);
            return this.connectImpl(a, b)
        },
        __class__: z.Signal0
    });
    z._SignalBase = {};
    z._SignalBase.Task = function(a) {
        this.next = null;
        this.fn = a
    };
    j["flambe.util._SignalBase.Task"] = z._SignalBase.Task;
    z._SignalBase.Task.__name__ = ["flambe", "util", "_SignalBase", "Task"];
    z._SignalBase.Task.prototype = {
        __class__: z._SignalBase.Task
    };
    Z = void 0;
    ta = void 0;
    oa = void 0;
    sa = void 0;
    ua = void 0;
    xa = void 0;
    xa = function() {};
    j["haxe.Json"] = xa;
    xa.__name__ = ["haxe", "Json"];
    xa.parse = function(a) {
        return (new xa).doParse(a)
    };
    xa.prototype = {
        parseString: function() {
            for (var a = this.pos, b = new ya;;) {
                var c = this.str.charCodeAt(this.pos++);
                if (34 == c) break;
                if (92 == c) {
                    b.b += S.substr(this.str, a, this.pos - a - 1);
                    c = this.str.charCodeAt(this.pos++);
                    switch (c) {
                        case 114:
                            b.b += String.fromCharCode(13);
                            break;
                        case 110:
                            b.b += String.fromCharCode(10);
                            break;
                        case 116:
                            b.b += String.fromCharCode(9);
                            break;
                        case 98:
                            b.b += String.fromCharCode(8);
                            break;
                        case 102:
                            b.b += String.fromCharCode(12);
                            break;
                        case 47:
                        case 92:
                        case 34:
                            b.b += String.fromCharCode(c);
                            break;
                        case 117:
                            a = I.parseInt("0x" + S.substr(this.str, this.pos, 4));
                            this.pos += 4;
                            b.b += String.fromCharCode(a);
                            break;
                        default:
                            throw "Invalid escape sequence \\" +
                                String.fromCharCode(c) + " at position " + (this.pos - 1);
                    }
                    a = this.pos
                } else if (c != c) throw "Unclosed string";
            }
            b.b += S.substr(this.str, a, this.pos - a - 1);
            return b.b
        },
        parseRec: function() {
            for (;;) switch (this.str.charCodeAt(this.pos++)) {
                case 32:
                case 13:
                case 10:
                case 9:
                    break;
                case 123:
                    for (var a = {}, b = null, c = null;;) {
                        var d = this.str.charCodeAt(this.pos++);
                        switch (d) {
                            case 32:
                            case 13:
                            case 10:
                            case 9:
                                break;
                            case 125:
                                return (null != b || !1 == c) && this.invalidChar(), a;
                            case 58:
                                null == b && this.invalidChar();
                                a[b] = this.parseRec();
                                b = null;
                                c = !0;
                                break;
                            case 44:
                                c ? c = !1 : this.invalidChar();
                                break;
                            case 34:
                                c && this.invalidChar();
                                b = this.parseString();
                                break;
                            default:
                                this.invalidChar()
                        }
                    }
                    break;
                case 91:
                    a = [];
                    for (c = null;;) switch (d = this.str.charCodeAt(this.pos++), d) {
                        case 32:
                        case 13:
                        case 10:
                        case 9:
                            break;
                        case 93:
                            return !1 == c && this.invalidChar(), a;
                        case 44:
                            c ? c = !1 : this.invalidChar();
                            break;
                        default:
                            c && this.invalidChar(), this.pos--, a.push(this.parseRec()), c = !0
                    }
                    break;
                case 116:
                    c = this.pos;
                    if (114 != this.str.charCodeAt(this.pos++) || 117 != this.str.charCodeAt(this.pos++) ||
                        101 != this.str.charCodeAt(this.pos++)) this.pos = c, this.invalidChar();
                    return !0;
                case 102:
                    c = this.pos;
                    if (97 != this.str.charCodeAt(this.pos++) || 108 != this.str.charCodeAt(this.pos++) || 115 != this.str.charCodeAt(this.pos++) || 101 != this.str.charCodeAt(this.pos++)) this.pos = c, this.invalidChar();
                    return !1;
                case 110:
                    c = this.pos;
                    if (117 != this.str.charCodeAt(this.pos++) || 108 != this.str.charCodeAt(this.pos++) || 108 != this.str.charCodeAt(this.pos++)) this.pos = c, this.invalidChar();
                    return null;
                case 34:
                    return this.parseString();
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 45:
                    this.pos--;
                    if (!this.reg_float.match(S.substr(this.str, this.pos, null))) throw "Invalid float at position " + this.pos;
                    c = this.reg_float.matched(0);
                    this.pos += c.length;
                    c = I.parseFloat(c);
                    d = c | 0;
                    return d == c ? d : c;
                default:
                    this.invalidChar()
            }
        },
        invalidChar: function() {
            this.pos--;
            throw "Invalid char " + this.str.charCodeAt(this.pos) + " at position " + this.pos;
        },
        doParse: function(a) {
            this.reg_float = new wa("^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?", "");
            this.str = a;
            this.pos = 0;
            return this.parseRec()
        },
        __class__: xa
    };
    sa = function() {
        this.buf =
            new ya;
        this.cache = [];
        this.useCache = sa.USE_CACHE;
        this.useEnumIndex = sa.USE_ENUM_INDEX;
        this.shash = new T;
        this.scount = 0
    };
    j["haxe.Serializer"] = sa;
    sa.__name__ = ["haxe", "Serializer"];
    sa.run = function(a) {
        var b = new sa;
        b.serialize(a);
        return b.toString()
    };
    sa.prototype = {
        serialize: function(a) {
            var b = la["typeof"](a);
            switch (b[1]) {
                case 0:
                    this.buf.b += I.string("n");
                    break;
                case 1:
                    if (0 == a) {
                        this.buf.b += I.string("z");
                        break
                    }
                    this.buf.b += I.string("i");
                    this.buf.b += I.string(a);
                    break;
                case 2:
                    Math.isNaN(a) ? this.buf.b += I.string("k") :
                        Math.isFinite(a) ? (this.buf.b += I.string("d"), this.buf.b += I.string(a)) : this.buf.b += I.string(0 > a ? "m" : "p");
                    break;
                case 3:
                    this.buf.b += I.string(a ? "t" : "f");
                    break;
                case 6:
                    b = b[2];
                    if (b == String) {
                        this.serializeString(a);
                        break
                    }
                    if (this.useCache && this.serializeRef(a)) break;
                    switch (b) {
                        case Array:
                            var c = 0;
                            this.buf.b += I.string("a");
                            for (var d = a.length, f = 0; f < d;) b = f++, null == a[b] ? c++ : (0 < c && (1 == c ? this.buf.b += I.string("n") : (this.buf.b += I.string("u"), this.buf.b += I.string(c)), c = 0), this.serialize(a[b]));
                            0 < c && (1 == c ? this.buf.b +=
                                I.string("n") : (this.buf.b += I.string("u"), this.buf.b += I.string(c)));
                            this.buf.b += I.string("h");
                            break;
                        case Ca:
                            this.buf.b += I.string("l");
                            for (a = a.iterator(); a.hasNext();) b = a.next(), this.serialize(b);
                            this.buf.b += I.string("h");
                            break;
                        case Date:
                            this.buf.b += I.string("v");
                            this.buf.b += I.string(S.dateStr(a));
                            break;
                        case T:
                            this.buf.b += I.string("b");
                            for (c = a.keys(); c.hasNext();) b = c.next(), this.serializeString(b), this.serialize(a.get(b));
                            this.buf.b += I.string("h");
                            break;
                        case va:
                            this.buf.b += I.string("q");
                            for (c = a.keys(); c.hasNext();) b =
                                c.next(), this.buf.b += I.string(":"), this.buf.b += I.string(b), this.serialize(a.get(b));
                            this.buf.b += I.string("h");
                            break;
                        case ua.Bytes:
                            b = 0;
                            c = a.length - 2;
                            d = new ya;
                            for (f = sa.BASE64; b < c;) {
                                var e = a.b[b++],
                                    l = a.b[b++],
                                    s = a.b[b++];
                                d.b += I.string(f.charAt(e >> 2));
                                d.b += I.string(f.charAt((e << 4 | l >> 4) & 63));
                                d.b += I.string(f.charAt((l << 2 | s >> 6) & 63));
                                d.b += I.string(f.charAt(s & 63))
                            }
                            b == c ? (e = a.b[b++], l = a.b[b++], d.b += I.string(f.charAt(e >> 2)), d.b += I.string(f.charAt((e << 4 | l >> 4) & 63)), d.b += I.string(f.charAt(l << 2 & 63))) : b == c + 1 && (e = a.b[b++],
                                d.b += I.string(f.charAt(e >> 2)), d.b += I.string(f.charAt(e << 4 & 63)));
                            b = d.b;
                            this.buf.b += I.string("s");
                            this.buf.b += I.string(b.length);
                            this.buf.b += I.string(":");
                            this.buf.b += I.string(b);
                            break;
                        default:
                            this.cache.pop(), null != a.hxSerialize ? (this.buf.b += I.string("C"), this.serializeString(la.getClassName(b)), this.cache.push(a), a.hxSerialize(this), this.buf.b += I.string("g")) : (this.buf.b += I.string("c"), this.serializeString(la.getClassName(b)), this.cache.push(a), this.serializeFields(a))
                    }
                    break;
                case 4:
                    if (this.useCache &&
                        this.serializeRef(a)) break;
                    this.buf.b += I.string("o");
                    this.serializeFields(a);
                    break;
                case 7:
                    b = b[2];
                    if (this.useCache && this.serializeRef(a)) break;
                    this.cache.pop();
                    this.buf.b += I.string(this.useEnumIndex ? "j" : "w");
                    this.serializeString(la.getEnumName(b));
                    this.useEnumIndex ? (this.buf.b += I.string(":"), this.buf.b += I.string(a[1])) : this.serializeString(a[0]);
                    this.buf.b += I.string(":");
                    d = a.length;
                    this.buf.b += I.string(d - 2);
                    for (f = 2; f < d;) b = f++, this.serialize(a[b]);
                    this.cache.push(a);
                    break;
                case 5:
                    throw "Cannot serialize function";
                default:
                    throw "Cannot serialize " + I.string(a);
            }
        },
        serializeFields: function(a) {
            for (var b = 0, c = ia.fields(a); b < c.length;) {
                var d = c[b];
                ++b;
                this.serializeString(d);
                this.serialize(ia.field(a, d))
            }
            this.buf.b += I.string("g")
        },
        serializeRef: function(a) {
            for (var b = typeof a, c = 0, d = this.cache.length; c < d;) {
                var f = c++,
                    e = this.cache[f];
                if (typeof e == b && e == a) return this.buf.b += I.string("r"), this.buf.b += I.string(f), !0
            }
            this.cache.push(a);
            return !1
        },
        serializeString: function(a) {
            var b = this.shash.get(a);
            null != b ? (this.buf.b += I.string("R"),
                this.buf.b += I.string(b)) : (this.shash.set(a, this.scount++), this.buf.b += I.string("y"), a = qa.urlEncode(a), this.buf.b += I.string(a.length), this.buf.b += I.string(":"), this.buf.b += I.string(a))
        },
        toString: function() {
            return this.buf.b
        },
        __class__: sa
    };
    ta = function(a) {
        var b = this;
        this.id = window.setInterval(function() {
            b.run()
        }, a)
    };
    j["haxe.Timer"] = ta;
    ta.__name__ = ["haxe", "Timer"];
    ta.delay = function(a, b) {
        var c = new ta(b);
        c.run = function() {
            c.stop();
            a()
        };
        return c
    };
    ta.prototype = {
        run: function() {},
        stop: function() {
            null != this.id &&
                (window.clearInterval(this.id), this.id = null)
        },
        __class__: ta
    };
    oa = function(a) {
        this.buf = a;
        this.length = a.length;
        this.pos = 0;
        this.scache = [];
        this.cache = [];
        a = oa.DEFAULT_RESOLVER;
        null == a && (a = la, oa.DEFAULT_RESOLVER = a);
        this.setResolver(a)
    };
    j["haxe.Unserializer"] = oa;
    oa.__name__ = ["haxe", "Unserializer"];
    oa.initCodes = function() {
        for (var a = [], b = 0, c = oa.BASE64.length; b < c;) {
            var d = b++;
            a[oa.BASE64.charCodeAt(d)] = d
        }
        return a
    };
    oa.run = function(a) {
        return (new oa(a)).unserialize()
    };
    oa.prototype = {
        unserialize: function() {
            switch (this.buf.charCodeAt(this.pos++)) {
                case 110:
                    return null;
                case 116:
                    return !0;
                case 102:
                    return !1;
                case 122:
                    return 0;
                case 105:
                    return this.readDigits();
                case 100:
                    for (var a = this.pos;;) {
                        var b = this.buf.charCodeAt(this.pos);
                        if (43 <= b && 58 > b || 101 == b || 69 == b) this.pos++;
                        else break
                    }
                    return I.parseFloat(S.substr(this.buf, a, this.pos - a));
                case 121:
                    b = this.readDigits();
                    if (58 != this.buf.charCodeAt(this.pos++) || this.length - this.pos < b) throw "Invalid string length";
                    a = S.substr(this.buf, this.pos, b);
                    this.pos += b;
                    a = qa.urlDecode(a);
                    this.scache.push(a);
                    return a;
                case 107:
                    return Math.NaN;
                case 109:
                    return Math.NEGATIVE_INFINITY;
                case 112:
                    return Math.POSITIVE_INFINITY;
                case 97:
                    var c = this.buf,
                        a = [];
                    for (this.cache.push(a);;) {
                        b = this.buf.charCodeAt(this.pos);
                        if (104 == b) {
                            this.pos++;
                            break
                        }
                        117 == b ? (this.pos++, b = this.readDigits(), a[a.length + b - 1] = null) : a.push(this.unserialize())
                    }
                    return a;
                case 111:
                    return b = {}, this.cache.push(b), this.unserializeObject(b), b;
                case 114:
                    b = this.readDigits();
                    if (0 > b || b >= this.cache.length) throw "Invalid reference";
                    return this.cache[b];
                case 82:
                    b = this.readDigits();
                    if (0 > b || b >= this.scache.length) throw "Invalid string reference";
                    return this.scache[b];
                case 120:
                    throw this.unserialize();
                case 99:
                    b = this.unserialize();
                    a = this.resolver.resolveClass(b);
                    if (null == a) throw "Class not found " + b;
                    b = la.createEmptyInstance(a);
                    this.cache.push(b);
                    this.unserializeObject(b);
                    return b;
                case 119:
                    b = this.unserialize();
                    a = this.resolver.resolveEnum(b);
                    if (null == a) throw "Enum not found " + b;
                    b = this.unserializeEnum(a, this.unserialize());
                    this.cache.push(b);
                    return b;
                case 106:
                    b = this.unserialize();
                    a = this.resolver.resolveEnum(b);
                    if (null == a) throw "Enum not found " +
                        b;
                    this.pos++;
                    var c = this.readDigits(),
                        d = la.getEnumConstructs(a)[c];
                    if (null == d) throw "Unknown enum index " + b + "@" + c;
                    b = this.unserializeEnum(a, d);
                    this.cache.push(b);
                    return b;
                case 108:
                    b = new Ca;
                    for (this.cache.push(b); 104 != this.buf.charCodeAt(this.pos);) b.add(this.unserialize());
                    this.pos++;
                    return b;
                case 98:
                    c = new T;
                    for (this.cache.push(c); 104 != this.buf.charCodeAt(this.pos);) a = this.unserialize(), c.set(a, this.unserialize());
                    this.pos++;
                    return c;
                case 113:
                    c = new va;
                    this.cache.push(c);
                    for (b = this.buf.charCodeAt(this.pos++); 58 ==
                        b;) a = this.readDigits(), c.set(a, this.unserialize()), b = this.buf.charCodeAt(this.pos++);
                    if (104 != b) throw "Invalid IntHash format";
                    return c;
                case 118:
                    return b = S.strDate(S.substr(this.buf, this.pos, 19)), this.cache.push(b), this.pos += 19, b;
                case 115:
                    b = this.readDigits();
                    c = this.buf;
                    if (58 != this.buf.charCodeAt(this.pos++) || this.length - this.pos < b) throw "Invalid bytes length";
                    d = oa.CODES;
                    null == d && (d = oa.initCodes(), oa.CODES = d);
                    for (var a = this.pos, f = b & 3, e = a + (b - f), l = ua.Bytes.alloc(3 * (b >> 2) + (2 <= f ? f - 1 : 0)), s = 0; a < e;) {
                        var g = d[c.charCodeAt(a++)],
                            i = d[c.charCodeAt(a++)];
                        l.b[s++] = (g << 2 | i >> 4) & 255;
                        g = d[c.charCodeAt(a++)];
                        l.b[s++] = (i << 4 | g >> 2) & 255;
                        i = d[c.charCodeAt(a++)];
                        l.b[s++] = (g << 6 | i) & 255
                    }
                    2 <= f && (g = d[c.charCodeAt(a++)], i = d[c.charCodeAt(a++)], l.b[s++] = (g << 2 | i >> 4) & 255, 3 == f && (g = d[c.charCodeAt(a++)], l.b[s++] = (i << 4 | g >> 2) & 255));
                    this.pos += b;
                    this.cache.push(l);
                    return l;
                case 67:
                    b = this.unserialize();
                    a = this.resolver.resolveClass(b);
                    if (null == a) throw "Class not found " + b;
                    b = la.createEmptyInstance(a);
                    this.cache.push(b);
                    b.hxUnserialize(this);
                    if (103 != this.buf.charCodeAt(this.pos++)) throw "Invalid custom data";
                    return b
            }
            this.pos--;
            throw "Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos;
        },
        unserializeEnum: function(a, b) {
            if (58 != this.buf.charCodeAt(this.pos++)) throw "Invalid enum format";
            var c = this.readDigits();
            if (0 == c) return la.createEnum(a, b);
            for (var d = []; 0 < c--;) d.push(this.unserialize());
            return la.createEnum(a, b, d)
        },
        unserializeObject: function(a) {
            for (;;) {
                if (this.pos >= this.length) throw "Invalid object";
                if (103 == this.buf.charCodeAt(this.pos)) break;
                var b = this.unserialize();
                if (!ba.__instanceof(b, String)) throw "Invalid object key";
                var c = this.unserialize();
                a[b] = c
            }
            this.pos++
        },
        readDigits: function() {
            for (var a = 0, b = !1, c = this.pos;;) {
                var d = this.buf.charCodeAt(this.pos);
                if (d != d) break;
                if (45 == d) {
                    if (this.pos != c) break;
                    b = !0
                } else {
                    if (48 > d || 57 < d) break;
                    a = 10 * a + (d - 48)
                }
                this.pos++
            }
            b && (a *= -1);
            return a
        },
        setResolver: function(a) {
            this.resolver = null == a ? {
                resolveClass: function() {
                    return null
                },
                resolveEnum: function() {
                    return null
                }
            } : a
        },
        __class__: oa
    };
    ua = {
        Bytes: function(a, b) {
            this.length = a;
            this.b = b
        }
    };
    j["haxe.io.Bytes"] = ua.Bytes;
    ua.Bytes.__name__ = ["haxe", "io", "Bytes"];
    ua.Bytes.alloc = function(a) {
        for (var b = [], c = 0; c < a;) c++, b.push(0);
        return new ua.Bytes(a, b)
    };
    ua.Bytes.ofData = function(a) {
        return new ua.Bytes(a.length, a)
    };
    ua.Bytes.prototype = {
        __class__: ua.Bytes
    };
    Z = {
        _Fast: {}
    };
    Z._Fast.NodeAccess = function(a) {
        this.__x = a
    };
    j["haxe.xml._Fast.NodeAccess"] = Z._Fast.NodeAccess;
    Z._Fast.NodeAccess.__name__ = ["haxe", "xml", "_Fast", "NodeAccess"];
    Z._Fast.NodeAccess.prototype = {
        resolve: function(a) {
            var b = this.__x.elementsNamed(a).next();
            if (null == b) throw (this.__x.nodeType == P.Document ? "Document" :
                this.__x.getNodeName()) + " is missing element " + a;
            return new Z.Fast(b)
        },
        __class__: Z._Fast.NodeAccess
    };
    Z._Fast.AttribAccess = function(a) {
        this.__x = a
    };
    j["haxe.xml._Fast.AttribAccess"] = Z._Fast.AttribAccess;
    Z._Fast.AttribAccess.__name__ = ["haxe", "xml", "_Fast", "AttribAccess"];
    Z._Fast.AttribAccess.prototype = {
        resolve: function(a) {
            if (this.__x.nodeType == P.Document) throw "Cannot access document attribute " + a;
            var b = this.__x.get(a);
            if (null == b) throw this.__x.getNodeName() + " is missing attribute " + a;
            return b
        },
        __class__: Z._Fast.AttribAccess
    };
    Z._Fast.HasAttribAccess = function(a) {
        this.__x = a
    };
    j["haxe.xml._Fast.HasAttribAccess"] = Z._Fast.HasAttribAccess;
    Z._Fast.HasAttribAccess.__name__ = ["haxe", "xml", "_Fast", "HasAttribAccess"];
    Z._Fast.HasAttribAccess.prototype = {
        resolve: function(a) {
            if (this.__x.nodeType == P.Document) throw "Cannot access document attribute " + a;
            return this.__x.exists(a)
        },
        __class__: Z._Fast.HasAttribAccess
    };
    Z._Fast.HasNodeAccess = function(a) {
        this.__x = a
    };
    j["haxe.xml._Fast.HasNodeAccess"] = Z._Fast.HasNodeAccess;
    Z._Fast.HasNodeAccess.__name__ = ["haxe", "xml", "_Fast", "HasNodeAccess"];
    Z._Fast.HasNodeAccess.prototype = {
        resolve: function(a) {
            return this.__x.elementsNamed(a).hasNext()
        },
        __class__: Z._Fast.HasNodeAccess
    };
    Z._Fast.NodeListAccess = function(a) {
        this.__x = a
    };
    j["haxe.xml._Fast.NodeListAccess"] = Z._Fast.NodeListAccess;
    Z._Fast.NodeListAccess.__name__ = ["haxe", "xml", "_Fast", "NodeListAccess"];
    Z._Fast.NodeListAccess.prototype = {
        resolve: function(a) {
            for (var b = new Ca, a = this.__x.elementsNamed(a); a.hasNext();) {
                var c = a.next();
                b.add(new Z.Fast(c))
            }
            return b
        },
        __class__: Z._Fast.NodeListAccess
    };
    Z.Fast = function(a) {
        if (a.nodeType != P.Document && a.nodeType != P.Element) throw "Invalid nodeType " + I.string(a.nodeType);
        this.x = a;
        this.node = new Z._Fast.NodeAccess(a);
        this.nodes = new Z._Fast.NodeListAccess(a);
        this.att = new Z._Fast.AttribAccess(a);
        this.has = new Z._Fast.HasAttribAccess(a);
        this.hasNode = new Z._Fast.HasNodeAccess(a)
    };
    j["haxe.xml.Fast"] = Z.Fast;
    Z.Fast.__name__ = ["haxe", "xml", "Fast"];
    Z.Fast.prototype = {
        getElements: function() {
            var a = this.x.elements();
            return {
                hasNext: w(a,
                    a.hasNext),
                next: function() {
                    var b = a.next();
                    return null == b ? null : new Z.Fast(b)
                }
            }
        },
        getInnerHTML: function() {
            for (var a = new ya, b = this.x.iterator(); b.hasNext();) {
                var c = b.next();
                a.b += I.string(c.toString())
            }
            return a.b
        },
        getInnerData: function() {
            var a = this.x.iterator();
            if (!a.hasNext()) throw this.getName() + " does not have data";
            var b = a.next(),
                c = a.next();
            if (null != c) {
                if (b.nodeType == P.PCData && c.nodeType == P.CData && "" == qa.trim(b.getNodeValue()) && (b = a.next(), null == b || b.nodeType == P.PCData && "" == qa.trim(b.getNodeValue()) &&
                        null == a.next())) return c.getNodeValue();
                throw this.getName() + " does not only have data";
            }
            if (b.nodeType != P.PCData && b.nodeType != P.CData) throw this.getName() + " does not have data";
            return b.getNodeValue()
        },
        getName: function() {
            return this.x.nodeType == P.Document ? "Document" : this.x.getNodeName()
        },
        __class__: Z.Fast,
        __properties__: {
            get_name: "getName",
            get_innerData: "getInnerData"
        }
    };
    Z.Parser = function() {};
    j["haxe.xml.Parser"] = Z.Parser;
    Z.Parser.__name__ = ["haxe", "xml", "Parser"];
    Z.Parser.parse = function(a) {
        var b = P.createDocument();
        Z.Parser.doParse(a, 0, b);
        return b
    };
    Z.Parser.doParse = function(a, b, c) {
        null == b && (b = 0);
        for (var d = null, f = 1, e = 1, l = null, s = 0, g = 0, i = 0, h = a.charCodeAt(b); h == h;) {
            switch (f) {
                case 0:
                    switch (h) {
                        case 10:
                        case 13:
                        case 9:
                        case 32:
                            break;
                        default:
                            f = e;
                            continue
                    }
                    break;
                case 1:
                    switch (h) {
                        case 60:
                            f = 0;
                            e = 2;
                            break;
                        default:
                            s = b;
                            f = 13;
                            continue
                    }
                    break;
                case 13:
                    60 == h && (f = P.createPCData(S.substr(a, s, b - s)), c.addChild(f), g++, f = 0, e = 2);
                    break;
                case 17:
                    93 == h && 93 == a.charCodeAt(b + 1) && 62 == a.charCodeAt(b + 2) && (f = P.createCData(S.substr(a, s, b - s)), c.addChild(f),
                        g++, b += 2, f = 1);
                    break;
                case 2:
                    switch (h) {
                        case 33:
                            if (91 == a.charCodeAt(b + 1)) {
                                b += 2;
                                if ("CDATA[" != S.substr(a, b, 6).toUpperCase()) throw "Expected <![CDATA[";
                                b += 5;
                                f = 17
                            } else if (68 == a.charCodeAt(b + 1) || 100 == a.charCodeAt(b + 1)) {
                                if ("OCTYPE" != S.substr(a, b + 2, 6).toUpperCase()) throw "Expected <!DOCTYPE";
                                b += 8;
                                f = 16
                            } else {
                                if (45 != a.charCodeAt(b + 1) || 45 != a.charCodeAt(b + 2)) throw "Expected <\!--";
                                b += 2;
                                f = 15
                            }
                            s = b + 1;
                            break;
                        case 63:
                            f = 14;
                            s = b;
                            break;
                        case 47:
                            if (null == c) throw "Expected node name";
                            s = b + 1;
                            f = 0;
                            e = 10;
                            break;
                        default:
                            f = 3;
                            s = b;
                            continue
                    }
                    break;
                case 3:
                    if (!(97 <= h && 122 >= h || 65 <= h && 90 >= h || 48 <= h && 57 >= h || 58 == h || 46 == h || 95 == h || 45 == h)) {
                        if (b == s) throw "Expected node name";
                        d = P.createElement(S.substr(a, s, b - s));
                        c.addChild(d);
                        f = 0;
                        e = 4;
                        continue
                    }
                    break;
                case 4:
                    switch (h) {
                        case 47:
                            f = 11;
                            g++;
                            break;
                        case 62:
                            f = 9;
                            g++;
                            break;
                        default:
                            f = 5;
                            s = b;
                            continue
                    }
                    break;
                case 5:
                    if (!(97 <= h && 122 >= h || 65 <= h && 90 >= h || 48 <= h && 57 >= h || 58 == h || 46 == h || 95 == h || 45 == h)) {
                        if (s == b) throw "Expected attribute name";
                        l = S.substr(a, s, b - s);
                        if (d.exists(l)) throw "Duplicate attribute";
                        f = 0;
                        e = 6;
                        continue
                    }
                    break;
                case 6:
                    switch (h) {
                        case 61:
                            f =
                                0;
                            e = 7;
                            break;
                        default:
                            throw "Expected =";
                    }
                    break;
                case 7:
                    switch (h) {
                        case 34:
                        case 39:
                            f = 8;
                            s = b;
                            break;
                        default:
                            throw 'Expected "';
                    }
                    break;
                case 8:
                    h == a.charCodeAt(s) && (e = S.substr(a, s + 1, b - s - 1), d.set(l, e), f = 0, e = 4);
                    break;
                case 9:
                    s = b = Z.Parser.doParse(a, b, d);
                    f = 1;
                    break;
                case 11:
                    switch (h) {
                        case 62:
                            f = 1;
                            break;
                        default:
                            throw "Expected >";
                    }
                    break;
                case 12:
                    switch (h) {
                        case 62:
                            return 0 == g && c.addChild(P.createPCData("")), b;
                        default:
                            throw "Expected >";
                    }
                case 10:
                    if (!(97 <= h && 122 >= h || 65 <= h && 90 >= h || 48 <= h && 57 >= h || 58 == h || 46 == h || 95 == h || 45 == h)) {
                        if (s ==
                            b) throw "Expected node name";
                        if (S.substr(a, s, b - s) != c.getNodeName()) throw "Expected </" + c.getNodeName() + ">";
                        f = 0;
                        e = 12;
                        continue
                    }
                    break;
                case 15:
                    45 == h && 45 == a.charCodeAt(b + 1) && 62 == a.charCodeAt(b + 2) && (c.addChild(P.createComment(S.substr(a, s, b - s))), b += 2, f = 1);
                    break;
                case 16:
                    91 == h ? i++ : 93 == h ? i-- : 62 == h && 0 == i && (c.addChild(P.createDocType(S.substr(a, s, b - s))), f = 1);
                    break;
                case 14:
                    63 == h && 62 == a.charCodeAt(b + 1) && (b++, f = S.substr(a, s + 1, b - s - 2), c.addChild(P.createProlog(f)), f = 1)
            }
            h = a.charCodeAt(++b)
        }
        1 == f && (s = b, f = 13);
        if (13 == f) return (b !=
            s || 0 == g) && c.addChild(P.createPCData(S.substr(a, s, b - s))), b;
        throw "Unexpected end";
    };
    B = void 0;
    L = void 0;
    u = void 0;
    ra = void 0;
    v = void 0;
    x = void 0;
    N = void 0;
    K = void 0;
    x = function() {};
    j["nape.Config"] = x;
    x.__name__ = ["nape", "Config"];
    x.prototype = {
        __class__: x
    };
    v = {
        Callback: function() {
            this.zpp_inner = null
        }
    };
    j["nape.callbacks.Callback"] = v.Callback;
    v.Callback.__name__ = ["nape", "callbacks", "Callback"];
    v.Callback.prototype = {
        toString: function() {
            return ""
        },
        __class__: v.Callback,
        __properties__: {
            get_listener: "get_listener"
        }
    };
    v.BodyCallback =
        function() {
            v.Callback.call(this)
        };
    j["nape.callbacks.BodyCallback"] = v.BodyCallback;
    v.BodyCallback.__name__ = ["nape", "callbacks", "BodyCallback"];
    v.BodyCallback.__super__ = v.Callback;
    v.BodyCallback.prototype = C(v.Callback.prototype, {
        toString: function() {
            var a;
            a = "Cb:" + ["WAKE", "SLEEP"][this.zpp_inner.event - e.ZPP_Flags.id_CbEvent_WAKE];
            a += ":" + this.zpp_inner.body.outer.toString();
            return a += " : listener: " + I.string(this.zpp_inner.listener.outer)
        },
        __class__: v.BodyCallback,
        __properties__: C(v.Callback.prototype.__properties__, {
            get_body: "get_body"
        })
    });
    v.Listener = function() {
        this.zpp_inner = null
    };
    j["nape.callbacks.Listener"] = v.Listener;
    v.Listener.__name__ = ["nape", "callbacks", "Listener"];
    v.Listener.prototype = {
        toString: function() {
            var a = "BEGIN,END,WAKE,SLEEP,BREAK,PRE,ONGOING".split(",")[this.zpp_inner.event];
            if (this.zpp_inner.type == e.ZPP_Flags.id_ListenerType_BODY) return "BodyListener{" + a + "::" + I.string(this.zpp_inner.body.outer_zn.zpp_inner_zn.options.outer) + "}";
            if (this.zpp_inner.type == e.ZPP_Flags.id_ListenerType_CONSTRAINT) {
                var b =
                    this.zpp_inner.constraint;
                return "ConstraintListener{" + a + "::" + I.string(b.outer_zn.zpp_inner_zn.options.outer) + "}"
            }
            var b = this.zpp_inner.interaction,
                c;
            switch (b.itype) {
                case e.ZPP_Flags.id_InteractionType_COLLISION:
                    c = "COLLISION";
                    break;
                case e.ZPP_Flags.id_InteractionType_SENSOR:
                    c = "SENSOR";
                    break;
                case e.ZPP_Flags.id_InteractionType_FLUID:
                    c = "FLUID";
                    break;
                default:
                    c = "ALL"
            }
            return (this.zpp_inner.type == e.ZPP_Flags.id_ListenerType_INTERACTION ? "InteractionListener{" + a + "#" + c + "::" + I.string(b.outer_zni.zpp_inner_zn.options1.outer) +
                ":" + I.string(b.outer_zni.zpp_inner_zn.options2.outer) + "}" : "PreListener{" + c + "::" + I.string(b.outer_znp.zpp_inner_zn.options1.outer) + ":" + I.string(b.outer_znp.zpp_inner_zn.options2.outer) + "}") + " precedence=" + this.zpp_inner.precedence
        },
        __class__: v.Listener,
        __properties__: {
            set_event: "set_event",
            get_event: "get_event",
            set_precedence: "set_precedence",
            get_precedence: "get_precedence",
            set_space: "set_space",
            get_space: "get_space"
        }
    };
    v.BodyListener = function() {
        this.zpp_inner_zn = null
    };
    j["nape.callbacks.BodyListener"] =
        v.BodyListener;
    v.BodyListener.__name__ = ["nape", "callbacks", "BodyListener"];
    v.BodyListener.__super__ = v.Listener;
    v.BodyListener.prototype = C(v.Listener.prototype, {
        __class__: v.BodyListener,
        __properties__: C(v.Listener.prototype.__properties__, {
            set_options: "set_options",
            get_options: "get_options"
        })
    });
    v.CbEvent = function() {};
    j["nape.callbacks.CbEvent"] = v.CbEvent;
    v.CbEvent.__name__ = ["nape", "callbacks", "CbEvent"];
    v.CbEvent.__properties__ = {
        get_PRE: "get_PRE",
        get_BREAK: "get_BREAK",
        get_SLEEP: "get_SLEEP",
        get_WAKE: "get_WAKE",
        get_END: "get_END",
        get_ONGOING: "get_ONGOING",
        get_BEGIN: "get_BEGIN"
    };
    v.CbEvent.prototype = {
        toString: function() {
            var a;
            null == e.ZPP_Flags.CbEvent_PRE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.CbEvent_PRE = new v.CbEvent, e.ZPP_Flags.internal = !1);
            this == e.ZPP_Flags.CbEvent_PRE ? a = "PRE" : (null == e.ZPP_Flags.CbEvent_BEGIN && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.CbEvent_BEGIN = new v.CbEvent, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.CbEvent_BEGIN ? a = "BEGIN" : (null == e.ZPP_Flags.CbEvent_ONGOING && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.CbEvent_ONGOING =
                new v.CbEvent, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.CbEvent_ONGOING ? a = "ONGOING" : (null == e.ZPP_Flags.CbEvent_END && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.CbEvent_END = new v.CbEvent, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.CbEvent_END ? a = "END" : (null == e.ZPP_Flags.CbEvent_WAKE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.CbEvent_WAKE = new v.CbEvent, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.CbEvent_WAKE ? a = "WAKE" : (null == e.ZPP_Flags.CbEvent_SLEEP && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.CbEvent_SLEEP = new v.CbEvent,
                e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.CbEvent_SLEEP ? a = "SLEEP" : (null == e.ZPP_Flags.CbEvent_BREAK && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.CbEvent_BREAK = new v.CbEvent, e.ZPP_Flags.internal = !1), a = this == e.ZPP_Flags.CbEvent_BREAK ? "BREAK" : ""))))));
            return a
        },
        __class__: v.CbEvent
    };
    v.CbType = function() {
        this.zpp_inner = null;
        this.zpp_inner = new H.ZPP_CbType;
        this.zpp_inner.outer = this
    };
    j["nape.callbacks.CbType"] = v.CbType;
    v.CbType.__name__ = ["nape", "callbacks", "CbType"];
    v.CbType.__properties__ = {
        get_ANY_COMPOUND: "get_ANY_COMPOUND",
        get_ANY_SHAPE: "get_ANY_SHAPE",
        get_ANY_CONSTRAINT: "get_ANY_CONSTRAINT",
        get_ANY_BODY: "get_ANY_BODY"
    };
    v.CbType.prototype = {
        toString: function() {
            return this == H.ZPP_CbType.ANY_BODY ? "ANY_BODY" : this == H.ZPP_CbType.ANY_SHAPE ? "ANY_SHAPE" : this == H.ZPP_CbType.ANY_COMPOUND ? "ANY_COMPOUND" : this == H.ZPP_CbType.ANY_CONSTRAINT ? "ANY_CONSTRAINT" : "CbType#" + this.zpp_inner.id
        },
        __class__: v.CbType,
        __properties__: {
            get_id: "get_id"
        }
    };
    v.CbTypeIterator = function() {
        this.zpp_next = null;
        this.zpp_critical = !1;
        this.zpp_i = 0;
        this.zpp_inner =
            null
    };
    j["nape.callbacks.CbTypeIterator"] = v.CbTypeIterator;
    v.CbTypeIterator.__name__ = ["nape", "callbacks", "CbTypeIterator"];
    v.CbTypeIterator.get = function(a) {
        var b = null == v.CbTypeIterator.zpp_pool ? function() {
            e.ZPP_CbTypeList.internal = !0;
            var a = new v.CbTypeIterator;
            e.ZPP_CbTypeList.internal = !1;
            return a
        }(this) : function() {
            var a = v.CbTypeIterator.zpp_pool;
            v.CbTypeIterator.zpp_pool = a.zpp_next;
            return a
        }(this);
        b.zpp_i = 0;
        b.zpp_inner = a;
        b.zpp_critical = !1;
        return b
    };
    v.CbTypeIterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.get_length();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = v.CbTypeIterator.zpp_pool;
            v.CbTypeIterator.zpp_pool = this;
            this.zpp_inner = null;
            return !1
        },
        __class__: v.CbTypeIterator
    };
    v.CbTypeList = function() {
        this.zpp_inner = null;
        this.zpp_inner = new e.ZPP_CbTypeList;
        this.zpp_inner.outer = this
    };
    j["nape.callbacks.CbTypeList"] = v.CbTypeList;
    v.CbTypeList.__name__ = ["nape", "callbacks", "CbTypeList"];
    v.CbTypeList.prototype = {
        toString: function() {
            var a = "[",
                b = !0,
                c;
            this.zpp_inner.valmod();
            for (c = v.CbTypeIterator.get(this); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_inner.valmod();
            return v.CbTypeIterator.get(this)
        },
        clear: function() {
            if (this.zpp_inner.reverse_flag)
                for (; null != this.zpp_inner.inner.head;) this.pop();
            else
                for (; null != this.zpp_inner.inner.head;) this.shift()
        },
        add: function(a) {
            return this.zpp_inner.reverse_flag ? this.push(a) :
                this.unshift(a)
        },
        shift: function() {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var a = null;
            if (this.zpp_inner.reverse_flag) {
                null != this.zpp_inner.at_ite && null == this.zpp_inner.at_ite.next && (this.zpp_inner.at_ite = null);
                var b = 1 == this.get_length() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 2),
                    a = null == b ? this.zpp_inner.inner.head.elt : b.next.elt,
                    c = a.outer;
                null != this.zpp_inner.subber && this.zpp_inner.subber(c);
                this.zpp_inner.dontremove || this.zpp_inner.inner.erase(b)
            } else a = this.zpp_inner.inner.head.elt,
                c = a.outer, null != this.zpp_inner.subber && this.zpp_inner.subber(c), this.zpp_inner.dontremove || this.zpp_inner.inner.pop();
            this.zpp_inner.invalidate();
            return c = a.outer
        },
        pop: function() {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var a = null;
            if (this.zpp_inner.reverse_flag) {
                var a = this.zpp_inner.inner.head.elt,
                    b = a.outer;
                null != this.zpp_inner.subber && this.zpp_inner.subber(b);
                this.zpp_inner.dontremove || this.zpp_inner.inner.pop()
            } else {
                null != this.zpp_inner.at_ite && null == this.zpp_inner.at_ite.next && (this.zpp_inner.at_ite =
                    null);
                var c = 1 == this.get_length() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 2),
                    a = null == c ? this.zpp_inner.inner.head.elt : c.next.elt,
                    b = a.outer;
                null != this.zpp_inner.subber && this.zpp_inner.subber(b);
                this.zpp_inner.dontremove || this.zpp_inner.inner.erase(c)
            }
            this.zpp_inner.invalidate();
            return b = a.outer
        },
        unshift: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ? (null == this.zpp_inner.push_ite &&
                (this.zpp_inner.push_ite = null == this.zpp_inner.inner.head ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)) : this.zpp_inner.inner.add(a.zpp_inner), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        push: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ?
                this.zpp_inner.inner.add(a.zpp_inner) : (null == this.zpp_inner.push_ite && (this.zpp_inner.push_ite = null == this.zpp_inner.inner.head ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        at: function(a) {
            this.zpp_inner.valmod();
            this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
            if (a < this.zpp_inner.at_index ||
                null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
            else
                for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
            return this.zpp_inner.at_ite.elt.outer
        },
        get_length: function() {
            this.zpp_inner.valmod();
            this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
            return this.zpp_inner.user_length
        },
        __class__: v.CbTypeList,
        __properties__: {
            get_length: "get_length"
        }
    };
    v.ConstraintCallback = function() {
        v.Callback.call(this)
    };
    j["nape.callbacks.ConstraintCallback"] = v.ConstraintCallback;
    v.ConstraintCallback.__name__ = ["nape", "callbacks", "ConstraintCallback"];
    v.ConstraintCallback.__super__ = v.Callback;
    v.ConstraintCallback.prototype = C(v.Callback.prototype, {
        toString: function() {
            var a;
            a = "Cb:" + ["WAKE", "SLEEP", "BREAK"][this.zpp_inner.event - e.ZPP_Flags.id_CbEvent_WAKE];
            a += ":" + this.zpp_inner.constraint.outer.toString();
            return a += " : listener: " + I.string(this.zpp_inner.listener.outer)
        },
        __class__: v.ConstraintCallback,
        __properties__: C(v.Callback.prototype.__properties__, {
            get_constraint: "get_constraint"
        })
    });
    v.ConstraintListener = function() {
        this.zpp_inner_zn = null
    };
    j["nape.callbacks.ConstraintListener"] = v.ConstraintListener;
    v.ConstraintListener.__name__ = ["nape", "callbacks", "ConstraintListener"];
    v.ConstraintListener.__super__ = v.Listener;
    v.ConstraintListener.prototype = C(v.Listener.prototype, {
        __class__: v.ConstraintListener,
        __properties__: C(v.Listener.prototype.__properties__, {
            set_options: "set_options",
            get_options: "get_options"
        })
    });
    v.InteractionCallback = function() {
        v.Callback.call(this)
    };
    j["nape.callbacks.InteractionCallback"] = v.InteractionCallback;
    v.InteractionCallback.__name__ = ["nape", "callbacks", "InteractionCallback"];
    v.InteractionCallback.__super__ = v.Callback;
    v.InteractionCallback.prototype = C(v.Callback.prototype, {
        toString: function() {
            var a;
            a = "Cb:" + "BEGIN,END,,,,,ONGOING".split(",")[this.zpp_inner.event];
            a += ":" + this.zpp_inner.int1.outer_i.toString() + "/" + this.zpp_inner.int2.outer_i.toString();
            a += " : " + this.zpp_inner.wrap_arbiters.toString();
            return a += " : listener: " + I.string(this.zpp_inner.listener.outer)
        },
        __class__: v.InteractionCallback,
        __properties__: C(v.Callback.prototype.__properties__, {
            get_int1: "get_int1",
            get_int2: "get_int2",
            get_arbiters: "get_arbiters"
        })
    });
    v.InteractionListener = function(a, b, c, d, f, n) {
        null == n && (n = 0);
        this.zpp_inner_zn = null;
        v.Listener.call(this);
        var l = -1;
        null == e.ZPP_Flags.CbEvent_BEGIN && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.CbEvent_BEGIN = new v.CbEvent, e.ZPP_Flags.internal = !1);
        a == e.ZPP_Flags.CbEvent_BEGIN ? l = e.ZPP_Flags.id_CbEvent_BEGIN : (null == e.ZPP_Flags.CbEvent_END && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.CbEvent_END = new v.CbEvent, e.ZPP_Flags.internal = !1), a == e.ZPP_Flags.CbEvent_END ? l = e.ZPP_Flags.id_CbEvent_END : (null == e.ZPP_Flags.CbEvent_ONGOING && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.CbEvent_ONGOING = new v.CbEvent, e.ZPP_Flags.internal = !1), a == e.ZPP_Flags.CbEvent_ONGOING && (l = e.ZPP_Flags.id_CbEvent_ONGOING)));
        this.zpp_inner = this.zpp_inner_zn = new H.ZPP_InteractionListener(H.ZPP_OptionType.argument(c),
            H.ZPP_OptionType.argument(d), l, e.ZPP_Flags.id_ListenerType_INTERACTION);
        this.zpp_inner.outer = this;
        this.zpp_inner_zn.outer_zni = this;
        this.zpp_inner.precedence = n;
        this.zpp_inner_zn.handleri = f;
        this.set_interactionType(b)
    };
    j["nape.callbacks.InteractionListener"] = v.InteractionListener;
    v.InteractionListener.__name__ = ["nape", "callbacks", "InteractionListener"];
    v.InteractionListener.__super__ = v.Listener;
    v.InteractionListener.prototype = C(v.Listener.prototype, {
        set_interactionType: function(a) {
            if (this.get_interactionType() !=
                a) {
                var b = this.zpp_inner_zn;
                null == e.ZPP_Flags.InteractionType_COLLISION && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_COLLISION = new v.InteractionType, e.ZPP_Flags.internal = !1);
                a == e.ZPP_Flags.InteractionType_COLLISION ? a = e.ZPP_Flags.id_InteractionType_COLLISION : (null == e.ZPP_Flags.InteractionType_SENSOR && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_SENSOR = new v.InteractionType, e.ZPP_Flags.internal = !1), a == e.ZPP_Flags.InteractionType_SENSOR ? a = e.ZPP_Flags.id_InteractionType_SENSOR : (null ==
                    e.ZPP_Flags.InteractionType_FLUID && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_FLUID = new v.InteractionType, e.ZPP_Flags.internal = !1), a = a == e.ZPP_Flags.InteractionType_FLUID ? e.ZPP_Flags.id_InteractionType_FLUID : e.ZPP_Flags.id_InteractionType_ANY));
                b.itype = a
            }
            return this.get_interactionType()
        },
        get_interactionType: function() {
            var a = this.zpp_inner_zn.itype;
            a == e.ZPP_Flags.id_InteractionType_COLLISION ? (null == e.ZPP_Flags.InteractionType_COLLISION && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_COLLISION =
                new v.InteractionType, e.ZPP_Flags.internal = !1), a = e.ZPP_Flags.InteractionType_COLLISION) : a == e.ZPP_Flags.id_InteractionType_SENSOR ? (null == e.ZPP_Flags.InteractionType_SENSOR && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_SENSOR = new v.InteractionType, e.ZPP_Flags.internal = !1), a = e.ZPP_Flags.InteractionType_SENSOR) : a == e.ZPP_Flags.id_InteractionType_FLUID ? (null == e.ZPP_Flags.InteractionType_FLUID && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_FLUID = new v.InteractionType, e.ZPP_Flags.internal = !1), a = e.ZPP_Flags.InteractionType_FLUID) : a == e.ZPP_Flags.id_InteractionType_ANY ? (null == e.ZPP_Flags.InteractionType_ANY && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_ANY = new v.InteractionType, e.ZPP_Flags.internal = !1), a = e.ZPP_Flags.InteractionType_ANY) : a = null;
            return a
        },
        __class__: v.InteractionListener,
        __properties__: C(v.Listener.prototype.__properties__, {
            set_options1: "set_options1",
            get_options1: "get_options1",
            set_options2: "set_options2",
            get_options2: "get_options2",
            set_interactionType: "set_interactionType",
            get_interactionType: "get_interactionType"
        })
    });
    v.InteractionType = function() {};
    j["nape.callbacks.InteractionType"] = v.InteractionType;
    v.InteractionType.__name__ = ["nape", "callbacks", "InteractionType"];
    v.InteractionType.__properties__ = {
        get_ANY: "get_ANY",
        get_FLUID: "get_FLUID",
        get_SENSOR: "get_SENSOR",
        get_COLLISION: "get_COLLISION"
    };
    v.InteractionType.prototype = {
        toString: function() {
            var a;
            null == e.ZPP_Flags.InteractionType_COLLISION && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_COLLISION = new v.InteractionType,
                e.ZPP_Flags.internal = !1);
            this == e.ZPP_Flags.InteractionType_COLLISION ? a = "COLLISION" : (null == e.ZPP_Flags.InteractionType_SENSOR && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_SENSOR = new v.InteractionType, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.InteractionType_SENSOR ? a = "SENSOR" : (null == e.ZPP_Flags.InteractionType_FLUID && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_FLUID = new v.InteractionType, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.InteractionType_FLUID ? a = "FLUID" : (null == e.ZPP_Flags.InteractionType_ANY &&
                (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_ANY = new v.InteractionType, e.ZPP_Flags.internal = !1), a = this == e.ZPP_Flags.InteractionType_ANY ? "ANY" : "")));
            return a
        },
        __class__: v.InteractionType
    };
    v.ListenerIterator = function() {
        this.zpp_next = null;
        this.zpp_critical = !1;
        this.zpp_i = 0;
        this.zpp_inner = null
    };
    j["nape.callbacks.ListenerIterator"] = v.ListenerIterator;
    v.ListenerIterator.__name__ = ["nape", "callbacks", "ListenerIterator"];
    v.ListenerIterator.get = function(a) {
        var b = null == v.ListenerIterator.zpp_pool ? function() {
            e.ZPP_ListenerList.internal = !0;
            var a = new v.ListenerIterator;
            e.ZPP_ListenerList.internal = !1;
            return a
        }(this) : function() {
            var a = v.ListenerIterator.zpp_pool;
            v.ListenerIterator.zpp_pool = a.zpp_next;
            return a
        }(this);
        b.zpp_i = 0;
        b.zpp_inner = a;
        b.zpp_critical = !1;
        return b
    };
    v.ListenerIterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.get_length();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = v.ListenerIterator.zpp_pool;
            v.ListenerIterator.zpp_pool = this;
            this.zpp_inner = null;
            return !1
        },
        __class__: v.ListenerIterator
    };
    v.ListenerList = function() {
        this.zpp_inner = null;
        this.zpp_inner = new e.ZPP_ListenerList;
        this.zpp_inner.outer = this
    };
    j["nape.callbacks.ListenerList"] = v.ListenerList;
    v.ListenerList.__name__ = ["nape", "callbacks", "ListenerList"];
    v.ListenerList.prototype = {
        toString: function() {
            var a = "[",
                b = !0,
                c;
            this.zpp_inner.valmod();
            for (c = v.ListenerIterator.get(this); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_inner.valmod();
            return v.ListenerIterator.get(this)
        },
        clear: function() {
            if (this.zpp_inner.reverse_flag)
                for (; null != this.zpp_inner.inner.head;) this.pop();
            else
                for (; null != this.zpp_inner.inner.head;) this.shift()
        },
        remove: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b;
            b = !1;
            for (var c = this.zpp_inner.inner.head; null != c;) {
                if (c.elt == a.zpp_inner) {
                    b = !0;
                    break
                }
                c = c.next
            }
            b && (null != this.zpp_inner.subber && this.zpp_inner.subber(a), this.zpp_inner.dontremove ||
                this.zpp_inner.inner.remove(a.zpp_inner), this.zpp_inner.invalidate());
            return b
        },
        add: function(a) {
            return this.zpp_inner.reverse_flag ? this.push(a) : this.unshift(a)
        },
        shift: function() {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var a = null;
            if (this.zpp_inner.reverse_flag) {
                null != this.zpp_inner.at_ite && null == this.zpp_inner.at_ite.next && (this.zpp_inner.at_ite = null);
                var b = 1 == this.get_length() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 2),
                    a = null == b ? this.zpp_inner.inner.head.elt : b.next.elt,
                    c = a.outer;
                null != this.zpp_inner.subber && this.zpp_inner.subber(c);
                this.zpp_inner.dontremove || this.zpp_inner.inner.erase(b)
            } else a = this.zpp_inner.inner.head.elt, c = a.outer, null != this.zpp_inner.subber && this.zpp_inner.subber(c), this.zpp_inner.dontremove || this.zpp_inner.inner.pop();
            this.zpp_inner.invalidate();
            return c = a.outer
        },
        pop: function() {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var a = null;
            if (this.zpp_inner.reverse_flag) {
                var a = this.zpp_inner.inner.head.elt,
                    b = a.outer;
                null != this.zpp_inner.subber &&
                    this.zpp_inner.subber(b);
                this.zpp_inner.dontremove || this.zpp_inner.inner.pop()
            } else {
                null != this.zpp_inner.at_ite && null == this.zpp_inner.at_ite.next && (this.zpp_inner.at_ite = null);
                var c = 1 == this.get_length() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 2),
                    a = null == c ? this.zpp_inner.inner.head.elt : c.next.elt,
                    b = a.outer;
                null != this.zpp_inner.subber && this.zpp_inner.subber(b);
                this.zpp_inner.dontremove || this.zpp_inner.inner.erase(c)
            }
            this.zpp_inner.invalidate();
            return b = a.outer
        },
        unshift: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ? (null == this.zpp_inner.push_ite && (this.zpp_inner.push_ite = null == this.zpp_inner.inner.head ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)) : this.zpp_inner.inner.add(a.zpp_inner), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        push: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ? this.zpp_inner.inner.add(a.zpp_inner) : (null == this.zpp_inner.push_ite && (this.zpp_inner.push_ite = null == this.zpp_inner.inner.head ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        at: function(a) {
            this.zpp_inner.valmod();
            this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
            if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
            else
                for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
            return this.zpp_inner.at_ite.elt.outer
        },
        get_length: function() {
            this.zpp_inner.valmod();
            this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
            return this.zpp_inner.user_length
        },
        __class__: v.ListenerList,
        __properties__: {
            get_length: "get_length"
        }
    };
    v.ListenerType = function() {};
    j["nape.callbacks.ListenerType"] = v.ListenerType;
    v.ListenerType.__name__ = ["nape", "callbacks", "ListenerType"];
    v.ListenerType.__properties__ = {
        get_PRE: "get_PRE",
        get_INTERACTION: "get_INTERACTION",
        get_CONSTRAINT: "get_CONSTRAINT",
        get_BODY: "get_BODY"
    };
    v.ListenerType.prototype = {
        toString: function() {
            var a;
            null == e.ZPP_Flags.ListenerType_BODY && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.ListenerType_BODY =
                new v.ListenerType, e.ZPP_Flags.internal = !1);
            this == e.ZPP_Flags.ListenerType_BODY ? a = "BODY" : (null == e.ZPP_Flags.ListenerType_CONSTRAINT && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.ListenerType_CONSTRAINT = new v.ListenerType, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.ListenerType_CONSTRAINT ? a = "CONSTRAINT" : (null == e.ZPP_Flags.ListenerType_INTERACTION && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.ListenerType_INTERACTION = new v.ListenerType, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.ListenerType_INTERACTION ? a = "INTERACTION" :
                (null == e.ZPP_Flags.ListenerType_PRE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.ListenerType_PRE = new v.ListenerType, e.ZPP_Flags.internal = !1), a = this == e.ZPP_Flags.ListenerType_PRE ? "PRE" : "")));
            return a
        },
        __class__: v.ListenerType
    };
    v.OptionType = function(a, b) {
        this.zpp_inner = null;
        this.zpp_inner = new H.ZPP_OptionType;
        this.zpp_inner.outer = this;
        null != a && this.including(a);
        null != b && this.excluding(b)
    };
    j["nape.callbacks.OptionType"] = v.OptionType;
    v.OptionType.__name__ = ["nape", "callbacks", "OptionType"];
    v.OptionType.prototype = {
        toString: function() {
            null == this.zpp_inner.wrap_includes && this.zpp_inner.setup_includes();
            var a = this.zpp_inner.wrap_includes.toString();
            null == this.zpp_inner.wrap_excludes && this.zpp_inner.setup_excludes();
            return "@{" + a + " excluding " + this.zpp_inner.wrap_excludes.toString() + "}"
        },
        excluding: function(a) {
            this.zpp_inner.append(this.zpp_inner.excludes, a);
            return this
        },
        including: function(a) {
            this.zpp_inner.append(this.zpp_inner.includes, a);
            return this
        },
        __class__: v.OptionType,
        __properties__: {
            get_includes: "get_includes",
            get_excludes: "get_excludes"
        }
    };
    v.PreCallback = function() {
        v.Callback.call(this)
    };
    j["nape.callbacks.PreCallback"] = v.PreCallback;
    v.PreCallback.__name__ = ["nape", "callbacks", "PreCallback"];
    v.PreCallback.__super__ = v.Callback;
    v.PreCallback.prototype = C(v.Callback.prototype, {
        toString: function() {
            var a;
            a = "Cb:PRE:" + (":" + this.zpp_inner.int1.outer_i.toString() + "/" + this.zpp_inner.int2.outer_i.toString());
            a += " : " + this.zpp_inner.pre_arbiter.wrapper().toString();
            return a += " : listnener: " + I.string(this.zpp_inner.listener.outer)
        },
        __class__: v.PreCallback,
        __properties__: C(v.Callback.prototype.__properties__, {
            get_arbiter: "get_arbiter",
            get_int1: "get_int1",
            get_int2: "get_int2"
        })
    });
    v.PreFlag = function() {};
    j["nape.callbacks.PreFlag"] = v.PreFlag;
    v.PreFlag.__name__ = ["nape", "callbacks", "PreFlag"];
    v.PreFlag.__properties__ = {
        get_IGNORE_ONCE: "get_IGNORE_ONCE",
        get_ACCEPT_ONCE: "get_ACCEPT_ONCE",
        get_IGNORE: "get_IGNORE",
        get_ACCEPT: "get_ACCEPT"
    };
    v.PreFlag.prototype = {
        toString: function() {
            var a;
            null == e.ZPP_Flags.PreFlag_ACCEPT && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_ACCEPT = new v.PreFlag, e.ZPP_Flags.internal = !1);
            this == e.ZPP_Flags.PreFlag_ACCEPT ? a = "ACCEPT" : (null == e.ZPP_Flags.PreFlag_IGNORE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_IGNORE = new v.PreFlag, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.PreFlag_IGNORE ? a = "IGNORE" : (null == e.ZPP_Flags.PreFlag_ACCEPT_ONCE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_ACCEPT_ONCE = new v.PreFlag, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.PreFlag_ACCEPT_ONCE ? a = "ACCEPT_ONCE" : (null == e.ZPP_Flags.PreFlag_IGNORE_ONCE &&
                (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_IGNORE_ONCE = new v.PreFlag, e.ZPP_Flags.internal = !1), a = this == e.ZPP_Flags.PreFlag_IGNORE_ONCE ? "IGNORE_ONCE" : "")));
            return a
        },
        __class__: v.PreFlag
    };
    v.PreListener = function() {
        this.zpp_inner_zn = null
    };
    j["nape.callbacks.PreListener"] = v.PreListener;
    v.PreListener.__name__ = ["nape", "callbacks", "PreListener"];
    v.PreListener.__super__ = v.Listener;
    v.PreListener.prototype = C(v.Listener.prototype, {
        get_interactionType: function() {
            var a = this.zpp_inner_zn.itype;
            a == e.ZPP_Flags.id_InteractionType_COLLISION ?
                (null == e.ZPP_Flags.InteractionType_COLLISION && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_COLLISION = new v.InteractionType, e.ZPP_Flags.internal = !1), a = e.ZPP_Flags.InteractionType_COLLISION) : a == e.ZPP_Flags.id_InteractionType_SENSOR ? (null == e.ZPP_Flags.InteractionType_SENSOR && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_SENSOR = new v.InteractionType, e.ZPP_Flags.internal = !1), a = e.ZPP_Flags.InteractionType_SENSOR) : a == e.ZPP_Flags.id_InteractionType_FLUID ? (null == e.ZPP_Flags.InteractionType_FLUID &&
                    (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_FLUID = new v.InteractionType, e.ZPP_Flags.internal = !1), a = e.ZPP_Flags.InteractionType_FLUID) : a == e.ZPP_Flags.id_InteractionType_ANY ? (null == e.ZPP_Flags.InteractionType_ANY && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InteractionType_ANY = new v.InteractionType, e.ZPP_Flags.internal = !1), a = e.ZPP_Flags.InteractionType_ANY) : a = null;
            return a
        },
        __class__: v.PreListener,
        __properties__: C(v.Listener.prototype.__properties__, {
            set_options1: "set_options1",
            get_options1: "get_options1",
            set_options2: "set_options2",
            get_options2: "get_options2",
            set_interactionType: "set_interactionType",
            get_interactionType: "get_interactionType"
        })
    });
    N = {
        Constraint: function() {
            this.zpp_inner.insert_cbtype(H.ZPP_CbType.ANY_CONSTRAINT.zpp_inner)
        }
    };
    j["nape.constraint.Constraint"] = N.Constraint;
    N.Constraint.__name__ = ["nape", "constraint", "Constraint"];
    N.Constraint.prototype = {
        toString: function() {
            return "{Constraint}"
        },
        visitBodies: function() {},
        bodyImpulse: function() {
            return null
        },
        impulse: function() {
            return null
        },
        set_breakUnderError: function(a) {
            this.zpp_inner.breakUnderError !=
                a && (this.zpp_inner.breakUnderError = a, this.zpp_inner.wake());
            return this.zpp_inner.breakUnderError
        },
        set_breakUnderForce: function(a) {
            this.zpp_inner.breakUnderForce != a && (this.zpp_inner.breakUnderForce = a, this.zpp_inner.wake());
            return this.zpp_inner.breakUnderForce
        },
        set_maxError: function(a) {
            this.zpp_inner.maxError != a && (this.zpp_inner.maxError = a, this.zpp_inner.wake());
            return this.zpp_inner.maxError
        },
        set_maxForce: function(a) {
            this.zpp_inner.maxForce != a && (this.zpp_inner.maxForce = a, this.zpp_inner.wake());
            return this.zpp_inner.maxForce
        },
        set_damping: function(a) {
            this.zpp_inner.damping != a && (this.zpp_inner.damping = a, this.zpp_inner.stiff || this.zpp_inner.wake());
            return this.zpp_inner.damping
        },
        set_frequency: function(a) {
            this.zpp_inner.frequency != a && (this.zpp_inner.frequency = a, this.zpp_inner.stiff || this.zpp_inner.wake());
            return this.zpp_inner.frequency
        },
        set_stiff: function(a) {
            this.zpp_inner.stiff != a && (this.zpp_inner.stiff = a, this.zpp_inner.wake());
            return this.zpp_inner.stiff
        },
        set_ignore: function(a) {
            this.zpp_inner.ignore != a && (this.zpp_inner.ignore =
                a, this.zpp_inner.wake());
            return this.zpp_inner.ignore
        },
        set_active: function(a) {
            this.zpp_inner.active != a && (null != this.zpp_inner.component && (this.zpp_inner.component.woken = !1), this.zpp_inner.clearcache(), a ? (this.zpp_inner.active = a, this.zpp_inner.activate(), null != this.zpp_inner.space && (null != this.zpp_inner.component && (this.zpp_inner.component.sleeping = !0), this.zpp_inner.space.wake_constraint(this.zpp_inner, !0))) : (null != this.zpp_inner.space && (this.zpp_inner.wake(), this.zpp_inner.space.live_constraints.remove(this.zpp_inner)),
                this.zpp_inner.active = a, this.zpp_inner.deactivate()));
            return this.zpp_inner.active
        },
        __class__: N.Constraint,
        __properties__: {
            set_compound: "set_compound",
            get_compound: "get_compound",
            set_space: "set_space",
            get_space: "get_space",
            set_active: "set_active",
            get_active: "get_active",
            set_ignore: "set_ignore",
            get_ignore: "get_ignore",
            set_stiff: "set_stiff",
            get_stiff: "get_stiff",
            set_frequency: "set_frequency",
            get_frequency: "get_frequency",
            set_damping: "set_damping",
            get_damping: "get_damping",
            set_maxForce: "set_maxForce",
            get_maxForce: "get_maxForce",
            set_maxError: "set_maxError",
            get_maxError: "get_maxError",
            set_breakUnderForce: "set_breakUnderForce",
            get_breakUnderForce: "get_breakUnderForce",
            set_breakUnderError: "set_breakUnderError",
            get_breakUnderError: "get_breakUnderError",
            set_removeOnBreak: "set_removeOnBreak",
            get_removeOnBreak: "get_removeOnBreak",
            get_cbTypes: "get_cbTypes"
        }
    };
    N.AngleJoint = function(a, b, c, d, f) {
        null == f && (f = 1);
        this.zpp_inner_zn = null;
        this.zpp_inner = this.zpp_inner_zn = new M.ZPP_AngleJoint;
        this.zpp_inner.outer =
            this;
        this.zpp_inner_zn.outer_zn = this;
        N.Constraint.call(this);
        this.set_body1(a);
        this.set_body2(b);
        this.zpp_inner.immutable_midstep("AngleJoint::jointMin");
        this.zpp_inner_zn.jointMin != c && (this.zpp_inner_zn.jointMin = c, this.zpp_inner.wake());
        this.zpp_inner_zn.jointMin;
        this.zpp_inner.immutable_midstep("AngleJoint::jointMax");
        this.zpp_inner_zn.jointMax != d && (this.zpp_inner_zn.jointMax = d, this.zpp_inner.wake());
        this.zpp_inner_zn.jointMax;
        this.zpp_inner.immutable_midstep("AngleJoint::ratio");
        this.zpp_inner_zn.ratio !=
            f && (this.zpp_inner_zn.ratio = f, this.zpp_inner.wake());
        this.zpp_inner_zn.ratio
    };
    j["nape.constraint.AngleJoint"] = N.AngleJoint;
    N.AngleJoint.__name__ = ["nape", "constraint", "AngleJoint"];
    N.AngleJoint.__super__ = N.Constraint;
    N.AngleJoint.prototype = C(N.Constraint.prototype, {
        visitBodies: function(a) {
            if (null != (null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer)) a(null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer);
            if (null != (null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer) && (null == this.zpp_inner_zn.b2 ?
                    null : this.zpp_inner_zn.b2.outer) != (null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer)) a(null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer)
        },
        bodyImpulse: function(a) {
            return this.zpp_inner.active ? this.zpp_inner_zn.bodyImpulse(a.zpp_inner) : u.Vec3.get(0, 0, 0)
        },
        impulse: function() {
            var a = new u.MatMN(1, 1);
            a.zpp_inner.x[0 * a.zpp_inner.n] = this.zpp_inner_zn.jAcc;
            return a
        },
        set_body2: function(a) {
            this.zpp_inner.immutable_midstep("Constraint::body2");
            a = null == a ? null : a.zpp_inner;
            if (a != this.zpp_inner_zn.b2 &&
                (null != this.zpp_inner_zn.b2 && (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b2 && null != this.zpp_inner_zn.b2 && this.zpp_inner_zn.b2.constraints.remove(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b2.wake()), this.zpp_inner_zn.b2 = a, null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && null != a && this.zpp_inner_zn.b1 != a && null != a && a.constraints.add(this.zpp_inner),
                    this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer))) this.zpp_inner.wake(), null != a && a.wake();
            return null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer
        },
        set_body1: function(a) {
            this.zpp_inner.immutable_midstep("Constraint::body1");
            a = null == a ? null : a.zpp_inner;
            if (a != this.zpp_inner_zn.b1 && (null != this.zpp_inner_zn.b1 && (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b1 && null != this.zpp_inner_zn.b1 && this.zpp_inner_zn.b1.constraints.remove(this.zpp_inner),
                    this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b1.wake()), this.zpp_inner_zn.b1 = a, null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && null != a && this.zpp_inner_zn.b2 != a && null != a && a.constraints.add(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer))) this.zpp_inner.wake(), null != a && a.wake();
            return null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer
        },
        __class__: N.AngleJoint,
        __properties__: C(N.Constraint.prototype.__properties__, {
            set_body1: "set_body1",
            get_body1: "get_body1",
            set_body2: "set_body2",
            get_body2: "get_body2",
            set_jointMin: "set_jointMin",
            get_jointMin: "get_jointMin",
            set_jointMax: "set_jointMax",
            get_jointMax: "get_jointMax",
            set_ratio: "set_ratio",
            get_ratio: "get_ratio"
        })
    });
    N.ConstraintIterator = function() {
        this.zpp_next = null;
        this.zpp_critical = !1;
        this.zpp_i = 0;
        this.zpp_inner = null
    };
    j["nape.constraint.ConstraintIterator"] = N.ConstraintIterator;
    N.ConstraintIterator.__name__ = ["nape", "constraint", "ConstraintIterator"];
    N.ConstraintIterator.get = function(a) {
        var b = null == N.ConstraintIterator.zpp_pool ? function() {
            e.ZPP_ConstraintList.internal = !0;
            var a = new N.ConstraintIterator;
            e.ZPP_ConstraintList.internal = !1;
            return a
        }(this) : function() {
            var a = N.ConstraintIterator.zpp_pool;
            N.ConstraintIterator.zpp_pool = a.zpp_next;
            return a
        }(this);
        b.zpp_i = 0;
        b.zpp_inner = a;
        b.zpp_critical = !1;
        return b
    };
    N.ConstraintIterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.get_length();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = N.ConstraintIterator.zpp_pool;
            N.ConstraintIterator.zpp_pool = this;
            this.zpp_inner = null;
            return !1
        },
        __class__: N.ConstraintIterator
    };
    N.ConstraintList = function() {
        this.zpp_inner = null;
        this.zpp_inner = new e.ZPP_ConstraintList;
        this.zpp_inner.outer = this
    };
    j["nape.constraint.ConstraintList"] = N.ConstraintList;
    N.ConstraintList.__name__ = ["nape", "constraint", "ConstraintList"];
    N.ConstraintList.prototype = {
        toString: function() {
            var a = "[",
                b = !0,
                c;
            this.zpp_inner.valmod();
            for (c = N.ConstraintIterator.get(this); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_inner.valmod();
            return N.ConstraintIterator.get(this)
        },
        remove: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b;
            b = !1;
            for (var c = this.zpp_inner.inner.head; null != c;) {
                if (c.elt == a.zpp_inner) {
                    b = !0;
                    break
                }
                c = c.next
            }
            b && (null != this.zpp_inner.subber &&
                this.zpp_inner.subber(a), this.zpp_inner.dontremove || this.zpp_inner.inner.remove(a.zpp_inner), this.zpp_inner.invalidate());
            return b
        },
        add: function(a) {
            return this.zpp_inner.reverse_flag ? this.push(a) : this.unshift(a)
        },
        unshift: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ? (null == this.zpp_inner.push_ite && (this.zpp_inner.push_ite = null == this.zpp_inner.inner.head ? null : this.zpp_inner.inner.iterator_at(this.get_length() -
                1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)) : this.zpp_inner.inner.add(a.zpp_inner), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        push: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ? this.zpp_inner.inner.add(a.zpp_inner) : (null == this.zpp_inner.push_ite && (this.zpp_inner.push_ite = null == this.zpp_inner.inner.head ?
                null : this.zpp_inner.inner.iterator_at(this.get_length() - 1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        at: function(a) {
            this.zpp_inner.valmod();
            this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
            if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
            else
                for (; this.zpp_inner.at_index !=
                    a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
            return this.zpp_inner.at_ite.elt.outer
        },
        get_length: function() {
            this.zpp_inner.valmod();
            this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
            return this.zpp_inner.user_length
        },
        __class__: N.ConstraintList,
        __properties__: {
            get_length: "get_length"
        }
    };
    N.DistanceJoint = function(a, b, c, d, f, e) {
        this.zpp_inner_zn = null;
        this.zpp_inner = this.zpp_inner_zn = new M.ZPP_DistanceJoint;
        this.zpp_inner.outer =
            this;
        this.zpp_inner_zn.outer_zn = this;
        N.Constraint.call(this);
        this.set_body1(a);
        this.set_body2(b);
        null == this.zpp_inner_zn.wrap_a1 && this.zpp_inner_zn.setup_a1();
        this.zpp_inner_zn.wrap_a1.set(c);
        null == this.zpp_inner_zn.wrap_a1 && this.zpp_inner_zn.setup_a1();
        this.zpp_inner_zn.wrap_a1;
        null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
        this.zpp_inner_zn.wrap_a2.set(d);
        null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
        this.zpp_inner_zn.wrap_a2;
        this.zpp_inner.immutable_midstep("DistanceJoint::jointMin");
        this.zpp_inner_zn.jointMin != f && (this.zpp_inner_zn.jointMin = f, this.zpp_inner.wake());
        this.zpp_inner_zn.jointMin;
        this.zpp_inner.immutable_midstep("DistanceJoint::jointMax");
        this.zpp_inner_zn.jointMax != e && (this.zpp_inner_zn.jointMax = e, this.zpp_inner.wake());
        this.zpp_inner_zn.jointMax
    };
    j["nape.constraint.DistanceJoint"] = N.DistanceJoint;
    N.DistanceJoint.__name__ = ["nape", "constraint", "DistanceJoint"];
    N.DistanceJoint.__super__ = N.Constraint;
    N.DistanceJoint.prototype = C(N.Constraint.prototype, {
        visitBodies: function(a) {
            if (null !=
                (null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer)) a(null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer);
            if (null != (null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer) && (null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer) != (null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer)) a(null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer)
        },
        bodyImpulse: function(a) {
            return this.zpp_inner.active ? this.zpp_inner_zn.bodyImpulse(a.zpp_inner) : u.Vec3.get()
        },
        impulse: function() {
            var a =
                new u.MatMN(1, 1);
            a.zpp_inner.x[0 * a.zpp_inner.n] = this.zpp_inner_zn.jAcc;
            return a
        },
        get_anchor2: function() {
            null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
            return this.zpp_inner_zn.wrap_a2
        },
        get_anchor1: function() {
            null == this.zpp_inner_zn.wrap_a1 && this.zpp_inner_zn.setup_a1();
            return this.zpp_inner_zn.wrap_a1
        },
        set_body2: function(a) {
            this.zpp_inner.immutable_midstep("Constraint::body2");
            a = null == a ? null : a.zpp_inner;
            if (a != this.zpp_inner_zn.b2 && (null != this.zpp_inner_zn.b2 && (null != (null == this.zpp_inner.space ?
                    null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b2 && null != this.zpp_inner_zn.b2 && this.zpp_inner_zn.b2.constraints.remove(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b2.wake()), this.zpp_inner_zn.b2 = a, null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && null != a && this.zpp_inner_zn.b1 != a && null != a && a.constraints.add(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ?
                    null : this.zpp_inner.space.outer))) this.zpp_inner.wake(), null != a && a.wake();
            return null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer
        },
        set_body1: function(a) {
            this.zpp_inner.immutable_midstep("Constraint::body1");
            a = null == a ? null : a.zpp_inner;
            if (a != this.zpp_inner_zn.b1 && (null != this.zpp_inner_zn.b1 && (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b1 && null != this.zpp_inner_zn.b1 && this.zpp_inner_zn.b1.constraints.remove(this.zpp_inner), this.zpp_inner.active &&
                    null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b1.wake()), this.zpp_inner_zn.b1 = a, null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && null != a && this.zpp_inner_zn.b2 != a && null != a && a.constraints.add(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer))) this.zpp_inner.wake(), null != a && a.wake();
            return null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer
        },
        __class__: N.DistanceJoint,
        __properties__: C(N.Constraint.prototype.__properties__, {
            set_body1: "set_body1",
            get_body1: "get_body1",
            set_body2: "set_body2",
            get_body2: "get_body2",
            set_anchor1: "set_anchor1",
            get_anchor1: "get_anchor1",
            set_anchor2: "set_anchor2",
            get_anchor2: "get_anchor2",
            set_jointMin: "set_jointMin",
            get_jointMin: "get_jointMin",
            set_jointMax: "set_jointMax",
            get_jointMax: "get_jointMax"
        })
    });
    N.LineJoint = function(a, b, c, d, f, e, l) {
        this.zpp_inner_zn = null;
        this.zpp_inner = this.zpp_inner_zn = new M.ZPP_LineJoint;
        this.zpp_inner.outer = this;
        this.zpp_inner_zn.outer_zn = this;
        N.Constraint.call(this);
        this.set_body1(a);
        this.set_body2(b);
        null == this.zpp_inner_zn.wrap_a1 && this.zpp_inner_zn.setup_a1();
        this.zpp_inner_zn.wrap_a1.set(c);
        null == this.zpp_inner_zn.wrap_a1 && this.zpp_inner_zn.setup_a1();
        this.zpp_inner_zn.wrap_a1;
        null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
        this.zpp_inner_zn.wrap_a2.set(d);
        null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
        this.zpp_inner_zn.wrap_a2;
        null == this.zpp_inner_zn.wrap_n && this.zpp_inner_zn.setup_n();
        this.zpp_inner_zn.wrap_n.set(f);
        null == this.zpp_inner_zn.wrap_n &&
            this.zpp_inner_zn.setup_n();
        this.zpp_inner_zn.wrap_n;
        this.zpp_inner.immutable_midstep("LineJoint::jointMin");
        this.zpp_inner_zn.jointMin != e && (this.zpp_inner_zn.jointMin = e, this.zpp_inner.wake());
        this.zpp_inner_zn.jointMin;
        this.zpp_inner.immutable_midstep("LineJoint::jointMax");
        this.zpp_inner_zn.jointMax != l && (this.zpp_inner_zn.jointMax = l, this.zpp_inner.wake());
        this.zpp_inner_zn.jointMax
    };
    j["nape.constraint.LineJoint"] = N.LineJoint;
    N.LineJoint.__name__ = ["nape", "constraint", "LineJoint"];
    N.LineJoint.__super__ =
        N.Constraint;
    N.LineJoint.prototype = C(N.Constraint.prototype, {
        visitBodies: function(a) {
            if (null != (null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer)) a(null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer);
            if (null != (null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer) && (null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer) != (null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer)) a(null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer)
        },
        bodyImpulse: function(a) {
            return this.zpp_inner.active ?
                this.zpp_inner_zn.bodyImpulse(a.zpp_inner) : u.Vec3.get()
        },
        impulse: function() {
            var a = new u.MatMN(2, 1);
            a.zpp_inner.x[0 * a.zpp_inner.n] = this.zpp_inner_zn.jAccx;
            a.zpp_inner.x[a.zpp_inner.n] = this.zpp_inner_zn.jAccy;
            return a
        },
        get_direction: function() {
            null == this.zpp_inner_zn.wrap_n && this.zpp_inner_zn.setup_n();
            return this.zpp_inner_zn.wrap_n
        },
        get_anchor2: function() {
            null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
            return this.zpp_inner_zn.wrap_a2
        },
        get_anchor1: function() {
            null == this.zpp_inner_zn.wrap_a1 &&
                this.zpp_inner_zn.setup_a1();
            return this.zpp_inner_zn.wrap_a1
        },
        set_body2: function(a) {
            this.zpp_inner.immutable_midstep("Constraint::body2");
            a = null == a ? null : a.zpp_inner;
            if (a != this.zpp_inner_zn.b2 && (null != this.zpp_inner_zn.b2 && (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b2 && null != this.zpp_inner_zn.b2 && this.zpp_inner_zn.b2.constraints.remove(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) &&
                    this.zpp_inner_zn.b2.wake()), this.zpp_inner_zn.b2 = a, null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && null != a && this.zpp_inner_zn.b1 != a && null != a && a.constraints.add(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer))) this.zpp_inner.wake(), null != a && a.wake();
            return null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer
        },
        set_body1: function(a) {
            this.zpp_inner.immutable_midstep("Constraint::body1");
            a = null == a ? null : a.zpp_inner;
            if (a !=
                this.zpp_inner_zn.b1 && (null != this.zpp_inner_zn.b1 && (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b1 && null != this.zpp_inner_zn.b1 && this.zpp_inner_zn.b1.constraints.remove(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b1.wake()), this.zpp_inner_zn.b1 = a, null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && null != a && this.zpp_inner_zn.b2 != a && null != a &&
                    a.constraints.add(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer))) this.zpp_inner.wake(), null != a && a.wake();
            return null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer
        },
        __class__: N.LineJoint,
        __properties__: C(N.Constraint.prototype.__properties__, {
            set_body1: "set_body1",
            get_body1: "get_body1",
            set_body2: "set_body2",
            get_body2: "get_body2",
            set_anchor1: "set_anchor1",
            get_anchor1: "get_anchor1",
            set_anchor2: "set_anchor2",
            get_anchor2: "get_anchor2",
            set_direction: "set_direction",
            get_direction: "get_direction",
            set_jointMin: "set_jointMin",
            get_jointMin: "get_jointMin",
            set_jointMax: "set_jointMax",
            get_jointMax: "get_jointMax"
        })
    });
    N.MotorJoint = function(a, b, c, d) {
        null == d && (d = 1);
        null == c && (c = 0);
        this.zpp_inner_zn = null;
        this.zpp_inner = this.zpp_inner_zn = new M.ZPP_MotorJoint;
        this.zpp_inner.outer = this;
        this.zpp_inner_zn.outer_zn = this;
        N.Constraint.call(this);
        this.set_body1(a);
        this.set_body2(b);
        this.zpp_inner.immutable_midstep("MotorJoint::rate");
        this.zpp_inner_zn.rate !=
            c && (this.zpp_inner_zn.rate = c, this.zpp_inner.wake());
        this.zpp_inner_zn.rate;
        this.zpp_inner.immutable_midstep("MotorJoint::ratio");
        this.zpp_inner_zn.ratio != d && (this.zpp_inner_zn.ratio = d, this.zpp_inner.wake());
        this.zpp_inner_zn.ratio
    };
    j["nape.constraint.MotorJoint"] = N.MotorJoint;
    N.MotorJoint.__name__ = ["nape", "constraint", "MotorJoint"];
    N.MotorJoint.__super__ = N.Constraint;
    N.MotorJoint.prototype = C(N.Constraint.prototype, {
        visitBodies: function(a) {
            if (null != (null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer)) a(null ==
                this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer);
            if (null != (null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer) && (null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer) != (null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer)) a(null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer)
        },
        bodyImpulse: function(a) {
            return this.zpp_inner.active ? this.zpp_inner_zn.bodyImpulse(a.zpp_inner) : u.Vec3.get()
        },
        impulse: function() {
            var a = new u.MatMN(1, 1);
            a.zpp_inner.x[0 * a.zpp_inner.n] = this.zpp_inner_zn.jAcc;
            return a
        },
        set_body2: function(a) {
            this.zpp_inner.immutable_midstep("Constraint::body2");
            a = null == a ? null : a.zpp_inner;
            if (a != this.zpp_inner_zn.b2 && (null != this.zpp_inner_zn.b2 && (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b2 && null != this.zpp_inner_zn.b2 && this.zpp_inner_zn.b2.constraints.remove(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b2.wake()), this.zpp_inner_zn.b2 =
                    a, null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && null != a && this.zpp_inner_zn.b1 != a && null != a && a.constraints.add(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer))) this.zpp_inner.wake(), null != a && a.wake();
            return null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer
        },
        set_body1: function(a) {
            this.zpp_inner.immutable_midstep("Constraint::body1");
            a = null == a ? null : a.zpp_inner;
            if (a != this.zpp_inner_zn.b1 && (null != this.zpp_inner_zn.b1 &&
                    (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b1 && null != this.zpp_inner_zn.b1 && this.zpp_inner_zn.b1.constraints.remove(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b1.wake()), this.zpp_inner_zn.b1 = a, null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && null != a && this.zpp_inner_zn.b2 != a && null != a && a.constraints.add(this.zpp_inner), this.zpp_inner.active &&
                    null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer))) this.zpp_inner.wake(), null != a && a.wake();
            return null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer
        },
        __class__: N.MotorJoint,
        __properties__: C(N.Constraint.prototype.__properties__, {
            set_body1: "set_body1",
            get_body1: "get_body1",
            set_body2: "set_body2",
            get_body2: "get_body2",
            set_ratio: "set_ratio",
            get_ratio: "get_ratio",
            set_rate: "set_rate",
            get_rate: "get_rate"
        })
    });
    N.PivotJoint = function(a, b, c, d) {
        this.zpp_inner_zn = null;
        this.zpp_inner = this.zpp_inner_zn =
            new M.ZPP_PivotJoint;
        this.zpp_inner.outer = this;
        this.zpp_inner_zn.outer_zn = this;
        N.Constraint.call(this);
        this.set_body1(a);
        this.set_body2(b);
        null == this.zpp_inner_zn.wrap_a1 && this.zpp_inner_zn.setup_a1();
        this.zpp_inner_zn.wrap_a1.set(c);
        null == this.zpp_inner_zn.wrap_a1 && this.zpp_inner_zn.setup_a1();
        this.zpp_inner_zn.wrap_a1;
        null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
        this.zpp_inner_zn.wrap_a2.set(d);
        null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
        this.zpp_inner_zn.wrap_a2
    };
    j["nape.constraint.PivotJoint"] = N.PivotJoint;
    N.PivotJoint.__name__ = ["nape", "constraint", "PivotJoint"];
    N.PivotJoint.__super__ = N.Constraint;
    N.PivotJoint.prototype = C(N.Constraint.prototype, {
        visitBodies: function(a) {
            if (null != (null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer)) a(null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer);
            if (null != (null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer) && (null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer) != (null == this.zpp_inner_zn.b1 ?
                    null : this.zpp_inner_zn.b1.outer)) a(null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer)
        },
        bodyImpulse: function(a) {
            return this.zpp_inner.active ? this.zpp_inner_zn.bodyImpulse(a.zpp_inner) : u.Vec3.get()
        },
        impulse: function() {
            var a = new u.MatMN(2, 1);
            a.zpp_inner.x[0 * a.zpp_inner.n] = this.zpp_inner_zn.jAccx;
            a.zpp_inner.x[a.zpp_inner.n] = this.zpp_inner_zn.jAccy;
            return a
        },
        get_anchor2: function() {
            null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
            return this.zpp_inner_zn.wrap_a2
        },
        get_anchor1: function() {
            null ==
                this.zpp_inner_zn.wrap_a1 && this.zpp_inner_zn.setup_a1();
            return this.zpp_inner_zn.wrap_a1
        },
        set_body2: function(a) {
            this.zpp_inner.immutable_midstep("Constraint::body2");
            a = null == a ? null : a.zpp_inner;
            if (a != this.zpp_inner_zn.b2 && (null != this.zpp_inner_zn.b2 && (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b2 && null != this.zpp_inner_zn.b2 && this.zpp_inner_zn.b2.constraints.remove(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ?
                    null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b2.wake()), this.zpp_inner_zn.b2 = a, null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && null != a && this.zpp_inner_zn.b1 != a && null != a && a.constraints.add(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer))) this.zpp_inner.wake(), null != a && a.wake();
            return null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer
        },
        set_body1: function(a) {
            this.zpp_inner.immutable_midstep("Constraint::body1");
            a = null == a ? null : a.zpp_inner;
            if (a != this.zpp_inner_zn.b1 && (null != this.zpp_inner_zn.b1 && (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b1 && null != this.zpp_inner_zn.b1 && this.zpp_inner_zn.b1.constraints.remove(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b1.wake()), this.zpp_inner_zn.b1 = a, null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && null != a &&
                    this.zpp_inner_zn.b2 != a && null != a && a.constraints.add(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer))) this.zpp_inner.wake(), null != a && a.wake();
            return null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer
        },
        __class__: N.PivotJoint,
        __properties__: C(N.Constraint.prototype.__properties__, {
            set_body1: "set_body1",
            get_body1: "get_body1",
            set_body2: "set_body2",
            get_body2: "get_body2",
            set_anchor1: "set_anchor1",
            get_anchor1: "get_anchor1",
            set_anchor2: "set_anchor2",
            get_anchor2: "get_anchor2"
        })
    });
    N.PulleyJoint = function(a, b, c, d, f, e, l, s, g, h, i) {
        null == i && (i = 1);
        this.zpp_inner_zn = null;
        this.zpp_inner = this.zpp_inner_zn = new M.ZPP_PulleyJoint;
        this.zpp_inner.outer = this;
        this.zpp_inner_zn.outer_zn = this;
        N.Constraint.call(this);
        this.set_body1(a);
        this.set_body2(b);
        this.set_body3(c);
        this.set_body4(d);
        null == this.zpp_inner_zn.wrap_a1 && this.zpp_inner_zn.setup_a1();
        this.zpp_inner_zn.wrap_a1.set(f);
        null == this.zpp_inner_zn.wrap_a1 && this.zpp_inner_zn.setup_a1();
        this.zpp_inner_zn.wrap_a1;
        null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
        this.zpp_inner_zn.wrap_a2.set(e);
        null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
        this.zpp_inner_zn.wrap_a2;
        null == this.zpp_inner_zn.wrap_a3 && this.zpp_inner_zn.setup_a3();
        this.zpp_inner_zn.wrap_a3.set(l);
        null == this.zpp_inner_zn.wrap_a3 && this.zpp_inner_zn.setup_a3();
        this.zpp_inner_zn.wrap_a3;
        null == this.zpp_inner_zn.wrap_a4 && this.zpp_inner_zn.setup_a4();
        this.zpp_inner_zn.wrap_a4.set(s);
        null == this.zpp_inner_zn.wrap_a4 && this.zpp_inner_zn.setup_a4();
        this.zpp_inner_zn.wrap_a4;
        this.zpp_inner.immutable_midstep("PulleyJoint::ratio");
        this.zpp_inner_zn.ratio != i && (this.zpp_inner_zn.ratio = i, this.zpp_inner.wake());
        this.zpp_inner_zn.ratio;
        this.zpp_inner.immutable_midstep("PulleyJoint::jointMin");
        this.zpp_inner_zn.jointMin != g && (this.zpp_inner_zn.jointMin = g, this.zpp_inner.wake());
        this.zpp_inner_zn.jointMin;
        this.zpp_inner.immutable_midstep("PulleyJoint::jointMax");
        this.zpp_inner_zn.jointMax != h && (this.zpp_inner_zn.jointMax = h, this.zpp_inner.wake());
        this.zpp_inner_zn.jointMax
    };
    j["nape.constraint.PulleyJoint"] = N.PulleyJoint;
    N.PulleyJoint.__name__ = ["nape", "constraint", "PulleyJoint"];
    N.PulleyJoint.__super__ = N.Constraint;
    N.PulleyJoint.prototype = C(N.Constraint.prototype, {
        visitBodies: function(a) {
            if (null != (null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer)) a(null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer);
            if (null != (null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer) && (null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer) != (null == this.zpp_inner_zn.b1 ?
                    null : this.zpp_inner_zn.b1.outer)) a(null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer);
            if (null != (null == this.zpp_inner_zn.b3 ? null : this.zpp_inner_zn.b3.outer) && (null == this.zpp_inner_zn.b3 ? null : this.zpp_inner_zn.b3.outer) != (null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer) && (null == this.zpp_inner_zn.b3 ? null : this.zpp_inner_zn.b3.outer) != (null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer)) a(null == this.zpp_inner_zn.b3 ? null : this.zpp_inner_zn.b3.outer);
            if (null != (null == this.zpp_inner_zn.b4 ?
                    null : this.zpp_inner_zn.b4.outer) && (null == this.zpp_inner_zn.b4 ? null : this.zpp_inner_zn.b4.outer) != (null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer) && (null == this.zpp_inner_zn.b4 ? null : this.zpp_inner_zn.b4.outer) != (null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer) && (null == this.zpp_inner_zn.b4 ? null : this.zpp_inner_zn.b4.outer) != (null == this.zpp_inner_zn.b3 ? null : this.zpp_inner_zn.b3.outer)) a(null == this.zpp_inner_zn.b4 ? null : this.zpp_inner_zn.b4.outer)
        },
        bodyImpulse: function(a) {
            return this.zpp_inner.active ?
                this.zpp_inner_zn.bodyImpulse(a.zpp_inner) : u.Vec3.get()
        },
        impulse: function() {
            var a = new u.MatMN(1, 1);
            a.zpp_inner.x[0 * a.zpp_inner.n] = this.zpp_inner_zn.jAcc;
            return a
        },
        get_anchor4: function() {
            null == this.zpp_inner_zn.wrap_a4 && this.zpp_inner_zn.setup_a4();
            return this.zpp_inner_zn.wrap_a4
        },
        get_anchor3: function() {
            null == this.zpp_inner_zn.wrap_a3 && this.zpp_inner_zn.setup_a3();
            return this.zpp_inner_zn.wrap_a3
        },
        get_anchor2: function() {
            null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
            return this.zpp_inner_zn.wrap_a2
        },
        get_anchor1: function() {
            null == this.zpp_inner_zn.wrap_a1 && this.zpp_inner_zn.setup_a1();
            return this.zpp_inner_zn.wrap_a1
        },
        set_body4: function(a) {
            this.zpp_inner.immutable_midstep("Constraint::body4");
            a = null == a ? null : a.zpp_inner;
            if (a != this.zpp_inner_zn.b4 && (null != this.zpp_inner_zn.b4 && (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b4 && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b4 && this.zpp_inner_zn.b3 != this.zpp_inner_zn.b4 && null != this.zpp_inner_zn.b4 &&
                    this.zpp_inner_zn.b4.constraints.remove(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b4.wake()), this.zpp_inner_zn.b4 = a, null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && null != a && this.zpp_inner_zn.b1 != a && this.zpp_inner_zn.b2 != a && this.zpp_inner_zn.b3 != a && null != a && a.constraints.add(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer))) this.zpp_inner.wake(),
                null != a && a.wake();
            return null == this.zpp_inner_zn.b4 ? null : this.zpp_inner_zn.b4.outer
        },
        set_body3: function(a) {
            this.zpp_inner.immutable_midstep("Constraint::body3");
            a = null == a ? null : a.zpp_inner;
            if (a != this.zpp_inner_zn.b3 && (null != this.zpp_inner_zn.b3 && (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b3 && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b3 && this.zpp_inner_zn.b4 != this.zpp_inner_zn.b3 && null != this.zpp_inner_zn.b3 && this.zpp_inner_zn.b3.constraints.remove(this.zpp_inner),
                    this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b3.wake()), this.zpp_inner_zn.b3 = a, null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && null != a && this.zpp_inner_zn.b1 != a && this.zpp_inner_zn.b2 != a && this.zpp_inner_zn.b4 != a && null != a && a.constraints.add(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer))) this.zpp_inner.wake(), null != a && a.wake();
            return null == this.zpp_inner_zn.b3 ?
                null : this.zpp_inner_zn.b3.outer
        },
        set_body2: function(a) {
            this.zpp_inner.immutable_midstep("Constraint::body2");
            a = null == a ? null : a.zpp_inner;
            if (a != this.zpp_inner_zn.b2 && (null != this.zpp_inner_zn.b2 && (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b2 && this.zpp_inner_zn.b3 != this.zpp_inner_zn.b2 && this.zpp_inner_zn.b4 != this.zpp_inner_zn.b2 && null != this.zpp_inner_zn.b2 && this.zpp_inner_zn.b2.constraints.remove(this.zpp_inner), this.zpp_inner.active &&
                    null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b2.wake()), this.zpp_inner_zn.b2 = a, null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && null != a && this.zpp_inner_zn.b1 != a && this.zpp_inner_zn.b3 != a && this.zpp_inner_zn.b4 != a && null != a && a.constraints.add(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer))) this.zpp_inner.wake(), null != a && a.wake();
            return null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer
        },
        set_body1: function(a) {
            this.zpp_inner.immutable_midstep("Constraint::body1");
            a = null == a ? null : a.zpp_inner;
            if (a != this.zpp_inner_zn.b1 && (null != this.zpp_inner_zn.b1 && (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b1 && this.zpp_inner_zn.b3 != this.zpp_inner_zn.b1 && this.zpp_inner_zn.b4 != this.zpp_inner_zn.b1 && null != this.zpp_inner_zn.b1 && this.zpp_inner_zn.b1.constraints.remove(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ?
                    null : this.zpp_inner.space.outer) && this.zpp_inner_zn.b1.wake()), this.zpp_inner_zn.b1 = a, null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) && null != a && this.zpp_inner_zn.b2 != a && this.zpp_inner_zn.b3 != a && this.zpp_inner_zn.b4 != a && null != a && a.constraints.add(this.zpp_inner), this.zpp_inner.active && null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer))) this.zpp_inner.wake(), null != a && a.wake();
            return null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer
        },
        __class__: N.PulleyJoint,
        __properties__: C(N.Constraint.prototype.__properties__, {
            set_body1: "set_body1",
            get_body1: "get_body1",
            set_body2: "set_body2",
            get_body2: "get_body2",
            set_body3: "set_body3",
            get_body3: "get_body3",
            set_body4: "set_body4",
            get_body4: "get_body4",
            set_anchor1: "set_anchor1",
            get_anchor1: "get_anchor1",
            set_anchor2: "set_anchor2",
            get_anchor2: "get_anchor2",
            set_anchor3: "set_anchor3",
            get_anchor3: "get_anchor3",
            set_anchor4: "set_anchor4",
            get_anchor4: "get_anchor4",
            set_jointMin: "set_jointMin",
            get_jointMin: "get_jointMin",
            set_jointMax: "set_jointMax",
            get_jointMax: "get_jointMax",
            set_ratio: "set_ratio",
            get_ratio: "get_ratio"
        })
    });
    N.UserConstraint = function() {
        this.zpp_inner_zn = null
    };
    j["nape.constraint.UserConstraint"] = N.UserConstraint;
    N.UserConstraint.__name__ = ["nape", "constraint", "UserConstraint"];
    N.UserConstraint.__super__ = N.Constraint;
    N.UserConstraint.prototype = C(N.Constraint.prototype, {
        visitBodies: function(a) {
            for (var b = 0, c = this.zpp_inner_zn.bodies.length; b < c;) {
                var d = this.zpp_inner_zn.bodies[b];
                if (null != d.body) {
                    for (var f = !1, e = b + 1; e < c;)
                        if (this.zpp_inner_zn.bodies[e++].body ==
                            d.body) {
                            f = !0;
                            break
                        }
                    f || a(d.body.outer)
                }
                b++
            }
        },
        bodyImpulse: function(a) {
            return this.zpp_inner.active ? this.zpp_inner_zn.bodyImpulse(a.zpp_inner) : u.Vec3.get()
        },
        impulse: function() {
            for (var a = new u.MatMN(this.zpp_inner_zn.dim, 1), b = 0, c = this.zpp_inner_zn.dim; b < c;) {
                var d = b++;
                a.zpp_inner.x[d * a.zpp_inner.n] = this.zpp_inner_zn.jAcc[d]
            }
            return a
        },
        __impulse: function() {},
        __clamp: function() {},
        __eff_mass: function() {},
        __velocity: function() {},
        __position: function() {},
        __prepare: function() {},
        __draw: function() {},
        __validate: function() {},
        __broken: function() {},
        __copy: function() {
            return null
        },
        __class__: N.UserConstraint
    });
    N.WeldJoint = function() {
        this.zpp_inner_zn = null
    };
    j["nape.constraint.WeldJoint"] = N.WeldJoint;
    N.WeldJoint.__name__ = ["nape", "constraint", "WeldJoint"];
    N.WeldJoint.__super__ = N.Constraint;
    N.WeldJoint.prototype = C(N.Constraint.prototype, {
        visitBodies: function(a) {
            if (null != (null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer)) a(null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer);
            if (null != (null == this.zpp_inner_zn.b2 ?
                    null : this.zpp_inner_zn.b2.outer) && (null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer) != (null == this.zpp_inner_zn.b1 ? null : this.zpp_inner_zn.b1.outer)) a(null == this.zpp_inner_zn.b2 ? null : this.zpp_inner_zn.b2.outer)
        },
        bodyImpulse: function(a) {
            return this.zpp_inner.active ? this.zpp_inner_zn.bodyImpulse(a.zpp_inner) : u.Vec3.get()
        },
        impulse: function() {
            var a = new u.MatMN(3, 1);
            a.zpp_inner.x[0 * a.zpp_inner.n] = this.zpp_inner_zn.jAccx;
            a.zpp_inner.x[a.zpp_inner.n] = this.zpp_inner_zn.jAccy;
            a.zpp_inner.x[a.zpp_inner.n] =
                this.zpp_inner_zn.jAccz;
            return a
        },
        get_anchor2: function() {
            null == this.zpp_inner_zn.wrap_a2 && this.zpp_inner_zn.setup_a2();
            return this.zpp_inner_zn.wrap_a2
        },
        get_anchor1: function() {
            null == this.zpp_inner_zn.wrap_a1 && this.zpp_inner_zn.setup_a1();
            return this.zpp_inner_zn.wrap_a1
        },
        __class__: N.WeldJoint,
        __properties__: C(N.Constraint.prototype.__properties__, {
            set_body1: "set_body1",
            get_body1: "get_body1",
            set_body2: "set_body2",
            get_body2: "get_body2",
            set_anchor1: "set_anchor1",
            get_anchor1: "get_anchor1",
            set_anchor2: "set_anchor2",
            get_anchor2: "get_anchor2",
            set_phase: "set_phase",
            get_phase: "get_phase"
        })
    });
    K = {
        Arbiter: function() {
            this.zpp_inner = null
        }
    };
    j["nape.dynamics.Arbiter"] = K.Arbiter;
    K.Arbiter.__name__ = ["nape", "dynamics", "Arbiter"];
    K.Arbiter.prototype = {
        toString: function() {
            var a = this.zpp_inner.type == D.ZPP_Arbiter.COL ? "CollisionArbiter" : this.zpp_inner.type == D.ZPP_Arbiter.FLUID ? "FluidArbiter" : "SensorArbiter";
            if (this.zpp_inner.cleared) a += "(object-pooled)";
            else {
                var a = a + "(" + (this.zpp_inner.ws1.id > this.zpp_inner.ws2.id ? this.zpp_inner.ws2.outer :
                        this.zpp_inner.ws1.outer).toString() + "|" + (this.zpp_inner.ws1.id > this.zpp_inner.ws2.id ? this.zpp_inner.ws1.outer : this.zpp_inner.ws2.outer).toString() + ")" + (this.zpp_inner.type == D.ZPP_Arbiter.COL ? "[" + ["SD", "DD"][this.zpp_inner.colarb.stat ? 0 : 1] + "]" : "") + "<-",
                    b;
                switch (this.zpp_inner.immState) {
                    case e.ZPP_Flags.id_ImmState_ACCEPT | e.ZPP_Flags.id_ImmState_ALWAYS:
                        null == e.ZPP_Flags.PreFlag_ACCEPT && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_ACCEPT = new v.PreFlag, e.ZPP_Flags.internal = !1);
                        b = e.ZPP_Flags.PreFlag_ACCEPT;
                        break;
                    case e.ZPP_Flags.id_ImmState_ACCEPT:
                        null == e.ZPP_Flags.PreFlag_ACCEPT_ONCE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_ACCEPT_ONCE = new v.PreFlag, e.ZPP_Flags.internal = !1);
                        b = e.ZPP_Flags.PreFlag_ACCEPT_ONCE;
                        break;
                    case e.ZPP_Flags.id_ImmState_IGNORE | e.ZPP_Flags.id_ImmState_ALWAYS:
                        null == e.ZPP_Flags.PreFlag_IGNORE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_IGNORE = new v.PreFlag, e.ZPP_Flags.internal = !1);
                        b = e.ZPP_Flags.PreFlag_IGNORE;
                        break;
                    default:
                        null == e.ZPP_Flags.PreFlag_IGNORE_ONCE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_IGNORE_ONCE = new v.PreFlag, e.ZPP_Flags.internal = !1), b = e.ZPP_Flags.PreFlag_IGNORE_ONCE
                }
                a += b.toString()
            }
            return a
        },
        totalImpulse: function() {
            return u.Vec3.get(0, 0, 0)
        },
        get_collisionArbiter: function() {
            return this.zpp_inner.type == D.ZPP_Arbiter.COL ? this.zpp_inner.colarb.outer_zn : null
        },
        __class__: K.Arbiter,
        __properties__: {
            get_collisionArbiter: "get_collisionArbiter",
            get_shape1: "get_shape1",
            get_shape2: "get_shape2",
            get_body1: "get_body1",
            get_body2: "get_body2",
            get_state: "get_state"
        }
    };
    K.ArbiterIterator =
        function() {
            this.zpp_next = null;
            this.zpp_critical = !1;
            this.zpp_i = 0;
            this.zpp_inner = null
        };
    j["nape.dynamics.ArbiterIterator"] = K.ArbiterIterator;
    K.ArbiterIterator.__name__ = ["nape", "dynamics", "ArbiterIterator"];
    K.ArbiterIterator.get = function(a) {
        var b = null == K.ArbiterIterator.zpp_pool ? function() {
            e.ZPP_ArbiterList.internal = !0;
            var a = new K.ArbiterIterator;
            e.ZPP_ArbiterList.internal = !1;
            return a
        }(this) : function() {
            var a = K.ArbiterIterator.zpp_pool;
            K.ArbiterIterator.zpp_pool = a.zpp_next;
            return a
        }(this);
        b.zpp_i = 0;
        b.zpp_inner =
            a;
        b.zpp_critical = !1;
        return b
    };
    K.ArbiterIterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.zpp_gl();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = K.ArbiterIterator.zpp_pool;
            K.ArbiterIterator.zpp_pool = this;
            this.zpp_inner = null;
            return !1
        },
        __class__: K.ArbiterIterator
    };
    K.ArbiterList = function() {
        this.zpp_inner = null;
        this.zpp_inner = new e.ZPP_ArbiterList;
        this.zpp_inner.outer = this
    };
    j["nape.dynamics.ArbiterList"] = K.ArbiterList;
    K.ArbiterList.__name__ = ["nape", "dynamics", "ArbiterList"];
    K.ArbiterList.prototype = {
        toString: function() {
            for (var a = "[", b = !0, c = this.iterator(); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_vm();
            return K.ArbiterIterator.get(this)
        },
        empty: function() {
            return 0 == this.zpp_gl()
        },
        clear: function() {
            if (this.zpp_inner.reverse_flag)
                for (; !this.empty();) this.pop();
            else
                for (; !this.empty();) this.shift()
        },
        remove: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_vm();
            var b;
            b = !1;
            for (var c = this.zpp_inner.inner.head; null != c;) {
                if (c.elt == a.zpp_inner) {
                    b = !0;
                    break
                }
                c = c.next
            }
            b && (null != this.zpp_inner.subber && this.zpp_inner.subber(a), this.zpp_inner.dontremove || this.zpp_inner.inner.remove(a.zpp_inner), this.zpp_inner.invalidate());
            return b
        },
        shift: function() {
            this.zpp_inner.modify_test();
            this.zpp_vm();
            var a = null;
            if (this.zpp_inner.reverse_flag) {
                null != this.zpp_inner.at_ite && null == this.zpp_inner.at_ite.next && (this.zpp_inner.at_ite =
                    null);
                var b = 1 == this.zpp_gl() ? null : this.zpp_inner.inner.iterator_at(this.zpp_gl() - 2),
                    a = null == b ? this.zpp_inner.inner.head.elt : b.next.elt,
                    c = a.wrapper();
                null != this.zpp_inner.subber && this.zpp_inner.subber(c);
                this.zpp_inner.dontremove || this.zpp_inner.inner.erase(b)
            } else a = this.zpp_inner.inner.head.elt, c = a.wrapper(), null != this.zpp_inner.subber && this.zpp_inner.subber(c), this.zpp_inner.dontremove || this.zpp_inner.inner.pop();
            this.zpp_inner.invalidate();
            return c = a.wrapper()
        },
        pop: function() {
            this.zpp_inner.modify_test();
            this.zpp_vm();
            var a = null;
            if (this.zpp_inner.reverse_flag) {
                var a = this.zpp_inner.inner.head.elt,
                    b = a.wrapper();
                null != this.zpp_inner.subber && this.zpp_inner.subber(b);
                this.zpp_inner.dontremove || this.zpp_inner.inner.pop()
            } else {
                null != this.zpp_inner.at_ite && null == this.zpp_inner.at_ite.next && (this.zpp_inner.at_ite = null);
                var c = 1 == this.zpp_gl() ? null : this.zpp_inner.inner.iterator_at(this.zpp_gl() - 2),
                    a = null == c ? this.zpp_inner.inner.head.elt : c.next.elt,
                    b = a.wrapper();
                null != this.zpp_inner.subber && this.zpp_inner.subber(b);
                this.zpp_inner.dontremove || this.zpp_inner.inner.erase(c)
            }
            this.zpp_inner.invalidate();
            return b = a.wrapper()
        },
        unshift: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_vm();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ? (null == this.zpp_inner.push_ite && (this.zpp_inner.push_ite = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.zpp_gl() - 1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)) : this.zpp_inner.inner.add(a.zpp_inner),
                this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        push: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_vm();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ? this.zpp_inner.inner.add(a.zpp_inner) : (null == this.zpp_inner.push_ite && (this.zpp_inner.push_ite = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.zpp_gl() - 1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)),
                this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        at: function(a) {
            this.zpp_vm();
            this.zpp_inner.reverse_flag && (a = this.zpp_gl() - 1 - a);
            if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) {
                this.zpp_inner.at_index = 0;
                for (this.zpp_inner.at_ite = this.zpp_inner.inner.head;;) {
                    var b = this.zpp_inner.at_ite.elt;
                    if (b.active) break;
                    this.zpp_inner.at_ite = this.zpp_inner.at_ite.next
                }
            }
            for (; this.zpp_inner.at_index != a;) {
                this.zpp_inner.at_index++;
                for (this.zpp_inner.at_ite =
                    this.zpp_inner.at_ite.next;;) {
                    b = this.zpp_inner.at_ite.elt;
                    if (b.active) break;
                    this.zpp_inner.at_ite = this.zpp_inner.at_ite.next
                }
            }
            return this.zpp_inner.at_ite.elt.wrapper()
        },
        zpp_vm: function() {
            this.zpp_inner.valmod()
        },
        zpp_gl: function() {
            this.zpp_inner.valmod();
            if (this.zpp_inner.zip_length) {
                this.zpp_inner.zip_length = !1;
                this.zpp_inner.user_length = 0;
                for (var a = this.zpp_inner.inner.head; null != a;) a.elt.active && this.zpp_inner.user_length++, a = a.next
            }
            return this.zpp_inner.user_length
        },
        __class__: K.ArbiterList,
        __properties__: {
            get_length: "get_length"
        }
    };
    K.ArbiterType = function() {};
    j["nape.dynamics.ArbiterType"] = K.ArbiterType;
    K.ArbiterType.__name__ = ["nape", "dynamics", "ArbiterType"];
    K.ArbiterType.__properties__ = {
        get_FLUID: "get_FLUID",
        get_SENSOR: "get_SENSOR",
        get_COLLISION: "get_COLLISION"
    };
    K.ArbiterType.prototype = {
        toString: function() {
            var a;
            null == e.ZPP_Flags.ArbiterType_COLLISION && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.ArbiterType_COLLISION = new K.ArbiterType, e.ZPP_Flags.internal = !1);
            this == e.ZPP_Flags.ArbiterType_COLLISION ? a = "COLLISION" : (null == e.ZPP_Flags.ArbiterType_SENSOR &&
                (e.ZPP_Flags.internal = !0, e.ZPP_Flags.ArbiterType_SENSOR = new K.ArbiterType, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.ArbiterType_SENSOR ? a = "SENSOR" : (null == e.ZPP_Flags.ArbiterType_FLUID && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.ArbiterType_FLUID = new K.ArbiterType, e.ZPP_Flags.internal = !1), a = this == e.ZPP_Flags.ArbiterType_FLUID ? "FLUID" : ""));
            return a
        },
        __class__: K.ArbiterType
    };
    K.CollisionArbiter = function() {
        K.Arbiter.call(this)
    };
    j["nape.dynamics.CollisionArbiter"] = K.CollisionArbiter;
    K.CollisionArbiter.__name__ = ["nape", "dynamics", "CollisionArbiter"];
    K.CollisionArbiter.__super__ = K.Arbiter;
    K.CollisionArbiter.prototype = C(K.Arbiter.prototype, {
        get_rollingFriction: function() {
            var a = this.zpp_inner.colarb;
            a.invalidated && (a.invalidated = !1, a.userdef_restitution || (a.restitution = a.s1.material.elasticity <= Math.NEGATIVE_INFINITY || a.s2.material.elasticity <= Math.NEGATIVE_INFINITY ? 0 : a.s1.material.elasticity >= Math.POSITIVE_INFINITY || a.s2.material.elasticity >= Math.POSITIVE_INFINITY ? 1 : (a.s1.material.elasticity + a.s2.material.elasticity) /
                2, 0 > a.restitution && (a.restitution = 0), 1 < a.restitution && (a.restitution = 1)), a.userdef_dyn_fric || (a.dyn_fric = Math.sqrt(a.s1.material.dynamicFriction * a.s2.material.dynamicFriction)), a.userdef_stat_fric || (a.stat_fric = Math.sqrt(a.s1.material.staticFriction * a.s2.material.staticFriction)), a.userdef_rfric || (a.rfric = Math.sqrt(a.s1.material.rollingFriction * a.s2.material.rollingFriction)));
            return a.rfric
        },
        get_staticFriction: function() {
            var a = this.zpp_inner.colarb;
            a.invalidated && (a.invalidated = !1, a.userdef_restitution ||
                (a.restitution = a.s1.material.elasticity <= Math.NEGATIVE_INFINITY || a.s2.material.elasticity <= Math.NEGATIVE_INFINITY ? 0 : a.s1.material.elasticity >= Math.POSITIVE_INFINITY || a.s2.material.elasticity >= Math.POSITIVE_INFINITY ? 1 : (a.s1.material.elasticity + a.s2.material.elasticity) / 2, 0 > a.restitution && (a.restitution = 0), 1 < a.restitution && (a.restitution = 1)), a.userdef_dyn_fric || (a.dyn_fric = Math.sqrt(a.s1.material.dynamicFriction * a.s2.material.dynamicFriction)), a.userdef_stat_fric || (a.stat_fric = Math.sqrt(a.s1.material.staticFriction *
                    a.s2.material.staticFriction)), a.userdef_rfric || (a.rfric = Math.sqrt(a.s1.material.rollingFriction * a.s2.material.rollingFriction)));
            return a.stat_fric
        },
        get_dynamicFriction: function() {
            var a = this.zpp_inner.colarb;
            a.invalidated && (a.invalidated = !1, a.userdef_restitution || (a.restitution = a.s1.material.elasticity <= Math.NEGATIVE_INFINITY || a.s2.material.elasticity <= Math.NEGATIVE_INFINITY ? 0 : a.s1.material.elasticity >= Math.POSITIVE_INFINITY || a.s2.material.elasticity >= Math.POSITIVE_INFINITY ? 1 : (a.s1.material.elasticity +
                a.s2.material.elasticity) / 2, 0 > a.restitution && (a.restitution = 0), 1 < a.restitution && (a.restitution = 1)), a.userdef_dyn_fric || (a.dyn_fric = Math.sqrt(a.s1.material.dynamicFriction * a.s2.material.dynamicFriction)), a.userdef_stat_fric || (a.stat_fric = Math.sqrt(a.s1.material.staticFriction * a.s2.material.staticFriction)), a.userdef_rfric || (a.rfric = Math.sqrt(a.s1.material.rollingFriction * a.s2.material.rollingFriction)));
            return a.dyn_fric
        },
        get_elasticity: function() {
            var a = this.zpp_inner.colarb;
            a.invalidated && (a.invalidated = !1, a.userdef_restitution || (a.restitution = a.s1.material.elasticity <= Math.NEGATIVE_INFINITY || a.s2.material.elasticity <= Math.NEGATIVE_INFINITY ? 0 : a.s1.material.elasticity >= Math.POSITIVE_INFINITY || a.s2.material.elasticity >= Math.POSITIVE_INFINITY ? 1 : (a.s1.material.elasticity + a.s2.material.elasticity) / 2, 0 > a.restitution && (a.restitution = 0), 1 < a.restitution && (a.restitution = 1)), a.userdef_dyn_fric || (a.dyn_fric = Math.sqrt(a.s1.material.dynamicFriction * a.s2.material.dynamicFriction)), a.userdef_stat_fric || (a.stat_fric =
                Math.sqrt(a.s1.material.staticFriction * a.s2.material.staticFriction)), a.userdef_rfric || (a.rfric = Math.sqrt(a.s1.material.rollingFriction * a.s2.material.rollingFriction)));
            return a.restitution
        },
        totalImpulse: function(a, b) {
            null == b && (b = !1);
            var c = 0,
                d = 0,
                f = 0,
                e = this.zpp_inner.colarb;
            if (!b || e.oc1.fresh) {
                var l = e.oc1.wrapper().totalImpulse(a),
                    s = 1,
                    g = s;
                l.zpp_inner.validate();
                c += l.zpp_inner.x * g;
                l.zpp_inner.validate();
                d += l.zpp_inner.y * g;
                l.zpp_inner.validate();
                f += l.zpp_inner.z * s;
                l.dispose()
            }
            if (e.hc2 && (!b || e.oc2.fresh)) l =
                e.oc2.wrapper().totalImpulse(a), g = s = 1, l.zpp_inner.validate(), c += l.zpp_inner.x * g, l.zpp_inner.validate(), d += l.zpp_inner.y * g, l.zpp_inner.validate(), f += l.zpp_inner.z * s, l.dispose();
            return u.Vec3.get(c, d, f)
        },
        __class__: K.CollisionArbiter
    });
    K.Contact = function() {
        this.zpp_inner = null
    };
    j["nape.dynamics.Contact"] = K.Contact;
    K.Contact.__name__ = ["nape", "dynamics", "Contact"];
    K.Contact.prototype = {
        toString: function() {
            return null == this.zpp_inner.arbiter || this.zpp_inner.arbiter.cleared ? "{object-pooled}" : "{Contact}"
        },
        totalImpulse: function(a) {
            var b = this.zpp_inner.arbiter.colarb,
                c = this.zpp_inner.inner,
                d = c.jnAcc,
                f = c.jtAcc,
                e = b.jrAcc;
            if (null == a) return u.Vec3.get(b.nx * d - b.ny * f, b.ny * d + b.nx * f, e);
            var l = b.nx * d - b.ny * f,
                d = b.ny * d + b.nx * f;
            return a == b.b1.outer ? u.Vec3.get(-l, -d, -(d * c.r1x - l * c.r1y) - e) : u.Vec3.get(l, d, d * c.r2x - l * c.r2y + e)
        },
        __class__: K.Contact
    };
    K.ContactIterator = function() {
        this.zpp_next = null;
        this.zpp_critical = !1;
        this.zpp_i = 0;
        this.zpp_inner = null
    };
    j["nape.dynamics.ContactIterator"] = K.ContactIterator;
    K.ContactIterator.__name__ = ["nape", "dynamics", "ContactIterator"];
    K.ContactIterator.get = function(a) {
        var b = null == K.ContactIterator.zpp_pool ? function() {
            e.ZPP_ContactList.internal = !0;
            var a = new K.ContactIterator;
            e.ZPP_ContactList.internal = !1;
            return a
        }(this) : function() {
            var a = K.ContactIterator.zpp_pool;
            K.ContactIterator.zpp_pool = a.zpp_next;
            return a
        }(this);
        b.zpp_i = 0;
        b.zpp_inner = a;
        b.zpp_critical = !1;
        return b
    };
    K.ContactIterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.get_length();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = K.ContactIterator.zpp_pool;
            K.ContactIterator.zpp_pool = this;
            this.zpp_inner = null;
            return !1
        },
        __class__: K.ContactIterator
    };
    K.ContactList = function() {
        this.zpp_inner = null;
        this.zpp_inner = new e.ZPP_ContactList;
        this.zpp_inner.outer = this
    };
    j["nape.dynamics.ContactList"] = K.ContactList;
    K.ContactList.__name__ = ["nape", "dynamics", "ContactList"];
    K.ContactList.prototype = {
        toString: function() {
            var a = "[",
                b = !0,
                c;
            this.zpp_inner.valmod();
            for (c = K.ContactIterator.get(this); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_inner.valmod();
            return K.ContactIterator.get(this)
        },
        at: function(a) {
            this.zpp_inner.valmod();
            this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
            if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) {
                this.zpp_inner.at_index = 0;
                for (this.zpp_inner.at_ite = this.zpp_inner.inner.next;;) {
                    var b = this.zpp_inner.at_ite;
                    if (b.active && b.arbiter.active) break;
                    this.zpp_inner.at_ite = this.zpp_inner.at_ite.next
                }
            }
            for (; this.zpp_inner.at_index != a;) {
                this.zpp_inner.at_index++;
                for (this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;;) {
                    b = this.zpp_inner.at_ite;
                    if (b.active && b.arbiter.active) break;
                    this.zpp_inner.at_ite = this.zpp_inner.at_ite.next
                }
            }
            return this.zpp_inner.at_ite.wrapper()
        },
        get_length: function() {
            this.zpp_inner.valmod();
            if (this.zpp_inner.zip_length) {
                this.zpp_inner.zip_length = !1;
                this.zpp_inner.user_length = 0;
                for (var a = this.zpp_inner.inner.next; null != a;) {
                    var b =
                        a;
                    b.active && b.arbiter.active && this.zpp_inner.user_length++;
                    a = a.next
                }
            }
            return this.zpp_inner.user_length
        },
        __class__: K.ContactList,
        __properties__: {
            get_length: "get_length"
        }
    };
    K.FluidArbiter = function() {
        K.Arbiter.call(this)
    };
    j["nape.dynamics.FluidArbiter"] = K.FluidArbiter;
    K.FluidArbiter.__name__ = ["nape", "dynamics", "FluidArbiter"];
    K.FluidArbiter.__super__ = K.Arbiter;
    K.FluidArbiter.prototype = C(K.Arbiter.prototype, {
        totalImpulse: function(a) {
            var b = this.buoyancyImpulse(a),
                c = a = this.dragImpulse(a),
                d = c.zpp_inner,
                f;
            c.zpp_inner.validate();
            f = c.zpp_inner.x;
            b.zpp_inner.validate();
            d.x = f + b.zpp_inner.x;
            c.zpp_inner.validate();
            c.zpp_inner.x;
            c = a;
            d = c.zpp_inner;
            c.zpp_inner.validate();
            f = c.zpp_inner.y;
            b.zpp_inner.validate();
            d.y = f + b.zpp_inner.y;
            c.zpp_inner.validate();
            c.zpp_inner.y;
            c = a;
            d = c.zpp_inner;
            c.zpp_inner.validate();
            f = c.zpp_inner.z;
            b.zpp_inner.validate();
            d.z = f + b.zpp_inner.z;
            c.zpp_inner.validate();
            c.zpp_inner.z;
            b.dispose();
            return a
        },
        dragImpulse: function(a) {
            var b = this.zpp_inner.fluidarb,
                a = null == a || a.zpp_inner == this.zpp_inner.b2 ?
                1 : -1;
            return u.Vec3.get(b.dampx * a, b.dampy * a, b.adamp * a)
        },
        buoyancyImpulse: function(a) {
            var b = this.zpp_inner.fluidarb;
            return null == a ? u.Vec3.get(b.buoyx, b.buoyy, 0) : a.zpp_inner == this.zpp_inner.b2 ? u.Vec3.get(b.buoyx, b.buoyy, b.buoyy * b.r2x - b.buoyx * b.r2y) : u.Vec3.get(-b.buoyx, -b.buoyy, -(b.buoyy * b.r1x - b.buoyx * b.r1y))
        },
        __class__: K.FluidArbiter,
        __properties__: C(K.Arbiter.prototype.__properties__, {
            set_position: "set_position",
            get_position: "get_position"
        })
    });
    K.InteractionFilter = function(a, b, c, d, f, e) {
        null == e && (e = -1);
        null == f && (f = 1);
        null == d && (d = -1);
        null == c && (c = 1);
        null == b && (b = -1);
        null == a && (a = 1);
        this.zpp_inner = null;
        null == D.ZPP_InteractionFilter.zpp_pool ? this.zpp_inner = new D.ZPP_InteractionFilter : (this.zpp_inner = D.ZPP_InteractionFilter.zpp_pool, D.ZPP_InteractionFilter.zpp_pool = this.zpp_inner.next, this.zpp_inner.next = null);
        null;
        this.zpp_inner.outer = this;
        this.zpp_inner.collisionGroup != a && (this.zpp_inner.collisionGroup = a, this.zpp_inner.invalidate());
        this.zpp_inner.collisionGroup;
        this.zpp_inner.collisionMask != b && (this.zpp_inner.collisionMask =
            b, this.zpp_inner.invalidate());
        this.zpp_inner.collisionMask;
        this.zpp_inner.sensorGroup != c && (this.zpp_inner.sensorGroup = c, this.zpp_inner.invalidate());
        this.zpp_inner.sensorGroup;
        this.zpp_inner.sensorMask != d && (this.zpp_inner.sensorMask = d, this.zpp_inner.invalidate());
        this.zpp_inner.sensorMask;
        this.zpp_inner.fluidGroup != f && (this.zpp_inner.fluidGroup = f, this.zpp_inner.invalidate());
        this.zpp_inner.fluidGroup;
        this.zpp_inner.fluidMask != e && (this.zpp_inner.fluidMask = e, this.zpp_inner.invalidate());
        this.zpp_inner.fluidMask
    };
    j["nape.dynamics.InteractionFilter"] = K.InteractionFilter;
    K.InteractionFilter.__name__ = ["nape", "dynamics", "InteractionFilter"];
    K.InteractionFilter.prototype = {
        set_sensorGroup: function(a) {
            this.zpp_inner.sensorGroup != a && (this.zpp_inner.sensorGroup = a, this.zpp_inner.invalidate());
            return this.zpp_inner.sensorGroup
        },
        __class__: K.InteractionFilter,
        __properties__: {
            set_collisionGroup: "set_collisionGroup",
            get_collisionGroup: "get_collisionGroup",
            set_collisionMask: "set_collisionMask",
            get_collisionMask: "get_collisionMask",
            set_sensorGroup: "set_sensorGroup",
            get_sensorGroup: "get_sensorGroup",
            set_sensorMask: "set_sensorMask",
            get_sensorMask: "get_sensorMask",
            set_fluidGroup: "set_fluidGroup",
            get_fluidGroup: "get_fluidGroup",
            set_fluidMask: "set_fluidMask",
            get_fluidMask: "get_fluidMask"
        }
    };
    K.InteractionGroup = function() {
        this.zpp_inner = null
    };
    j["nape.dynamics.InteractionGroup"] = K.InteractionGroup;
    K.InteractionGroup.__name__ = ["nape", "dynamics", "InteractionGroup"];
    K.InteractionGroup.prototype = {
        toString: function() {
            var a = "InteractionGroup";
            this.zpp_inner.ignore && (a += ":ignore");
            return a
        },
        __class__: K.InteractionGroup,
        __properties__: {
            set_ignore: "set_ignore",
            get_ignore: "get_ignore"
        }
    };
    K.InteractionGroupIterator = function() {
        this.zpp_next = null;
        this.zpp_critical = !1;
        this.zpp_i = 0;
        this.zpp_inner = null
    };
    j["nape.dynamics.InteractionGroupIterator"] = K.InteractionGroupIterator;
    K.InteractionGroupIterator.__name__ = ["nape", "dynamics", "InteractionGroupIterator"];
    K.InteractionGroupIterator.get = function(a) {
        var b = null == K.InteractionGroupIterator.zpp_pool ? function() {
            e.ZPP_InteractionGroupList.internal = !0;
            var a = new K.InteractionGroupIterator;
            e.ZPP_InteractionGroupList.internal = !1;
            return a
        }(this) : function() {
            var a = K.InteractionGroupIterator.zpp_pool;
            K.InteractionGroupIterator.zpp_pool = a.zpp_next;
            return a
        }(this);
        b.zpp_i = 0;
        b.zpp_inner = a;
        b.zpp_critical = !1;
        return b
    };
    K.InteractionGroupIterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.get_length();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = K.InteractionGroupIterator.zpp_pool;
            K.InteractionGroupIterator.zpp_pool = this;
            this.zpp_inner = null;
            return !1
        },
        __class__: K.InteractionGroupIterator
    };
    K.InteractionGroupList = function() {
        this.zpp_inner = null;
        this.zpp_inner = new e.ZPP_InteractionGroupList;
        this.zpp_inner.outer = this
    };
    j["nape.dynamics.InteractionGroupList"] = K.InteractionGroupList;
    K.InteractionGroupList.__name__ = ["nape", "dynamics", "InteractionGroupList"];
    K.InteractionGroupList.prototype = {
        toString: function() {
            var a = "[",
                b = !0,
                c;
            this.zpp_inner.valmod();
            for (c = K.InteractionGroupIterator.get(this); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_inner.valmod();
            return K.InteractionGroupIterator.get(this)
        },
        at: function(a) {
            this.zpp_inner.valmod();
            this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
            if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
            else
                for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++,
                    this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
            return this.zpp_inner.at_ite.elt.outer
        },
        get_length: function() {
            this.zpp_inner.valmod();
            this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
            return this.zpp_inner.user_length
        },
        __class__: K.InteractionGroupList,
        __properties__: {
            get_length: "get_length"
        }
    };
    u = {
        AABB: function(a, b, c, d) {
            null == d && (d = 0);
            null == c && (c = 0);
            null == b && (b = 0);
            null == a && (a = 0);
            this.zpp_inner = null;
            this.zpp_inner = q.ZPP_AABB.get(a, b, a + c,
                b + d);
            this.zpp_inner.outer = this
        }
    };
    j["nape.geom.AABB"] = u.AABB;
    u.AABB.__name__ = ["nape", "geom", "AABB"];
    u.AABB.prototype = {
        toString: function() {
            this.zpp_inner.validate();
            return this.zpp_inner.toString()
        },
        __class__: u.AABB,
        __properties__: {
            set_min: "set_min",
            get_min: "get_min",
            set_max: "set_max",
            get_max: "get_max",
            set_x: "set_x",
            get_x: "get_x",
            set_y: "set_y",
            get_y: "get_y",
            set_width: "set_width",
            get_width: "get_width",
            set_height: "set_height",
            get_height: "get_height"
        }
    };
    u.ConvexResult = function() {
        this.zpp_inner = null
    };
    j["nape.geom.ConvexResult"] =
        u.ConvexResult;
    u.ConvexResult.__name__ = ["nape", "geom", "ConvexResult"];
    u.ConvexResult.prototype = {
        toString: function() {
            return "{ shape: " + I.string(this.zpp_inner.shape) + " toi: " + this.zpp_inner.toiDistance + " }"
        },
        __class__: u.ConvexResult,
        __properties__: {
            get_toi: "get_toi",
            get_shape: "get_shape"
        }
    };
    u.ConvexResultIterator = function() {
        this.zpp_next = null;
        this.zpp_critical = !1;
        this.zpp_i = 0;
        this.zpp_inner = null
    };
    j["nape.geom.ConvexResultIterator"] = u.ConvexResultIterator;
    u.ConvexResultIterator.__name__ = ["nape", "geom",
        "ConvexResultIterator"
    ];
    u.ConvexResultIterator.get = function(a) {
        var b = null == u.ConvexResultIterator.zpp_pool ? function() {
            e.ZPP_ConvexResultList.internal = !0;
            var a = new u.ConvexResultIterator;
            e.ZPP_ConvexResultList.internal = !1;
            return a
        }(this) : function() {
            var a = u.ConvexResultIterator.zpp_pool;
            u.ConvexResultIterator.zpp_pool = a.zpp_next;
            return a
        }(this);
        b.zpp_i = 0;
        b.zpp_inner = a;
        b.zpp_critical = !1;
        return b
    };
    u.ConvexResultIterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.get_length();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = u.ConvexResultIterator.zpp_pool;
            u.ConvexResultIterator.zpp_pool = this;
            this.zpp_inner = null;
            return !1
        },
        __class__: u.ConvexResultIterator
    };
    u.ConvexResultList = function() {
        this.zpp_inner = null
    };
    j["nape.geom.ConvexResultList"] = u.ConvexResultList;
    u.ConvexResultList.__name__ = ["nape", "geom", "ConvexResultList"];
    u.ConvexResultList.prototype = {
        toString: function() {
            var a =
                "[",
                b = !0,
                c;
            this.zpp_inner.valmod();
            for (c = u.ConvexResultIterator.get(this); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_inner.valmod();
            return u.ConvexResultIterator.get(this)
        },
        at: function(a) {
            this.zpp_inner.valmod();
            this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
            if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
            else
                for (; this.zpp_inner.at_index !=
                    a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
            return this.zpp_inner.at_ite.elt
        },
        get_length: function() {
            this.zpp_inner.valmod();
            this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
            return this.zpp_inner.user_length
        },
        __class__: u.ConvexResultList,
        __properties__: {
            get_length: "get_length"
        }
    };
    u.Geom = function() {};
    j["nape.geom.Geom"] = u.Geom;
    u.Geom.__name__ = ["nape", "geom", "Geom"];
    u.Geom.intersects = function(a, b) {
        q.ZPP_Geom.validateShape(a.zpp_inner);
        q.ZPP_Geom.validateShape(b.zpp_inner);
        return a.zpp_inner.aabb.intersect(b.zpp_inner.aabb) && q.ZPP_Collide.testCollide_safe(a.zpp_inner, b.zpp_inner)
    };
    u.GeomPoly = function(a) {
        this.zpp_inner = null;
        this.zpp_inner = new q.ZPP_GeomPoly(this);
        if (null != a) {
            if (ba.__instanceof(a, Array))
                for (var b = a, c = 0; c < b.length;) {
                    var d = b[c];
                    ++c;
                    var f = d;
                    this.zpp_inner.vertices = function(a) {
                        var b = q.ZPP_GeomVert.get(function() {
                            f.zpp_inner.validate();
                            return f.zpp_inner.x
                        }(a), function() {
                            f.zpp_inner.validate();
                            return f.zpp_inner.y
                        }(a));
                        null == a.zpp_inner.vertices ? a.zpp_inner.vertices = b.prev = b.next = b : (b.prev = a.zpp_inner.vertices, b.next = a.zpp_inner.vertices.next, a.zpp_inner.vertices.next.prev = b, a.zpp_inner.vertices.next = b);
                        return b
                    }(this)
                } else if (ba.__instanceof(a, u.Vec2List))
                    for (b = a.iterator(); b.hasNext();) f = b.next(), this.zpp_inner.vertices = function(a) {
                        var b = q.ZPP_GeomVert.get(function() {
                            f.zpp_inner.validate();
                            return f.zpp_inner.x
                        }(a), function() {
                            f.zpp_inner.validate();
                            return f.zpp_inner.y
                        }(a));
                        null == a.zpp_inner.vertices ? a.zpp_inner.vertices =
                            b.prev = b.next = b : (b.prev = a.zpp_inner.vertices, b.next = a.zpp_inner.vertices.next, a.zpp_inner.vertices.next.prev = b, a.zpp_inner.vertices.next = b);
                        return b
                    }(this);
                else if (ba.__instanceof(a, u.GeomPoly) && (b = a.zpp_inner.vertices, null != b)) {
                d = b;
                do f = u.Vec2.get(d.x, d.y, null), d = d.next, this.zpp_inner.vertices = function(a) {
                    var b = q.ZPP_GeomVert.get(function() {
                        f.zpp_inner.validate();
                        return f.zpp_inner.x
                    }(a), function() {
                        f.zpp_inner.validate();
                        return f.zpp_inner.y
                    }(a));
                    null == a.zpp_inner.vertices ? a.zpp_inner.vertices = b.prev =
                        b.next = b : (b.prev = a.zpp_inner.vertices, b.next = a.zpp_inner.vertices.next, a.zpp_inner.vertices.next.prev = b, a.zpp_inner.vertices.next = b);
                    return b
                }(this), f.dispose(); while (d != b)
            }
            this.skipForward(1);
            if (ba.__instanceof(a, Array)) {
                b = a;
                for (d = 0; d < b.length;) {
                    a = b[d];
                    if (c = a.zpp_inner.weak) a.dispose(), c = !0;
                    c ? b.splice(d, 1) : d++
                }
            } else if (ba.__instanceof(a, u.Vec2List)) {
                b = a;
                null != b.zpp_inner._validate && b.zpp_inner._validate();
                b = b.zpp_inner.inner;
                d = null;
                for (a = b.head; null != a;) c = a.elt, c.outer.zpp_inner.weak ? (a = b.erase(d),
                    c.outer.zpp_inner.weak ? (c.outer.dispose(), !0) : !1) : (d = a, a = a.next)
            }
        }
    };
    j["nape.geom.GeomPoly"] = u.GeomPoly;
    u.GeomPoly.__name__ = ["nape", "geom", "GeomPoly"];
    u.GeomPoly.prototype = {
        toString: function() {
            var a = "GeomPoly[",
                b = this.zpp_inner.vertices,
                c = this.zpp_inner.vertices;
            if (null != b) {
                do {
                    var d = b;
                    d != this.zpp_inner.vertices && (a += ",");
                    a += "{" + d.x + "," + d.y + "}";
                    b = b.next
                } while (b != c)
            }
            return a + "]"
        },
        skipForward: function(a) {
            if (null != this.zpp_inner.vertices)
                if (0 < a)
                    for (; 0 < a--;) this.zpp_inner.vertices = this.zpp_inner.vertices.next;
                else if (0 > a)
                for (; 0 > a++;) this.zpp_inner.vertices = this.zpp_inner.vertices.prev;
            return this
        },
        __class__: u.GeomPoly
    };
    u.GeomPolyIterator = function() {
        this.zpp_next = null;
        this.zpp_critical = !1;
        this.zpp_i = 0;
        this.zpp_inner = null
    };
    j["nape.geom.GeomPolyIterator"] = u.GeomPolyIterator;
    u.GeomPolyIterator.__name__ = ["nape", "geom", "GeomPolyIterator"];
    u.GeomPolyIterator.get = function(a) {
        var b = null == u.GeomPolyIterator.zpp_pool ? function() {
            e.ZPP_GeomPolyList.internal = !0;
            var a = new u.GeomPolyIterator;
            e.ZPP_GeomPolyList.internal = !1;
            return a
        }(this) : function() {
            var a = u.GeomPolyIterator.zpp_pool;
            u.GeomPolyIterator.zpp_pool = a.zpp_next;
            return a
        }(this);
        b.zpp_i = 0;
        b.zpp_inner = a;
        b.zpp_critical = !1;
        return b
    };
    u.GeomPolyIterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.get_length();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = u.GeomPolyIterator.zpp_pool;
            u.GeomPolyIterator.zpp_pool = this;
            this.zpp_inner =
                null;
            return !1
        },
        __class__: u.GeomPolyIterator
    };
    u.GeomPolyList = function() {
        this.zpp_inner = null
    };
    j["nape.geom.GeomPolyList"] = u.GeomPolyList;
    u.GeomPolyList.__name__ = ["nape", "geom", "GeomPolyList"];
    u.GeomPolyList.prototype = {
        toString: function() {
            var a = "[",
                b = !0,
                c;
            this.zpp_inner.valmod();
            for (c = u.GeomPolyIterator.get(this); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_inner.valmod();
            return u.GeomPolyIterator.get(this)
        },
        at: function(a) {
            this.zpp_inner.valmod();
            this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
            if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
            else
                for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
            return this.zpp_inner.at_ite.elt.outer
        },
        get_length: function() {
            this.zpp_inner.valmod();
            this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
            return this.zpp_inner.user_length
        },
        __class__: u.GeomPolyList,
        __properties__: {
            get_length: "get_length"
        }
    };
    u.Mat23 = function(a, b, c, d, f, e) {
        null == e && (e = 0);
        null == f && (f = 0);
        null == d && (d = 1);
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 1);
        this.zpp_inner = null;
        this.zpp_inner = q.ZPP_Mat23.get();
        this.zpp_inner.outer = this;
        this.zpp_inner.a = a;
        this.zpp_inner.invalidate();
        this.zpp_inner.a;
        this.zpp_inner.b = b;
        this.zpp_inner.invalidate();
        this.zpp_inner.b;
        this.zpp_inner.tx = f;
        this.zpp_inner.invalidate();
        this.zpp_inner.tx;
        this.zpp_inner.c =
            c;
        this.zpp_inner.invalidate();
        this.zpp_inner.c;
        this.zpp_inner.d = d;
        this.zpp_inner.invalidate();
        this.zpp_inner.d;
        this.zpp_inner.ty = e;
        this.zpp_inner.invalidate();
        this.zpp_inner.ty
    };
    j["nape.geom.Mat23"] = u.Mat23;
    u.Mat23.__name__ = ["nape", "geom", "Mat23"];
    u.Mat23.prototype = {
        equiorthogonal: function() {
            if (this.singular()) return !1;
            var a = this.zpp_inner.a * this.zpp_inner.b + this.zpp_inner.c * this.zpp_inner.d;
            return a * a < x.epsilon ? (a = this.zpp_inner.a * this.zpp_inner.a + this.zpp_inner.b * this.zpp_inner.b - this.zpp_inner.c *
                this.zpp_inner.c - this.zpp_inner.d * this.zpp_inner.d, a * a < x.epsilon) : !1
        },
        toString: function() {
            return "{ a: " + this.zpp_inner.a + " b: " + this.zpp_inner.b + " c: " + this.zpp_inner.c + " d: " + this.zpp_inner.d + " tx: " + this.zpp_inner.tx + " ty: " + this.zpp_inner.ty + " }"
        },
        singular: function() {
            var a = this.zpp_inner.a * this.zpp_inner.a + this.zpp_inner.b * this.zpp_inner.b + this.zpp_inner.c * this.zpp_inner.c + this.zpp_inner.d * this.zpp_inner.d,
                b = this.zpp_inner.a * this.zpp_inner.d - this.zpp_inner.b * this.zpp_inner.c;
            0 > b && (b = -b);
            return a >
                x.illConditionedThreshold * b
        },
        set_ty: function(a) {
            this.zpp_inner.ty = a;
            this.zpp_inner.invalidate();
            return this.zpp_inner.ty
        },
        set_tx: function(a) {
            this.zpp_inner.tx = a;
            this.zpp_inner.invalidate();
            return this.zpp_inner.tx
        },
        set_d: function(a) {
            this.zpp_inner.d = a;
            this.zpp_inner.invalidate();
            return this.zpp_inner.d
        },
        set_c: function(a) {
            this.zpp_inner.c = a;
            this.zpp_inner.invalidate();
            return this.zpp_inner.c
        },
        set_b: function(a) {
            this.zpp_inner.b = a;
            this.zpp_inner.invalidate();
            return this.zpp_inner.b
        },
        set_a: function(a) {
            this.zpp_inner.a =
                a;
            this.zpp_inner.invalidate();
            return this.zpp_inner.a
        },
        __class__: u.Mat23,
        __properties__: {
            set_a: "set_a",
            get_a: "get_a",
            set_b: "set_b",
            get_b: "get_b",
            set_c: "set_c",
            get_c: "get_c",
            set_d: "set_d",
            get_d: "get_d",
            set_tx: "set_tx",
            get_tx: "get_tx",
            set_ty: "set_ty",
            get_ty: "get_ty",
            get_determinant: "get_determinant"
        }
    };
    u.MatMN = function(a, b) {
        this.zpp_inner = null;
        this.zpp_inner = new q.ZPP_MatMN(a, b);
        this.zpp_inner.outer = this
    };
    j["nape.geom.MatMN"] = u.MatMN;
    u.MatMN.__name__ = ["nape", "geom", "MatMN"];
    u.MatMN.prototype = {
        toString: function() {
            for (var a =
                    "{ ", b = !0, c = 0, d = this.zpp_inner.m; c < d;) {
                var f = c++;
                b || (a += "; ");
                for (var b = !1, e = 0, l = this.zpp_inner.n; e < l;) var s = e++,
                    a = a + (this.zpp_inner.x[f * this.zpp_inner.n + s] + " ")
            }
            return a + "}"
        },
        __class__: u.MatMN,
        __properties__: {
            get_rows: "get_rows",
            get_cols: "get_cols"
        }
    };
    u.Ray = function() {
        this.zpp_inner = null
    };
    j["nape.geom.Ray"] = u.Ray;
    u.Ray.__name__ = ["nape", "geom", "Ray"];
    u.Ray.prototype = {
        __class__: u.Ray
    };
    u.RayResult = function() {
        this.zpp_inner = null
    };
    j["nape.geom.RayResult"] = u.RayResult;
    u.RayResult.__name__ = ["nape", "geom",
        "RayResult"
    ];
    u.RayResult.prototype = {
        toString: function() {
            return "{ shape: " + I.string(this.zpp_inner.shape) + " distance: " + this.zpp_inner.toiDistance + " ?inner: " + I.string(this.zpp_inner.inner) + " }"
        },
        __class__: u.RayResult,
        __properties__: {
            get_distance: "get_distance",
            get_inner: "get_inner",
            get_shape: "get_shape"
        }
    };
    u.RayResultIterator = function() {
        this.zpp_next = null;
        this.zpp_critical = !1;
        this.zpp_i = 0;
        this.zpp_inner = null
    };
    j["nape.geom.RayResultIterator"] = u.RayResultIterator;
    u.RayResultIterator.__name__ = ["nape",
        "geom", "RayResultIterator"
    ];
    u.RayResultIterator.get = function(a) {
        var b = null == u.RayResultIterator.zpp_pool ? function() {
            e.ZPP_RayResultList.internal = !0;
            var a = new u.RayResultIterator;
            e.ZPP_RayResultList.internal = !1;
            return a
        }(this) : function() {
            var a = u.RayResultIterator.zpp_pool;
            u.RayResultIterator.zpp_pool = a.zpp_next;
            return a
        }(this);
        b.zpp_i = 0;
        b.zpp_inner = a;
        b.zpp_critical = !1;
        return b
    };
    u.RayResultIterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.get_length();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = u.RayResultIterator.zpp_pool;
            u.RayResultIterator.zpp_pool = this;
            this.zpp_inner = null;
            return !1
        },
        __class__: u.RayResultIterator
    };
    u.RayResultList = function() {
        this.zpp_inner = null;
        this.zpp_inner = new e.ZPP_RayResultList;
        this.zpp_inner.outer = this
    };
    j["nape.geom.RayResultList"] = u.RayResultList;
    u.RayResultList.__name__ = ["nape", "geom", "RayResultList"];
    u.RayResultList.prototype = {
        toString: function() {
            var a = "[",
                b = !0,
                c;
            this.zpp_inner.valmod();
            for (c = u.RayResultIterator.get(this); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_inner.valmod();
            return u.RayResultIterator.get(this)
        },
        at: function(a) {
            this.zpp_inner.valmod();
            this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
            if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
            else
                for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++,
                    this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
            return this.zpp_inner.at_ite.elt
        },
        get_length: function() {
            this.zpp_inner.valmod();
            this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
            return this.zpp_inner.user_length
        },
        __class__: u.RayResultList,
        __properties__: {
            get_length: "get_length"
        }
    };
    u.Vec2 = function(a, b) {
        null == b && (b = 0);
        null == a && (a = 0);
        this.zpp_inner = this.zpp_pool = null;
        this.zpp_inner = q.ZPP_Vec2.get(a, b, null);
        this.zpp_inner.outer = this
    };
    j["nape.geom.Vec2"] =
        u.Vec2;
    u.Vec2.__name__ = ["nape", "geom", "Vec2"];
    u.Vec2.get = function(a, b, c) {
        null == c && (c = !1);
        null == b && (b = 0);
        null == a && (a = 0);
        var d;
        null == e.ZPP_PubPool.poolVec2 ? d = new u.Vec2 : (d = e.ZPP_PubPool.poolVec2, e.ZPP_PubPool.poolVec2 = d.zpp_pool, d.zpp_pool = null);
        if (null == d.zpp_inner) d.zpp_inner = q.ZPP_Vec2.get(a, b, null), d.zpp_inner.outer = d;
        else {
            var f;
            d.zpp_inner.validate();
            if (f = d.zpp_inner.x == a) d.zpp_inner.validate(), f = d.zpp_inner.y == b;
            f || (d.zpp_inner.x = a, d.zpp_inner.y = b, d.zpp_inner.invalidate());
            d
        }
        d.zpp_inner.weak =
            c;
        return d
    };
    u.Vec2.prototype = {
        toString: function() {
            this.zpp_inner.validate();
            return this.zpp_inner.toString()
        },
        setxy: function(a, b) {
            var c;
            this.zpp_inner.validate();
            if (c = this.zpp_inner.x == a) this.zpp_inner.validate(), c = this.zpp_inner.y == b;
            c || (this.zpp_inner.x = a, this.zpp_inner.y = b, this.zpp_inner.invalidate());
            return this
        },
        set: function(a) {
            var b = this.setxy(function() {
                a.zpp_inner.validate();
                return a.zpp_inner.x
            }(this), function() {
                a.zpp_inner.validate();
                return a.zpp_inner.y
            }(this));
            a.zpp_inner.weak ? (a.dispose(), !0) : !1;
            return b
        },
        set_y: function(a) {
            this.zpp_inner.validate();
            this.zpp_inner.y != a && (this.zpp_inner.y = a, this.zpp_inner.invalidate());
            this.zpp_inner.validate();
            return this.zpp_inner.y
        },
        get_y: function() {
            this.zpp_inner.validate();
            return this.zpp_inner.y
        },
        set_x: function(a) {
            this.zpp_inner.validate();
            this.zpp_inner.x != a && (this.zpp_inner.x = a, this.zpp_inner.invalidate());
            this.zpp_inner.validate();
            return this.zpp_inner.x
        },
        get_x: function() {
            this.zpp_inner.validate();
            return this.zpp_inner.x
        },
        dispose: function() {
            var a =
                this.zpp_inner;
            this.zpp_inner = this.zpp_inner.outer = null;
            var b = this;
            b.zpp_pool = e.ZPP_PubPool.poolVec2;
            e.ZPP_PubPool.poolVec2 = b;
            b = a;
            null != b.outer && (b.outer.zpp_inner = null, b.outer = null);
            b._isimmutable = null;
            b._validate = null;
            b._invalidate = null;
            b.next = q.ZPP_Vec2.zpp_pool;
            q.ZPP_Vec2.zpp_pool = b
        },
        __class__: u.Vec2,
        __properties__: {
            set_x: "set_x",
            get_x: "get_x",
            set_y: "set_y",
            get_y: "get_y",
            set_length: "set_length",
            get_length: "get_length"
        }
    };
    u.Vec2Iterator = function() {
        this.zpp_next = null;
        this.zpp_critical = !1;
        this.zpp_i =
            0;
        this.zpp_inner = null
    };
    j["nape.geom.Vec2Iterator"] = u.Vec2Iterator;
    u.Vec2Iterator.__name__ = ["nape", "geom", "Vec2Iterator"];
    u.Vec2Iterator.get = function(a) {
        var b = null == u.Vec2Iterator.zpp_pool ? function() {
            e.ZPP_Vec2List.internal = !0;
            var a = new u.Vec2Iterator;
            e.ZPP_Vec2List.internal = !1;
            return a
        }(this) : function() {
            var a = u.Vec2Iterator.zpp_pool;
            u.Vec2Iterator.zpp_pool = a.zpp_next;
            return a
        }(this);
        b.zpp_i = 0;
        b.zpp_inner = a;
        b.zpp_critical = !1;
        return b
    };
    u.Vec2Iterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.zpp_gl();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = u.Vec2Iterator.zpp_pool;
            u.Vec2Iterator.zpp_pool = this;
            this.zpp_inner = null;
            return !1
        },
        __class__: u.Vec2Iterator
    };
    u.Vec2List = function() {
        this.zpp_inner = null;
        this.zpp_inner = new e.ZPP_Vec2List;
        this.zpp_inner.outer = this
    };
    j["nape.geom.Vec2List"] = u.Vec2List;
    u.Vec2List.__name__ = ["nape", "geom", "Vec2List"];
    u.Vec2List.prototype = {
        toString: function() {
            for (var a =
                    "[", b = !0, c = this.iterator(); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_vm();
            return u.Vec2Iterator.get(this)
        },
        empty: function() {
            return 0 == this.zpp_gl()
        },
        clear: function() {
            if (this.zpp_inner.reverse_flag)
                for (; !this.empty();) this.pop();
            else
                for (; !this.empty();) this.shift()
        },
        remove: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_vm();
            var b;
            b = !1;
            for (var c = this.zpp_inner.inner.head; null != c;) {
                if (c.elt == a.zpp_inner) {
                    b = !0;
                    break
                }
                c = c.next
            }
            b &&
                (null != this.zpp_inner.subber && this.zpp_inner.subber(a), this.zpp_inner.dontremove || this.zpp_inner.inner.remove(a.zpp_inner), this.zpp_inner.invalidate());
            return b
        },
        shift: function() {
            this.zpp_inner.modify_test();
            this.zpp_vm();
            var a = null;
            if (this.zpp_inner.reverse_flag) {
                null != this.zpp_inner.at_ite && null == this.zpp_inner.at_ite.next && (this.zpp_inner.at_ite = null);
                var b = 1 == this.zpp_gl() ? null : this.zpp_inner.inner.iterator_at(this.zpp_gl() - 2),
                    a = null == b ? this.zpp_inner.inner.head.elt : b.next.elt,
                    c = a.wrapper();
                null !=
                    this.zpp_inner.subber && this.zpp_inner.subber(c);
                this.zpp_inner.dontremove || this.zpp_inner.inner.erase(b)
            } else a = this.zpp_inner.inner.head.elt, c = a.wrapper(), null != this.zpp_inner.subber && this.zpp_inner.subber(c), this.zpp_inner.dontremove || this.zpp_inner.inner.pop();
            this.zpp_inner.invalidate();
            return c = a.wrapper()
        },
        pop: function() {
            this.zpp_inner.modify_test();
            this.zpp_vm();
            var a = null;
            if (this.zpp_inner.reverse_flag) {
                var a = this.zpp_inner.inner.head.elt,
                    b = a.wrapper();
                null != this.zpp_inner.subber && this.zpp_inner.subber(b);
                this.zpp_inner.dontremove || this.zpp_inner.inner.pop()
            } else {
                null != this.zpp_inner.at_ite && null == this.zpp_inner.at_ite.next && (this.zpp_inner.at_ite = null);
                var c = 1 == this.zpp_gl() ? null : this.zpp_inner.inner.iterator_at(this.zpp_gl() - 2),
                    a = null == c ? this.zpp_inner.inner.head.elt : c.next.elt,
                    b = a.wrapper();
                null != this.zpp_inner.subber && this.zpp_inner.subber(b);
                this.zpp_inner.dontremove || this.zpp_inner.inner.erase(c)
            }
            this.zpp_inner.invalidate();
            return b = a.wrapper()
        },
        unshift: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_vm();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ? (null == this.zpp_inner.push_ite && (this.zpp_inner.push_ite = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.zpp_gl() - 1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)) : this.zpp_inner.inner.add(a.zpp_inner), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        push: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_vm();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ? this.zpp_inner.inner.add(a.zpp_inner) : (null == this.zpp_inner.push_ite && (this.zpp_inner.push_ite = this.empty() ? null : this.zpp_inner.inner.iterator_at(this.zpp_gl() - 1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        at: function(a) {
            this.zpp_vm();
            this.zpp_inner.reverse_flag &&
                (a = this.zpp_gl() - 1 - a);
            if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
            else
                for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
            return this.zpp_inner.at_ite.elt.wrapper()
        },
        zpp_vm: function() {
            this.zpp_inner.valmod()
        },
        zpp_gl: function() {
            this.zpp_inner.valmod();
            this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
            return this.zpp_inner.user_length
        },
        __class__: u.Vec2List,
        __properties__: {
            get_length: "get_length"
        }
    };
    u.Vec3 = function(a, b, c) {
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        this.zpp_inner = this.zpp_pool = null;
        this.zpp_inner = new q.ZPP_Vec3;
        this.zpp_inner.outer = this;
        this.zpp_inner.x = a;
        this.zpp_inner.validate();
        this.zpp_inner.x;
        this.zpp_inner.y = b;
        this.zpp_inner.validate();
        this.zpp_inner.y;
        this.zpp_inner.z = c;
        this.zpp_inner.validate();
        this.zpp_inner.z
    };
    j["nape.geom.Vec3"] = u.Vec3;
    u.Vec3.__name__ = ["nape", "geom",
        "Vec3"
    ];
    u.Vec3.get = function(a, b, c) {
        null == c && (c = 0);
        null == b && (b = 0);
        null == a && (a = 0);
        var d;
        null == e.ZPP_PubPool.poolVec3 ? d = new u.Vec3 : (d = e.ZPP_PubPool.poolVec3, e.ZPP_PubPool.poolVec3 = d.zpp_pool, d.zpp_pool = null);
        d.setxyz(a, b, c);
        d.zpp_inner.immutable = !1;
        d.zpp_inner._validate = null;
        return d
    };
    u.Vec3.prototype = {
        toString: function() {
            this.zpp_inner.validate();
            var a = "{ x: " + this.zpp_inner.x + " y: ";
            this.zpp_inner.validate();
            a = a + this.zpp_inner.y + " z: ";
            this.zpp_inner.validate();
            return a + this.zpp_inner.z + " }"
        },
        setxyz: function(a,
            b, c) {
            this.zpp_inner.x = a;
            this.zpp_inner.validate();
            this.zpp_inner.x;
            this.zpp_inner.y = b;
            this.zpp_inner.validate();
            this.zpp_inner.y;
            this.zpp_inner.z = c;
            this.zpp_inner.validate();
            this.zpp_inner.z;
            return this
        },
        dispose: function() {
            this.zpp_pool = e.ZPP_PubPool.poolVec3;
            e.ZPP_PubPool.poolVec3 = this
        },
        get_z: function() {
            this.zpp_inner.validate();
            return this.zpp_inner.z
        },
        get_y: function() {
            this.zpp_inner.validate();
            return this.zpp_inner.y
        },
        get_x: function() {
            this.zpp_inner.validate();
            return this.zpp_inner.x
        },
        __class__: u.Vec3,
        __properties__: {
            set_x: "set_x",
            get_x: "get_x",
            set_y: "set_y",
            get_y: "get_y",
            set_z: "set_z",
            get_z: "get_z",
            set_length: "set_length",
            get_length: "get_length"
        }
    };
    u.Winding = function() {};
    j["nape.geom.Winding"] = u.Winding;
    u.Winding.__name__ = ["nape", "geom", "Winding"];
    u.Winding.__properties__ = {
        get_ANTICLOCKWISE: "get_ANTICLOCKWISE",
        get_CLOCKWISE: "get_CLOCKWISE",
        get_UNDEFINED: "get_UNDEFINED"
    };
    u.Winding.prototype = {
        toString: function() {
            var a;
            null == e.ZPP_Flags.Winding_UNDEFINED && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.Winding_UNDEFINED =
                new u.Winding, e.ZPP_Flags.internal = !1);
            this == e.ZPP_Flags.Winding_UNDEFINED ? a = "UNDEFINED" : (null == e.ZPP_Flags.Winding_CLOCKWISE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.Winding_CLOCKWISE = new u.Winding, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.Winding_CLOCKWISE ? a = "CLOCKWISE" : (null == e.ZPP_Flags.Winding_ANTICLOCKWISE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.Winding_ANTICLOCKWISE = new u.Winding, e.ZPP_Flags.internal = !1), a = this == e.ZPP_Flags.Winding_ANTICLOCKWISE ? "ANTICLOCKWISE" : ""));
            return a
        },
        __class__: u.Winding
    };
    B = {
        Interactor: function() {
            this.zpp_inner_i = null
        }
    };
    j["nape.phys.Interactor"] = B.Interactor;
    B.Interactor.__name__ = ["nape", "phys", "Interactor"];
    B.Interactor.prototype = {
        toString: function() {
            return ""
        },
        get_cbTypes: function() {
            null == this.zpp_inner_i.wrap_cbTypes && this.zpp_inner_i.setupcbTypes();
            return this.zpp_inner_i.wrap_cbTypes
        },
        get_castBody: function() {
            return null != this.zpp_inner_i.ibody ? this.zpp_inner_i.ibody.outer : null
        },
        __class__: B.Interactor,
        __properties__: {
            get_id: "get_id",
            get_castBody: "get_castBody",
            get_cbTypes: "get_cbTypes"
        }
    };
    B.Body = function(a, b) {
        this.zpp_inner = null;
        B.Interactor.call(this);
        this.zpp_inner = new O.ZPP_Body;
        this.zpp_inner.outer = this;
        this.zpp_inner.outer_i = this;
        this.zpp_inner_i = this.zpp_inner;
        if (null != b) {
            var c = this.zpp_inner;
            b.zpp_inner.validate();
            c.posx = b.zpp_inner.x;
            c = this.zpp_inner;
            b.zpp_inner.validate();
            c.posy = b.zpp_inner.y
        } else this.zpp_inner.posx = 0, this.zpp_inner.posy = 0;
        this.set_type(null == a ? function() {
            null == e.ZPP_Flags.BodyType_DYNAMIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_DYNAMIC =
                new B.BodyType, e.ZPP_Flags.internal = !1);
            return e.ZPP_Flags.BodyType_DYNAMIC
        }(this) : a);
        null != b && (b.zpp_inner.weak ? (b.dispose(), !0) : !1);
        this.zpp_inner_i.insert_cbtype(H.ZPP_CbType.ANY_BODY.zpp_inner)
    };
    j["nape.phys.Body"] = B.Body;
    B.Body.__name__ = ["nape", "phys", "Body"];
    B.Body.__super__ = B.Interactor;
    B.Body.prototype = C(B.Interactor.prototype, {
        toString: function() {
            return (this.zpp_inner.world ? "(space::world" : "(" + (this.zpp_inner.type == e.ZPP_Flags.id_BodyType_DYNAMIC ? "dynamic" : this.zpp_inner.type == e.ZPP_Flags.id_BodyType_STATIC ?
                "static" : "kinematic")) + ")#" + this.zpp_inner_i.id
        },
        set_mass: function(a) {
            this.zpp_inner.immutable_midstep("Body::mass");
            this.zpp_inner.massMode = e.ZPP_Flags.id_MassMode_FIXED;
            this.zpp_inner.cmass = a;
            this.zpp_inner.invalidate_mass();
            this.zpp_inner.validate_mass();
            return this.zpp_inner.cmass
        },
        get_velocity: function() {
            null == this.zpp_inner.wrap_vel && this.zpp_inner.setupVelocity();
            return this.zpp_inner.wrap_vel
        },
        get_position: function() {
            null == this.zpp_inner.wrap_pos && this.zpp_inner.setupPosition();
            return this.zpp_inner.wrap_pos
        },
        set_space: function(a) {
            this.zpp_inner.immutable_midstep("Body::space");
            if ((null == this.zpp_inner.space ? null : this.zpp_inner.space.outer) != a) {
                if (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer)) this.zpp_inner.component.woken = !1;
                if (null != (null == this.zpp_inner.space ? null : this.zpp_inner.space.outer))(null == this.zpp_inner.space ? null : this.zpp_inner.space.outer).zpp_inner.wrap_bodies.remove(this);
                null != a && a.zpp_inner.wrap_bodies.add(this)
            }
            return null == this.zpp_inner.space ? null : this.zpp_inner.space.outer
        },
        set_type: function(a) {
            this.zpp_inner.immutable_midstep("Body::type");
            var b;
            null == e.ZPP_Flags.BodyType_STATIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_STATIC = new B.BodyType, e.ZPP_Flags.internal = !1);
            b = e.ZPP_Flags.BodyType_STATIC;
            var c;
            null == e.ZPP_Flags.BodyType_DYNAMIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_DYNAMIC = new B.BodyType, e.ZPP_Flags.internal = !1);
            c = e.ZPP_Flags.BodyType_DYNAMIC;
            null == e.ZPP_Flags.BodyType_KINEMATIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_KINEMATIC = new B.BodyType,
                e.ZPP_Flags.internal = !1);
            [null, b, c, e.ZPP_Flags.BodyType_KINEMATIC][this.zpp_inner.type] != a && (null == e.ZPP_Flags.BodyType_DYNAMIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_DYNAMIC = new B.BodyType, e.ZPP_Flags.internal = !1), a == e.ZPP_Flags.BodyType_DYNAMIC ? a = e.ZPP_Flags.id_BodyType_DYNAMIC : (null == e.ZPP_Flags.BodyType_KINEMATIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_KINEMATIC = new B.BodyType, e.ZPP_Flags.internal = !1), a = a == e.ZPP_Flags.BodyType_KINEMATIC ? e.ZPP_Flags.id_BodyType_KINEMATIC : e.ZPP_Flags.id_BodyType_STATIC),
                a == e.ZPP_Flags.id_BodyType_STATIC && null != this.zpp_inner.space && (this.zpp_inner.velx = 0, this.zpp_inner.vely = 0, this.zpp_inner.angvel = 0), this.zpp_inner.invalidate_type(), null != this.zpp_inner.space ? this.zpp_inner.space.transmitType(this.zpp_inner, a) : this.zpp_inner.type = a);
            null == e.ZPP_Flags.BodyType_STATIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_STATIC = new B.BodyType, e.ZPP_Flags.internal = !1);
            a = e.ZPP_Flags.BodyType_STATIC;
            null == e.ZPP_Flags.BodyType_DYNAMIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_DYNAMIC =
                new B.BodyType, e.ZPP_Flags.internal = !1);
            b = e.ZPP_Flags.BodyType_DYNAMIC;
            null == e.ZPP_Flags.BodyType_KINEMATIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_KINEMATIC = new B.BodyType, e.ZPP_Flags.internal = !1);
            return [null, a, b, e.ZPP_Flags.BodyType_KINEMATIC][this.zpp_inner.type]
        },
        __class__: B.Body,
        __properties__: C(B.Interactor.prototype.__properties__, {
            set_type: "set_type",
            get_type: "get_type",
            get_shapes: "get_shapes",
            set_compound: "set_compound",
            get_compound: "get_compound",
            set_space: "set_space",
            get_space: "get_space",
            get_arbiters: "get_arbiters",
            set_position: "set_position",
            get_position: "get_position",
            set_velocity: "set_velocity",
            get_velocity: "get_velocity",
            set_kinematicVel: "set_kinematicVel",
            get_kinematicVel: "get_kinematicVel",
            set_surfaceVel: "set_surfaceVel",
            get_surfaceVel: "get_surfaceVel",
            set_force: "set_force",
            get_force: "get_force",
            set_rotation: "set_rotation",
            get_rotation: "get_rotation",
            set_angularVel: "set_angularVel",
            get_angularVel: "get_angularVel",
            set_kinAngVel: "set_kinAngVel",
            get_kinAngVel: "get_kinAngVel",
            set_torque: "set_torque",
            get_torque: "get_torque",
            set_allowMovement: "set_allowMovement",
            get_allowMovement: "get_allowMovement",
            set_allowRotation: "set_allowRotation",
            get_allowRotation: "get_allowRotation",
            set_mass: "set_mass",
            get_mass: "get_mass"
        })
    });
    B.BodyIterator = function() {
        this.zpp_next = null;
        this.zpp_critical = !1;
        this.zpp_i = 0;
        this.zpp_inner = null
    };
    j["nape.phys.BodyIterator"] = B.BodyIterator;
    B.BodyIterator.__name__ = ["nape", "phys", "BodyIterator"];
    B.BodyIterator.get = function(a) {
        var b = null == B.BodyIterator.zpp_pool ? function() {
            e.ZPP_BodyList.internal = !0;
            var a = new B.BodyIterator;
            e.ZPP_BodyList.internal = !1;
            return a
        }(this) : function() {
            var a = B.BodyIterator.zpp_pool;
            B.BodyIterator.zpp_pool = a.zpp_next;
            return a
        }(this);
        b.zpp_i = 0;
        b.zpp_inner = a;
        b.zpp_critical = !1;
        return b
    };
    B.BodyIterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.get_length();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = B.BodyIterator.zpp_pool;
            B.BodyIterator.zpp_pool =
                this;
            this.zpp_inner = null;
            return !1
        },
        __class__: B.BodyIterator
    };
    B.BodyList = function() {
        this.zpp_inner = null;
        this.zpp_inner = new e.ZPP_BodyList;
        this.zpp_inner.outer = this
    };
    j["nape.phys.BodyList"] = B.BodyList;
    B.BodyList.__name__ = ["nape", "phys", "BodyList"];
    B.BodyList.prototype = {
        toString: function() {
            var a = "[",
                b = !0,
                c;
            this.zpp_inner.valmod();
            for (c = B.BodyIterator.get(this); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_inner.valmod();
            return B.BodyIterator.get(this)
        },
        clear: function() {
            if (this.zpp_inner.reverse_flag)
                for (; null != this.zpp_inner.inner.head;) this.pop();
            else
                for (; null != this.zpp_inner.inner.head;) this.shift()
        },
        remove: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b;
            b = !1;
            for (var c = this.zpp_inner.inner.head; null != c;) {
                if (c.elt == a.zpp_inner) {
                    b = !0;
                    break
                }
                c = c.next
            }
            b && (null != this.zpp_inner.subber && this.zpp_inner.subber(a), this.zpp_inner.dontremove || this.zpp_inner.inner.remove(a.zpp_inner), this.zpp_inner.invalidate());
            return b
        },
        add: function(a) {
            return this.zpp_inner.reverse_flag ?
                this.push(a) : this.unshift(a)
        },
        shift: function() {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var a = null;
            if (this.zpp_inner.reverse_flag) {
                null != this.zpp_inner.at_ite && null == this.zpp_inner.at_ite.next && (this.zpp_inner.at_ite = null);
                var b = 1 == this.get_length() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 2),
                    a = null == b ? this.zpp_inner.inner.head.elt : b.next.elt,
                    c = a.outer;
                null != this.zpp_inner.subber && this.zpp_inner.subber(c);
                this.zpp_inner.dontremove || this.zpp_inner.inner.erase(b)
            } else a = this.zpp_inner.inner.head.elt,
                c = a.outer, null != this.zpp_inner.subber && this.zpp_inner.subber(c), this.zpp_inner.dontremove || this.zpp_inner.inner.pop();
            this.zpp_inner.invalidate();
            return c = a.outer
        },
        pop: function() {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var a = null;
            if (this.zpp_inner.reverse_flag) {
                var a = this.zpp_inner.inner.head.elt,
                    b = a.outer;
                null != this.zpp_inner.subber && this.zpp_inner.subber(b);
                this.zpp_inner.dontremove || this.zpp_inner.inner.pop()
            } else {
                null != this.zpp_inner.at_ite && null == this.zpp_inner.at_ite.next && (this.zpp_inner.at_ite =
                    null);
                var c = 1 == this.get_length() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 2),
                    a = null == c ? this.zpp_inner.inner.head.elt : c.next.elt,
                    b = a.outer;
                null != this.zpp_inner.subber && this.zpp_inner.subber(b);
                this.zpp_inner.dontremove || this.zpp_inner.inner.erase(c)
            }
            this.zpp_inner.invalidate();
            return b = a.outer
        },
        unshift: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ? (null == this.zpp_inner.push_ite &&
                (this.zpp_inner.push_ite = null == this.zpp_inner.inner.head ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)) : this.zpp_inner.inner.add(a.zpp_inner), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        push: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ?
                this.zpp_inner.inner.add(a.zpp_inner) : (null == this.zpp_inner.push_ite && (this.zpp_inner.push_ite = null == this.zpp_inner.inner.head ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        at: function(a) {
            this.zpp_inner.valmod();
            this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
            if (a < this.zpp_inner.at_index ||
                null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
            else
                for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
            return this.zpp_inner.at_ite.elt.outer
        },
        has: function(a) {
            this.zpp_inner.valmod();
            return this.zpp_inner.inner.has(a.zpp_inner)
        },
        get_length: function() {
            this.zpp_inner.valmod();
            this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
            return this.zpp_inner.user_length
        },
        __class__: B.BodyList,
        __properties__: {
            get_length: "get_length"
        }
    };
    B.BodyType = function() {};
    j["nape.phys.BodyType"] = B.BodyType;
    B.BodyType.__name__ = ["nape", "phys", "BodyType"];
    B.BodyType.__properties__ = {
        get_KINEMATIC: "get_KINEMATIC",
        get_DYNAMIC: "get_DYNAMIC",
        get_STATIC: "get_STATIC"
    };
    B.BodyType.prototype = {
        toString: function() {
            var a;
            null == e.ZPP_Flags.BodyType_STATIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_STATIC = new B.BodyType, e.ZPP_Flags.internal = !1);
            this == e.ZPP_Flags.BodyType_STATIC ?
                a = "STATIC" : (null == e.ZPP_Flags.BodyType_DYNAMIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_DYNAMIC = new B.BodyType, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.BodyType_DYNAMIC ? a = "DYNAMIC" : (null == e.ZPP_Flags.BodyType_KINEMATIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_KINEMATIC = new B.BodyType, e.ZPP_Flags.internal = !1), a = this == e.ZPP_Flags.BodyType_KINEMATIC ? "KINEMATIC" : ""));
            return a
        },
        __class__: B.BodyType
    };
    B.Compound = function() {
        this.zpp_inner = null
    };
    j["nape.phys.Compound"] = B.Compound;
    B.Compound.__name__ = ["nape", "phys", "Compound"];
    B.Compound.__super__ = B.Interactor;
    B.Compound.prototype = C(B.Interactor.prototype, {
        toString: function() {
            return "Compound" + this.zpp_inner_i.id
        },
        __class__: B.Compound,
        __properties__: C(B.Interactor.prototype.__properties__, {
            get_bodies: "get_bodies",
            get_constraints: "get_constraints",
            get_compounds: "get_compounds",
            set_compound: "set_compound",
            get_compound: "get_compound",
            set_space: "set_space",
            get_space: "get_space"
        })
    });
    B.CompoundIterator = function() {
        this.zpp_next = null;
        this.zpp_critical = !1;
        this.zpp_i = 0;
        this.zpp_inner = null
    };
    j["nape.phys.CompoundIterator"] = B.CompoundIterator;
    B.CompoundIterator.__name__ = ["nape", "phys", "CompoundIterator"];
    B.CompoundIterator.get = function(a) {
        var b = null == B.CompoundIterator.zpp_pool ? function() {
            e.ZPP_CompoundList.internal = !0;
            var a = new B.CompoundIterator;
            e.ZPP_CompoundList.internal = !1;
            return a
        }(this) : function() {
            var a = B.CompoundIterator.zpp_pool;
            B.CompoundIterator.zpp_pool = a.zpp_next;
            return a
        }(this);
        b.zpp_i = 0;
        b.zpp_inner = a;
        b.zpp_critical = !1;
        return b
    };
    B.CompoundIterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.get_length();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = B.CompoundIterator.zpp_pool;
            B.CompoundIterator.zpp_pool = this;
            this.zpp_inner = null;
            return !1
        },
        __class__: B.CompoundIterator
    };
    B.CompoundList = function() {
        this.zpp_inner = null;
        this.zpp_inner = new e.ZPP_CompoundList;
        this.zpp_inner.outer = this
    };
    j["nape.phys.CompoundList"] = B.CompoundList;
    B.CompoundList.__name__ = ["nape", "phys", "CompoundList"];
    B.CompoundList.prototype = {
        toString: function() {
            var a = "[",
                b = !0,
                c;
            this.zpp_inner.valmod();
            for (c = B.CompoundIterator.get(this); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_inner.valmod();
            return B.CompoundIterator.get(this)
        },
        remove: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b;
            b = !1;
            for (var c = this.zpp_inner.inner.head; null != c;) {
                if (c.elt == a.zpp_inner) {
                    b = !0;
                    break
                }
                c = c.next
            }
            b && (null !=
                this.zpp_inner.subber && this.zpp_inner.subber(a), this.zpp_inner.dontremove || this.zpp_inner.inner.remove(a.zpp_inner), this.zpp_inner.invalidate());
            return b
        },
        add: function(a) {
            return this.zpp_inner.reverse_flag ? this.push(a) : this.unshift(a)
        },
        unshift: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ? (null == this.zpp_inner.push_ite && (this.zpp_inner.push_ite = null == this.zpp_inner.inner.head ? null : this.zpp_inner.inner.iterator_at(this.get_length() -
                1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)) : this.zpp_inner.inner.add(a.zpp_inner), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        push: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ? this.zpp_inner.inner.add(a.zpp_inner) : (null == this.zpp_inner.push_ite && (this.zpp_inner.push_ite = null == this.zpp_inner.inner.head ?
                null : this.zpp_inner.inner.iterator_at(this.get_length() - 1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        at: function(a) {
            this.zpp_inner.valmod();
            this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
            if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
            else
                for (; this.zpp_inner.at_index !=
                    a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
            return this.zpp_inner.at_ite.elt.outer
        },
        get_length: function() {
            this.zpp_inner.valmod();
            this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
            return this.zpp_inner.user_length
        },
        __class__: B.CompoundList,
        __properties__: {
            get_length: "get_length"
        }
    };
    B.FluidProperties = function(a, b) {
        null == b && (b = 1);
        null == a && (a = 1);
        this.zpp_inner = null;
        null == O.ZPP_FluidProperties.zpp_pool ? this.zpp_inner =
            new O.ZPP_FluidProperties : (this.zpp_inner = O.ZPP_FluidProperties.zpp_pool, O.ZPP_FluidProperties.zpp_pool = this.zpp_inner.next, this.zpp_inner.next = null);
        null;
        this.zpp_inner.outer = this;
        a != 1E3 * this.zpp_inner.density && (this.zpp_inner.density = a / 1E3, this.zpp_inner.invalidate());
        1E3 * this.zpp_inner.density;
        b != this.zpp_inner.viscosity && (this.zpp_inner.viscosity = b / 1, this.zpp_inner.invalidate());
        this.zpp_inner.viscosity
    };
    j["nape.phys.FluidProperties"] = B.FluidProperties;
    B.FluidProperties.__name__ = ["nape", "phys",
        "FluidProperties"
    ];
    B.FluidProperties.prototype = {
        toString: function() {
            return "{ density: " + 1E3 * this.zpp_inner.density + " viscosity: " + this.zpp_inner.viscosity + " gravity: " + I.string(this.zpp_inner.wrap_gravity) + " }"
        },
        __class__: B.FluidProperties,
        __properties__: {
            set_density: "set_density",
            get_density: "get_density",
            set_viscosity: "set_viscosity",
            get_viscosity: "get_viscosity",
            set_gravity: "set_gravity",
            get_gravity: "get_gravity"
        }
    };
    B.GravMassMode = function() {};
    j["nape.phys.GravMassMode"] = B.GravMassMode;
    B.GravMassMode.__name__ = ["nape", "phys", "GravMassMode"];
    B.GravMassMode.__properties__ = {
        get_SCALED: "get_SCALED",
        get_FIXED: "get_FIXED",
        get_DEFAULT: "get_DEFAULT"
    };
    B.GravMassMode.prototype = {
        toString: function() {
            var a;
            null == e.ZPP_Flags.GravMassMode_DEFAULT && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.GravMassMode_DEFAULT = new B.GravMassMode, e.ZPP_Flags.internal = !1);
            this == e.ZPP_Flags.GravMassMode_DEFAULT ? a = "DEFAULT" : (null == e.ZPP_Flags.GravMassMode_FIXED && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.GravMassMode_FIXED = new B.GravMassMode, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.GravMassMode_FIXED ? a = "FIXED" : (null == e.ZPP_Flags.GravMassMode_SCALED && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.GravMassMode_SCALED = new B.GravMassMode, e.ZPP_Flags.internal = !1), a = this == e.ZPP_Flags.GravMassMode_SCALED ? "SCALED" : ""));
            return a
        },
        __class__: B.GravMassMode
    };
    B.InertiaMode = function() {};
    j["nape.phys.InertiaMode"] = B.InertiaMode;
    B.InertiaMode.__name__ = ["nape", "phys", "InertiaMode"];
    B.InertiaMode.__properties__ = {
        get_FIXED: "get_FIXED",
        get_DEFAULT: "get_DEFAULT"
    };
    B.InertiaMode.prototype = {
        toString: function() {
            var a;
            null == e.ZPP_Flags.InertiaMode_DEFAULT && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InertiaMode_DEFAULT = new B.InertiaMode, e.ZPP_Flags.internal = !1);
            this == e.ZPP_Flags.InertiaMode_DEFAULT ? a = "DEFAULT" : (null == e.ZPP_Flags.InertiaMode_FIXED && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.InertiaMode_FIXED = new B.InertiaMode, e.ZPP_Flags.internal = !1), a = this == e.ZPP_Flags.InertiaMode_FIXED ? "FIXED" : "");
            return a
        },
        __class__: B.InertiaMode
    };
    B.InteractorIterator = function() {
        this.zpp_next = null;
        this.zpp_critical = !1;
        this.zpp_i = 0;
        this.zpp_inner = null
    };
    j["nape.phys.InteractorIterator"] = B.InteractorIterator;
    B.InteractorIterator.__name__ = ["nape", "phys", "InteractorIterator"];
    B.InteractorIterator.get = function(a) {
        var b = null == B.InteractorIterator.zpp_pool ? function() {
            e.ZPP_InteractorList.internal = !0;
            var a = new B.InteractorIterator;
            e.ZPP_InteractorList.internal = !1;
            return a
        }(this) : function() {
            var a = B.InteractorIterator.zpp_pool;
            B.InteractorIterator.zpp_pool = a.zpp_next;
            return a
        }(this);
        b.zpp_i = 0;
        b.zpp_inner = a;
        b.zpp_critical = !1;
        return b
    };
    B.InteractorIterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.get_length();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = B.InteractorIterator.zpp_pool;
            B.InteractorIterator.zpp_pool = this;
            this.zpp_inner = null;
            return !1
        },
        __class__: B.InteractorIterator
    };
    B.InteractorList = function() {
        this.zpp_inner = null;
        this.zpp_inner = new e.ZPP_InteractorList;
        this.zpp_inner.outer =
            this
    };
    j["nape.phys.InteractorList"] = B.InteractorList;
    B.InteractorList.__name__ = ["nape", "phys", "InteractorList"];
    B.InteractorList.prototype = {
        toString: function() {
            var a = "[",
                b = !0,
                c;
            this.zpp_inner.valmod();
            for (c = B.InteractorIterator.get(this); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_inner.valmod();
            return B.InteractorIterator.get(this)
        },
        at: function(a) {
            this.zpp_inner.valmod();
            this.zpp_inner.reverse_flag && (a = this.get_length() -
                1 - a);
            if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
            else
                for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
            return this.zpp_inner.at_ite.elt.outer_i
        },
        get_length: function() {
            this.zpp_inner.valmod();
            this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
            return this.zpp_inner.user_length
        },
        __class__: B.InteractorList,
        __properties__: {
            get_length: "get_length"
        }
    };
    B.MassMode = function() {};
    j["nape.phys.MassMode"] = B.MassMode;
    B.MassMode.__name__ = ["nape", "phys", "MassMode"];
    B.MassMode.__properties__ = {
        get_FIXED: "get_FIXED",
        get_DEFAULT: "get_DEFAULT"
    };
    B.MassMode.prototype = {
        toString: function() {
            var a;
            null == e.ZPP_Flags.MassMode_DEFAULT && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.MassMode_DEFAULT = new B.MassMode, e.ZPP_Flags.internal = !1);
            this == e.ZPP_Flags.MassMode_DEFAULT ? a = "DEFAULT" : (null == e.ZPP_Flags.MassMode_FIXED && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.MassMode_FIXED = new B.MassMode, e.ZPP_Flags.internal = !1), a = this == e.ZPP_Flags.MassMode_FIXED ? "FIXED" : "");
            return a
        },
        __class__: B.MassMode
    };
    B.Material = function(a, b, c, d, f) {
        null == f && (f = 0.0010);
        null == d && (d = 1);
        null == c && (c = 2);
        null == b && (b = 1);
        null == a && (a = 0);
        this.zpp_inner = null;
        null == O.ZPP_Material.zpp_pool ? this.zpp_inner = new O.ZPP_Material : (this.zpp_inner = O.ZPP_Material.zpp_pool, O.ZPP_Material.zpp_pool = this.zpp_inner.next, this.zpp_inner.next = null);
        null;
        this.zpp_inner.outer = this;
        a != this.zpp_inner.elasticity &&
            (this.zpp_inner.elasticity = a / 1, this.zpp_inner.invalidate(O.ZPP_Material.WAKE | O.ZPP_Material.ARBITERS));
        this.zpp_inner.elasticity;
        b != this.zpp_inner.dynamicFriction && (this.zpp_inner.dynamicFriction = b / 1, this.zpp_inner.invalidate(O.ZPP_Material.WAKE | O.ZPP_Material.ANGDRAG | O.ZPP_Material.ARBITERS));
        this.zpp_inner.dynamicFriction;
        c != this.zpp_inner.staticFriction && (this.zpp_inner.staticFriction = c / 1, this.zpp_inner.invalidate(O.ZPP_Material.WAKE | O.ZPP_Material.ARBITERS));
        this.zpp_inner.staticFriction;
        d != 1E3 *
            this.zpp_inner.density && (this.zpp_inner.density = d / 1E3, this.zpp_inner.invalidate(O.ZPP_Material.WAKE | O.ZPP_Material.PROPS));
        1E3 * this.zpp_inner.density;
        f != this.zpp_inner.rollingFriction && (this.zpp_inner.rollingFriction = f / 1, this.zpp_inner.invalidate(O.ZPP_Material.WAKE | O.ZPP_Material.ARBITERS));
        this.zpp_inner.rollingFriction
    };
    j["nape.phys.Material"] = B.Material;
    B.Material.__name__ = ["nape", "phys", "Material"];
    B.Material.prototype = {
        toString: function() {
            return "{ elasticity: " + this.zpp_inner.elasticity + " dynamicFriction: " +
                this.zpp_inner.dynamicFriction + " staticFriction: " + this.zpp_inner.staticFriction + " density: " + 1E3 * this.zpp_inner.density + " rollingFriction: " + this.zpp_inner.rollingFriction + " }"
        },
        __class__: B.Material,
        __properties__: {
            set_elasticity: "set_elasticity",
            get_elasticity: "get_elasticity",
            set_dynamicFriction: "set_dynamicFriction",
            get_dynamicFriction: "get_dynamicFriction",
            set_staticFriction: "set_staticFriction",
            get_staticFriction: "get_staticFriction",
            set_density: "set_density",
            get_density: "get_density",
            set_rollingFriction: "set_rollingFriction",
            get_rollingFriction: "get_rollingFriction"
        }
    };
    L = {
        Shape: function() {
            this.zpp_inner = null;
            B.Interactor.call(this)
        }
    };
    j["nape.shape.Shape"] = L.Shape;
    L.Shape.__name__ = ["nape", "shape", "Shape"];
    L.Shape.__super__ = B.Interactor;
    L.Shape.prototype = C(B.Interactor.prototype, {
        toString: function() {
            return (this.zpp_inner.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? "Circle" : "Polygon") + "#" + this.zpp_inner_i.id
        },
        contains: function(a) {
            q.ZPP_Geom.validateShape(this.zpp_inner);
            a.zpp_inner.validate();
            var b = q.ZPP_Collide.shapeContains(this.zpp_inner,
                a.zpp_inner);
            a.zpp_inner.weak ? (a.dispose(), !0) : !1;
            return b
        },
        transform: function(a) {
            this.zpp_inner.immutable_midstep("Shape::transform()");
            this.zpp_inner.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? a.equiorthogonal() && this.zpp_inner.circle.__transform(a) : this.zpp_inner.polygon.__transform(a);
            return this
        },
        set_sensorEnabled: function(a) {
            this.zpp_inner.immutable_midstep("Shape::sensorEnabled");
            this.zpp_inner.sensorEnabled = a;
            this.zpp_inner.wake();
            return this.zpp_inner.sensorEnabled
        },
        set_material: function(a) {
            this.zpp_inner.immutable_midstep("Shape::material");
            this.zpp_inner.setMaterial(a.zpp_inner);
            return this.zpp_inner.material.wrapper()
        },
        __class__: L.Shape,
        __properties__: C(B.Interactor.prototype.__properties__, {
            set_body: "set_body",
            get_body: "get_body",
            set_localCOM: "set_localCOM",
            get_localCOM: "get_localCOM",
            set_material: "set_material",
            get_material: "get_material",
            set_filter: "set_filter",
            get_filter: "get_filter",
            set_fluidProperties: "set_fluidProperties",
            get_fluidProperties: "get_fluidProperties",
            set_sensorEnabled: "set_sensorEnabled",
            get_sensorEnabled: "get_sensorEnabled"
        })
    });
    L.Circle = function(a, b, c, d) {
        this.zpp_inner_zn = null;
        L.Shape.call(this);
        this.zpp_inner_zn = new V.ZPP_Circle;
        this.zpp_inner_zn.outer = this;
        this.zpp_inner_zn.outer_zn = this;
        this.zpp_inner_i = this.zpp_inner = this.zpp_inner_zn;
        this.zpp_inner_i.outer_i = this;
        this.zpp_inner.immutable_midstep("Circle::radius");
        a != this.zpp_inner_zn.radius && (this.zpp_inner_zn.radius = a, this.zpp_inner_zn.invalidate_radius());
        this.zpp_inner_zn.radius;
        null == b ? (this.zpp_inner.localCOMx = 0, this.zpp_inner.localCOMy = 0) : (a = this.zpp_inner, b.zpp_inner.validate(),
            a.localCOMx = b.zpp_inner.x, a = this.zpp_inner, b.zpp_inner.validate(), a.localCOMy = b.zpp_inner.y, b.zpp_inner.weak ? (b.dispose(), !0) : !1);
        null == c ? (null == O.ZPP_Material.zpp_pool ? this.zpp_inner.material = new O.ZPP_Material : (this.zpp_inner.material = O.ZPP_Material.zpp_pool, O.ZPP_Material.zpp_pool = this.zpp_inner.material.next, this.zpp_inner.material.next = null), null) : (this.zpp_inner.immutable_midstep("Shape::material"), this.zpp_inner.setMaterial(c.zpp_inner), this.zpp_inner.material.wrapper());
        null == d ? (null == D.ZPP_InteractionFilter.zpp_pool ?
            this.zpp_inner.filter = new D.ZPP_InteractionFilter : (this.zpp_inner.filter = D.ZPP_InteractionFilter.zpp_pool, D.ZPP_InteractionFilter.zpp_pool = this.zpp_inner.filter.next, this.zpp_inner.filter.next = null), null) : (this.zpp_inner.immutable_midstep("Shape::filter"), this.zpp_inner.setFilter(d.zpp_inner), this.zpp_inner.filter.wrapper());
        this.zpp_inner_i.insert_cbtype(H.ZPP_CbType.ANY_SHAPE.zpp_inner)
    };
    j["nape.shape.Circle"] = L.Circle;
    L.Circle.__name__ = ["nape", "shape", "Circle"];
    L.Circle.__super__ = L.Shape;
    L.Circle.prototype =
        C(L.Shape.prototype, {
            __class__: L.Circle,
            __properties__: C(L.Shape.prototype.__properties__, {
                set_radius: "set_radius",
                get_radius: "get_radius"
            })
        });
    L.Edge = function() {
        this.zpp_inner = null
    };
    j["nape.shape.Edge"] = L.Edge;
    L.Edge.__name__ = ["nape", "shape", "Edge"];
    L.Edge.prototype = {
        toString: function() {
            if (null == this.zpp_inner.polygon) return "Edge(object-pooled)";
            if (null == this.zpp_inner.polygon.body) return this.zpp_inner.polygon.validate_laxi(), "{ localNormal : " + ("{ x: " + this.zpp_inner.lnormx + " y: " + this.zpp_inner.lnormy +
                " }") + " }";
            this.zpp_inner.polygon.validate_gaxi();
            return "{ localNormal : " + ("{ x: " + this.zpp_inner.lnormx + " y: " + this.zpp_inner.lnormy + " }") + " worldNormal : " + ("{ x: " + this.zpp_inner.gnormx + " y: " + this.zpp_inner.gnormy + " }") + " }"
        },
        __class__: L.Edge
    };
    L.EdgeIterator = function() {
        this.zpp_next = null;
        this.zpp_critical = !1;
        this.zpp_i = 0;
        this.zpp_inner = null
    };
    j["nape.shape.EdgeIterator"] = L.EdgeIterator;
    L.EdgeIterator.__name__ = ["nape", "shape", "EdgeIterator"];
    L.EdgeIterator.get = function(a) {
        var b = null == L.EdgeIterator.zpp_pool ?
            function() {
                e.ZPP_EdgeList.internal = !0;
                var a = new L.EdgeIterator;
                e.ZPP_EdgeList.internal = !1;
                return a
            }(this) : function() {
                var a = L.EdgeIterator.zpp_pool;
                L.EdgeIterator.zpp_pool = a.zpp_next;
                return a
            }(this);
        b.zpp_i = 0;
        b.zpp_inner = a;
        b.zpp_critical = !1;
        return b
    };
    L.EdgeIterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.get_length();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = L.EdgeIterator.zpp_pool;
            L.EdgeIterator.zpp_pool = this;
            this.zpp_inner = null;
            return !1
        },
        __class__: L.EdgeIterator
    };
    L.EdgeList = function() {
        this.zpp_inner = null;
        this.zpp_inner = new e.ZPP_EdgeList;
        this.zpp_inner.outer = this
    };
    j["nape.shape.EdgeList"] = L.EdgeList;
    L.EdgeList.__name__ = ["nape", "shape", "EdgeList"];
    L.EdgeList.prototype = {
        toString: function() {
            var a = "[",
                b = !0,
                c;
            this.zpp_inner.valmod();
            for (c = L.EdgeIterator.get(this); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_inner.valmod();
            return L.EdgeIterator.get(this)
        },
        at: function(a) {
            this.zpp_inner.valmod();
            this.zpp_inner.reverse_flag && (a = a == this.get_length() - 1 ? a : this.get_length() - 2 - a);
            if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
            else
                for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
            return this.zpp_inner.at_ite.elt.wrapper()
        },
        get_length: function() {
            this.zpp_inner.valmod();
            this.zpp_inner.zip_length &&
                (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
            return this.zpp_inner.user_length
        },
        __class__: L.EdgeList,
        __properties__: {
            get_length: "get_length"
        }
    };
    L.Polygon = function(a, b, c) {
        this.zpp_inner_zn = null;
        L.Shape.call(this);
        this.zpp_inner_zn = new V.ZPP_Polygon;
        this.zpp_inner_zn.outer = this;
        this.zpp_inner_zn.outer_zn = this;
        this.zpp_inner_i = this.zpp_inner = this.zpp_inner_zn;
        this.zpp_inner_i.outer_i = this;
        if (ba.__instanceof(a, Array))
            for (var d = a, f = 0; f < d.length;) {
                var e = d[f];
                ++f;
                var l = e;
                null == this.zpp_inner_zn.wrap_lverts && this.zpp_inner_zn.getlverts();
                this.zpp_inner_zn.wrap_lverts.push(function(a) {
                    return u.Vec2.get(function() {
                        l.zpp_inner.validate();
                        return l.zpp_inner.x
                    }(a), function() {
                        l.zpp_inner.validate();
                        return l.zpp_inner.y
                    }(a), !1)
                }(this))
            } else if (ba.__instanceof(a, u.Vec2List))
                for (d = a.iterator(); d.hasNext();) l = d.next(), null == this.zpp_inner_zn.wrap_lverts && this.zpp_inner_zn.getlverts(), this.zpp_inner_zn.wrap_lverts.push(function(a) {
                    return u.Vec2.get(function() {
                        l.zpp_inner.validate();
                        return l.zpp_inner.x
                    }(a), function() {
                        l.zpp_inner.validate();
                        return l.zpp_inner.y
                    }(a), !1)
                }(this));
            else if (ba.__instanceof(a, u.GeomPoly) && (d = a.zpp_inner.vertices, null != d)) {
            e = d;
            do l = u.Vec2.get(e.x, e.y, null), e = e.next, null == this.zpp_inner_zn.wrap_lverts && this.zpp_inner_zn.getlverts(), this.zpp_inner_zn.wrap_lverts.push(function(a) {
                return u.Vec2.get(function() {
                    l.zpp_inner.validate();
                    return l.zpp_inner.x
                }(a), function() {
                    l.zpp_inner.validate();
                    return l.zpp_inner.y
                }(a), !1)
            }(this)), l.dispose(); while (e != d)
        }
        if (ba.__instanceof(a,
                Array)) {
            d = a;
            for (e = 0; e < d.length;) {
                a = d[e];
                if (f = a.zpp_inner.weak) a.dispose(), f = !0;
                f ? d.splice(e, 1) : e++
            }
        } else if (ba.__instanceof(a, u.Vec2List)) {
            d = a;
            null != d.zpp_inner._validate && d.zpp_inner._validate();
            d = d.zpp_inner.inner;
            e = null;
            for (a = d.head; null != a;) l = a.elt, l.outer.zpp_inner.weak ? (a = d.erase(e), l.outer.zpp_inner.weak ? (l.outer.dispose(), !0) : !1) : (e = a, a = a.next)
        }
        null == b ? (null == O.ZPP_Material.zpp_pool ? this.zpp_inner.material = new O.ZPP_Material : (this.zpp_inner.material = O.ZPP_Material.zpp_pool, O.ZPP_Material.zpp_pool =
            this.zpp_inner.material.next, this.zpp_inner.material.next = null), null) : (this.zpp_inner.immutable_midstep("Shape::material"), this.zpp_inner.setMaterial(b.zpp_inner), this.zpp_inner.material.wrapper());
        null == c ? (null == D.ZPP_InteractionFilter.zpp_pool ? this.zpp_inner.filter = new D.ZPP_InteractionFilter : (this.zpp_inner.filter = D.ZPP_InteractionFilter.zpp_pool, D.ZPP_InteractionFilter.zpp_pool = this.zpp_inner.filter.next, this.zpp_inner.filter.next = null), null) : (this.zpp_inner.immutable_midstep("Shape::filter"),
            this.zpp_inner.setFilter(c.zpp_inner), this.zpp_inner.filter.wrapper());
        this.zpp_inner_i.insert_cbtype(H.ZPP_CbType.ANY_SHAPE.zpp_inner)
    };
    j["nape.shape.Polygon"] = L.Polygon;
    L.Polygon.__name__ = ["nape", "shape", "Polygon"];
    L.Polygon.rect = function(a, b, c, d, f) {
        null == f && (f = !1);
        return [u.Vec2.get(a, b, f), u.Vec2.get(a + c, b, f), u.Vec2.get(a + c, b + d, f), u.Vec2.get(a, b + d, f)]
    };
    L.Polygon.__super__ = L.Shape;
    L.Polygon.prototype = C(L.Shape.prototype, {
        __class__: L.Polygon,
        __properties__: C(L.Shape.prototype.__properties__, {
            get_localVerts: "get_localVerts"
        })
    });
    L.ShapeIterator = function() {
        this.zpp_next = null;
        this.zpp_critical = !1;
        this.zpp_i = 0;
        this.zpp_inner = null
    };
    j["nape.shape.ShapeIterator"] = L.ShapeIterator;
    L.ShapeIterator.__name__ = ["nape", "shape", "ShapeIterator"];
    L.ShapeIterator.get = function(a) {
        var b = null == L.ShapeIterator.zpp_pool ? function() {
            e.ZPP_ShapeList.internal = !0;
            var a = new L.ShapeIterator;
            e.ZPP_ShapeList.internal = !1;
            return a
        }(this) : function() {
            var a = L.ShapeIterator.zpp_pool;
            L.ShapeIterator.zpp_pool = a.zpp_next;
            return a
        }(this);
        b.zpp_i = 0;
        b.zpp_inner = a;
        b.zpp_critical = !1;
        return b
    };
    L.ShapeIterator.prototype = {
        next: function() {
            this.zpp_critical = !1;
            return this.zpp_inner.at(this.zpp_i++)
        },
        hasNext: function() {
            this.zpp_inner.zpp_inner.valmod();
            var a = this.zpp_inner.get_length();
            this.zpp_critical = !0;
            if (this.zpp_i < a) return !0;
            this.zpp_next = L.ShapeIterator.zpp_pool;
            L.ShapeIterator.zpp_pool = this;
            this.zpp_inner = null;
            return !1
        },
        __class__: L.ShapeIterator
    };
    L.ShapeList = function() {
        this.zpp_inner = null;
        this.zpp_inner = new e.ZPP_ShapeList;
        this.zpp_inner.outer = this
    };
    j["nape.shape.ShapeList"] =
        L.ShapeList;
    L.ShapeList.__name__ = ["nape", "shape", "ShapeList"];
    L.ShapeList.prototype = {
        toString: function() {
            var a = "[",
                b = !0,
                c;
            this.zpp_inner.valmod();
            for (c = L.ShapeIterator.get(this); c.hasNext();) {
                var d = c.next();
                b || (a += ",");
                a += null == d ? "NULL" : d.toString();
                b = !1
            }
            return a + "]"
        },
        iterator: function() {
            this.zpp_inner.valmod();
            return L.ShapeIterator.get(this)
        },
        clear: function() {
            if (this.zpp_inner.reverse_flag)
                for (; null != this.zpp_inner.inner.head;) this.pop();
            else
                for (; null != this.zpp_inner.inner.head;) this.shift()
        },
        remove: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b;
            b = !1;
            for (var c = this.zpp_inner.inner.head; null != c;) {
                if (c.elt == a.zpp_inner) {
                    b = !0;
                    break
                }
                c = c.next
            }
            b && (null != this.zpp_inner.subber && this.zpp_inner.subber(a), this.zpp_inner.dontremove || this.zpp_inner.inner.remove(a.zpp_inner), this.zpp_inner.invalidate());
            return b
        },
        add: function(a) {
            return this.zpp_inner.reverse_flag ? this.push(a) : this.unshift(a)
        },
        shift: function() {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var a = null;
            if (this.zpp_inner.reverse_flag) {
                null !=
                    this.zpp_inner.at_ite && null == this.zpp_inner.at_ite.next && (this.zpp_inner.at_ite = null);
                var b = 1 == this.get_length() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 2),
                    a = null == b ? this.zpp_inner.inner.head.elt : b.next.elt,
                    c = a.outer;
                null != this.zpp_inner.subber && this.zpp_inner.subber(c);
                this.zpp_inner.dontremove || this.zpp_inner.inner.erase(b)
            } else a = this.zpp_inner.inner.head.elt, c = a.outer, null != this.zpp_inner.subber && this.zpp_inner.subber(c), this.zpp_inner.dontremove || this.zpp_inner.inner.pop();
            this.zpp_inner.invalidate();
            return c = a.outer
        },
        pop: function() {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var a = null;
            if (this.zpp_inner.reverse_flag) {
                var a = this.zpp_inner.inner.head.elt,
                    b = a.outer;
                null != this.zpp_inner.subber && this.zpp_inner.subber(b);
                this.zpp_inner.dontremove || this.zpp_inner.inner.pop()
            } else {
                null != this.zpp_inner.at_ite && null == this.zpp_inner.at_ite.next && (this.zpp_inner.at_ite = null);
                var c = 1 == this.get_length() ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 2),
                    a = null == c ? this.zpp_inner.inner.head.elt :
                    c.next.elt,
                    b = a.outer;
                null != this.zpp_inner.subber && this.zpp_inner.subber(b);
                this.zpp_inner.dontremove || this.zpp_inner.inner.erase(c)
            }
            this.zpp_inner.invalidate();
            return b = a.outer
        },
        unshift: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ? (null == this.zpp_inner.push_ite && (this.zpp_inner.push_ite = null == this.zpp_inner.inner.head ? null : this.zpp_inner.inner.iterator_at(this.get_length() - 1)), this.zpp_inner.push_ite =
                this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)) : this.zpp_inner.inner.add(a.zpp_inner), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        push: function(a) {
            this.zpp_inner.modify_test();
            this.zpp_inner.valmod();
            var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
            b && (this.zpp_inner.reverse_flag ? this.zpp_inner.inner.add(a.zpp_inner) : (null == this.zpp_inner.push_ite && (this.zpp_inner.push_ite = null == this.zpp_inner.inner.head ? null : this.zpp_inner.inner.iterator_at(this.get_length() -
                1)), this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite, a.zpp_inner)), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
            return b
        },
        at: function(a) {
            this.zpp_inner.valmod();
            this.zpp_inner.reverse_flag && (a = this.get_length() - 1 - a);
            if (a < this.zpp_inner.at_index || null == this.zpp_inner.at_ite) this.zpp_inner.at_index = a, this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(a);
            else
                for (; this.zpp_inner.at_index != a;) this.zpp_inner.at_index++, this.zpp_inner.at_ite =
                    this.zpp_inner.at_ite.next;
            return this.zpp_inner.at_ite.elt.outer
        },
        get_length: function() {
            this.zpp_inner.valmod();
            this.zpp_inner.zip_length && (this.zpp_inner.zip_length = !1, this.zpp_inner.user_length = this.zpp_inner.inner.length);
            return this.zpp_inner.user_length
        },
        __class__: L.ShapeList,
        __properties__: {
            get_length: "get_length"
        }
    };
    L.ShapeType = function() {};
    j["nape.shape.ShapeType"] = L.ShapeType;
    L.ShapeType.__name__ = ["nape", "shape", "ShapeType"];
    L.ShapeType.__properties__ = {
        get_POLYGON: "get_POLYGON",
        get_CIRCLE: "get_CIRCLE"
    };
    L.ShapeType.prototype = {
        toString: function() {
            var a;
            null == e.ZPP_Flags.ShapeType_CIRCLE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.ShapeType_CIRCLE = new L.ShapeType, e.ZPP_Flags.internal = !1);
            this == e.ZPP_Flags.ShapeType_CIRCLE ? a = "CIRCLE" : (null == e.ZPP_Flags.ShapeType_POLYGON && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.ShapeType_POLYGON = new L.ShapeType, e.ZPP_Flags.internal = !1), a = this == e.ZPP_Flags.ShapeType_POLYGON ? "POLYGON" : "");
            return a
        },
        __class__: L.ShapeType
    };
    L.ValidationResult = function() {};
    j["nape.shape.ValidationResult"] =
        L.ValidationResult;
    L.ValidationResult.__name__ = ["nape", "shape", "ValidationResult"];
    L.ValidationResult.__properties__ = {
        get_SELF_INTERSECTING: "get_SELF_INTERSECTING",
        get_CONCAVE: "get_CONCAVE",
        get_DEGENERATE: "get_DEGENERATE",
        get_VALID: "get_VALID"
    };
    L.ValidationResult.prototype = {
        toString: function() {
            var a;
            null == e.ZPP_Flags.ValidationResult_VALID && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.ValidationResult_VALID = new L.ValidationResult, e.ZPP_Flags.internal = !1);
            this == e.ZPP_Flags.ValidationResult_VALID ? a = "VALID" :
                (null == e.ZPP_Flags.ValidationResult_DEGENERATE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.ValidationResult_DEGENERATE = new L.ValidationResult, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.ValidationResult_DEGENERATE ? a = "DEGENERATE" : (null == e.ZPP_Flags.ValidationResult_CONCAVE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.ValidationResult_CONCAVE = new L.ValidationResult, e.ZPP_Flags.internal = !1), this == e.ZPP_Flags.ValidationResult_CONCAVE ? a = "CONCAVE" : (null == e.ZPP_Flags.ValidationResult_SELF_INTERSECTING && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.ValidationResult_SELF_INTERSECTING = new L.ValidationResult, e.ZPP_Flags.internal = !1), a = this == e.ZPP_Flags.ValidationResult_SELF_INTERSECTING ? "SELF_INTERSECTING" : "")));
            return a
        },
        __class__: L.ValidationResult
    };
    ra = {
        Broadphase: function() {}
    };
    j["nape.space.Broadphase"] = ra.Broadphase;
    ra.Broadphase.__name__ = ["nape", "space", "Broadphase"];
    ra.Broadphase.__properties__ = {
        get_SWEEP_AND_PRUNE: "get_SWEEP_AND_PRUNE",
        get_DYNAMIC_AABB_TREE: "get_DYNAMIC_AABB_TREE"
    };
    ra.Broadphase.prototype = {
        toString: function() {
            var a;
            null == e.ZPP_Flags.Broadphase_DYNAMIC_AABB_TREE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.Broadphase_DYNAMIC_AABB_TREE = new ra.Broadphase, e.ZPP_Flags.internal = !1);
            this == e.ZPP_Flags.Broadphase_DYNAMIC_AABB_TREE ? a = "DYNAMIC_AABB_TREE" : (null == e.ZPP_Flags.Broadphase_SWEEP_AND_PRUNE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.Broadphase_SWEEP_AND_PRUNE = new ra.Broadphase, e.ZPP_Flags.internal = !1), a = this == e.ZPP_Flags.Broadphase_SWEEP_AND_PRUNE ? "SWEEP_AND_PRUNE" : "");
            return a
        },
        __class__: ra.Broadphase
    };
    ra.Space = function(a,
        b) {
        this.zpp_inner = null;
        this.zpp_inner = new A.ZPP_Space(null == a ? null : a.zpp_inner, b);
        this.zpp_inner.outer = this;
        null != a && (a.zpp_inner.weak ? (a.dispose(), !0) : !1)
    };
    j["nape.space.Space"] = ra.Space;
    ra.Space.__name__ = ["nape", "space", "Space"];
    ra.Space.prototype = {
        step: function(a, b, c) {
            null == c && (c = 10);
            null == b && (b = 10);
            this.zpp_inner.step(a, b, c)
        },
        clear: function() {
            this.zpp_inner.clear()
        },
        get_gravity: function() {
            null == this.zpp_inner.wrap_gravity && this.zpp_inner.getgravity();
            return this.zpp_inner.wrap_gravity
        },
        __class__: ra.Space,
        __properties__: {
            set_gravity: "set_gravity",
            get_gravity: "get_gravity",
            get_compounds: "get_compounds",
            get_bodies: "get_bodies",
            get_constraints: "get_constraints",
            get_listeners: "get_listeners"
        }
    };
    e = void 0;
    H = void 0;
    M = void 0;
    D = void 0;
    q = void 0;
    O = void 0;
    V = void 0;
    A = void 0;
    ha = void 0;
    ja = void 0;
    ha = function() {};
    j["zpp_nape.ZPP_Const"] = ha;
    ha.__name__ = ["zpp_nape", "ZPP_Const"];
    ja = function() {};
    j["zpp_nape.ZPP_ID"] = ja;
    ja.__name__ = ["zpp_nape", "ZPP_ID"];
    ja.Constraint = function() {
        return ja._Constraint++
    };
    ja.Interactor = function() {
        return ja._Interactor++
    };
    ja.CbType = function() {
        return ja._CbType++
    };
    ja.CbSet = function() {
        return ja._CbSet++
    };
    ja.Listener = function() {
        return ja._Listener++
    };
    H = {
        ZPP_Callback: function() {
            this.body = this.constraint = null;
            this.pre_swapped = !1;
            this.int1 = this.int2 = this.set = this.wrap_arbiters = this.pre_arbiter = null;
            this.length = 0;
            this.listener = this.next = this.prev = null;
            this.event = 0;
            this.outer_body = this.outer_con = this.outer_int = null;
            this.length = 0
        }
    };
    j["zpp_nape.callbacks.ZPP_Callback"] = H.ZPP_Callback;
    H.ZPP_Callback.__name__ = ["zpp_nape", "callbacks",
        "ZPP_Callback"
    ];
    H.ZPP_Callback.prototype = {
        empty: function() {
            return null == this.next
        },
        pop: function() {
            var a = this.next;
            this.next = a.next;
            null == this.next ? this.prev = null : this.next.prev = null;
            this.length--;
            return a
        },
        push: function(a) {
            null != this.prev ? this.prev.next = a : this.next = a;
            a.prev = this.prev;
            a.next = null;
            this.prev = a;
            this.length++
        },
        wrapper_int: function() {
            null == this.outer_int && (this.outer_int = new v.InteractionCallback, this.outer_int.zpp_inner = this);
            null == this.wrap_arbiters ? this.wrap_arbiters = e.ZPP_ArbiterList.get(this.set.arbiters, !0) : this.wrap_arbiters.zpp_inner.inner = this.set.arbiters;
            this.wrap_arbiters.zpp_inner.zip_length = !0;
            this.wrap_arbiters.zpp_inner.at_ite = null;
            return this.outer_int
        },
        wrapper_con: function() {
            null == this.outer_con && (this.outer_con = new v.ConstraintCallback, this.outer_con.zpp_inner = this);
            return this.outer_con
        },
        wrapper_body: function() {
            null == this.outer_body && (this.outer_body = new v.BodyCallback, this.outer_body.zpp_inner = this);
            return this.outer_body
        },
        __class__: H.ZPP_Callback
    };
    H.ZPP_CbSet = function() {
        this.interactors =
            this.constraints = null;
        this.zip_conlisteners = !1;
        this.conlisteners = null;
        this.zip_bodylisteners = !1;
        this.bodylisteners = null;
        this.zip_listeners = !1;
        this.manager = this.cbpairs = this.listeners = null;
        this.id = 0;
        this.next = null;
        this.count = 0;
        this.cbTypes = null;
        this.cbTypes = new e.ZNPList_ZPP_CbType;
        this.listeners = new e.ZNPList_ZPP_InteractionListener;
        this.zip_listeners = !0;
        this.bodylisteners = new e.ZNPList_ZPP_BodyListener;
        this.zip_bodylisteners = !0;
        this.conlisteners = new e.ZNPList_ZPP_ConstraintListener;
        this.zip_conlisteners = !0;
        this.constraints = new e.ZNPList_ZPP_Constraint;
        this.interactors = new e.ZNPList_ZPP_Interactor;
        this.id = ja.CbSet();
        this.cbpairs = new e.ZNPList_ZPP_CbSetPair
    };
    j["zpp_nape.callbacks.ZPP_CbSet"] = H.ZPP_CbSet;
    H.ZPP_CbSet.__name__ = ["zpp_nape", "callbacks", "ZPP_CbSet"];
    H.ZPP_CbSet.setlt = function(a, b) {
        for (var c = a.cbTypes.head, d = b.cbTypes.head; null != c && null != d;) {
            var f = c.elt,
                e = d.elt;
            if (f.id < e.id) return !0;
            if (e.id < f.id) return !1;
            c = c.next;
            d = d.next
        }
        return null != d && null == c
    };
    H.ZPP_CbSet.get = function(a) {
        var b;
        null == H.ZPP_CbSet.zpp_pool ?
            b = new H.ZPP_CbSet : (b = H.ZPP_CbSet.zpp_pool, H.ZPP_CbSet.zpp_pool = b.next, b.next = null);
        null;
        for (var c = null, a = a.head; null != a;) {
            var d = a.elt,
                c = b.cbTypes.insert(c, d);
            d.cbsets.add(b);
            a = a.next
        }
        return b
    };
    H.ZPP_CbSet.single_intersection = function(a, b, c) {
        return a.manager.pair(a, b).single_intersection(c)
    };
    H.ZPP_CbSet.find_all = function(a, b, c, d) {
        a.manager.pair(a, b).forall(c, d)
    };
    H.ZPP_CbSet.prototype = {
        free: function() {
            this.listeners.clear();
            this.zip_listeners = !0;
            this.bodylisteners.clear();
            this.zip_bodylisteners = !0;
            this.conlisteners.clear();
            for (this.zip_conlisteners = !0; null != this.cbTypes.head;) this.cbTypes.pop_unsafe().cbsets.remove(this)
        },
        validate: function() {
            this.zip_listeners && (this.zip_listeners = !1, this.realvalidate_listeners());
            this.zip_bodylisteners && (this.zip_bodylisteners = !1, this.realvalidate_bodylisteners());
            this.zip_conlisteners && (this.zip_conlisteners = !1, this.realvalidate_conlisteners())
        },
        realvalidate_conlisteners: function() {
            this.conlisteners.clear();
            for (var a = this.cbTypes.head; null != a;) {
                for (var b =
                        null, c = this.conlisteners.head, d = a.elt.conlisteners.head; null != d;) {
                    var f = d.elt;
                    null != c && c.elt == f ? (d = d.next, b = c, c = c.next) : null == c || H.ZPP_Listener.setlt(f, c.elt) ? (!f.options.excluded(this.cbTypes) && f.space == this.manager.space && (b = this.conlisteners.inlined_insert(b, f)), d = d.next) : (b = c, c = c.next)
                }
                a = a.next
            }
        },
        realvalidate_bodylisteners: function() {
            this.bodylisteners.clear();
            for (var a = this.cbTypes.head; null != a;) {
                for (var b = null, c = this.bodylisteners.head, d = a.elt.bodylisteners.head; null != d;) {
                    var f = d.elt;
                    null !=
                        c && c.elt == f ? (d = d.next, b = c, c = c.next) : null == c || H.ZPP_Listener.setlt(f, c.elt) ? (!f.options.excluded(this.cbTypes) && f.space == this.manager.space && (b = this.bodylisteners.inlined_insert(b, f)), d = d.next) : (b = c, c = c.next)
                }
                a = a.next
            }
        },
        realvalidate_listeners: function() {
            this.listeners.clear();
            for (var a = this.cbTypes.head; null != a;) {
                for (var b = null, c = this.listeners.head, d = a.elt.listeners.head; null != d;) {
                    var f = d.elt;
                    null != c && c.elt == f ? (d = d.next, b = c, c = c.next) : null == c || H.ZPP_Listener.setlt(f, c.elt) ? (f.space == this.manager.space &&
                        (b = this.listeners.inlined_insert(b, f)), d = d.next) : (b = c, c = c.next)
                }
                a = a.next
            }
        },
        invalidate_pairs: function() {
            for (var a = this.cbpairs.head; null != a;) a.elt.zip_listeners = !0, a = a.next
        },
        __class__: H.ZPP_CbSet
    };
    H.ZPP_CbSetPair = function() {
        this.listeners = null;
        this.zip_listeners = !1;
        this.a = this.b = this.next = null;
        this.listeners = new e.ZNPList_ZPP_InteractionListener
    };
    j["zpp_nape.callbacks.ZPP_CbSetPair"] = H.ZPP_CbSetPair;
    H.ZPP_CbSetPair.__name__ = ["zpp_nape", "callbacks", "ZPP_CbSetPair"];
    H.ZPP_CbSetPair.get = function(a, b) {
        var c;
        null == H.ZPP_CbSetPair.zpp_pool ? c = new H.ZPP_CbSetPair : (c = H.ZPP_CbSetPair.zpp_pool, H.ZPP_CbSetPair.zpp_pool = c.next, c.next = null);
        c.zip_listeners = !0;
        H.ZPP_CbSet.setlt(a, b) ? (c.a = a, c.b = b) : (c.a = b, c.b = a);
        return c
    };
    H.ZPP_CbSetPair.setlt = function(a, b) {
        return H.ZPP_CbSet.setlt(a.a, b.a) || a.a == b.a && H.ZPP_CbSet.setlt(a.b, b.b)
    };
    H.ZPP_CbSetPair.prototype = {
        forall: function(a, b) {
            for (var c = this.listeners.head; null != c;) {
                var d = c.elt;
                d.event == a && b(d);
                c = c.next
            }
        },
        single_intersection: function(a) {
            var b = this.listeners.head;
            return null != b && b.elt == a && null == b.next
        },
        __validate: function() {
            this.listeners.clear();
            for (var a = this.a.listeners.head, b = this.b.listeners.head; null != a && null != b;) {
                var c = a.elt,
                    d = b.elt;
                c == d ? ((c.options1.compatible(this.a.cbTypes) && c.options2.compatible(this.b.cbTypes) || c.options2.compatible(this.a.cbTypes) && c.options1.compatible(this.b.cbTypes)) && this.listeners.add(c), a = a.next, b = b.next) : c.precedence > d.precedence || c.precedence == d.precedence && c.id > d.id ? a = a.next : b = b.next
            }
        },
        __class__: H.ZPP_CbSetPair
    };
    e = {
        ZNPList_ZPP_InteractionListener: function() {
            this.length =
                0;
            this.modified = this.pushmod = !1;
            this.head = null
        }
    };
    j["zpp_nape.util.ZNPList_ZPP_InteractionListener"] = e.ZNPList_ZPP_InteractionListener;
    e.ZNPList_ZPP_InteractionListener.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_InteractionListener"];
    e.ZNPList_ZPP_InteractionListener.prototype = {
        inlined_clear: function() {
            for (; null != this.head;) this.inlined_pop();
            this.pushmod = !0
        },
        clear: function() {
            for (; null != this.head;) this.inlined_pop();
            this.pushmod = !0
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c =
                b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_InteractionListener.zpp_pool;
            e.ZNPNode_ZPP_InteractionListener.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop: function() {
            var a = this.head;
            this.head =
                a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_InteractionListener.zpp_pool;
            e.ZNPNode_ZPP_InteractionListener.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        inlined_insert: function(a, b) {
            var c;
            null == e.ZNPNode_ZPP_InteractionListener.zpp_pool ? c = new e.ZNPNode_ZPP_InteractionListener : (c = e.ZNPNode_ZPP_InteractionListener.zpp_pool, e.ZNPNode_ZPP_InteractionListener.zpp_pool = c.next, c.next = null);
            null;
            c.elt = b;
            null == a ? (c.next = this.head, this.head = c) : (c.next = a.next, a.next = c);
            this.pushmod =
                this.modified = !0;
            this.length++;
            return c
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_InteractionListener.zpp_pool ? b = new e.ZNPNode_ZPP_InteractionListener : (b = e.ZNPNode_ZPP_InteractionListener.zpp_pool, e.ZNPNode_ZPP_InteractionListener.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_InteractionListener
    };
    e.ZNPList_ZPP_BodyListener = function() {
        this.length = 0;
        this.modified =
            this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_BodyListener"] = e.ZNPList_ZPP_BodyListener;
    e.ZNPList_ZPP_BodyListener.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_BodyListener"];
    e.ZNPList_ZPP_BodyListener.prototype = {
        clear: function() {
            for (; null != this.head;) this.inlined_pop();
            this.pushmod = !0
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_BodyListener.zpp_pool;
            e.ZNPNode_ZPP_BodyListener.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_BodyListener.zpp_pool;
            e.ZNPNode_ZPP_BodyListener.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        inlined_insert: function(a,
            b) {
            var c;
            null == e.ZNPNode_ZPP_BodyListener.zpp_pool ? c = new e.ZNPNode_ZPP_BodyListener : (c = e.ZNPNode_ZPP_BodyListener.zpp_pool, e.ZNPNode_ZPP_BodyListener.zpp_pool = c.next, c.next = null);
            null;
            c.elt = b;
            null == a ? (c.next = this.head, this.head = c) : (c.next = a.next, a.next = c);
            this.pushmod = this.modified = !0;
            this.length++;
            return c
        },
        __class__: e.ZNPList_ZPP_BodyListener
    };
    e.ZNPList_ZPP_ConstraintListener = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_ConstraintListener"] =
        e.ZNPList_ZPP_ConstraintListener;
    e.ZNPList_ZPP_ConstraintListener.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_ConstraintListener"];
    e.ZNPList_ZPP_ConstraintListener.prototype = {
        clear: function() {
            for (; null != this.head;) this.inlined_pop();
            this.pushmod = !0
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_ConstraintListener.zpp_pool;
            e.ZNPNode_ZPP_ConstraintListener.zpp_pool =
                a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_ConstraintListener.zpp_pool;
            e.ZNPNode_ZPP_ConstraintListener.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        inlined_insert: function(a,
            b) {
            var c;
            null == e.ZNPNode_ZPP_ConstraintListener.zpp_pool ? c = new e.ZNPNode_ZPP_ConstraintListener : (c = e.ZNPNode_ZPP_ConstraintListener.zpp_pool, e.ZNPNode_ZPP_ConstraintListener.zpp_pool = c.next, c.next = null);
            null;
            c.elt = b;
            null == a ? (c.next = this.head, this.head = c) : (c.next = a.next, a.next = c);
            this.pushmod = this.modified = !0;
            this.length++;
            return c
        },
        __class__: e.ZNPList_ZPP_ConstraintListener
    };
    e.ZNPList_ZPP_Constraint = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_Constraint"] =
        e.ZNPList_ZPP_Constraint;
    e.ZNPList_ZPP_Constraint.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Constraint"];
    e.ZNPList_ZPP_Constraint.prototype = {
        iterator_at: function(a) {
            for (var b = this.head; 0 < a-- && null != b;) b = b.next;
            return b
        },
        clear: function() {
            for (; null != this.head;) this.inlined_pop();
            this.pushmod = !0
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Constraint.zpp_pool;
            e.ZNPNode_ZPP_Constraint.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        erase: function(a) {
            return this.inlined_erase(a)
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head =
                a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Constraint.zpp_pool;
            e.ZNPNode_ZPP_Constraint.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_insert: function(a, b) {
            var c;
            null == e.ZNPNode_ZPP_Constraint.zpp_pool ? c = new e.ZNPNode_ZPP_Constraint : (c = e.ZNPNode_ZPP_Constraint.zpp_pool, e.ZNPNode_ZPP_Constraint.zpp_pool = c.next, c.next = null);
            null;
            c.elt = b;
            null == a ? (c.next = this.head, this.head = c) : (c.next = a.next, a.next = c);
            this.pushmod = this.modified = !0;
            this.length++;
            return c
        },
        insert: function(a, b) {
            return this.inlined_insert(a, b)
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_Constraint.zpp_pool ? b = new e.ZNPNode_ZPP_Constraint : (b = e.ZNPNode_ZPP_Constraint.zpp_pool, e.ZNPNode_ZPP_Constraint.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_Constraint
    };
    e.ZNPList_ZPP_Interactor = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_Interactor"] = e.ZNPList_ZPP_Interactor;
    e.ZNPList_ZPP_Interactor.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Interactor"];
    e.ZNPList_ZPP_Interactor.prototype = {
        iterator_at: function(a) {
            for (var b = this.head; 0 < a-- && null != b;) b = b.next;
            return b
        },
        inlined_clear: function() {
            for (; null != this.head;) this.inlined_pop();
            this.pushmod = !0
        },
        clear: function() {
            for (; null != this.head;) this.inlined_pop();
            this.pushmod = !0
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head =
                c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Interactor.zpp_pool;
            e.ZNPNode_ZPP_Interactor.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Interactor.zpp_pool;
            e.ZNPNode_ZPP_Interactor.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_Interactor.zpp_pool ? b = new e.ZNPNode_ZPP_Interactor : (b = e.ZNPNode_ZPP_Interactor.zpp_pool, e.ZNPNode_ZPP_Interactor.zpp_pool = b.next, b.next = null);
            null;
            b.elt =
                a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_Interactor
    };
    e.ZNPList_ZPP_CbSet = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_CbSet"] = e.ZNPList_ZPP_CbSet;
    e.ZNPList_ZPP_CbSet.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_CbSet"];
    e.ZNPList_ZPP_CbSet.prototype = {
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_CbSet.zpp_pool;
            e.ZNPNode_ZPP_CbSet.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_CbSet.zpp_pool;
            e.ZNPNode_ZPP_CbSet.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_CbSet.zpp_pool ? b = new e.ZNPNode_ZPP_CbSet : (b = e.ZNPNode_ZPP_CbSet.zpp_pool, e.ZNPNode_ZPP_CbSet.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_CbSet
    };
    H.ZPP_CbType = function() {
        this.cbsets = this.listeners = this.bodylisteners = this.conlisteners = null;
        this.id = 0;
        this.outer = this.userData = null;
        this.id = ja.CbType();
        this.listeners = new e.ZNPList_ZPP_InteractionListener;
        this.bodylisteners = new e.ZNPList_ZPP_BodyListener;
        this.conlisteners = new e.ZNPList_ZPP_ConstraintListener;
        this.constraints = new e.ZNPList_ZPP_Constraint;
        this.interactors = new e.ZNPList_ZPP_Interactor;
        this.cbsets = new e.ZNPList_ZPP_CbSet
    };
    j["zpp_nape.callbacks.ZPP_CbType"] =
        H.ZPP_CbType;
    H.ZPP_CbType.__name__ = ["zpp_nape", "callbacks", "ZPP_CbType"];
    H.ZPP_CbType.prototype = {
        invalidateconstraint: function() {
            for (var a = this.cbsets.head; null != a;) a.elt.zip_conlisteners = !0, a = a.next
        },
        addconstraint: function(a) {
            for (var b = null, c = this.conlisteners.head; null != c;) {
                var d = c.elt;
                if (a.precedence > d.precedence || a.precedence == d.precedence && a.id > d.id) break;
                b = c;
                c = c.next
            }
            this.conlisteners.inlined_insert(b, a);
            this.invalidateconstraint()
        },
        invalidatebody: function() {
            for (var a = this.cbsets.head; null !=
                a;) a.elt.zip_bodylisteners = !0, a = a.next
        },
        addbody: function(a) {
            for (var b = null, c = this.bodylisteners.head; null != c;) {
                var d = c.elt;
                if (a.precedence > d.precedence || a.precedence == d.precedence && a.id > d.id) break;
                b = c;
                c = c.next
            }
            this.bodylisteners.inlined_insert(b, a);
            this.invalidatebody()
        },
        invalidateint: function() {
            for (var a = this.cbsets.head; null != a;) {
                var b = a.elt;
                b.zip_listeners = !0;
                b.invalidate_pairs();
                a = a.next
            }
        },
        addint: function(a) {
            for (var b = null, c = this.listeners.head; null != c;) {
                var d = c.elt;
                if (a.precedence > d.precedence ||
                    a.precedence == d.precedence && a.id > d.id) break;
                b = c;
                c = c.next
            }
            this.listeners.inlined_insert(b, a);
            this.invalidateint()
        },
        __class__: H.ZPP_CbType
    };
    H.ZPP_Listener = function() {
        this.body = this.constraint = this.interaction = this.space = null;
        this.id = this.type = this.event = this.precedence = 0;
        this.outer = null;
        this.id = ja.Listener()
    };
    j["zpp_nape.callbacks.ZPP_Listener"] = H.ZPP_Listener;
    H.ZPP_Listener.__name__ = ["zpp_nape", "callbacks", "ZPP_Listener"];
    H.ZPP_Listener.setlt = function(a, b) {
        return a.precedence > b.precedence || a.precedence ==
            b.precedence && a.id > b.id
    };
    H.ZPP_Listener.prototype = {
        removedFromSpace: function() {},
        addedToSpace: function() {},
        invalidate_precedence: function() {},
        swapEvent: function() {},
        __class__: H.ZPP_Listener
    };
    H.ZPP_BodyListener = function() {
        this.outer_zn = this.options = this.handler = null
    };
    j["zpp_nape.callbacks.ZPP_BodyListener"] = H.ZPP_BodyListener;
    H.ZPP_BodyListener.__name__ = ["zpp_nape", "callbacks", "ZPP_BodyListener"];
    H.ZPP_BodyListener.__super__ = H.ZPP_Listener;
    H.ZPP_BodyListener.prototype = C(H.ZPP_Listener.prototype, {
        swapEvent: function(a) {
            this.removedFromSpace();
            this.event = a;
            this.addedToSpace()
        },
        invalidate_precedence: function() {
            null != this.space && (this.removedFromSpace(), this.addedToSpace())
        },
        cbtype_change: function(a, b, c) {
            this.removedFromSpace();
            this.options.effect_change(a, b, c);
            this.addedToSpace()
        },
        removedFromSpace: function() {
            for (var a = this.options.includes.head; null != a;) {
                var b = a.elt;
                b.bodylisteners.remove(this);
                b.invalidatebody();
                a = a.next
            }
            this.options.handler = null
        },
        addedToSpace: function() {
            this.options.handler = w(this, this.cbtype_change);
            for (var a = this.options.includes.head; null !=
                a;) a.elt.addbody(this), a = a.next
        },
        __class__: H.ZPP_BodyListener
    });
    H.ZPP_ConstraintListener = function() {
        this.outer_zn = this.options = this.handler = null
    };
    j["zpp_nape.callbacks.ZPP_ConstraintListener"] = H.ZPP_ConstraintListener;
    H.ZPP_ConstraintListener.__name__ = ["zpp_nape", "callbacks", "ZPP_ConstraintListener"];
    H.ZPP_ConstraintListener.__super__ = H.ZPP_Listener;
    H.ZPP_ConstraintListener.prototype = C(H.ZPP_Listener.prototype, {
        swapEvent: function(a) {
            this.removedFromSpace();
            this.event = a;
            this.addedToSpace()
        },
        invalidate_precedence: function() {
            null !=
                this.space && (this.removedFromSpace(), this.addedToSpace())
        },
        cbtype_change: function(a, b, c) {
            this.removedFromSpace();
            this.options.effect_change(a, b, c);
            this.addedToSpace()
        },
        removedFromSpace: function() {
            for (var a = this.options.includes.head; null != a;) {
                var b = a.elt;
                b.conlisteners.remove(this);
                b.invalidateconstraint();
                a = a.next
            }
            this.options.handler = null
        },
        addedToSpace: function() {
            this.options.handler = w(this, this.cbtype_change);
            for (var a = this.options.includes.head; null != a;) a.elt.addconstraint(this), a = a.next
        },
        __class__: H.ZPP_ConstraintListener
    });
    e.ZNPList_ZPP_CbType = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_CbType"] = e.ZNPList_ZPP_CbType;
    e.ZNPList_ZPP_CbType.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_CbType"];
    e.ZNPList_ZPP_CbType.prototype = {
        iterator_at: function(a) {
            for (var b = this.head; 0 < a-- && null != b;) b = b.next;
            return b
        },
        inlined_has: function(a) {
            var b;
            b = !1;
            for (var c = this.head; null != c;) {
                if (c.elt == a) {
                    b = !0;
                    break
                }
                c = c.next
            }
            return b
        },
        has: function(a) {
            return this.inlined_has(a)
        },
        clear: function() {
            for (; null !=
                this.head;) this.inlined_pop();
            this.pushmod = !0
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_CbType.zpp_pool;
            e.ZNPNode_ZPP_CbType.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        erase: function(a) {
            return this.inlined_erase(a)
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_CbType.zpp_pool;
            e.ZNPNode_ZPP_CbType.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_insert: function(a, b) {
            var c;
            null == e.ZNPNode_ZPP_CbType.zpp_pool ?
                c = new e.ZNPNode_ZPP_CbType : (c = e.ZNPNode_ZPP_CbType.zpp_pool, e.ZNPNode_ZPP_CbType.zpp_pool = c.next, c.next = null);
            null;
            c.elt = b;
            null == a ? (c.next = this.head, this.head = c) : (c.next = a.next, a.next = c);
            this.pushmod = this.modified = !0;
            this.length++;
            return c
        },
        insert: function(a, b) {
            return this.inlined_insert(a, b)
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_CbType.zpp_pool ? b = new e.ZNPNode_ZPP_CbType : (b = e.ZNPNode_ZPP_CbType.zpp_pool, e.ZNPNode_ZPP_CbType.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_CbType
    };
    H.ZPP_InteractionListener = function(a, b, c, d) {
        this.handlerp = null;
        this.allowSleepingCallbacks = this.pure = !1;
        this.options1 = this.options2 = this.handleri = null;
        this.itype = 0;
        this.outer_zni = this.outer_znp = null;
        H.ZPP_Listener.call(this);
        this.type = d;
        this.interaction = this;
        this.event = c;
        this.options1 = a.zpp_inner;
        this.options2 = b.zpp_inner;
        this.allowSleepingCallbacks = !1
    };
    j["zpp_nape.callbacks.ZPP_InteractionListener"] =
        H.ZPP_InteractionListener;
    H.ZPP_InteractionListener.__name__ = ["zpp_nape", "callbacks", "ZPP_InteractionListener"];
    H.ZPP_InteractionListener.__super__ = H.ZPP_Listener;
    H.ZPP_InteractionListener.prototype = C(H.ZPP_Listener.prototype, {
        swapEvent: function(a) {
            this.removedFromSpace();
            this.event = a;
            this.addedToSpace()
        },
        cbtype_change: function(a, b, c, d) {
            this.removedFromSpace();
            a.effect_change(b, c, d);
            this.addedToSpace();
            null
        },
        cbtype_change2: function(a, b, c) {
            this.cbtype_change(this.options2, a, b, c)
        },
        cbtype_change1: function(a,
            b, c) {
            this.cbtype_change(this.options1, a, b, c)
        },
        invalidate_precedence: function() {
            var a = this;
            if (null != this.space) {
                var b = this.type == e.ZPP_Flags.id_ListenerType_PRE;
                this.with_union(function(c) {
                    c.listeners.remove(a);
                    c.invalidateint();
                    c.addint(a);
                    if (b)
                        for (c = c.interactors.head; null != c;) c.elt.wake(), c = c.next
                })
            }
        },
        removedFromSpace: function() {
            var a = this;
            this.with_uniquesets(!1);
            var b = this.type == e.ZPP_Flags.id_ListenerType_PRE;
            this.with_union(function(c) {
                c.listeners.remove(a);
                c.invalidateint();
                if (b)
                    for (c = c.interactors.head; null !=
                        c;) c.elt.wake(), c = c.next
            });
            this.options1.handler = null;
            this.options2.handler = null
        },
        addedToSpace: function() {
            var a = this,
                b = this.type == e.ZPP_Flags.id_ListenerType_PRE;
            this.with_union(function(c) {
                c.addint(a);
                if (b)
                    for (c = c.interactors.head; null != c;) c.elt.wake(), c = c.next
            });
            this.options1.handler = w(this, this.cbtype_change1);
            this.options2.handler = w(this, this.cbtype_change2);
            this.with_uniquesets(!0)
        },
        with_union: function(a) {
            for (var b = this.options1.includes.head, c = this.options2.includes.head; null != b && null != c;) {
                var d =
                    b.elt,
                    f = c.elt;
                d == f ? (a(d), b = b.next, c = c.next) : d.id < f.id ? (a(d), b = b.next) : (a(f), c = c.next)
            }
            for (; null != b;) a(b.elt), b = b.next;
            for (; null != c;) a(c.elt), c = c.next
        },
        with_uniquesets: function(a) {
            var b = this,
                c;
            null == e.ZPP_Set_ZPP_CbSetPair.zpp_pool ? c = new e.ZPP_Set_ZPP_CbSetPair : (c = e.ZPP_Set_ZPP_CbSetPair.zpp_pool, e.ZPP_Set_ZPP_CbSetPair.zpp_pool = c.next, c.next = null);
            null;
            c.lt = H.ZPP_CbSetPair.setlt;
            this.CbTypeset(this.options1.includes, this.options2.includes, function(a, d) {
                b.CbSetset(a.cbsets, d.cbsets, function(a, d) {
                    a.validate();
                    d.validate();
                    H.ZPP_CbSet.single_intersection(a, d, b) && c.try_insert(H.ZPP_CbSetPair.get(a, d))
                })
            });
            c.clear_with(function(c) {
                a ? b.space.freshListenerType(c.a, c.b) : b.space.nullListenerType(c.a, c.b);
                c.a = c.b = null;
                c.listeners.clear();
                c.next = H.ZPP_CbSetPair.zpp_pool;
                H.ZPP_CbSetPair.zpp_pool = c
            });
            var d = c;
            d.data = null;
            d.lt = null;
            d.swapped = null;
            d.next = e.ZPP_Set_ZPP_CbSetPair.zpp_pool;
            e.ZPP_Set_ZPP_CbSetPair.zpp_pool = d
        },
        CbTypeset: function(a, b, c) {
            for (var d = H.ZPP_InteractionListener.UCbType, f = H.ZPP_InteractionListener.VCbType,
                    e = H.ZPP_InteractionListener.WCbType, a = a.head, l = b.head; null != a && null != l;) {
                var s = a.elt,
                    g = l.elt;
                s == g ? (e.inlined_add(s), a = a.next, l = l.next) : s.id < g.id ? (d.inlined_add(s), a = a.next) : (f.inlined_add(g), l = l.next)
            }
            for (; null != a;) d.inlined_add(a.elt), a = a.next;
            for (; null != l;) f.inlined_add(l.elt), l = l.next;
            for (; null != d.head;) {
                a = d.pop_unsafe();
                for (l = b.head; null != l;) s = l.elt, c(a, s), l = l.next
            }
            for (; null != f.head;) {
                a = f.pop_unsafe();
                for (l = e.head; null != l;) s = l.elt, c(a, s), l = l.next
            }
            for (; null != e.head;) {
                a = e.pop_unsafe();
                c(a, a);
                for (l =
                    e.head; null != l;) s = l.elt, c(a, s), l = l.next
            }
        },
        CbSetset: function(a, b, c) {
            for (var d = H.ZPP_InteractionListener.UCbSet, f = H.ZPP_InteractionListener.VCbSet, e = H.ZPP_InteractionListener.WCbSet, a = a.head, l = b.head; null != a && null != l;) {
                var s = a.elt,
                    g = l.elt;
                s == g ? (e.inlined_add(s), a = a.next, l = l.next) : H.ZPP_CbSet.setlt(s, g) ? (d.inlined_add(s), a = a.next) : (f.inlined_add(g), l = l.next)
            }
            for (; null != a;) d.inlined_add(a.elt), a = a.next;
            for (; null != l;) f.inlined_add(l.elt), l = l.next;
            for (; null != d.head;) {
                a = d.pop_unsafe();
                for (l = b.head; null !=
                    l;) s = l.elt, c(a, s), l = l.next
            }
            for (; null != f.head;) {
                a = f.pop_unsafe();
                for (l = e.head; null != l;) s = l.elt, c(a, s), l = l.next
            }
            for (; null != e.head;) {
                a = e.pop_unsafe();
                c(a, a);
                for (l = e.head; null != l;) s = l.elt, c(a, s), l = l.next
            }
        },
        wake: function() {
            this.with_union(function(a) {
                for (a = a.interactors.head; null != a;) a.elt.wake(), a = a.next
            })
        },
        __class__: H.ZPP_InteractionListener
    });
    H.ZPP_OptionType = function() {
        this.outer = this.handler = this.includes = this.excludes = this.wrap_includes = this.wrap_excludes = null;
        this.includes = new e.ZNPList_ZPP_CbType;
        this.excludes = new e.ZNPList_ZPP_CbType
    };
    j["zpp_nape.callbacks.ZPP_OptionType"] = H.ZPP_OptionType;
    H.ZPP_OptionType.__name__ = ["zpp_nape", "callbacks", "ZPP_OptionType"];
    H.ZPP_OptionType.argument = function(a) {
        return null == a ? new v.OptionType : ba.__instanceof(a, v.OptionType) ? a : (new v.OptionType).including(a)
    };
    H.ZPP_OptionType.prototype = {
        append: function(a, b) {
            if (ba.__instanceof(b, v.CbType)) {
                var c;
                this.append_type(a, b.zpp_inner)
            } else if (ba.__instanceof(b, v.CbTypeList)) {
                var d = b;
                d.zpp_inner.valmod();
                for (d = v.CbTypeIterator.get(d); d.hasNext();) c =
                    d.next(), this.append_type(a, c.zpp_inner)
            } else if (ba.__instanceof(b, Array))
                for (var d = b, f = 0; f < d.length;) c = d[f], ++f, this.append_type(a, c.zpp_inner)
        },
        set: function(a) {
            if (a != this) {
                for (; null != this.includes.head;) this.append_type(this.excludes, this.includes.head.elt);
                for (; null != this.excludes.head;) this.append_type(this.includes, this.excludes.head.elt);
                for (var b = a.excludes.head; null != b;) {
                    var c = b.elt;
                    this.append_type(this.excludes, c);
                    b = b.next
                }
                for (b = a.includes.head; null != b;) c = b.elt, this.append_type(this.includes,
                    c), b = b.next
            }
            return this
        },
        append_type: function(a, b) {
            a == this.includes ? this.includes.has(b) || (this.excludes.has(b) ? null != this.handler ? this.handler(b, !1, !1) : this.effect_change(b, !1, !1) : null != this.handler ? this.handler(b, !0, !0) : this.effect_change(b, !0, !0)) : this.excludes.has(b) || (this.includes.has(b) ? null != this.handler ? this.handler(b, !0, !1) : this.effect_change(b, !0, !1) : null != this.handler ? this.handler(b, !1, !0) : this.effect_change(b, !1, !0))
        },
        effect_change: function(a, b, c) {
            if (b)
                if (c) {
                    b = null;
                    for (c = this.includes.head; null !=
                        c;) {
                        var d = c.elt;
                        if (a.id < d.id) break;
                        b = c;
                        c = c.next
                    }
                    this.includes.inlined_insert(b, a)
                } else this.includes.remove(a);
            else if (c) {
                b = null;
                for (c = this.excludes.head; null != c;) {
                    d = c.elt;
                    if (a.id < d.id) break;
                    b = c;
                    c = c.next
                }
                this.excludes.inlined_insert(b, a)
            } else this.excludes.remove(a)
        },
        nonemptyintersection: function(a, b) {
            for (var c = !1, d = a.head, f = b.head; null != f && null != d;) {
                var e = f.elt,
                    l = d.elt;
                if (e == l) {
                    c = !0;
                    break
                } else e.id < l.id ? f = f.next : d = d.next
            }
            return c
        },
        compatible: function(a) {
            return this.nonemptyintersection(a, this.includes) &&
                !this.nonemptyintersection(a, this.excludes)
        },
        excluded: function(a) {
            return this.nonemptyintersection(a, this.excludes)
        },
        setup_excludes: function() {
            this.wrap_excludes = e.ZPP_CbTypeList.get(this.excludes, !0)
        },
        setup_includes: function() {
            this.wrap_includes = e.ZPP_CbTypeList.get(this.includes, !0)
        },
        __class__: H.ZPP_OptionType
    };
    M = {
        ZPP_Constraint: function() {
            this.pre_dt = 0;
            this.cbTypes = this.cbSet = this.wrap_cbTypes = null;
            this.ignore = this.__velocity = !1;
            this.component = null;
            this.breakUnderForce = this.breakUnderError = this.removeOnBreak = !1;
            this.frequency = this.damping = this.maxForce = this.maxError = 0;
            this.active = this.stiff = !1;
            this.userData = this.compound = this.space = null;
            this.id = 0;
            this.outer = null;
            this.__velocity = !1;
            this.id = ja.Constraint();
            this.active = this.stiff = !0;
            this.ignore = !1;
            this.frequency = 10;
            this.damping = 1;
            this.maxError = this.maxForce = Math.POSITIVE_INFINITY;
            this.breakUnderForce = !1;
            this.removeOnBreak = !0;
            this.pre_dt = -1;
            this.cbTypes = new e.ZNPList_ZPP_CbType
        }
    };
    j["zpp_nape.constraint.ZPP_Constraint"] = M.ZPP_Constraint;
    M.ZPP_Constraint.__name__ = ["zpp_nape", "constraint", "ZPP_Constraint"];
    M.ZPP_Constraint.prototype = {
        copyto: function(a) {
            var b = this.outer;
            null == b.zpp_inner.wrap_cbTypes && b.zpp_inner.setupcbTypes();
            for (var c = b.zpp_inner.wrap_cbTypes.iterator(); c.hasNext();) {
                var d = c.next();
                null == a.zpp_inner.wrap_cbTypes && a.zpp_inner.setupcbTypes();
                a.zpp_inner.wrap_cbTypes.add(d)
            }
            a.zpp_inner.removeOnBreak = b.zpp_inner.removeOnBreak;
            a.zpp_inner.removeOnBreak;
            a.set_breakUnderError(b.zpp_inner.breakUnderError);
            a.set_breakUnderForce(b.zpp_inner.breakUnderForce);
            a.set_maxError(b.zpp_inner.maxError);
            a.set_maxForce(b.zpp_inner.maxForce);
            a.set_damping(b.zpp_inner.damping);
            a.set_frequency(b.zpp_inner.frequency);
            a.set_stiff(b.zpp_inner.stiff);
            a.set_ignore(b.zpp_inner.ignore);
            a.set_active(b.zpp_inner.active)
        },
        copy: function() {
            return null
        },
        draw: function() {},
        wake: function() {
            null != this.space && this.space.wake_constraint(this)
        },
        applyImpulsePos: function() {
            return !1
        },
        applyImpulseVel: function() {
            return !1
        },
        preStep: function() {
            return !1
        },
        warmStart: function() {},
        broken: function() {},
        pair_exists: function() {
            return !1
        },
        forest: function() {},
        wake_connected: function() {},
        validate: function() {},
        clearcache: function() {},
        inactiveBodies: function() {},
        activeBodies: function() {},
        inactiveOrOutSpace: function() {
            this.dealloc_cbSet();
            var a = this.component;
            a.body = null;
            a.constraint = null;
            null;
            a.next = A.ZPP_Component.zpp_pool;
            A.ZPP_Component.zpp_pool = a;
            this.component = null
        },
        activeInSpace: function() {
            this.alloc_cbSet();
            null == A.ZPP_Component.zpp_pool ? this.component = new A.ZPP_Component : (this.component = A.ZPP_Component.zpp_pool,
                A.ZPP_Component.zpp_pool = this.component.next, this.component.next = null);
            null;
            this.component.isBody = !1;
            this.component.constraint = this
        },
        removedFromSpace: function() {
            this.active && this.inactiveOrOutSpace();
            this.inactiveBodies();
            for (var a = this.cbTypes.head; null != a;) a.elt.constraints.remove(this), a = a.next
        },
        addedToSpace: function() {
            this.active && this.activeInSpace();
            this.activeBodies();
            for (var a = this.cbTypes.head; null != a;) a.elt.constraints.add(this), a = a.next
        },
        deactivate: function() {
            null != this.space && this.inactiveOrOutSpace()
        },
        activate: function() {
            null != this.space && this.activeInSpace()
        },
        dealloc_cbSet: function() {
            if (null != this.cbSet) {
                this.cbSet.constraints.remove(this);
                if (0 == --this.cbSet.count) {
                    this.space.cbsets.remove(this.cbSet);
                    var a = this.cbSet;
                    a.free();
                    a.next = H.ZPP_CbSet.zpp_pool;
                    H.ZPP_CbSet.zpp_pool = a
                }
                this.cbSet = null
            }
        },
        alloc_cbSet: function() {
            if (null != (this.cbSet = this.space.cbsets.get(this.cbTypes))) this.cbSet.count++, this.cbSet.constraints.add(this)
        },
        insert_cbtype: function(a) {
            if (!this.cbTypes.has(a)) {
                null != this.space &&
                    (this.dealloc_cbSet(), a.constraints.add(this));
                for (var b = null, c = this.cbTypes.head; null != c && !(a.id < c.elt.id);) {
                    b = c;
                    c = c.next
                }
                this.cbTypes.inlined_insert(b, a);
                null != this.space && (this.alloc_cbSet(), this.wake())
            }
        },
        wrap_cbTypes_adder: function(a) {
            this.insert_cbtype(a.zpp_inner);
            return !1
        },
        wrap_cbTypes_subber: function(a) {
            a = a.zpp_inner;
            this.cbTypes.has(a) && (null != this.space && (this.dealloc_cbSet(), a.constraints.remove(this)), this.cbTypes.remove(a), null != this.space && (this.alloc_cbSet(), this.wake()))
        },
        setupcbTypes: function() {
            this.wrap_cbTypes =
                e.ZPP_CbTypeList.get(this.cbTypes);
            this.wrap_cbTypes.zpp_inner.adder = w(this, this.wrap_cbTypes_adder);
            this.wrap_cbTypes.zpp_inner.subber = w(this, this.wrap_cbTypes_subber);
            this.wrap_cbTypes.zpp_inner.dontremove = !0
        },
        immutable_midstep: function() {},
        __class__: M.ZPP_Constraint
    };
    M.ZPP_AngleJoint = function() {
        this.stepped = !1;
        this.kMass = this.jAcc = this.jMax = this.gamma = this.bias = 0;
        this.b1 = this.b2 = null;
        this.scale = 0;
        this.slack = this.equal = !1;
        this.ratio = this.jointMin = this.jointMax = 0;
        this.outer_zn = null;
        M.ZPP_Constraint.call(this);
        this.ratio = 1;
        this.jAcc = 0;
        this.slack = !1;
        this.jMax = Math.POSITIVE_INFINITY;
        this.stepped = !1
    };
    j["zpp_nape.constraint.ZPP_AngleJoint"] = M.ZPP_AngleJoint;
    M.ZPP_AngleJoint.__name__ = ["zpp_nape", "constraint", "ZPP_AngleJoint"];
    M.ZPP_AngleJoint.__super__ = M.ZPP_Constraint;
    M.ZPP_AngleJoint.prototype = C(M.ZPP_Constraint.prototype, {
        draw: function() {},
        applyImpulsePos: function() {
            var a, b;
            a = this.ratio * this.b2.rot - this.b1.rot;
            this.equal ? (a -= this.jointMax, b = !1, this.scale = 1) : a < this.jointMin ? (a = this.jointMin - a, this.scale = -1,
                b = !1) : a > this.jointMax ? (a -= this.jointMax, this.scale = 1, b = !1) : (a = this.scale = 0, b = !0);
            if (!b) {
                if (this.breakUnderError && a * a > this.maxError * this.maxError) return !0;
                b = -(0.5 * a) * this.kMass;
                if (this.equal || 0 > b) this.b1.delta_rot(-this.scale * b * this.b1.iinertia), this.b2.delta_rot(this.ratio * this.scale * b * this.b2.iinertia)
            }
            return !1
        },
        applyImpulseVel: function() {
            if (this.slack) return !1;
            var a = this.kMass * (this.bias - this.scale * (this.ratio * (this.b2.angvel + this.b2.kinangvel) - this.b1.angvel - this.b1.kinangvel)) - this.jAcc * this.gamma,
                b = this.jAcc;
            this.jAcc += a;
            !this.equal && 0 < this.jAcc && (this.jAcc = 0);
            if (this.breakUnderForce && (this.jAcc > this.jMax || this.jAcc < -this.jMax)) return !0;
            this.stiff || (this.jAcc > this.jMax ? this.jAcc = this.jMax : this.jAcc < -this.jMax && (this.jAcc = -this.jMax));
            a = this.jAcc - b;
            this.b1.angvel -= this.scale * this.b1.iinertia * a;
            this.b2.angvel += this.ratio * this.scale * this.b2.iinertia * a;
            return !1
        },
        warmStart: function() {
            this.slack || (this.b1.angvel -= this.scale * this.b1.iinertia * this.jAcc, this.b2.angvel += this.ratio * this.scale * this.b2.iinertia *
                this.jAcc)
        },
        preStep: function(a) {
            -1 == this.pre_dt && (this.pre_dt = a);
            var b = a / this.pre_dt;
            this.pre_dt = a;
            this.stepped = !0;
            this.equal = this.jointMin == this.jointMax;
            var c = function(a) {
                var b = a.ratio * a.b2.rot - a.b1.rot;
                a.equal ? (b -= a.jointMax, a.slack = !1, a.scale = 1) : b < a.jointMin ? (b = a.jointMin - b, a.scale = -1, a.slack = !1) : b > a.jointMax ? (b -= a.jointMax, a.scale = 1, a.slack = !1) : (b = a.scale = 0, a.slack = !0);
                return b
            }(this);
            if (!this.slack) {
                this.kMass = this.b1.sinertia + this.ratio * this.ratio * this.b2.sinertia;
                0 != this.kMass ? this.kMass =
                    1 / this.kMass : this.jAcc = 0;
                if (this.stiff) this.gamma = this.bias = 0;
                else {
                    if (this.breakUnderError && c * c > this.maxError * this.maxError) return !0;
                    var d;
                    this.kMass *= function(b) {
                        var c = 2 * Math.PI * b.frequency;
                        b.gamma = 1 / (a * c * (2 * b.damping + c * a));
                        var e = 1 / (1 + b.gamma);
                        d = a * c * c * b.gamma;
                        b.gamma *= e;
                        return e
                    }(this);
                    this.bias = -c * d;
                    this.bias < -this.maxError ? this.bias = -this.maxError : this.bias > this.maxError && (this.bias = this.maxError)
                }
                this.jAcc *= b;
                this.jMax = this.maxForce * a
            }
            return !1
        },
        clearcache: function() {
            this.jAcc = 0;
            this.pre_dt = -1;
            this.slack = !1
        },
        pair_exists: function(a, b) {
            return this.b1.id == a && this.b2.id == b || this.b1.id == b && this.b2.id == a
        },
        forest: function() {
            if (this.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC) {
                var a = this.b1.component == this.b1.component.parent ? this.b1.component : function(a) {
                        for (var a = a.b1.component, b = null; a != a.parent;) {
                            var f = a.parent;
                            a.parent = b;
                            b = a;
                            a = f
                        }
                        for (; null != b;) f = b.parent, b.parent = a, b = f;
                        return a
                    }(this),
                    b = this.component == this.component.parent ? this.component : function(a) {
                        for (var a = a.component, b = null; a != a.parent;) {
                            var f =
                                a.parent;
                            a.parent = b;
                            b = a;
                            a = f
                        }
                        for (; null != b;) f = b.parent, b.parent = a, b = f;
                        return a
                    }(this);
                a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++))
            }
            this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (a = this.b2.component == this.b2.component.parent ? this.b2.component : function(a) {
                for (var a = a.b2.component, b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent, b.parent = a, b = f;
                return a
            }(this), b = this.component == this.component.parent ? this.component : function(a) {
                for (var a =
                        a.component, b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent, b.parent = a, b = f;
                return a
            }(this), a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++)))
        },
        wake_connected: function() {
            null != this.b1 && this.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.b1.wake();
            null != this.b2 && this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.b2.wake()
        },
        validate: function() {
            if (null == this.b1 || null == this.b2) throw "Error: AngleJoint cannot be simulated null bodies";
            if (this.b1 ==
                this.b2) throw "Error: AngleJoint cannot be simulated with body1 == body2";
            if (this.b1.space != this.space || this.b2.space != this.space) throw "Error: Constraints must have each body within the same space to which the constraint has been assigned";
            if (this.jointMin > this.jointMax) throw "Error: AngleJoint must have jointMin <= jointMax";
            if (this.b1.type != e.ZPP_Flags.id_BodyType_DYNAMIC && this.b2.type != e.ZPP_Flags.id_BodyType_DYNAMIC) throw "Error: Constraints cannot have both bodies non-dynamic";
        },
        copy: function(a,
            b) {
            var c = new N.AngleJoint(null, null, this.jointMin, this.jointMax, this.ratio);
            this.copyto(c);
            if (null != a && null != this.b1) {
                for (var d = null, f = 0; f < a.length;) {
                    var e = a[f];
                    ++f;
                    if (e.id == this.b1.id) {
                        d = e.bc;
                        break
                    }
                }
                null != d ? c.zpp_inner_zn.b1 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b1.id, function(a) {
                    c.zpp_inner_zn.b1 = a.zpp_inner
                }))
            }
            if (null != a && null != this.b2) {
                d = null;
                for (f = 0; f < a.length;)
                    if (e = a[f], ++f, e.id == this.b2.id) {
                        d = e.bc;
                        break
                    }
                null != d ? c.zpp_inner_zn.b2 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b2.id, function(a) {
                    c.zpp_inner_zn.b2 =
                        a.zpp_inner
                }))
            }
            return c
        },
        inactiveBodies: function() {
            null != this.b1 && this.b1.constraints.remove(this);
            this.b2 != this.b1 && null != this.b2 && this.b2.constraints.remove(this)
        },
        activeBodies: function() {
            null != this.b1 && this.b1.constraints.add(this);
            this.b2 != this.b1 && null != this.b2 && this.b2.constraints.add(this)
        },
        bodyImpulse: function(a) {
            return this.stepped ? a == this.b1 ? u.Vec3.get(0, 0, -this.scale * this.jAcc) : u.Vec3.get(0, 0, this.ratio * this.scale * this.jAcc) : u.Vec3.get(0, 0, 0)
        },
        __class__: M.ZPP_AngleJoint
    });
    M.ZPP_CopyHelper =
        function() {
            this.bc = this.cb = null;
            this.id = 0
        };
    j["zpp_nape.constraint.ZPP_CopyHelper"] = M.ZPP_CopyHelper;
    M.ZPP_CopyHelper.__name__ = ["zpp_nape", "constraint", "ZPP_CopyHelper"];
    M.ZPP_CopyHelper.todo = function(a, b) {
        var c = new M.ZPP_CopyHelper;
        c.id = a;
        c.cb = b;
        return c
    };
    M.ZPP_CopyHelper.prototype = {
        __class__: M.ZPP_CopyHelper
    };
    M.ZPP_DistanceJoint = function() {
        this.stepped = !1;
        this.kMass = this.jAcc = this.jMax = this.gamma = this.bias = 0;
        this.wrap_a2 = null;
        this.a2localx = this.a2localy = this.a2relx = this.a2rely = 0;
        this.wrap_a1 = this.b2 =
            null;
        this.a1localx = this.a1localy = this.a1relx = this.a1rely = 0;
        this.b1 = null;
        this.nx = this.ny = this.cx1 = this.cx2 = 0;
        this.slack = this.equal = !1;
        this.jointMin = this.jointMax = 0;
        this.outer_zn = null;
        M.ZPP_Constraint.call(this);
        this.jAcc = this.a2rely = this.a2relx = this.a2localy = this.a2localx = this.a1rely = this.a1relx = this.a1localy = this.a1localx = 0;
        this.jMax = Math.POSITIVE_INFINITY;
        this.stepped = !1;
        this.cx1 = this.cx2 = 0
    };
    j["zpp_nape.constraint.ZPP_DistanceJoint"] = M.ZPP_DistanceJoint;
    M.ZPP_DistanceJoint.__name__ = ["zpp_nape", "constraint",
        "ZPP_DistanceJoint"
    ];
    M.ZPP_DistanceJoint.__super__ = M.ZPP_Constraint;
    M.ZPP_DistanceJoint.prototype = C(M.ZPP_Constraint.prototype, {
        draw: function() {},
        applyImpulsePos: function() {
            var a, b, c = 0,
                d = 0,
                c = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy,
                d = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy,
                f = 0,
                e = 0,
                f = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy,
                e = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy,
                l, s = 0,
                g = 0;
            a = function(a) {
                s = a.b2.posx + f - (a.b1.posx + c);
                g = a.b2.posy + e - (a.b1.posy +
                    d);
                var b = s * s + g * g;
                if (b < x.epsilon) b = g = s = 0, l = !0;
                else {
                    var b = Math.sqrt(b),
                        h = 1 / b;
                    s *= h;
                    g *= h;
                    a.equal ? (b -= a.jointMax, l = !1) : b < a.jointMin ? (b = a.jointMin - b, s = -s, g = -g, l = !1) : b > a.jointMax ? (b -= a.jointMax, l = !1) : (b = g = s = 0, l = !0)
                }
                return b
            }(this);
            if (!l) {
                if (this.breakUnderError && a * a > this.maxError * this.maxError) return !0;
                if (a * a < x.constraintLinearSlop * x.constraintLinearSlop) return !1;
                a *= 0.5;
                if (6 < a * a && (b = this.b1.smass + this.b2.smass, b > x.epsilon && (b = -a * (0.75 / b), this.equal || 0 > b))) a = b * this.b1.imass, this.b1.posx -= s * a, this.b1.posy -=
                    g * a, a = b * this.b2.imass, this.b2.posx += s * a, this.b2.posy += g * a, a = function(a) {
                        s = a.b2.posx + f - (a.b1.posx + c);
                        g = a.b2.posy + e - (a.b1.posy + d);
                        var b = s * s + g * g;
                        if (b < x.epsilon) b = g = s = 0, l = !0;
                        else {
                            var b = Math.sqrt(b),
                                h = 1 / b;
                            s *= h;
                            g *= h;
                            a.equal ? (b -= a.jointMax, l = !1) : b < a.jointMin ? (b = a.jointMin - b, s = -s, g = -g, l = !1) : b > a.jointMax ? (b -= a.jointMax, l = !1) : (b = g = s = 0, l = !0)
                        }
                        return b
                    }(this), a *= 0.5;
                var h, i;
                h = g * c - s * d;
                i = g * f - s * e;
                b = this.b1.smass + this.b2.smass + h * h * this.b1.sinertia + i * i * this.b2.sinertia;
                0 != b && (b = 1 / b);
                b *= -a;
                if (this.equal || 0 > b) a = this.b1.imass *
                    b, this.b1.posx -= s * a, this.b1.posy -= g * a, a = this.b2.imass * b, this.b2.posx += s * a, this.b2.posy += g * a, this.b1.delta_rot(-h * this.b1.iinertia * b), this.b2.delta_rot(i * this.b2.iinertia * b)
            }
            return !1
        },
        applyImpulseVel: function() {
            if (this.slack) return !1;
            var a = this.kMass * (this.bias - (this.nx * (this.b2.velx + this.b2.kinvelx - this.b1.velx - this.b1.kinvelx) + this.ny * (this.b2.vely + this.b2.kinvely - this.b1.vely - this.b1.kinvely) + (this.b2.angvel + this.b2.kinangvel) * this.cx2 - (this.b1.angvel + this.b1.kinangvel) * this.cx1)) - this.jAcc * this.gamma,
                b = this.jAcc;
            this.jAcc += a;
            !this.equal && 0 < this.jAcc && (this.jAcc = 0);
            if (this.breakUnderForce && this.jAcc < -this.jMax) return !0;
            !this.stiff && this.jAcc < -this.jMax && (this.jAcc = -this.jMax);
            a = this.jAcc - b;
            b = this.b1.imass * a;
            this.b1.velx -= this.nx * b;
            this.b1.vely -= this.ny * b;
            b = this.b2.imass * a;
            this.b2.velx += this.nx * b;
            this.b2.vely += this.ny * b;
            this.b1.angvel -= this.cx1 * this.b1.iinertia * a;
            this.b2.angvel += this.cx2 * this.b2.iinertia * a;
            return !1
        },
        warmStart: function() {
            if (!this.slack) {
                var a = this.b1.imass * this.jAcc;
                this.b1.velx -=
                    this.nx * a;
                this.b1.vely -= this.ny * a;
                a = this.b2.imass * this.jAcc;
                this.b2.velx += this.nx * a;
                this.b2.vely += this.ny * a;
                this.b1.angvel -= this.cx1 * this.b1.iinertia * this.jAcc;
                this.b2.angvel += this.cx2 * this.b2.iinertia * this.jAcc
            }
        },
        preStep: function(a) {
            -1 == this.pre_dt && (this.pre_dt = a);
            var b = a / this.pre_dt;
            this.pre_dt = a;
            this.stepped = !0;
            this.equal = this.jointMin == this.jointMax;
            this.a1relx = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
            this.a1rely = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
            this.a2relx =
                this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
            this.a2rely = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
            var c = function(a) {
                a.nx = a.b2.posx + a.a2relx - (a.b1.posx + a.a1relx);
                a.ny = a.b2.posy + a.a2rely - (a.b1.posy + a.a1rely);
                var b = a.nx * a.nx + a.ny * a.ny;
                if (b < x.epsilon) a.nx = 0, b = a.ny = 0, a.slack = !0;
                else {
                    var b = Math.sqrt(b),
                        c = 1 / b;
                    a.nx *= c;
                    a.ny *= c;
                    a.equal ? (b -= a.jointMax, a.slack = !1) : b < a.jointMin ? (b = a.jointMin - b, a.nx = -a.nx, a.ny = -a.ny, a.slack = !1) : b > a.jointMax ? (b -= a.jointMax, a.slack = !1) : (a.nx = 0, b = a.ny = 0,
                        a.slack = !0)
                }
                return b
            }(this);
            if (!this.slack) {
                this.cx1 = this.ny * this.a1relx - this.nx * this.a1rely;
                this.cx2 = this.ny * this.a2relx - this.nx * this.a2rely;
                this.kMass = this.b1.smass + this.b2.smass + this.cx1 * this.cx1 * this.b1.sinertia + this.cx2 * this.cx2 * this.b2.sinertia;
                0 != this.kMass ? this.kMass = 1 / this.kMass : this.jAcc = 0;
                if (this.stiff) this.gamma = this.bias = 0;
                else {
                    if (this.breakUnderError && c * c > this.maxError * this.maxError) return !0;
                    var d;
                    this.kMass *= function(b) {
                        var c = 2 * Math.PI * b.frequency;
                        b.gamma = 1 / (a * c * (2 * b.damping + c * a));
                        var e = 1 / (1 + b.gamma);
                        d = a * c * c * b.gamma;
                        b.gamma *= e;
                        return e
                    }(this);
                    this.bias = -c * d;
                    this.bias < -this.maxError ? this.bias = -this.maxError : this.bias > this.maxError && (this.bias = this.maxError)
                }
                this.jAcc *= b;
                this.jMax = this.maxForce * a
            }
            return !1
        },
        clearcache: function() {
            this.jAcc = 0;
            this.pre_dt = -1
        },
        pair_exists: function(a, b) {
            return this.b1.id == a && this.b2.id == b || this.b1.id == b && this.b2.id == a
        },
        forest: function() {
            if (this.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC) {
                var a = this.b1.component == this.b1.component.parent ? this.b1.component :
                    function(a) {
                        for (var a = a.b1.component, b = null; a != a.parent;) {
                            var f = a.parent;
                            a.parent = b;
                            b = a;
                            a = f
                        }
                        for (; null != b;) f = b.parent, b.parent = a, b = f;
                        return a
                    }(this),
                    b = this.component == this.component.parent ? this.component : function(a) {
                        for (var a = a.component, b = null; a != a.parent;) {
                            var f = a.parent;
                            a.parent = b;
                            b = a;
                            a = f
                        }
                        for (; null != b;) f = b.parent, b.parent = a, b = f;
                        return a
                    }(this);
                a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++))
            }
            this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (a = this.b2.component == this.b2.component.parent ?
                this.b2.component : function(a) {
                    for (var a = a.b2.component, b = null; a != a.parent;) {
                        var f = a.parent;
                        a.parent = b;
                        b = a;
                        a = f
                    }
                    for (; null != b;) f = b.parent, b.parent = a, b = f;
                    return a
                }(this), b = this.component == this.component.parent ? this.component : function(a) {
                    for (var a = a.component, b = null; a != a.parent;) {
                        var f = a.parent;
                        a.parent = b;
                        b = a;
                        a = f
                    }
                    for (; null != b;) f = b.parent, b.parent = a, b = f;
                    return a
                }(this), a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++)))
        },
        wake_connected: function() {
            null != this.b1 && this.b1.type ==
                e.ZPP_Flags.id_BodyType_DYNAMIC && this.b1.wake();
            null != this.b2 && this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.b2.wake()
        },
        validate: function() {
            if (null == this.b1 || null == this.b2) throw "Error: DistanceJoint cannot be simulated null bodies";
            if (this.b1 == this.b2) throw "Error: DistanceJoint cannot be simulated with body1 == body2";
            if (this.b1.space != this.space || this.b2.space != this.space) throw "Error: Constraints must have each body within the same space to which the constraint has been assigned";
            if (this.jointMin >
                this.jointMax) throw "Error: DistanceJoint must have jointMin <= jointMax";
            if (this.b1.type != e.ZPP_Flags.id_BodyType_DYNAMIC && this.b2.type != e.ZPP_Flags.id_BodyType_DYNAMIC) throw "Error: Constraints cannot have both bodies non-dynamic";
        },
        copy: function(a, b) {
            var c = new N.DistanceJoint(null, null, this.outer_zn.get_anchor1(), this.outer_zn.get_anchor2(), this.jointMin, this.jointMax);
            this.copyto(c);
            if (null != a && null != this.b1) {
                for (var d = null, f = 0; f < a.length;) {
                    var e = a[f];
                    ++f;
                    if (e.id == this.b1.id) {
                        d = e.bc;
                        break
                    }
                }
                null !=
                    d ? c.zpp_inner_zn.b1 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b1.id, function(a) {
                        c.zpp_inner_zn.b1 = a.zpp_inner
                    }))
            }
            if (null != a && null != this.b2) {
                d = null;
                for (f = 0; f < a.length;)
                    if (e = a[f], ++f, e.id == this.b2.id) {
                        d = e.bc;
                        break
                    }
                null != d ? c.zpp_inner_zn.b2 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b2.id, function(a) {
                    c.zpp_inner_zn.b2 = a.zpp_inner
                }))
            }
            return c
        },
        setup_a2: function() {
            this.wrap_a2 = u.Vec2.get(this.a2localx, this.a2localy, null);
            this.wrap_a2.zpp_inner._inuse = !0;
            this.wrap_a2.zpp_inner._validate = w(this, this.validate_a2);
            this.wrap_a2.zpp_inner._invalidate = w(this, this.invalidate_a2)
        },
        invalidate_a2: function(a) {
            this.immutable_midstep("Constraint::a2");
            this.a2localx = a.x;
            this.a2localy = a.y;
            this.wake()
        },
        validate_a2: function() {
            this.wrap_a2.zpp_inner.x = this.a2localx;
            this.wrap_a2.zpp_inner.y = this.a2localy
        },
        setup_a1: function() {
            this.wrap_a1 = u.Vec2.get(this.a1localx, this.a1localy, null);
            this.wrap_a1.zpp_inner._inuse = !0;
            this.wrap_a1.zpp_inner._validate = w(this, this.validate_a1);
            this.wrap_a1.zpp_inner._invalidate = w(this, this.invalidate_a1)
        },
        invalidate_a1: function(a) {
            this.immutable_midstep("Constraint::a1");
            this.a1localx = a.x;
            this.a1localy = a.y;
            this.wake()
        },
        validate_a1: function() {
            this.wrap_a1.zpp_inner.x = this.a1localx;
            this.wrap_a1.zpp_inner.y = this.a1localy
        },
        inactiveBodies: function() {
            null != this.b1 && this.b1.constraints.remove(this);
            this.b2 != this.b1 && null != this.b2 && this.b2.constraints.remove(this)
        },
        activeBodies: function() {
            null != this.b1 && this.b1.constraints.add(this);
            this.b2 != this.b1 && null != this.b2 && this.b2.constraints.add(this)
        },
        bodyImpulse: function(a) {
            return this.stepped ?
                a == this.b1 ? u.Vec3.get(-this.jAcc * this.nx, -this.jAcc * this.ny, -this.cx1 * this.jAcc) : u.Vec3.get(this.jAcc * this.nx, this.jAcc * this.ny, this.cx2 * this.jAcc) : u.Vec3.get(0, 0, 0)
        },
        __class__: M.ZPP_DistanceJoint
    });
    M.ZPP_LineJoint = function() {
        this.kMassa = this.kMassb = this.kMassc = this.jAccx = this.jAccy = this.biasx = this.biasy = 0;
        this.wrap_n = null;
        this.nlocalx = this.nlocaly = this.nrelx = this.nrely = 0;
        this.wrap_a2 = null;
        this.a2localx = this.a2localy = this.a2relx = this.a2rely = 0;
        this.wrap_a1 = null;
        this.dot1 = this.dot2 = this.cx1 = this.cx2 =
            this.a1localx = this.a1localy = this.a1relx = this.a1rely = 0;
        this.equal = !1;
        this.scale = this.jointMin = this.jointMax = 0;
        this.outer_zn = null;
        M.ZPP_Constraint.call(this);
        this.jAccy = this.jAccx = this.nrely = this.nrelx = this.nlocaly = this.nlocalx = this.a2rely = this.a2relx = this.a2localy = this.a2localx = this.a1rely = this.a1relx = this.a1localy = this.a1localx = 0;
        this.jMax = Math.POSITIVE_INFINITY;
        this.jointMin = Math.NEGATIVE_INFINITY;
        this.jointMax = Math.POSITIVE_INFINITY;
        this.stepped = !1
    };
    j["zpp_nape.constraint.ZPP_LineJoint"] = M.ZPP_LineJoint;
    M.ZPP_LineJoint.__name__ = ["zpp_nape", "constraint", "ZPP_LineJoint"];
    M.ZPP_LineJoint.__super__ = M.ZPP_Constraint;
    M.ZPP_LineJoint.prototype = C(M.ZPP_Constraint.prototype, {
        draw: function() {},
        applyImpulsePos: function() {
            var a = 0,
                b = 0,
                a = this.b1.axisy * this.nlocalx - this.b1.axisx * this.nlocaly,
                b = this.nlocalx * this.b1.axisx + this.nlocaly * this.b1.axisy,
                c = 0,
                d = 0,
                c = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy,
                d = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy,
                f = 0,
                e = 0,
                f = this.b2.axisy * this.a2localx - this.b2.axisx *
                this.a2localy,
                e = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy,
                l = 0,
                s = 0,
                g, h = 0,
                i = 0,
                l = this.b2.posx + f - this.b1.posx - c,
                s = this.b2.posy + e - this.b1.posy - d,
                h = s * a - l * b,
                i = a * l + b * s;
            this.equal ? (i -= this.jointMin, g = 1) : i > this.jointMax ? (i -= this.jointMax, g = 1) : i < this.jointMin ? (i = this.jointMin - i, g = -1) : g = i = 0;
            if (this.breakUnderError && h * h + i * i > this.maxError * this.maxError) return !0;
            if (h * h + i * i < x.constraintLinearSlop * x.constraintLinearSlop) return !1;
            var j = 0,
                k = 0,
                m = 0.5,
                h = h * m,
                i = i * m;
            6 < h * h + i * i && (m = this.b1.smass + this.b2.smass,
                m > x.epsilon && (m = 0.8 / m, i = m * (b * h - g * a * i), g = m * (a * h * g - b * h), m = this.b1.imass, this.b1.posx -= i * m, this.b1.posy -= g * m, m = this.b2.imass, this.b2.posx += i * m, this.b2.posy += g * m, l = this.b2.posx + f - this.b1.posx - c, s = this.b2.posy + e - this.b1.posy - d, i = a * l + b * s, this.equal ? (i -= this.jointMin, g = 1) : i > this.jointMax ? (i -= this.jointMax, g = 1) : i < this.jointMin ? (i = this.jointMin - i, g = -1) : g = i = 0, m = 0.5, h = (s * a - l * b) * m, i *= m));
            var r = 0,
                q = 0,
                j = m = m = 0,
                m = l + c,
                j = s + d,
                c = a * m + b * j,
                l = j * a - m * b,
                d = a * f + b * e,
                f = e * a - f * b,
                r = this.b1.smass + this.b2.smass + c * c * this.b1.sinertia +
                d * d * this.b2.sinertia,
                q = -g * (c * l * this.b1.sinertia + d * f * this.b2.sinertia),
                m = g * g * (this.b1.smass + this.b2.smass + l * l * this.b1.sinertia + f * f * this.b2.sinertia),
                j = -h,
                k = -i,
                e = r * m - q * q;
            e != e ? j = k = 0 : 0 == e ? (j = 0 != r ? j / r : 0, k = 0 != m ? k / m : 0) : (e = 1 / e, m = e * (m * j - q * k), k = e * (r * k - q * j), j = m);
            0 < k && (k = 0);
            e = g * a * k - b * j;
            a = a * j + g * b * k;
            m = this.b1.imass;
            this.b1.posx -= e * m;
            this.b1.posy -= a * m;
            m = this.b2.imass;
            this.b2.posx += e * m;
            this.b2.posy += a * m;
            this.b1.delta_rot((g * l * k - c * j) * this.b1.iinertia);
            this.b2.delta_rot((d * j - g * f * k) * this.b2.iinertia);
            return !1
        },
        applyImpulseVel: function() {
            var a =
                0,
                b = 0,
                c = 0,
                d = 0,
                c = this.b2.velx - this.b1.velx,
                d = this.b2.vely - this.b1.vely,
                c = c + (this.b2.kinvelx - this.b1.kinvelx),
                d = d + (this.b2.kinvely - this.b1.kinvely),
                a = d * this.nrelx - c * this.nrely + (this.b2.angvel + this.b2.kinangvel) * this.dot2 - (this.b1.angvel + this.b1.kinangvel) * this.dot1,
                b = this.scale * (this.nrelx * c + this.nrely * d - (this.b2.angvel + this.b2.kinangvel) * this.cx2 + (this.b1.angvel + this.b1.kinangvel) * this.cx1),
                d = c = 0,
                c = this.biasx - a,
                d = this.biasy - b,
                a = this.kMassa * c + this.kMassb * d,
                d = this.kMassb * c + this.kMassc * d,
                c = a,
                a = this.gamma,
                c = c - this.jAccx * a,
                d = d - this.jAccy * a,
                f = b = 0,
                b = this.jAccx,
                f = this.jAccy,
                a = 1;
            this.jAccx += c * a;
            this.jAccy += d * a;
            0 < this.jAccy && (this.jAccy = 0);
            if (this.breakUnderForce) {
                if (this.jAccx * this.jAccx + this.jAccy * this.jAccy > this.jMax * this.jMax) return !0
            } else this.stiff || (a = this.jMax, c = this.jAccx * this.jAccx + this.jAccy * this.jAccy, c > a * a && (c = a * (1 / Math.sqrt(c)), this.jAccx *= c, this.jAccy *= c));
            c = this.jAccx - b;
            d = this.jAccy - f;
            b = this.scale * this.nrelx * d - this.nrely * c;
            f = this.nrelx * c + this.scale * this.nrely * d;
            a = this.b1.imass;
            this.b1.velx -=
                b * a;
            this.b1.vely -= f * a;
            a = this.b2.imass;
            this.b2.velx += b * a;
            this.b2.vely += f * a;
            this.b1.angvel += (this.scale * this.cx1 * d - this.dot1 * c) * this.b1.iinertia;
            this.b2.angvel += (this.dot2 * c - this.scale * this.cx2 * d) * this.b2.iinertia;
            return !1
        },
        warmStart: function() {
            var a = this.scale * this.nrelx * this.jAccy - this.nrely * this.jAccx,
                b = this.nrelx * this.jAccx + this.scale * this.nrely * this.jAccy,
                c = this.b1.imass;
            this.b1.velx -= a * c;
            this.b1.vely -= b * c;
            c = this.b2.imass;
            this.b2.velx += a * c;
            this.b2.vely += b * c;
            this.b1.angvel += (this.scale * this.cx1 *
                this.jAccy - this.dot1 * this.jAccx) * this.b1.iinertia;
            this.b2.angvel += (this.dot2 * this.jAccx - this.scale * this.cx2 * this.jAccy) * this.b2.iinertia
        },
        preStep: function(a) {
            -1 == this.pre_dt && (this.pre_dt = a);
            var b = a / this.pre_dt;
            this.pre_dt = a;
            this.equal = this.jointMin == this.jointMax;
            this.stepped = !0;
            this.validate_norm();
            this.a1relx = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
            this.a1rely = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
            this.nrelx = this.b1.axisy * this.nlocalx - this.b1.axisx * this.nlocaly;
            this.nrely = this.nlocalx * this.b1.axisx + this.nlocaly * this.b1.axisy;
            this.a2relx = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
            this.a2rely = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
            var c = 0,
                d = 0,
                f = 0,
                e = 0,
                c = this.b2.posx + this.a2relx - this.b1.posx - this.a1relx,
                d = this.b2.posy + this.a2rely - this.b1.posy - this.a1rely,
                f = d * this.nrelx - c * this.nrely,
                e = this.nrelx * c + this.nrely * d;
            this.equal ? (e -= this.jointMin, this.scale = 1) : e > this.jointMax ? (e -= this.jointMax, this.scale = 1) : e < this.jointMin ? (e = this.jointMin -
                e, this.scale = -1) : this.scale = e = 0;
            var l = 0,
                s = 0,
                l = c + this.a1relx,
                s = d + this.a1rely;
            this.dot1 = this.nrelx * l + this.nrely * s;
            this.cx1 = s * this.nrelx - l * this.nrely;
            this.dot2 = this.nrelx * this.a2relx + this.nrely * this.a2rely;
            this.cx2 = this.a2rely * this.nrelx - this.a2relx * this.nrely;
            this.kMassa = this.b1.smass + this.b2.smass + this.dot1 * this.dot1 * this.b1.sinertia + this.dot2 * this.dot2 * this.b2.sinertia;
            this.kMassb = -this.scale * (this.dot1 * this.cx1 * this.b1.sinertia + this.dot2 * this.cx2 * this.b2.sinertia);
            this.kMassc = this.scale * this.scale *
                (this.b1.smass + this.b2.smass + this.cx1 * this.cx1 * this.b1.sinertia + this.cx2 * this.cx2 * this.b2.sinertia);
            c = function(a) {
                var b = a.kMassa * a.kMassc - a.kMassb * a.kMassb;
                b != b ? (a.kMassa = a.kMassb = a.kMassc = 0, a = 3) : a = 0 == b ? function(a) {
                    var b = 0;
                    0 != a.kMassa ? a.kMassa = 1 / a.kMassa : (a.kMassa = 0, b |= 1);
                    0 != a.kMassc ? a.kMassc = 1 / a.kMassc : (a.kMassc = 0, b |= 2);
                    a.kMassb = 0;
                    return b
                }(a) : function(a) {
                    b = 1 / b;
                    var c = a.kMassc * b;
                    a.kMassc = a.kMassa * b;
                    a.kMassa = c;
                    a.kMassb *= -b;
                    return 0
                }(a);
                return a
            }(this);
            0 != (c & 1) && (this.jAccx = 0);
            0 != (c & 2) && (this.jAccy =
                0);
            if (this.stiff) this.biasy = this.biasx = this.gamma = 0;
            else {
                if (this.breakUnderError && f * f + e * e > this.maxError * this.maxError) return !0;
                var g, c = function(b) {
                    var c = 2 * Math.PI * b.frequency;
                    b.gamma = 1 / (a * c * (2 * b.damping + c * a));
                    var d = 1 / (1 + b.gamma);
                    g = a * c * c * b.gamma;
                    b.gamma *= d;
                    return d
                }(this);
                this.kMassa *= c;
                this.kMassb *= c;
                this.kMassc *= c;
                this.biasx = f;
                this.biasy = e;
                f = -g;
                this.biasx *= f;
                this.biasy *= f;
                f = this.maxError;
                e = this.biasx * this.biasx + this.biasy * this.biasy;
                e > f * f && (f *= 1 / Math.sqrt(e), this.biasx *= f, this.biasy *= f)
            }
            f = b;
            this.jAccx *=
                f;
            this.jAccy *= f;
            this.jMax = this.maxForce * a;
            return !1
        },
        clearcache: function() {
            this.jAccy = this.jAccx = 0;
            this.pre_dt = -1
        },
        pair_exists: function(a, b) {
            return this.b1.id == a && this.b2.id == b || this.b1.id == b && this.b2.id == a
        },
        forest: function() {
            if (this.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC) {
                var a = this.b1.component == this.b1.component.parent ? this.b1.component : function(a) {
                        for (var a = a.b1.component, b = null; a != a.parent;) {
                            var f = a.parent;
                            a.parent = b;
                            b = a;
                            a = f
                        }
                        for (; null != b;) f = b.parent, b.parent = a, b = f;
                        return a
                    }(this),
                    b = this.component ==
                    this.component.parent ? this.component : function(a) {
                        for (var a = a.component, b = null; a != a.parent;) {
                            var f = a.parent;
                            a.parent = b;
                            b = a;
                            a = f
                        }
                        for (; null != b;) f = b.parent, b.parent = a, b = f;
                        return a
                    }(this);
                a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++))
            }
            this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (a = this.b2.component == this.b2.component.parent ? this.b2.component : function(a) {
                for (var a = a.b2.component, b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent, b.parent = a,
                    b = f;
                return a
            }(this), b = this.component == this.component.parent ? this.component : function(a) {
                for (var a = a.component, b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent, b.parent = a, b = f;
                return a
            }(this), a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++)))
        },
        wake_connected: function() {
            null != this.b1 && this.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.b1.wake();
            null != this.b2 && this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.b2.wake()
        },
        validate: function() {
            if (null ==
                this.b1 || null == this.b2) throw "Error: AngleJoint cannot be simulated null bodies";
            if (this.b1 == this.b2) throw "Error: DistanceJoint cannot be simulated with body1 == body2";
            if (this.b1.space != this.space || this.b2.space != this.space) throw "Error: Constraints must have each body within the same space to which the constraint has been assigned";
            if (this.jointMin > this.jointMax) throw "Error: DistanceJoint must have jointMin <= jointMax";
            if (this.nlocalx * this.nlocalx + this.nlocaly * this.nlocaly < x.epsilon) throw "Error: DistanceJoint direction must be non-degenerate";
            if (this.b1.type != e.ZPP_Flags.id_BodyType_DYNAMIC && this.b2.type != e.ZPP_Flags.id_BodyType_DYNAMIC) throw "Error: Constraints cannot have both bodies non-dynamic";
        },
        copy: function(a, b) {
            var c = new N.LineJoint(null, null, this.outer_zn.get_anchor1(), this.outer_zn.get_anchor2(), this.outer_zn.get_direction(), this.jointMin, this.jointMax);
            this.copyto(c);
            if (null != a && null != this.b1) {
                for (var d = null, f = 0; f < a.length;) {
                    var e = a[f];
                    ++f;
                    if (e.id == this.b1.id) {
                        d = e.bc;
                        break
                    }
                }
                null != d ? c.zpp_inner_zn.b1 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b1.id,
                    function(a) {
                        c.zpp_inner_zn.b1 = a.zpp_inner
                    }))
            }
            if (null != a && null != this.b2) {
                d = null;
                for (f = 0; f < a.length;)
                    if (e = a[f], ++f, e.id == this.b2.id) {
                        d = e.bc;
                        break
                    }
                null != d ? c.zpp_inner_zn.b2 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b2.id, function(a) {
                    c.zpp_inner_zn.b2 = a.zpp_inner
                }))
            }
            return c
        },
        validate_norm: function() {
            if (this.zip_n) {
                this.zip_n = !1;
                var a = 1 / Math.sqrt(this.nlocalx * this.nlocalx + this.nlocaly * this.nlocaly);
                this.nlocalx *= a;
                this.nlocaly *= a
            }
        },
        setup_n: function() {
            this.wrap_n = u.Vec2.get(this.nlocalx, this.nlocaly,
                null);
            this.wrap_n.zpp_inner._inuse = !0;
            this.wrap_n.zpp_inner._validate = w(this, this.validate_n);
            this.wrap_n.zpp_inner._invalidate = w(this, this.invalidate_n)
        },
        invalidate_n: function(a) {
            this.immutable_midstep("Constraint::n");
            this.nlocalx = a.x;
            this.nlocaly = a.y;
            this.zip_n = !0;
            this.wake()
        },
        validate_n: function() {
            this.wrap_n.zpp_inner.x = this.nlocalx;
            this.wrap_n.zpp_inner.y = this.nlocaly
        },
        setup_a2: function() {
            this.wrap_a2 = u.Vec2.get(this.a2localx, this.a2localy, null);
            this.wrap_a2.zpp_inner._inuse = !0;
            this.wrap_a2.zpp_inner._validate =
                w(this, this.validate_a2);
            this.wrap_a2.zpp_inner._invalidate = w(this, this.invalidate_a2)
        },
        invalidate_a2: function(a) {
            this.immutable_midstep("Constraint::a2");
            this.a2localx = a.x;
            this.a2localy = a.y;
            this.wake()
        },
        validate_a2: function() {
            this.wrap_a2.zpp_inner.x = this.a2localx;
            this.wrap_a2.zpp_inner.y = this.a2localy
        },
        setup_a1: function() {
            this.wrap_a1 = u.Vec2.get(this.a1localx, this.a1localy, null);
            this.wrap_a1.zpp_inner._inuse = !0;
            this.wrap_a1.zpp_inner._validate = w(this, this.validate_a1);
            this.wrap_a1.zpp_inner._invalidate =
                w(this, this.invalidate_a1)
        },
        invalidate_a1: function(a) {
            this.immutable_midstep("Constraint::a1");
            this.a1localx = a.x;
            this.a1localy = a.y;
            this.wake()
        },
        validate_a1: function() {
            this.wrap_a1.zpp_inner.x = this.a1localx;
            this.wrap_a1.zpp_inner.y = this.a1localy
        },
        inactiveBodies: function() {
            null != this.b1 && this.b1.constraints.remove(this);
            this.b2 != this.b1 && null != this.b2 && this.b2.constraints.remove(this)
        },
        activeBodies: function() {
            null != this.b1 && this.b1.constraints.add(this);
            this.b2 != this.b1 && null != this.b2 && this.b2.constraints.add(this)
        },
        bodyImpulse: function(a) {
            if (this.stepped) {
                var b = this.scale * this.nrelx * this.jAccy - this.nrely * this.jAccx,
                    c = this.nrelx * this.jAccx + this.scale * this.nrely * this.jAccy;
                return a == this.b1 ? u.Vec3.get(-b, -c, this.scale * this.cx1 * c - this.dot1 * b) : u.Vec3.get(b, c, this.scale * this.cx1 * c - this.dot1 * b)
            }
            return u.Vec3.get(0, 0, 0)
        },
        __class__: M.ZPP_LineJoint
    });
    M.ZPP_MotorJoint = function() {
        this.stepped = !1;
        this.kMass = this.jAcc = this.jMax = 0;
        this.b1 = this.b2 = null;
        this.ratio = this.rate = 0;
        this.outer_zn = null;
        M.ZPP_Constraint.call(this);
        this.jAcc = 0;
        this.stepped = !1;
        this.__velocity = !0
    };
    j["zpp_nape.constraint.ZPP_MotorJoint"] = M.ZPP_MotorJoint;
    M.ZPP_MotorJoint.__name__ = ["zpp_nape", "constraint", "ZPP_MotorJoint"];
    M.ZPP_MotorJoint.__super__ = M.ZPP_Constraint;
    M.ZPP_MotorJoint.prototype = C(M.ZPP_Constraint.prototype, {
        applyImpulsePos: function() {
            return !1
        },
        applyImpulseVel: function() {
            var a = -this.kMass * (this.ratio * (this.b2.angvel + this.b2.kinangvel) - this.b1.angvel - this.b1.kinangvel - this.rate),
                b = this.jAcc;
            this.jAcc += a;
            if (this.breakUnderForce) {
                if (this.jAcc >
                    this.jMax || this.jAcc < -this.jMax) return !0
            } else this.jAcc < -this.jMax ? this.jAcc = -this.jMax : this.jAcc > this.jMax && (this.jAcc = this.jMax);
            a = this.jAcc - b;
            this.b1.angvel -= this.b1.iinertia * a;
            this.b2.angvel += this.ratio * this.b2.iinertia * a;
            return !1
        },
        warmStart: function() {
            this.b1.angvel -= this.b1.iinertia * this.jAcc;
            this.b2.angvel += this.ratio * this.b2.iinertia * this.jAcc
        },
        preStep: function(a) {
            -1 == this.pre_dt && (this.pre_dt = a);
            var b = a / this.pre_dt;
            this.pre_dt = a;
            this.stepped = !0;
            this.kMass = this.b1.sinertia + this.ratio * this.ratio *
                this.b2.sinertia;
            this.kMass = 1 / this.kMass;
            this.jAcc *= b;
            this.jMax = this.maxForce * a;
            return !1
        },
        clearcache: function() {
            this.jAcc = 0;
            this.pre_dt = -1
        },
        pair_exists: function(a, b) {
            return this.b1.id == a && this.b2.id == b || this.b1.id == b && this.b2.id == a
        },
        forest: function() {
            if (this.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC) {
                var a = this.b1.component == this.b1.component.parent ? this.b1.component : function(a) {
                        for (var a = a.b1.component, b = null; a != a.parent;) {
                            var f = a.parent;
                            a.parent = b;
                            b = a;
                            a = f
                        }
                        for (; null != b;) f = b.parent, b.parent = a, b = f;
                        return a
                    }(this),
                    b = this.component == this.component.parent ? this.component : function(a) {
                        for (var a = a.component, b = null; a != a.parent;) {
                            var f = a.parent;
                            a.parent = b;
                            b = a;
                            a = f
                        }
                        for (; null != b;) f = b.parent, b.parent = a, b = f;
                        return a
                    }(this);
                a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++))
            }
            this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (a = this.b2.component == this.b2.component.parent ? this.b2.component : function(a) {
                for (var a = a.b2.component, b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null !=
                    b;) f = b.parent, b.parent = a, b = f;
                return a
            }(this), b = this.component == this.component.parent ? this.component : function(a) {
                for (var a = a.component, b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent, b.parent = a, b = f;
                return a
            }(this), a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++)))
        },
        wake_connected: function() {
            null != this.b1 && this.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.b1.wake();
            null != this.b2 && this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.b2.wake()
        },
        validate: function() {
            if (null == this.b1 || null == this.b2) throw "Error: AngleJoint cannot be simulated null bodies";
            if (this.b1 == this.b2) throw "Error: MotorJoint cannot be simulated with body1 == body2";
            if (this.b1.space != this.space || this.b2.space != this.space) throw "Error: Constraints must have each body within the same space to which the constraint has been assigned";
            if (this.b1.type != e.ZPP_Flags.id_BodyType_DYNAMIC && this.b2.type != e.ZPP_Flags.id_BodyType_DYNAMIC) throw "Error: Constraints cannot have both bodies non-dynamic";
        },
        copy: function(a, b) {
            var c = new N.MotorJoint(null, null, this.rate, this.ratio);
            this.copyto(c);
            if (null != a && null != this.b1) {
                for (var d = null, f = 0; f < a.length;) {
                    var e = a[f];
                    ++f;
                    if (e.id == this.b1.id) {
                        d = e.bc;
                        break
                    }
                }
                null != d ? c.zpp_inner_zn.b1 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b1.id, function(a) {
                    c.zpp_inner_zn.b1 = a.zpp_inner
                }))
            }
            if (null != a && null != this.b2) {
                d = null;
                for (f = 0; f < a.length;)
                    if (e = a[f], ++f, e.id == this.b2.id) {
                        d = e.bc;
                        break
                    }
                null != d ? c.zpp_inner_zn.b2 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b2.id, function(a) {
                    c.zpp_inner_zn.b2 =
                        a.zpp_inner
                }))
            }
            return c
        },
        inactiveBodies: function() {
            null != this.b1 && this.b1.constraints.remove(this);
            this.b2 != this.b1 && null != this.b2 && this.b2.constraints.remove(this)
        },
        activeBodies: function() {
            null != this.b1 && this.b1.constraints.add(this);
            this.b2 != this.b1 && null != this.b2 && this.b2.constraints.add(this)
        },
        bodyImpulse: function(a) {
            return this.stepped ? a == this.b1 ? u.Vec3.get(0, 0, -this.jAcc) : u.Vec3.get(0, 0, this.ratio * this.jAcc) : u.Vec3.get(0, 0, 0)
        },
        __class__: M.ZPP_MotorJoint
    });
    M.ZPP_PivotJoint = function() {
        this.stepped = !1;
        this.kMassa = this.kMassb = this.kMassc = this.jAccx = this.jAccy = this.jMax = this.gamma = this.biasx = this.biasy = 0;
        this.wrap_a2 = null;
        this.a2localx = this.a2localy = this.a2relx = this.a2rely = 0;
        this.wrap_a1 = this.b2 = null;
        this.a1localx = this.a1localy = this.a1relx = this.a1rely = 0;
        this.outer_zn = this.b1 = null;
        M.ZPP_Constraint.call(this);
        this.stepped = !1;
        this.jAccy = this.jAccx = 0;
        this.jMax = Math.POSITIVE_INFINITY;
        this.a2rely = this.a2relx = this.a2localy = this.a2localx = this.a1rely = this.a1relx = this.a1localy = this.a1localx = 0
    };
    j["zpp_nape.constraint.ZPP_PivotJoint"] =
        M.ZPP_PivotJoint;
    M.ZPP_PivotJoint.__name__ = ["zpp_nape", "constraint", "ZPP_PivotJoint"];
    M.ZPP_PivotJoint.__super__ = M.ZPP_Constraint;
    M.ZPP_PivotJoint.prototype = C(M.ZPP_Constraint.prototype, {
        draw: function() {},
        applyImpulsePos: function() {
            var a = 0,
                b = 0,
                a = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy,
                b = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy,
                c = 0,
                d = 0,
                c = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy,
                d = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy,
                f = 0,
                e = 0,
                f = this.b2.posx +
                c - (this.b1.posx + a),
                e = this.b2.posy + d - (this.b1.posy + b);
            if (this.breakUnderError && f * f + e * e > this.maxError * this.maxError) return !0;
            if (f * f + e * e < x.constraintLinearSlop * x.constraintLinearSlop) return !1;
            var l = 0.5,
                f = f * l,
                e = e * l,
                s = 0,
                g = 0;
            if (6 < f * f + e * e) {
                var i = this.b1.smass + this.b2.smass;
                i > x.epsilon && (i = 0.75 / i, s = -f * i, g = -e * i, l = 20, f = s * s + g * g, f > l * l && (f = l * (1 / Math.sqrt(f)), s *= f, g *= f), l = this.b1.imass, this.b1.posx -= s * l, this.b1.posy -= g * l, l = this.b2.imass, this.b2.posx += s * l, this.b2.posy += g * l, f = this.b2.posx + c - (this.b1.posx + a), e = this.b2.posy +
                    d - (this.b1.posy + b), l = 0.5, f *= l, e *= l)
            }
            var h = i = 0,
                j = 0,
                i = j = this.b1.smass + this.b2.smass,
                h = 0;
            0 != this.b1.sinertia && (s = a * this.b1.sinertia, g = b * this.b1.sinertia, i += g * b, h += -g * a, j += s * a);
            0 != this.b2.sinertia && (s = c * this.b2.sinertia, g = d * this.b2.sinertia, i += g * d, h += -g * c, j += s * c);
            s = -f;
            g = -e;
            l = 6;
            f = s * s + g * g;
            f > l * l && (f = l * (1 / Math.sqrt(f)), s *= f, g *= f);
            f = i * j - h * h;
            f != f ? s = g = 0 : 0 == f ? (s = 0 != i ? s / i : 0, g = 0 != j ? g / j : 0) : (f = 1 / f, l = f * (j * s - h * g), g = f * (i * g - h * s), s = l);
            l = this.b1.imass;
            this.b1.posx -= s * l;
            this.b1.posy -= g * l;
            l = this.b2.imass;
            this.b2.posx += s *
                l;
            this.b2.posy += g * l;
            this.b1.delta_rot(-(g * a - s * b) * this.b1.iinertia);
            this.b2.delta_rot((g * c - s * d) * this.b2.iinertia);
            return !1
        },
        applyImpulseVel: function() {
            var a = 0,
                b = 0,
                a = this.b2.velx + this.b2.kinvelx - this.a2rely * (this.b2.angvel + this.b2.kinangvel) - (this.b1.velx + this.b1.kinvelx - this.a1rely * (this.b1.angvel + this.b1.kinangvel)),
                b = this.b2.vely + this.b2.kinvely + this.a2relx * (this.b2.angvel + this.b2.kinangvel) - (this.b1.vely + this.b1.kinvely + this.a1relx * (this.b1.angvel + this.b1.kinangvel)),
                c = 0,
                d = 0,
                c = this.biasx - a,
                d = this.biasy -
                b,
                f = this.kMassa * c + this.kMassb * d,
                d = this.kMassb * c + this.kMassc * d,
                c = f,
                f = this.gamma,
                c = c - this.jAccx * f,
                d = d - this.jAccy * f,
                b = a = 0,
                a = this.jAccx,
                b = this.jAccy,
                f = 1;
            this.jAccx += c * f;
            this.jAccy += d * f;
            if (this.breakUnderForce) {
                if (this.jAccx * this.jAccx + this.jAccy * this.jAccy > this.jMax * this.jMax) return !0
            } else this.stiff || (f = this.jMax, c = this.jAccx * this.jAccx + this.jAccy * this.jAccy, c > f * f && (c = f * (1 / Math.sqrt(c)), this.jAccx *= c, this.jAccy *= c));
            c = this.jAccx - a;
            d = this.jAccy - b;
            f = this.b1.imass;
            this.b1.velx -= c * f;
            this.b1.vely -= d * f;
            f =
                this.b2.imass;
            this.b2.velx += c * f;
            this.b2.vely += d * f;
            this.b1.angvel -= (d * this.a1relx - c * this.a1rely) * this.b1.iinertia;
            this.b2.angvel += (d * this.a2relx - c * this.a2rely) * this.b2.iinertia;
            return !1
        },
        warmStart: function() {
            var a = this.b1.imass;
            this.b1.velx -= this.jAccx * a;
            this.b1.vely -= this.jAccy * a;
            a = this.b2.imass;
            this.b2.velx += this.jAccx * a;
            this.b2.vely += this.jAccy * a;
            this.b1.angvel -= (this.jAccy * this.a1relx - this.jAccx * this.a1rely) * this.b1.iinertia;
            this.b2.angvel += (this.jAccy * this.a2relx - this.jAccx * this.a2rely) * this.b2.iinertia
        },
        preStep: function(a) {
            -1 == this.pre_dt && (this.pre_dt = a);
            var b = a / this.pre_dt;
            this.pre_dt = a;
            this.stepped = !0;
            this.a1relx = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
            this.a1rely = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
            this.a2relx = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
            this.a2rely = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
            var c = this.b1.smass + this.b2.smass;
            this.kMassa = c;
            this.kMassb = 0;
            this.kMassc = c;
            if (0 != this.b1.sinertia) {
                var c = this.a1relx * this.b1.sinertia,
                    d = this.a1rely * this.b1.sinertia;
                this.kMassa += d * this.a1rely;
                this.kMassb += -d * this.a1relx;
                this.kMassc += c * this.a1relx
            }
            0 != this.b2.sinertia && (c = this.a2relx * this.b2.sinertia, d = this.a2rely * this.b2.sinertia, this.kMassa += d * this.a2rely, this.kMassb += -d * this.a2relx, this.kMassc += c * this.a2relx);
            c = function(a) {
                var b = a.kMassa * a.kMassc - a.kMassb * a.kMassb;
                b != b ? (a.kMassa = a.kMassb = a.kMassc = 0, a = 3) : a = 0 == b ? function(a) {
                    var b = 0;
                    0 != a.kMassa ? a.kMassa = 1 / a.kMassa : (a.kMassa = 0, b |= 1);
                    0 != a.kMassc ? a.kMassc = 1 / a.kMassc : (a.kMassc = 0, b |= 2);
                    a.kMassb = 0;
                    return b
                }(a) : function(a) {
                    b = 1 / b;
                    var c = a.kMassc * b;
                    a.kMassc = a.kMassa * b;
                    a.kMassa = c;
                    a.kMassb *= -b;
                    return 0
                }(a);
                return a
            }(this);
            0 != (c & 1) && (this.jAccx = 0);
            0 != (c & 2) && (this.jAccy = 0);
            if (this.stiff) this.gamma = this.biasy = this.biasx = 0;
            else {
                var f, c = function(b) {
                    var c = 2 * Math.PI * b.frequency;
                    b.gamma = 1 / (a * c * (2 * b.damping + c * a));
                    var d = 1 / (1 + b.gamma);
                    f = a * c * c * b.gamma;
                    b.gamma *= d;
                    return d
                }(this);
                this.kMassa *= c;
                this.kMassb *= c;
                this.kMassc *= c;
                this.biasx = this.b2.posx + this.a2relx - (this.b1.posx + this.a1relx);
                this.biasy = this.b2.posy +
                    this.a2rely - (this.b1.posy + this.a1rely);
                if (this.breakUnderError && this.biasx * this.biasx + this.biasy * this.biasy > this.maxError * this.maxError) return !0;
                c = -f;
                this.biasx *= c;
                this.biasy *= c;
                c = this.maxError;
                d = this.biasx * this.biasx + this.biasy * this.biasy;
                d > c * c && (c *= 1 / Math.sqrt(d), this.biasx *= c, this.biasy *= c)
            }
            c = b;
            this.jAccx *= c;
            this.jAccy *= c;
            this.jMax = this.maxForce * a;
            return !1
        },
        clearcache: function() {
            this.jAccy = this.jAccx = 0;
            this.pre_dt = -1
        },
        pair_exists: function(a, b) {
            return this.b1.id == a && this.b2.id == b || this.b1.id == b &&
                this.b2.id == a
        },
        forest: function() {
            if (this.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC) {
                var a = this.b1.component == this.b1.component.parent ? this.b1.component : function(a) {
                        for (var a = a.b1.component, b = null; a != a.parent;) {
                            var f = a.parent;
                            a.parent = b;
                            b = a;
                            a = f
                        }
                        for (; null != b;) f = b.parent, b.parent = a, b = f;
                        return a
                    }(this),
                    b = this.component == this.component.parent ? this.component : function(a) {
                        for (var a = a.component, b = null; a != a.parent;) {
                            var f = a.parent;
                            a.parent = b;
                            b = a;
                            a = f
                        }
                        for (; null != b;) f = b.parent, b.parent = a, b = f;
                        return a
                    }(this);
                a !=
                    b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++))
            }
            this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (a = this.b2.component == this.b2.component.parent ? this.b2.component : function(a) {
                for (var a = a.b2.component, b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent, b.parent = a, b = f;
                return a
            }(this), b = this.component == this.component.parent ? this.component : function(a) {
                for (var a = a.component, b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent,
                    b.parent = a, b = f;
                return a
            }(this), a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++)))
        },
        wake_connected: function() {
            null != this.b1 && this.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.b1.wake();
            null != this.b2 && this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.b2.wake()
        },
        validate: function() {
            if (null == this.b1 || null == this.b2) throw "Error: PivotJoint cannot be simulated null bodies";
            if (this.b1 == this.b2) throw "Error: PivotJoint cannot be simulated with body1 == body2 (body1=body2=" +
                this.b1.outer.toString() + ")";
            if (this.b1.space != this.space || this.b2.space != this.space) throw "Error: Constraints must have each body within the same space to which the constraint has been assigned (body1=" + this.b1.outer.toString() + ", body2=" + this.b2.outer.toString() + ")";
            if (this.b1.type != e.ZPP_Flags.id_BodyType_DYNAMIC && this.b2.type != e.ZPP_Flags.id_BodyType_DYNAMIC) throw "Error: Constraints cannot have both bodies non-dynamic (body1=" + this.b1.outer.toString() + ", body2=" + this.b2.outer.toString() + ")";
        },
        copy: function(a, b) {
            var c = new N.PivotJoint(null, null, this.outer_zn.get_anchor1(), this.outer_zn.get_anchor2());
            this.copyto(c);
            if (null != a && null != this.b1) {
                for (var d = null, f = 0; f < a.length;) {
                    var e = a[f];
                    ++f;
                    if (e.id == this.b1.id) {
                        d = e.bc;
                        break
                    }
                }
                null != d ? c.zpp_inner_zn.b1 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b1.id, function(a) {
                    c.zpp_inner_zn.b1 = a.zpp_inner
                }))
            }
            if (null != a && null != this.b2) {
                d = null;
                for (f = 0; f < a.length;)
                    if (e = a[f], ++f, e.id == this.b2.id) {
                        d = e.bc;
                        break
                    }
                null != d ? c.zpp_inner_zn.b2 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b2.id,
                    function(a) {
                        c.zpp_inner_zn.b2 = a.zpp_inner
                    }))
            }
            return c
        },
        setup_a2: function() {
            this.wrap_a2 = u.Vec2.get(this.a2localx, this.a2localy, null);
            this.wrap_a2.zpp_inner._inuse = !0;
            this.wrap_a2.zpp_inner._validate = w(this, this.validate_a2);
            this.wrap_a2.zpp_inner._invalidate = w(this, this.invalidate_a2)
        },
        invalidate_a2: function(a) {
            this.immutable_midstep("Constraint::a2");
            this.a2localx = a.x;
            this.a2localy = a.y;
            this.wake()
        },
        validate_a2: function() {
            this.wrap_a2.zpp_inner.x = this.a2localx;
            this.wrap_a2.zpp_inner.y = this.a2localy
        },
        setup_a1: function() {
            this.wrap_a1 = u.Vec2.get(this.a1localx, this.a1localy, null);
            this.wrap_a1.zpp_inner._inuse = !0;
            this.wrap_a1.zpp_inner._validate = w(this, this.validate_a1);
            this.wrap_a1.zpp_inner._invalidate = w(this, this.invalidate_a1)
        },
        invalidate_a1: function(a) {
            this.immutable_midstep("Constraint::a1");
            this.a1localx = a.x;
            this.a1localy = a.y;
            this.wake()
        },
        validate_a1: function() {
            this.wrap_a1.zpp_inner.x = this.a1localx;
            this.wrap_a1.zpp_inner.y = this.a1localy
        },
        inactiveBodies: function() {
            null != this.b1 && this.b1.constraints.remove(this);
            this.b2 != this.b1 && null != this.b2 && this.b2.constraints.remove(this)
        },
        activeBodies: function() {
            null != this.b1 && this.b1.constraints.add(this);
            this.b2 != this.b1 && null != this.b2 && this.b2.constraints.add(this)
        },
        bodyImpulse: function(a) {
            return this.stepped ? a == this.b1 ? u.Vec3.get(-this.jAccx, -this.jAccy, -(this.jAccy * this.a1relx - this.jAccx * this.a1rely)) : u.Vec3.get(this.jAccx, this.jAccy, this.jAccy * this.a2relx - this.jAccx * this.a2rely) : u.Vec3.get(0, 0, 0)
        },
        __class__: M.ZPP_PivotJoint
    });
    M.ZPP_PulleyJoint = function() {
        this.stepped = !1;
        this.kMass = this.jAcc = this.jMax = this.gamma = this.bias = 0;
        this.wrap_a4 = null;
        this.a4localx = this.a4localy = this.a4relx = this.a4rely = 0;
        this.wrap_a3 = this.b4 = null;
        this.a3localx = this.a3localy = this.a3relx = this.a3rely = 0;
        this.wrap_a2 = this.b3 = null;
        this.a2localx = this.a2localy = this.a2relx = this.a2rely = 0;
        this.wrap_a1 = this.b2 = null;
        this.a1localx = this.a1localy = this.a1relx = this.a1rely = 0;
        this.b1 = null;
        this.n12x = this.n12y = this.n34x = this.n34y = this.cx1 = this.cx2 = this.cx3 = this.cx4 = 0;
        this.slack = this.equal = !1;
        this.jointMin = this.jointMax =
            0;
        this.ratio = 1;
        this.outer_zn = null;
        M.ZPP_Constraint.call(this);
        this.a4rely = this.a4relx = this.a4localy = this.a4localx = this.a3rely = this.a3relx = this.a3localy = this.a3localx = this.a2rely = this.a2relx = this.a2localy = this.a2localx = this.a1rely = this.a1relx = this.a1localy = this.a1localx = 0;
        this.n12x = 1;
        this.n12y = 0;
        this.n34x = 1;
        this.jAcc = this.n34y = 0;
        this.jMax = Math.POSITIVE_INFINITY;
        this.stepped = !1;
        this.cx1 = this.cx2 = this.cx3 = this.cx4 = 0
    };
    j["zpp_nape.constraint.ZPP_PulleyJoint"] = M.ZPP_PulleyJoint;
    M.ZPP_PulleyJoint.__name__ = ["zpp_nape", "constraint", "ZPP_PulleyJoint"];
    M.ZPP_PulleyJoint.__super__ = M.ZPP_Constraint;
    M.ZPP_PulleyJoint.prototype = C(M.ZPP_Constraint.prototype, {
        draw: function() {},
        applyImpulsePos: function() {
            var a, b, c = 0,
                d = 0,
                c = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy,
                d = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy,
                f = 0,
                e = 0,
                f = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy,
                e = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy,
                l = 0,
                s = 0,
                l = this.b3.axisy * this.a3localx - this.b3.axisx * this.a3localy,
                s = this.a3localx * this.b3.axisx + this.a3localy * this.b3.axisy,
                g = 0,
                i = 0,
                g = this.b4.axisy * this.a4localx - this.b4.axisx * this.a4localy,
                i = this.a4localx * this.b4.axisx + this.a4localy * this.b4.axisy,
                h, j = 0,
                k = 0,
                m = 0,
                r = 0,
                j = this.n12x,
                k = this.n12y,
                m = this.n34x,
                r = this.n34y;
            a = function(a) {
                var b = 0,
                    q = 0,
                    o = 0,
                    p = 0,
                    b = a.b2.posx + f - (a.b1.posx + c),
                    q = a.b2.posy + e - (a.b1.posy + d),
                    o = a.b4.posx + g - (a.b3.posx + l),
                    p = a.b4.posy + i - (a.b3.posy + s),
                    t = Math.sqrt(b * b + q * q),
                    u = Math.sqrt(o * o + p * p);
                if (0 != t) {
                    var v = 1 / t;
                    j = b * v;
                    k = q * v
                }
                0 != u ? (v = 1 / u, m = o * v, r = p * v, v = a.ratio) :
                    v = a.ratio / Math.sqrt(m * m + r * r);
                m *= v;
                r *= v;
                b = t + a.ratio * u;
                a.equal ? (b -= a.jointMax, h = !1) : b < a.jointMin ? (b = a.jointMin - b, j = -j, k = -k, m = -m, r = -r, h = !1) : b > a.jointMax ? (b -= a.jointMax, h = !1) : (b = r = m = k = j = 0, h = !0);
                return b
            }(this);
            if (!h) {
                if (this.breakUnderError && a * a > this.maxError * this.maxError) return !0;
                if (a * a < x.constraintLinearSlop * x.constraintLinearSlop) return !1;
                a *= 0.5;
                if (6 < a * a && (b = this.b1.smass + this.b2.smass, b > x.epsilon && (b = -a * (0.75 / b), this.equal || 0 > b))) a = b * this.b1.imass, this.b1.posx -= j * a, this.b1.posy -= k * a, a = b * this.b2.imass,
                    this.b2.posx += j * a, this.b2.posy += k * a, a = b * this.b3.imass, this.b3.posx -= m * a, this.b3.posy -= r * a, a = b * this.b4.imass, this.b4.posx += m * a, this.b4.posy += r * a, a = function(a) {
                        var b = 0,
                            q = 0,
                            o = 0,
                            p = 0,
                            b = a.b2.posx + f - (a.b1.posx + c),
                            q = a.b2.posy + e - (a.b1.posy + d),
                            o = a.b4.posx + g - (a.b3.posx + l),
                            p = a.b4.posy + i - (a.b3.posy + s),
                            t = Math.sqrt(b * b + q * q),
                            u = Math.sqrt(o * o + p * p);
                        if (0 != t) {
                            var v = 1 / t;
                            j = b * v;
                            k = q * v
                        }
                        0 != u ? (v = 1 / u, m = o * v, r = p * v, v = a.ratio) : v = a.ratio / Math.sqrt(m * m + r * r);
                        m *= v;
                        r *= v;
                        b = t + a.ratio * u;
                        a.equal ? (b -= a.jointMax, h = !1) : b < a.jointMin ? (b = a.jointMin -
                            b, j = -j, k = -k, m = -m, r = -r, h = !1) : b > a.jointMax ? (b -= a.jointMax, h = !1) : (b = r = m = k = j = 0, h = !0);
                        return b
                    }(this), a *= 0.5;
                var q, o, p, t;
                b = function(a) {
                    q = k * c - j * d;
                    o = k * f - j * e;
                    p = r * l - m * s;
                    t = r * g - m * i;
                    var b = a.b1.smass + a.b2.smass + a.ratio * a.ratio * (a.b3.smass + a.b4.smass) + a.b1.sinertia * q * q + a.b2.sinertia * o * o + a.b3.sinertia * p * p + a.b4.sinertia * t * t;
                    a.b1 == a.b4 && (b -= 2 * ((j * m + k * r) * a.b1.smass + q * t * a.b1.sinertia));
                    a.b1 == a.b3 && (b += 2 * ((j * m + k * r) * a.b1.smass + q * p * a.b1.sinertia));
                    a.b2 == a.b3 && (b -= 2 * ((j * m + k * r) * a.b2.smass + o * p * a.b2.sinertia));
                    a.b2 == a.b4 &&
                        (b += 2 * ((j * m + k * r) * a.b2.smass + o * t * a.b2.sinertia));
                    return b
                }(this);
                0 != b && (b = 1 / b);
                b *= -a;
                if (this.equal || 0 > b) a = this.b1.imass * b, this.b1.posx -= j * a, this.b1.posy -= k * a, a = this.b2.imass * b, this.b2.posx += j * a, this.b2.posy += k * a, a = this.b3.imass * b, this.b3.posx -= m * a, this.b3.posy -= r * a, a = this.b4.imass * b, this.b4.posx += m * a, this.b4.posy += r * a, this.b1.delta_rot(-q * this.b1.iinertia * b), this.b2.delta_rot(o * this.b2.iinertia * b), this.b3.delta_rot(-p * this.b3.iinertia * b), this.b4.delta_rot(t * this.b4.iinertia * b)
            }
            return !1
        },
        applyImpulseVel: function() {
            if (this.slack) return !1;
            var a = this.kMass * (this.bias - (this.n12x * (this.b2.velx + this.b2.kinvelx - this.b1.velx - this.b1.kinvelx) + this.n12y * (this.b2.vely + this.b2.kinvely - this.b1.vely - this.b1.kinvely) + this.n34x * (this.b4.velx + this.b4.kinvelx - this.b3.velx - this.b3.kinvelx) + this.n34y * (this.b4.vely + this.b4.kinvely - this.b3.vely - this.b3.kinvely) + (this.b2.angvel + this.b2.kinangvel) * this.cx2 - (this.b1.angvel + this.b1.kinangvel) * this.cx1 + (this.b4.angvel + this.b4.kinangvel) * this.cx4 - (this.b3.angvel + this.b3.kinangvel) * this.cx3)) - this.jAcc * this.gamma,
                b = this.jAcc;
            this.jAcc += a;
            !this.equal && 0 < this.jAcc && (this.jAcc = 0);
            if (this.breakUnderForce && this.jAcc < -this.jMax) return !0;
            !this.stiff && this.jAcc < -this.jMax && (this.jAcc = -this.jMax);
            a = this.jAcc - b;
            b = this.b1.imass * a;
            this.b1.velx -= this.n12x * b;
            this.b1.vely -= this.n12y * b;
            b = this.b2.imass * a;
            this.b2.velx += this.n12x * b;
            this.b2.vely += this.n12y * b;
            b = this.b3.imass * a;
            this.b3.velx -= this.n34x * b;
            this.b3.vely -= this.n34y * b;
            b = this.b4.imass * a;
            this.b4.velx += this.n34x * b;
            this.b4.vely += this.n34y * b;
            this.b1.angvel -= this.cx1 * this.b1.iinertia *
                a;
            this.b2.angvel += this.cx2 * this.b2.iinertia * a;
            this.b3.angvel -= this.cx3 * this.b3.iinertia * a;
            this.b4.angvel += this.cx4 * this.b4.iinertia * a;
            return !1
        },
        warmStart: function() {
            if (!this.slack) {
                var a = this.b1.imass * this.jAcc;
                this.b1.velx -= this.n12x * a;
                this.b1.vely -= this.n12y * a;
                a = this.b2.imass * this.jAcc;
                this.b2.velx += this.n12x * a;
                this.b2.vely += this.n12y * a;
                a = this.b3.imass * this.jAcc;
                this.b3.velx -= this.n34x * a;
                this.b3.vely -= this.n34y * a;
                a = this.b4.imass * this.jAcc;
                this.b4.velx += this.n34x * a;
                this.b4.vely += this.n34y * a;
                this.b1.angvel -=
                    this.cx1 * this.b1.iinertia * this.jAcc;
                this.b2.angvel += this.cx2 * this.b2.iinertia * this.jAcc;
                this.b3.angvel -= this.cx3 * this.b3.iinertia * this.jAcc;
                this.b4.angvel += this.cx4 * this.b4.iinertia * this.jAcc
            }
        },
        preStep: function(a) {
            -1 == this.pre_dt && (this.pre_dt = a);
            var b = a / this.pre_dt;
            this.pre_dt = a;
            this.stepped = !0;
            this.equal = this.jointMin == this.jointMax;
            this.a1relx = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
            this.a1rely = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
            this.a2relx = this.b2.axisy * this.a2localx -
                this.b2.axisx * this.a2localy;
            this.a2rely = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
            this.a3relx = this.b3.axisy * this.a3localx - this.b3.axisx * this.a3localy;
            this.a3rely = this.a3localx * this.b3.axisx + this.a3localy * this.b3.axisy;
            this.a4relx = this.b4.axisy * this.a4localx - this.b4.axisx * this.a4localy;
            this.a4rely = this.a4localx * this.b4.axisx + this.a4localy * this.b4.axisy;
            var c = function(a) {
                var b = 0,
                    c = 0,
                    d = 0,
                    e = 0,
                    b = a.b2.posx + a.a2relx - (a.b1.posx + a.a1relx),
                    c = a.b2.posy + a.a2rely - (a.b1.posy + a.a1rely),
                    d = a.b4.posx +
                    a.a4relx - (a.b3.posx + a.a3relx),
                    e = a.b4.posy + a.a4rely - (a.b3.posy + a.a3rely),
                    g = Math.sqrt(b * b + c * c),
                    i = Math.sqrt(d * d + e * e);
                if (0 != g) {
                    var h = 1 / g;
                    a.n12x = b * h;
                    a.n12y = c * h
                }
                0 != i ? (h = 1 / i, a.n34x = d * h, a.n34y = e * h, h = a.ratio) : h = a.ratio / Math.sqrt(a.n34x * a.n34x + a.n34y * a.n34y);
                a.n34x *= h;
                a.n34y *= h;
                b = g + a.ratio * i;
                a.equal ? (b -= a.jointMax, a.slack = !1) : b < a.jointMin ? (b = a.jointMin - b, a.n12x = -a.n12x, a.n12y = -a.n12y, a.n34x = -a.n34x, a.n34y = -a.n34y, a.slack = !1) : b > a.jointMax ? (b -= a.jointMax, a.slack = !1) : (a.n12x = 0, a.n12y = 0, a.n34x = 0, b = a.n34y = 0, a.slack = !0);
                return b
            }(this);
            if (!this.slack) {
                this.kMass = function(a) {
                    a.cx1 = a.n12y * a.a1relx - a.n12x * a.a1rely;
                    a.cx2 = a.n12y * a.a2relx - a.n12x * a.a2rely;
                    a.cx3 = a.n34y * a.a3relx - a.n34x * a.a3rely;
                    a.cx4 = a.n34y * a.a4relx - a.n34x * a.a4rely;
                    var b = a.b1.smass + a.b2.smass + a.ratio * a.ratio * (a.b3.smass + a.b4.smass) + a.b1.sinertia * a.cx1 * a.cx1 + a.b2.sinertia * a.cx2 * a.cx2 + a.b3.sinertia * a.cx3 * a.cx3 + a.b4.sinertia * a.cx4 * a.cx4;
                    a.b1 == a.b4 && (b -= 2 * ((a.n12x * a.n34x + a.n12y * a.n34y) * a.b1.smass + a.cx1 * a.cx4 * a.b1.sinertia));
                    a.b1 == a.b3 && (b += 2 * ((a.n12x * a.n34x +
                        a.n12y * a.n34y) * a.b1.smass + a.cx1 * a.cx3 * a.b1.sinertia));
                    a.b2 == a.b3 && (b -= 2 * ((a.n12x * a.n34x + a.n12y * a.n34y) * a.b2.smass + a.cx2 * a.cx3 * a.b2.sinertia));
                    a.b2 == a.b4 && (b += 2 * ((a.n12x * a.n34x + a.n12y * a.n34y) * a.b2.smass + a.cx2 * a.cx4 * a.b2.sinertia));
                    return b
                }(this);
                0 != this.kMass ? this.kMass = 1 / this.kMass : this.jAcc = 0;
                if (this.stiff) this.gamma = this.bias = 0;
                else {
                    if (this.breakUnderError && c * c > this.maxError * this.maxError) return !0;
                    var d;
                    this.kMass *= function(b) {
                        var c = 2 * Math.PI * b.frequency;
                        b.gamma = 1 / (a * c * (2 * b.damping + c * a));
                        var e =
                            1 / (1 + b.gamma);
                        d = a * c * c * b.gamma;
                        b.gamma *= e;
                        return e
                    }(this);
                    this.bias = -c * d;
                    this.bias < -this.maxError ? this.bias = -this.maxError : this.bias > this.maxError && (this.bias = this.maxError)
                }
                this.jAcc *= b;
                this.jMax = this.maxForce * a
            }
            return !1
        },
        clearcache: function() {
            this.jAcc = 0;
            this.pre_dt = -1
        },
        pair_exists: function(a, b) {
            return this.b1.id == a && (this.b2.id == b || this.b3.id == b || this.b4.id == b) || this.b2.id == a && (this.b3.id == b || this.b4.id == b || this.b1.id == b) || this.b3.id == a && (this.b4.id == b || this.b1.id == b || this.b2.id == b) || this.b4.id ==
                a && (this.b1.id == b || this.b2.id == b || this.b3.id == b)
        },
        forest: function() {
            if (this.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC) {
                var a = this.b1.component == this.b1.component.parent ? this.b1.component : function(a) {
                        for (var a = a.b1.component, b = null; a != a.parent;) {
                            var f = a.parent;
                            a.parent = b;
                            b = a;
                            a = f
                        }
                        for (; null != b;) f = b.parent, b.parent = a, b = f;
                        return a
                    }(this),
                    b = this.component == this.component.parent ? this.component : function(a) {
                        for (var a = a.component, b = null; a != a.parent;) {
                            var f = a.parent;
                            a.parent = b;
                            b = a;
                            a = f
                        }
                        for (; null != b;) f = b.parent,
                            b.parent = a, b = f;
                        return a
                    }(this);
                a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++))
            }
            this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (a = this.b2.component == this.b2.component.parent ? this.b2.component : function(a) {
                for (var a = a.b2.component, b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent, b.parent = a, b = f;
                return a
            }(this), b = this.component == this.component.parent ? this.component : function(a) {
                for (var a = a.component, b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent =
                        b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent, b.parent = a, b = f;
                return a
            }(this), a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++)));
            this.b3.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (a = this.b3.component == this.b3.component.parent ? this.b3.component : function(a) {
                for (var a = a.b3.component, b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent, b.parent = a, b = f;
                return a
            }(this), b = this.component == this.component.parent ? this.component : function(a) {
                for (var a = a.component, b = null; a !=
                    a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent, b.parent = a, b = f;
                return a
            }(this), a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++)));
            this.b4.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (a = this.b4.component == this.b4.component.parent ? this.b4.component : function(a) {
                for (var a = a.b4.component, b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent, b.parent = a, b = f;
                return a
            }(this), b = this.component == this.component.parent ? this.component : function(a) {
                for (var a =
                        a.component, b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent, b.parent = a, b = f;
                return a
            }(this), a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++)))
        },
        wake_connected: function() {
            null != this.b1 && this.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.b1.wake();
            null != this.b2 && this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.b2.wake();
            null != this.b3 && this.b3.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.b3.wake();
            null != this.b4 && this.b4.type == e.ZPP_Flags.id_BodyType_DYNAMIC &&
                this.b4.wake()
        },
        validate: function() {
            if (null == this.b1 || null == this.b2 || null == this.b3 || null == this.b4) throw "Error: PulleyJoint cannot be simulated with null bodies";
            if (this.b1 == this.b2 || this.b3 == this.b4) throw "Error: PulleyJoint cannot have body1==body2 or body3==body4";
            if (this.b1.space != this.space || this.b2.space != this.space || this.b3.space != this.space || this.b4.space != this.space) throw "Error: Constraints must have each body within the same space to which the constraint has been assigned";
            if (this.jointMin >
                this.jointMax) throw "Error: PulleyJoint must have jointMin <= jointMax";
            if (this.b1.type != e.ZPP_Flags.id_BodyType_DYNAMIC && this.b2.type != e.ZPP_Flags.id_BodyType_DYNAMIC) throw "Error: PulleyJoint cannot have both bodies in a linked pair non-dynamic";
            if (this.b3.type != e.ZPP_Flags.id_BodyType_DYNAMIC && this.b4.type != e.ZPP_Flags.id_BodyType_DYNAMIC) throw "Error: PulleyJoint cannot have both bodies in a linked pair non-dynamic";
        },
        copy: function(a, b) {
            var c = new N.PulleyJoint(null, null, null, null, this.outer_zn.get_anchor1(),
                this.outer_zn.get_anchor2(), this.outer_zn.get_anchor3(), this.outer_zn.get_anchor4(), this.jointMin, this.jointMax, this.ratio);
            this.copyto(c);
            if (null != a && null != this.b1) {
                for (var d = null, f = 0; f < a.length;) {
                    var e = a[f];
                    ++f;
                    if (e.id == this.b1.id) {
                        d = e.bc;
                        break
                    }
                }
                null != d ? c.zpp_inner_zn.b1 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b1.id, function(a) {
                    c.zpp_inner_zn.b1 = a.zpp_inner
                }))
            }
            if (null != a && null != this.b2) {
                d = null;
                for (f = 0; f < a.length;)
                    if (e = a[f], ++f, e.id == this.b2.id) {
                        d = e.bc;
                        break
                    }
                null != d ? c.zpp_inner_zn.b2 = d.zpp_inner :
                    b.push(M.ZPP_CopyHelper.todo(this.b2.id, function(a) {
                        c.zpp_inner_zn.b2 = a.zpp_inner
                    }))
            }
            if (null != a && null != this.b3) {
                d = null;
                for (f = 0; f < a.length;)
                    if (e = a[f], ++f, e.id == this.b3.id) {
                        d = e.bc;
                        break
                    }
                null != d ? c.zpp_inner_zn.b3 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b3.id, function(a) {
                    c.zpp_inner_zn.b3 = a.zpp_inner
                }))
            }
            if (null != a && null != this.b4) {
                d = null;
                for (f = 0; f < a.length;)
                    if (e = a[f], ++f, e.id == this.b4.id) {
                        d = e.bc;
                        break
                    }
                null != d ? c.zpp_inner_zn.b4 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b4.id, function(a) {
                    c.zpp_inner_zn.b4 =
                        a.zpp_inner
                }))
            }
            return c
        },
        setup_a4: function() {
            this.wrap_a4 = u.Vec2.get(this.a4localx, this.a4localy, null);
            this.wrap_a4.zpp_inner._inuse = !0;
            this.wrap_a4.zpp_inner._validate = w(this, this.validate_a4);
            this.wrap_a4.zpp_inner._invalidate = w(this, this.invalidate_a4)
        },
        invalidate_a4: function(a) {
            this.immutable_midstep("Constraint::a4");
            this.a4localx = a.x;
            this.a4localy = a.y;
            this.wake()
        },
        validate_a4: function() {
            this.wrap_a4.zpp_inner.x = this.a4localx;
            this.wrap_a4.zpp_inner.y = this.a4localy
        },
        setup_a3: function() {
            this.wrap_a3 =
                u.Vec2.get(this.a3localx, this.a3localy, null);
            this.wrap_a3.zpp_inner._inuse = !0;
            this.wrap_a3.zpp_inner._validate = w(this, this.validate_a3);
            this.wrap_a3.zpp_inner._invalidate = w(this, this.invalidate_a3)
        },
        invalidate_a3: function(a) {
            this.immutable_midstep("Constraint::a3");
            this.a3localx = a.x;
            this.a3localy = a.y;
            this.wake()
        },
        validate_a3: function() {
            this.wrap_a3.zpp_inner.x = this.a3localx;
            this.wrap_a3.zpp_inner.y = this.a3localy
        },
        setup_a2: function() {
            this.wrap_a2 = u.Vec2.get(this.a2localx, this.a2localy, null);
            this.wrap_a2.zpp_inner._inuse = !0;
            this.wrap_a2.zpp_inner._validate = w(this, this.validate_a2);
            this.wrap_a2.zpp_inner._invalidate = w(this, this.invalidate_a2)
        },
        invalidate_a2: function(a) {
            this.immutable_midstep("Constraint::a2");
            this.a2localx = a.x;
            this.a2localy = a.y;
            this.wake()
        },
        validate_a2: function() {
            this.wrap_a2.zpp_inner.x = this.a2localx;
            this.wrap_a2.zpp_inner.y = this.a2localy
        },
        setup_a1: function() {
            this.wrap_a1 = u.Vec2.get(this.a1localx, this.a1localy, null);
            this.wrap_a1.zpp_inner._inuse = !0;
            this.wrap_a1.zpp_inner._validate = w(this, this.validate_a1);
            this.wrap_a1.zpp_inner._invalidate = w(this, this.invalidate_a1)
        },
        invalidate_a1: function(a) {
            this.immutable_midstep("Constraint::a1");
            this.a1localx = a.x;
            this.a1localy = a.y;
            this.wake()
        },
        validate_a1: function() {
            this.wrap_a1.zpp_inner.x = this.a1localx;
            this.wrap_a1.zpp_inner.y = this.a1localy
        },
        inactiveBodies: function() {
            null != this.b1 && this.b1.constraints.remove(this);
            this.b2 != this.b1 && null != this.b2 && this.b2.constraints.remove(this);
            this.b3 != this.b1 && this.b3 != this.b2 && null != this.b3 && this.b3.constraints.remove(this);
            this.b4 != this.b1 && this.b4 != this.b2 && this.b4 != this.b3 && null != this.b4 && this.b4.constraints.remove(this)
        },
        activeBodies: function() {
            null != this.b1 && this.b1.constraints.add(this);
            this.b2 != this.b1 && null != this.b2 && this.b2.constraints.add(this);
            this.b3 != this.b1 && this.b3 != this.b2 && null != this.b3 && this.b3.constraints.add(this);
            this.b4 != this.b1 && this.b4 != this.b2 && this.b4 != this.b3 && null != this.b4 && this.b4.constraints.add(this)
        },
        bodyImpulse: function(a) {
            if (this.stepped) {
                var b = u.Vec3.get();
                if (a == this.b1) {
                    var c = b,
                        d =
                        c.zpp_inner;
                    c.zpp_inner.validate();
                    d.x = c.zpp_inner.x - this.jAcc * this.n12x;
                    c.zpp_inner.validate();
                    c.zpp_inner.x;
                    c = b;
                    d = c.zpp_inner;
                    c.zpp_inner.validate();
                    d.y = c.zpp_inner.y - this.jAcc * this.n12y;
                    c.zpp_inner.validate();
                    c.zpp_inner.y;
                    c = b;
                    d = c.zpp_inner;
                    c.zpp_inner.validate();
                    d.z = c.zpp_inner.z - this.cx1 * this.jAcc;
                    c.zpp_inner.validate();
                    c.zpp_inner.z
                }
                a == this.b2 && (c = b, d = c.zpp_inner, c.zpp_inner.validate(), d.x = c.zpp_inner.x + this.jAcc * this.n12x, c.zpp_inner.validate(), c.zpp_inner.x, c = b, d = c.zpp_inner, c.zpp_inner.validate(),
                    d.y = c.zpp_inner.y + this.jAcc * this.n12y, c.zpp_inner.validate(), c.zpp_inner.y, c = b, d = c.zpp_inner, c.zpp_inner.validate(), d.z = c.zpp_inner.z + this.cx2 * this.jAcc, c.zpp_inner.validate(), c.zpp_inner.z);
                a == this.b3 && (c = b, d = c.zpp_inner, c.zpp_inner.validate(), d.x = c.zpp_inner.x - this.jAcc * this.n34x, c.zpp_inner.validate(), c.zpp_inner.x, c = b, d = c.zpp_inner, c.zpp_inner.validate(), d.y = c.zpp_inner.y - this.jAcc * this.n34y, c.zpp_inner.validate(), c.zpp_inner.y, c = b, d = c.zpp_inner, c.zpp_inner.validate(), d.z = c.zpp_inner.z - this.cx3 *
                    this.jAcc, c.zpp_inner.validate(), c.zpp_inner.z);
                a == this.b4 && (c = b, a = c.zpp_inner, c.zpp_inner.validate(), a.x = c.zpp_inner.x + this.jAcc * this.n34x, c.zpp_inner.validate(), c.zpp_inner.x, c = b, a = c.zpp_inner, c.zpp_inner.validate(), a.y = c.zpp_inner.y + this.jAcc * this.n34y, c.zpp_inner.validate(), c.zpp_inner.y, c = b, a = c.zpp_inner, c.zpp_inner.validate(), a.z = c.zpp_inner.z + this.cx4 * this.jAcc, c.zpp_inner.validate(), c.zpp_inner.z);
                return b
            }
            return u.Vec3.get(0, 0, 0)
        },
        __class__: M.ZPP_PulleyJoint
    });
    M.ZPP_UserConstraint = function() {
        this.Keff =
            this.vec3 = this.J = this.jOld = null;
        this.jMax = 0;
        this.velonly = !1;
        this.soft = this.gamma = 0;
        this.L = this.y = null;
        this.stepped = !1;
        this.jAcc = this.bias = null;
        this.dim = 0;
        this.outer_zn = this.bodies = null
    };
    j["zpp_nape.constraint.ZPP_UserConstraint"] = M.ZPP_UserConstraint;
    M.ZPP_UserConstraint.__name__ = ["zpp_nape", "constraint", "ZPP_UserConstraint"];
    M.ZPP_UserConstraint.__super__ = M.ZPP_Constraint;
    M.ZPP_UserConstraint.prototype = C(M.ZPP_Constraint.prototype, {
        draw: function(a) {
            this.outer_zn.__draw(a)
        },
        applyImpulsePos: function() {
            if (this.velonly) return !1;
            this.outer_zn.__prepare();
            this.outer_zn.__position(this.J);
            var a = this.lsq(this.J);
            if (this.breakUnderError && a > this.maxError * this.maxError) return !0;
            if (a < x.constraintLinearSlop * x.constraintLinearSlop) return !1;
            for (var a = 0, b = this.dim; a < b;) {
                var c = a++;
                this.J[c] *= -1
            }
            this.outer_zn.__eff_mass(this.Keff);
            this.transform(this.solve(this.Keff), this.J);
            this.outer_zn.__clamp(this.J);
            b = 0;
            for (a = this.bodies; b < a.length;) {
                c = a[b];
                ++b;
                c = c.body;
                this.outer_zn.__impulse(this.J, c.outer, this.vec3);
                var d = c.imass;
                c.posx += this.vec3.get_x() *
                    d;
                c.posy += this.vec3.get_y() * d;
                c.delta_rot(this.vec3.get_z() * c.iinertia)
            }
            return !1
        },
        applyImpulseVel: function() {
            this.outer_zn.__velocity(this.J);
            for (var a = 0, b = this.dim; a < b;) {
                var c = a++;
                this.J[c] = this.bias[c] - this.J[c]
            }
            this.transform(this.L, this.J);
            a = 0;
            for (b = this.dim; a < b;) c = a++, this.jOld[c] = this.jAcc[c], this.jAcc[c] += this.J[c] = this.J[c] * this.soft - this.jAcc[c] * this.gamma;
            this.outer_zn.__clamp(this.jAcc);
            if ((this.breakUnderForce || !this.stiff) && this.lsq(this.jAcc) > this.jMax * this.jMax) {
                if (this.breakUnderForce) return !0;
                this.stiff || this._clamp(this.jAcc, this.jMax)
            }
            a = 0;
            for (b = this.dim; a < b;) c = a++, this.J[c] = this.jAcc[c] - this.jOld[c];
            b = 0;
            for (a = this.bodies; b < a.length;) {
                c = a[b];
                ++b;
                c = c.body;
                this.outer_zn.__impulse(this.J, c.outer, this.vec3);
                var d = c.imass;
                c.velx += this.vec3.get_x() * d;
                c.vely += this.vec3.get_y() * d;
                c.angvel += this.vec3.get_z() * c.iinertia
            }
            return !1
        },
        warmStart: function() {
            for (var a = 0, b = this.bodies; a < b.length;) {
                var c = b[a];
                ++a;
                c = c.body;
                this.outer_zn.__impulse(this.jAcc, c.outer, this.vec3);
                var d = c.imass;
                c.velx += this.vec3.get_x() *
                    d;
                c.vely += this.vec3.get_y() * d;
                c.angvel += this.vec3.get_z() * c.iinertia
            }
        },
        preStep: function(a) {
            this.outer_zn.__validate(); - 1 == this.pre_dt && (this.pre_dt = a);
            var b = a / this.pre_dt;
            this.pre_dt = a;
            this.stepped = !0;
            this.outer_zn.__prepare();
            this.outer_zn.__eff_mass(this.Keff);
            this.L = this.solve(this.Keff);
            if (!this.stiff && !this.velonly) {
                var c;
                c = 2 * Math.PI * this.frequency;
                this.gamma = 1 / (a * c * (2 * this.damping + c * a));
                var d = 1 / (1 + this.gamma);
                c = a * c * c * this.gamma;
                this.gamma *= d;
                this.soft = d;
                this.outer_zn.__position(this.bias);
                if (this.breakUnderError &&
                    this.lsq(this.bias) > this.maxError * this.maxError) return !0;
                for (var d = 0, f = this.dim; d < f;) {
                    var e = d++;
                    this.bias[e] *= -c
                }
                this._clamp(this.bias, this.maxError)
            } else {
                d = 0;
                for (f = this.dim; d < f;) e = d++, this.bias[e] = 0;
                this.gamma = 0;
                this.soft = 1
            }
            d = 0;
            for (f = this.dim; d < f;) e = d++, this.jAcc[e] *= b;
            this.jMax = this.maxForce * a;
            return !1
        },
        transform: function(a, b) {
            for (var c = 0, d = this.dim; c < d;) {
                var f = c++,
                    e = b[f],
                    l = a[f * this.dim + f];
                if (0 != l) {
                    for (var s = 0; s < f;) var g = s++,
                        e = e - a[f * this.dim + g] * this.y[g];
                    this.y[f] = e / l
                } else this.y[f] = 0
            }
            c = 0;
            for (d =
                this.dim; c < d;)
                if (f = this.dim - 1 - c++, l = a[f * this.dim + f], 0 != l) {
                    for (var e = this.y[f], h = f + 1, s = this.dim; h < s;) g = h++, e -= a[g * this.dim + f] * b[g];
                    b[f] = e / l
                } else b[f] = 0
        },
        solve: function(a) {
            for (var b = 0, c = 0, d = this.dim; c < d;) {
                for (var f = c++, e = 0, l = 0, s = f - 1; l < s;) var g = l++,
                    e = e + this.L[f * this.dim + g] * this.L[f * this.dim + g];
                e = Math.sqrt(a[b++] - e);
                this.L[f * this.dim + f] = e;
                if (0 != e) {
                    e = 1 / e;
                    l = f + 1;
                    for (s = this.dim; l < s;) {
                        for (var h = l++, i = 0, j = 0, k = f - 1; j < k;) g = j++, i += this.L[h * this.dim + g] * this.L[f * this.dim + g];
                        this.L[h * this.dim + f] = e * (a[b++] - i)
                    }
                } else {
                    l =
                        f + 1;
                    for (s = this.dim; l < s;) h = l++, this.L[h * this.dim + f] = 0;
                    b += this.dim - f - 1
                }
            }
            return this.L
        },
        _clamp: function(a, b) {
            var c = this.lsq(a);
            if (c > b * b)
                for (var c = b / Math.sqrt(c), d = 0, f = this.dim; d < f;) {
                    var e = d++;
                    a[e] *= c
                }
        },
        lsq: function(a) {
            for (var b = 0, c = 0, d = this.dim; c < d;) var f = c++,
                b = b + a[f] * a[f];
            return b
        },
        clearcache: function() {
            for (var a = 0, b = this.dim; a < b;) this.jAcc[a++] = 0;
            this.pre_dt = -1
        },
        broken: function() {
            this.outer_zn.__broken()
        },
        pair_exists: function(a, b) {
            for (var c = !1, d = this.bodies.length | 0, f = 0; f < d;) {
                for (var e = f++, l = this.bodies[e].body,
                        e = e + 1; e < d;) {
                    var s = this.bodies[e++].body;
                    if (l.id == a && s.id == b || l.id == b && s.id == a) {
                        c = !0;
                        break
                    }
                }
                if (c) break
            }
            return c
        },
        forest: function() {
            for (var a = 0, b = this.bodies; a < b.length;) {
                var c = b[a];
                ++a;
                if (c.body.type == e.ZPP_Flags.id_BodyType_DYNAMIC) {
                    var d = c.body.component == c.body.component.parent ? c.body.component : function() {
                            for (var a = c.body.component, b = null; a != a.parent;) {
                                var d = a.parent;
                                a.parent = b;
                                b = a;
                                a = d
                            }
                            for (; null != b;) d = b.parent, b.parent = a, b = d;
                            return a
                        }(this),
                        f = this.component == this.component.parent ? this.component :
                        function(a) {
                            for (var a = a.component, b = null; a != a.parent;) {
                                var c = a.parent;
                                a.parent = b;
                                b = a;
                                a = c
                            }
                            for (; null != b;) c = b.parent, b.parent = a, b = c;
                            return a
                        }(this);
                    d != f && (d.rank < f.rank ? d.parent = f : d.rank > f.rank ? f.parent = d : (f.parent = d, d.rank++))
                }
            }
        },
        wake_connected: function() {
            for (var a = 0, b = this.bodies; a < b.length;) {
                var c = b[a];
                ++a;
                c.body.type == e.ZPP_Flags.id_BodyType_DYNAMIC && c.body.wake()
            }
        },
        validate: function() {
            for (var a = 0, b = this.bodies; a < b.length;) {
                var c = b[a];
                ++a;
                if (c.body.space != this.space) throw "Error: Constraints must have each body within the same sapce to which the constraint has been assigned";
            }
            this.outer_zn.__validate()
        },
        copy: function() {
            this.copyto(this.outer_zn.__copy());
            throw "not done yet";
        },
        inactiveBodies: function() {
            for (var a = 0, b = this.bodies; a < b.length;) {
                var c = b[a];
                ++a;
                null != c.body && c.body.constraints.remove(this)
            }
        },
        activeBodies: function() {
            for (var a = 0, b = this.bodies; a < b.length;) {
                var c = b[a];
                ++a;
                null != c.body && c.body.constraints.add(this)
            }
        },
        bodyImpulse: function(a) {
            for (var b = 0, c = this.dim; b < c;) {
                var d = b++;
                this.J[d] = this.jAcc[d]
            }
            b = u.Vec3.get(0, 0, 0);
            this.stepped && this.outer_zn.__impulse(this.J,
                a.outer, b);
            return b
        },
        __class__: M.ZPP_UserConstraint
    });
    M.ZPP_UserBody = function() {
        this.body = null
    };
    j["zpp_nape.constraint.ZPP_UserBody"] = M.ZPP_UserBody;
    M.ZPP_UserBody.__name__ = ["zpp_nape", "constraint", "ZPP_UserBody"];
    M.ZPP_UserBody.prototype = {
        __class__: M.ZPP_UserBody
    };
    M.ZPP_WeldJoint = function() {
        this.stepped = !1;
        this.phase = this.kMassa = this.kMassb = this.kMassd = this.kMassc = this.kMasse = this.kMassf = this.jAccx = this.jAccy = this.jAccz = this.jMax = this.gamma = this.biasx = this.biasy = this.biasz = 0;
        this.wrap_a2 = null;
        this.a2localx =
            this.a2localy = this.a2relx = this.a2rely = 0;
        this.wrap_a1 = this.b2 = null;
        this.a1localx = this.a1localy = this.a1relx = this.a1rely = 0;
        this.outer_zn = this.b1 = null
    };
    j["zpp_nape.constraint.ZPP_WeldJoint"] = M.ZPP_WeldJoint;
    M.ZPP_WeldJoint.__name__ = ["zpp_nape", "constraint", "ZPP_WeldJoint"];
    M.ZPP_WeldJoint.__super__ = M.ZPP_Constraint;
    M.ZPP_WeldJoint.prototype = C(M.ZPP_Constraint.prototype, {
        draw: function() {},
        applyImpulsePos: function() {
            var a = 0,
                b = 0,
                a = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy,
                b = this.a1localx * this.b1.axisx +
                this.a1localy * this.b1.axisy,
                c = 0,
                d = 0,
                c = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy,
                d = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy,
                f = 0,
                n = 0,
                l = 0,
                f = this.b2.posx + c - (this.b1.posx + a),
                n = this.b2.posy + d - (this.b1.posy + b),
                l = this.b2.rot - this.b1.rot - this.phase,
                s = 0,
                g = 0,
                h = 0;
            if (this.breakUnderError && f * f + n * n + l * l > this.maxError * this.maxError) return !0;
            s = !0;
            f * f + n * n < x.constraintLinearSlop * x.constraintLinearSlop && (s = !1, n = f = 0);
            if (l * l < e.ZPP_Math.sqr(x.constraintAngularSlop))
                if (s) l = 0;
                else return !1;
            var i =
                0.5,
                j = i,
                f = f * j,
                n = n * j,
                l = l * i;
            if (6 < f * f + n * n) {
                var k = this.b1.smass + this.b2.smass;
                k > x.epsilon && (k = 0.75 / k, s = -f * k, g = -n * k, i = 20, f = s * s + g * g, f > i * i && (j = i * (1 / Math.sqrt(f)), s *= j, g *= j), i = this.b1.imass, this.b1.posx -= s * i, this.b1.posy -= g * i, i = this.b2.imass, this.b2.posx += s * i, this.b2.posy += g * i, f = this.b2.posx + c - (this.b1.posx + a), n = this.b2.posy + d - (this.b1.posy + b), l = this.b2.rot - this.b1.rot - this.phase, j = i = 0.5, f *= j, n *= j, l *= i)
            }
            var m = k = 0,
                r = 0,
                q = 0,
                o = 0,
                p = 0,
                k = s = this.b1.smass + this.b2.smass,
                m = 0,
                r = s,
                p = o = q = 0;
            0 != this.b1.sinertia && (i = a * this.b1.sinertia,
                j = b * this.b1.sinertia, k += j * b, m += -j * a, r += i * a, q += -j, o += i, p += this.b1.sinertia);
            0 != this.b2.sinertia && (i = c * this.b2.sinertia, j = d * this.b2.sinertia, k += j * d, m += -j * c, r += i * c, q += -j, o += i, p += this.b2.sinertia);
            s = -f;
            g = -n;
            h = -l;
            i = 6;
            f = s * s + g * g;
            f > i * i && (j = i * (1 / Math.sqrt(f)), s *= j, g *= j);
            e.ZPP_Math.clamp(h, -0.25, 0.25);
            f = k * (r * p - o * o) + m * (q * o - m * p) + q * (m * o - q * r);
            f != f ? s = g = h = 0 : 0 == f ? (s = 0 != k ? s / k : 0, g = 0 != r ? g / r : 0, h = 0 != p ? h / p : 0) : (f = 1 / f, j = o * q - m * p, n = m * o - q * r, l = m * q - k * o, i = f * (s * (r * p - o * o) + g * j + h * n), j = f * (s * j + g * (k * p - q * q) + h * l), h = f * (s * n + g * l + h * (k * r - m *
                m)), s = i, g = j);
            i = this.b1.imass;
            this.b1.posx -= s * i;
            this.b1.posy -= g * i;
            i = this.b2.imass;
            this.b2.posx += s * i;
            this.b2.posy += g * i;
            this.b1.delta_rot(-(g * a - s * b + h) * this.b1.iinertia);
            this.b2.delta_rot((g * c - s * d + h) * this.b2.iinertia);
            return !1
        },
        applyImpulseVel: function() {
            var a = 0,
                b = 0,
                c = 0,
                a = this.b2.velx + this.b2.kinvelx - this.a2rely * (this.b2.angvel + this.b2.kinangvel) - (this.b1.velx + this.b1.kinvelx - this.a1rely * (this.b1.angvel + this.b1.kinangvel)),
                b = this.b2.vely + this.b2.kinvely + this.a2relx * (this.b2.angvel + this.b2.kinangvel) -
                (this.b1.vely + this.b1.kinvely + this.a1relx * (this.b1.angvel + this.b1.kinangvel)),
                c = this.b2.angvel + this.b2.kinangvel - this.b1.angvel - this.b1.kinangvel,
                d = 0,
                f = 0,
                e = 0,
                d = this.biasx - a,
                f = this.biasy - b,
                e = this.biasz - c,
                c = this.kMassa * d + this.kMassb * f + this.kMassc * e,
                l = this.kMassb * d + this.kMassd * f + this.kMasse * e,
                e = this.kMassc * d + this.kMasse * f + this.kMassf * e,
                b = a = this.gamma,
                d = c - this.jAccx * b,
                f = l - this.jAccy * b,
                e = e - this.jAccz * a,
                s = l = c = 0,
                c = this.jAccx,
                l = this.jAccy,
                s = this.jAccz,
                b = a = 1;
            this.jAccx += d * b;
            this.jAccy += f * b;
            this.jAccz += e * a;
            if (this.breakUnderForce) {
                if (this.jAccx * this.jAccx + this.jAccy * this.jAccy + this.jAccz * this.jAccz > this.jMax * this.jMax) return !0
            } else this.stiff || (a = this.jMax, d = this.jAccx * this.jAccx + this.jAccy * this.jAccy + this.jAccz * this.jAccz, d > a * a && (d = b = a * (1 / Math.sqrt(d)), this.jAccx *= d, this.jAccy *= d, this.jAccz *= b));
            d = this.jAccx - c;
            f = this.jAccy - l;
            e = this.jAccz - s;
            a = this.b1.imass;
            this.b1.velx -= d * a;
            this.b1.vely -= f * a;
            a = this.b2.imass;
            this.b2.velx += d * a;
            this.b2.vely += f * a;
            this.b1.angvel -= (f * this.a1relx - d * this.a1rely + e) * this.b1.iinertia;
            this.b2.angvel += (f * this.a2relx - d * this.a2rely + e) * this.b2.iinertia;
            return !1
        },
        warmStart: function() {
            var a = this.b1.imass;
            this.b1.velx -= this.jAccx * a;
            this.b1.vely -= this.jAccy * a;
            a = this.b2.imass;
            this.b2.velx += this.jAccx * a;
            this.b2.vely += this.jAccy * a;
            this.b1.angvel -= (this.jAccy * this.a1relx - this.jAccx * this.a1rely + this.jAccz) * this.b1.iinertia;
            this.b2.angvel += (this.jAccy * this.a2relx - this.jAccx * this.a2rely + this.jAccz) * this.b2.iinertia
        },
        preStep: function(a) {
            -1 == this.pre_dt && (this.pre_dt = a);
            var b = a / this.pre_dt;
            this.pre_dt =
                a;
            this.stepped = !0;
            this.a1relx = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
            this.a1rely = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
            this.a2relx = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
            this.a2rely = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
            var c = this.b1.smass + this.b2.smass;
            this.kMassa = c;
            this.kMassb = 0;
            this.kMassd = c;
            this.kMassf = this.kMasse = this.kMassc = 0;
            if (0 != this.b1.sinertia) {
                var c = this.a1relx * this.b1.sinertia,
                    d = this.a1rely * this.b1.sinertia;
                this.kMassa +=
                    d * this.a1rely;
                this.kMassb += -d * this.a1relx;
                this.kMassd += c * this.a1relx;
                this.kMassc += -d;
                this.kMasse += c;
                this.kMassf += this.b1.sinertia
            }
            0 != this.b2.sinertia && (c = this.a2relx * this.b2.sinertia, d = this.a2rely * this.b2.sinertia, this.kMassa += d * this.a2rely, this.kMassb += -d * this.a2relx, this.kMassd += c * this.a2relx, this.kMassc += -d, this.kMasse += c, this.kMassf += this.b2.sinertia);
            c = function(a) {
                var b = a.kMassa * (a.kMassd * a.kMassf - a.kMasse * a.kMasse) + a.kMassb * (a.kMassc * a.kMasse - a.kMassb * a.kMassf) + a.kMassc * (a.kMassb * a.kMasse - a.kMassc *
                    a.kMassd);
                return b != b ? function(a) {
                    a.kMassa = 0;
                    a.kMassb = 0;
                    a.kMassd = 0;
                    a.kMassc = 0;
                    a.kMasse = 0;
                    a.kMassf = 0;
                    return 7
                }(a) : 0 == b ? function(a) {
                    var b = 0;
                    0 != a.kMassa ? a.kMassa = 1 / a.kMassa : (a.kMassa = 0, b |= 1);
                    0 != a.kMassd ? a.kMassd = 1 / a.kMassd : (a.kMassd = 0, b |= 2);
                    0 != a.kMassf ? a.kMassf = 1 / a.kMassf : (a.kMassf = 0, b |= 4);
                    a.kMassb = a.kMassc = a.kMasse = 0;
                    return b
                }(a) : function(a) {
                    b = 1 / b;
                    var c = b * (a.kMasse * a.kMassc - a.kMassb * a.kMassf),
                        d = b * (a.kMassa * a.kMassf - a.kMassc * a.kMassc),
                        f = b * (a.kMassb * a.kMasse - a.kMassc * a.kMassd),
                        e = b * (a.kMassb * a.kMassc -
                            a.kMassa * a.kMasse),
                        n = b * (a.kMassa * a.kMassd - a.kMassb * a.kMassb);
                    a.kMassa = b * (a.kMassd * a.kMassf - a.kMasse * a.kMasse);
                    a.kMassb = c;
                    a.kMassd = d;
                    a.kMassc = f;
                    a.kMasse = e;
                    a.kMassf = n;
                    return 0
                }(a)
            }(this);
            0 != (c & 1) && (this.jAccx = 0);
            0 != (c & 2) && (this.jAccy = 0);
            0 != (c & 4) && (this.jAccz = 0);
            if (this.stiff) this.gamma = this.biasz = this.biasy = this.biasx = 0;
            else {
                var f, c = function(b) {
                    var c = 2 * Math.PI * b.frequency;
                    b.gamma = 1 / (a * c * (2 * b.damping + c * a));
                    var d = 1 / (1 + b.gamma);
                    f = a * c * c * b.gamma;
                    b.gamma *= d;
                    return d
                }(this);
                this.kMassa *= c;
                this.kMassb *= c;
                this.kMassd *=
                    c;
                this.kMassc *= c;
                this.kMasse *= c;
                this.kMassf *= c;
                this.biasx = this.b2.posx + this.a2relx - (this.b1.posx + this.a1relx);
                this.biasy = this.b2.posy + this.a2rely - (this.b1.posy + this.a1rely);
                this.biasz = this.b2.rot - this.b1.rot - this.phase;
                if (this.breakUnderError && this.biasx * this.biasx + this.biasy * this.biasy + this.biasz * this.biasz > this.maxError * this.maxError) return !0;
                d = c = -f;
                this.biasx *= d;
                this.biasy *= d;
                this.biasz *= c;
                c = this.maxError;
                d = this.biasx * this.biasx + this.biasy * this.biasy + this.biasz * this.biasz;
                d > c * c && (c = d = c * (1 / Math.sqrt(d)),
                    this.biasx *= c, this.biasy *= c, this.biasz *= d)
            }
            d = c = b;
            this.jAccx *= d;
            this.jAccy *= d;
            this.jAccz *= c;
            this.jMax = this.maxForce * a;
            return !1
        },
        clearcache: function() {
            this.jAccz = this.jAccy = this.jAccx = 0;
            this.pre_dt = -1
        },
        pair_exists: function(a, b) {
            return this.b1.id == a && this.b2.id == b || this.b1.id == b && this.b2.id == a
        },
        forest: function() {
            if (this.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC) {
                var a = this.b1.component == this.b1.component.parent ? this.b1.component : function(a) {
                        for (var a = a.b1.component, b = null; a != a.parent;) {
                            var f = a.parent;
                            a.parent = b;
                            b = a;
                            a = f
                        }
                        for (; null != b;) f = b.parent, b.parent = a, b = f;
                        return a
                    }(this),
                    b = this.component == this.component.parent ? this.component : function(a) {
                        for (var a = a.component, b = null; a != a.parent;) {
                            var f = a.parent;
                            a.parent = b;
                            b = a;
                            a = f
                        }
                        for (; null != b;) f = b.parent, b.parent = a, b = f;
                        return a
                    }(this);
                a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++))
            }
            this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (a = this.b2.component == this.b2.component.parent ? this.b2.component : function(a) {
                for (var a = a.b2.component,
                        b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent, b.parent = a, b = f;
                return a
            }(this), b = this.component == this.component.parent ? this.component : function(a) {
                for (var a = a.component, b = null; a != a.parent;) {
                    var f = a.parent;
                    a.parent = b;
                    b = a;
                    a = f
                }
                for (; null != b;) f = b.parent, b.parent = a, b = f;
                return a
            }(this), a != b && (a.rank < b.rank ? a.parent = b : a.rank > b.rank ? b.parent = a : (b.parent = a, a.rank++)))
        },
        wake_connected: function() {
            null != this.b1 && this.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.b1.wake();
            null !=
                this.b2 && this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.b2.wake()
        },
        validate: function() {
            if (null == this.b1 || null == this.b2) throw "Error: AngleJoint cannot be simulated null bodies";
            if (this.b1 == this.b2) throw "Error: WeldJoint cannot be simulated with body1 == body2";
            if (this.b1.space != this.space || this.b2.space != this.space) throw "Error: Constraints must have each body within the same space to which the constraint has been assigned";
            if (this.b1.type != e.ZPP_Flags.id_BodyType_DYNAMIC && this.b2.type != e.ZPP_Flags.id_BodyType_DYNAMIC) throw "Error: Constraints cannot have both bodies non-dynamic";
        },
        copy: function(a, b) {
            var c = new N.PivotJoint(null, null, this.outer_zn.get_anchor1(), this.outer_zn.get_anchor2());
            this.copyto(c);
            if (null != a && null != this.b1) {
                for (var d = null, f = 0; f < a.length;) {
                    var e = a[f];
                    ++f;
                    if (e.id == this.b1.id) {
                        d = e.bc;
                        break
                    }
                }
                null != d ? c.zpp_inner_zn.b1 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b1.id, function(a) {
                    c.zpp_inner_zn.b1 = a.zpp_inner
                }))
            }
            if (null != a && null != this.b2) {
                d = null;
                for (f = 0; f < a.length;)
                    if (e = a[f], ++f, e.id == this.b2.id) {
                        d = e.bc;
                        break
                    }
                null != d ? c.zpp_inner_zn.b2 = d.zpp_inner : b.push(M.ZPP_CopyHelper.todo(this.b2.id,
                    function(a) {
                        c.zpp_inner_zn.b2 = a.zpp_inner
                    }))
            }
            return c
        },
        setup_a2: function() {
            this.wrap_a2 = u.Vec2.get(this.a2localx, this.a2localy, null);
            this.wrap_a2.zpp_inner._inuse = !0;
            this.wrap_a2.zpp_inner._validate = w(this, this.validate_a2);
            this.wrap_a2.zpp_inner._invalidate = w(this, this.invalidate_a2)
        },
        invalidate_a2: function(a) {
            this.immutable_midstep("Constraint::a2");
            this.a2localx = a.x;
            this.a2localy = a.y;
            this.wake()
        },
        validate_a2: function() {
            this.wrap_a2.zpp_inner.x = this.a2localx;
            this.wrap_a2.zpp_inner.y = this.a2localy
        },
        setup_a1: function() {
            this.wrap_a1 = u.Vec2.get(this.a1localx, this.a1localy, null);
            this.wrap_a1.zpp_inner._inuse = !0;
            this.wrap_a1.zpp_inner._validate = w(this, this.validate_a1);
            this.wrap_a1.zpp_inner._invalidate = w(this, this.invalidate_a1)
        },
        invalidate_a1: function(a) {
            this.immutable_midstep("Constraint::a1");
            this.a1localx = a.x;
            this.a1localy = a.y;
            this.wake()
        },
        validate_a1: function() {
            this.wrap_a1.zpp_inner.x = this.a1localx;
            this.wrap_a1.zpp_inner.y = this.a1localy
        },
        inactiveBodies: function() {
            null != this.b1 && this.b1.constraints.remove(this);
            this.b2 != this.b1 && null != this.b2 && this.b2.constraints.remove(this)
        },
        activeBodies: function() {
            null != this.b1 && this.b1.constraints.add(this);
            this.b2 != this.b1 && null != this.b2 && this.b2.constraints.add(this)
        },
        bodyImpulse: function(a) {
            return this.stepped ? a == this.b1 ? u.Vec3.get(-this.jAccx, -this.jAccy, -(this.jAccy * this.a1relx - this.jAccx * this.a1rely + this.jAccz)) : u.Vec3.get(this.jAccx, this.jAccy, this.jAccy * this.a2relx - this.jAccx * this.a2rely + this.jAccz) : u.Vec3.get(0, 0, 0)
        },
        __class__: M.ZPP_WeldJoint
    });
    D = {
        ZPP_Arbiter: function() {
            this.colarb =
                this.fluidarb = this.sensorarb = null;
            this.type = 0;
            this.b1 = this.b2 = this.ws1 = this.ws2 = this.pair = null;
            this.invalidated = !1;
            this.immState = 0;
            this.intchange = this.presentable = this.continuous = this.fresh = !1;
            this.present = 0;
            this.active = this.cleared = this.sleeping = !1;
            this.id = this.di = this.stamp = this.up_stamp = this.sleep_stamp = this.endGenerated = 0;
            this.outer = null
        }
    };
    j["zpp_nape.dynamics.ZPP_Arbiter"] = D.ZPP_Arbiter;
    D.ZPP_Arbiter.__name__ = ["zpp_nape", "dynamics", "ZPP_Arbiter"];
    D.ZPP_Arbiter.prototype = {
        wrapper: function() {
            null ==
                this.outer && (D.ZPP_Arbiter.internal = !0, this.type == D.ZPP_Arbiter.COL ? (this.colarb.outer_zn = new K.CollisionArbiter, this.outer = this.colarb.outer_zn) : this.type == D.ZPP_Arbiter.FLUID ? (this.fluidarb.outer_zn = new K.FluidArbiter, this.outer = this.fluidarb.outer_zn) : this.outer = new K.Arbiter, this.outer.zpp_inner = this, D.ZPP_Arbiter.internal = !1);
            return this.outer
        },
        __class__: D.ZPP_Arbiter
    };
    D.ZPP_SensorArbiter = function() {
        this.next = null;
        D.ZPP_Arbiter.call(this);
        this.type = D.ZPP_Arbiter.SENSOR;
        this.sensorarb = this
    };
    j["zpp_nape.dynamics.ZPP_SensorArbiter"] =
        D.ZPP_SensorArbiter;
    D.ZPP_SensorArbiter.__name__ = ["zpp_nape", "dynamics", "ZPP_SensorArbiter"];
    D.ZPP_SensorArbiter.__super__ = D.ZPP_Arbiter;
    D.ZPP_SensorArbiter.prototype = C(D.ZPP_Arbiter.prototype, {
        retire: function() {
            this.cleared || (this.b1.arbiters.inlined_try_remove(this), this.b2.arbiters.inlined_try_remove(this), null != this.pair && (this.pair = this.pair.arb = null));
            this.b1 = this.b2 = null;
            this.intchange = this.active = !1;
            this.next = D.ZPP_SensorArbiter.zpp_pool;
            D.ZPP_SensorArbiter.zpp_pool = this
        },
        __class__: D.ZPP_SensorArbiter
    });
    D.ZPP_FluidArbiter = function() {
        this.pre_dt = 0;
        this.mutable = !1;
        this.wrap_position = null;
        this.wMass = this.adamp = this.agamma = this.vMassa = this.vMassb = this.vMassc = this.dampx = this.dampy = this.lgamma = this.nx = this.ny = this.buoyx = this.buoyy = 0;
        this.nodrag = !1;
        this.centroidx = this.centroidy = this.overlap = this.r1x = this.r1y = this.r2x = this.r2y = 0;
        this.outer_zn = this.next = null;
        D.ZPP_Arbiter.call(this);
        this.type = D.ZPP_Arbiter.FLUID;
        this.fluidarb = this;
        this.buoyy = this.buoyx = 0;
        this.pre_dt = -1
    };
    j["zpp_nape.dynamics.ZPP_FluidArbiter"] =
        D.ZPP_FluidArbiter;
    D.ZPP_FluidArbiter.__name__ = ["zpp_nape", "dynamics", "ZPP_FluidArbiter"];
    D.ZPP_FluidArbiter.__super__ = D.ZPP_Arbiter;
    D.ZPP_FluidArbiter.prototype = C(D.ZPP_Arbiter.prototype, {
        applyImpulseVel: function() {
            if (!this.nodrag) {
                var a = this.b1.angvel + this.b1.kinangvel,
                    b = this.b2.angvel + this.b2.kinangvel,
                    c = this.b1.velx + this.b1.kinvelx - this.r1y * a - (this.b2.velx + this.b2.kinvelx - this.r2y * b),
                    d = this.b1.vely + this.b1.kinvely + this.r1x * a - (this.b2.vely + this.b2.kinvely + this.r2x * b),
                    f = this.vMassa * c + this.vMassb *
                    d,
                    d = this.vMassb * c + this.vMassc * d,
                    c = f,
                    f = this.lgamma,
                    c = c - this.dampx * f,
                    d = d - this.dampy * f,
                    f = 1;
                this.dampx += c * f;
                this.dampy += d * f;
                f = this.b1.imass;
                this.b1.velx -= c * f;
                this.b1.vely -= d * f;
                f = this.b2.imass;
                this.b2.velx += c * f;
                this.b2.vely += d * f;
                this.b1.angvel -= this.b1.iinertia * (d * this.r1x - c * this.r1y);
                this.b2.angvel += this.b2.iinertia * (d * this.r2x - c * this.r2y);
                a = (a - b) * this.wMass - this.adamp * this.agamma;
                this.adamp += a;
                this.b1.angvel -= a * this.b1.iinertia;
                this.b2.angvel += a * this.b2.iinertia
            }
        },
        warmStart: function() {
            var a = this.b1.imass;
            this.b1.velx -= this.dampx * a;
            this.b1.vely -= this.dampy * a;
            a = this.b2.imass;
            this.b2.velx += this.dampx * a;
            this.b2.vely += this.dampy * a;
            this.b1.angvel -= this.b1.iinertia * (this.dampy * this.r1x - this.dampx * this.r1y);
            this.b2.angvel += this.b2.iinertia * (this.dampy * this.r2x - this.dampx * this.r2y);
            this.b1.angvel -= this.adamp * this.b1.iinertia;
            this.b2.angvel += this.adamp * this.b2.iinertia
        },
        preStep: function(a, b) {
            -1 == this.pre_dt && (this.pre_dt = b);
            var c = b / this.pre_dt;
            this.pre_dt = b;
            this.r1x = this.centroidx - this.b1.posx;
            this.r1y = this.centroidy -
                this.b1.posy;
            this.r2x = this.centroidx - this.b2.posx;
            this.r2y = this.centroidy - this.b2.posy;
            var d = 0,
                f = 0;
            this.ws1.fluidEnabled && null != this.ws1.fluidProperties.wrap_gravity ? (d = this.ws1.fluidProperties.gravityx, f = this.ws1.fluidProperties.gravityy) : (d = a.gravityx, f = a.gravityy);
            var n = 0,
                l = 0;
            this.ws2.fluidEnabled && null != this.ws2.fluidProperties.wrap_gravity ? (n = this.ws2.fluidProperties.gravityx, l = this.ws2.fluidProperties.gravityy) : (n = a.gravityx, l = a.gravityy);
            var s = 0,
                g = 0;
            if (this.ws1.fluidEnabled && this.ws2.fluidEnabled) {
                var i =
                    this.overlap * this.ws1.fluidProperties.density,
                    h = this.overlap * this.ws2.fluidProperties.density;
                if (i > h) var j = i + h,
                    s = s - d * j,
                    g = g - f * j;
                else if (i < h) j = i + h, s += n * j, g += l * j;
                else {
                    var k = 0,
                        m = 0,
                        j = 0.5,
                        k = (d + n) * j,
                        m = (f + l) * j;
                    this.ws1.worldCOMx * k + this.ws1.worldCOMy * m > this.ws2.worldCOMx * k + this.ws2.worldCOMy * m ? (j = i + h, s -= k * j, g -= m * j) : (j = i + h, s += k * j, g += m * j)
                }
            } else this.ws1.fluidEnabled ? (j = this.overlap * this.ws1.fluidProperties.density, s -= d * j, g -= f * j) : this.ws2.fluidEnabled && (j = this.overlap * this.ws2.fluidProperties.density, s += n * j,
                g += l * j);
            j = b;
            s *= j;
            g *= j;
            this.buoyx = s;
            this.buoyy = g;
            this.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (j = this.b1.imass, this.b1.velx -= s * j, this.b1.vely -= g * j, this.b1.angvel -= (g * this.r1x - s * this.r1y) * this.b1.iinertia);
            this.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (j = this.b2.imass, this.b2.velx += s * j, this.b2.vely += g * j, this.b2.angvel += (g * this.r2x - s * this.r2y) * this.b2.iinertia);
            if ((!this.ws1.fluidEnabled || 0 == this.ws1.fluidProperties.viscosity) && (!this.ws2.fluidEnabled || 0 == this.ws2.fluidProperties.viscosity)) this.nodrag = !0, this.adamp = this.dampy = this.dampx = 0;
            else {
                this.nodrag = !1;
                var r = 0;
                this.ws1.fluidEnabled && (this.ws2.validate_angDrag(), r += this.ws1.fluidProperties.viscosity * this.ws2.angDrag * this.overlap / this.ws2.area);
                this.ws2.fluidEnabled && (this.ws1.validate_angDrag(), r += this.ws2.fluidProperties.viscosity * this.ws1.angDrag * this.overlap / this.ws1.area);
                0 != r ? (j = this.b1.sinertia + this.b2.sinertia, this.wMass = 0 != j ? 1 / j : 0, r *= 4.0E-4, this.wMass *= function(a) {
                    var c = 2 * Math.PI * r;
                    a.agamma = 1 / (b * c * (2 + c * b));
                    c = 1 / (1 + a.agamma);
                    a.agamma *=
                        c;
                    return c
                }(this)) : this.agamma = this.wMass = 0;
                d = this.b2.velx + this.b2.kinvelx - this.r2y * (this.b2.angvel + this.b2.kinangvel) - (this.b1.velx + this.b1.kinvelx - this.r1y * (this.b2.angvel + this.b2.kinangvel));
                f = this.b2.vely + this.b2.kinvely + this.r2x * (this.b2.angvel + this.b2.kinangvel) - (this.b1.vely + this.b1.kinvely + this.r1x * (this.b1.angvel + this.b1.kinangvel));
                d * d + f * f < x.epsilon * x.epsilon || (j = 1 / Math.sqrt(d * d + f * f), this.nx = d * j, this.ny = f * j);
                var q = 0;
                if (this.ws1.fluidEnabled)
                    if (j = -this.ws1.fluidProperties.viscosity * this.overlap /
                        this.ws2.area, this.ws2.type == e.ZPP_Flags.id_ShapeType_CIRCLE) q -= j * this.ws2.circle.radius * x.fluidLinearDrag / (2 * this.ws2.circle.radius * Math.PI);
                    else {
                        n = this.ws2.polygon;
                        f = d = 0;
                        for (n = n.edges.head; null != n;) l = n.elt, d += l.length, l = j * l.length * (l.gnormx * this.nx + l.gnormy * this.ny), 0 < l && (l = l *= -x.fluidVacuumDrag), f -= 0.5 * l * x.fluidLinearDrag, n = n.next;
                        q += f / d
                    }
                if (this.ws2.fluidEnabled)
                    if (j = -this.ws2.fluidProperties.viscosity * this.overlap / this.ws1.area, this.ws1.type == e.ZPP_Flags.id_ShapeType_CIRCLE) q -= j * this.ws1.circle.radius *
                        x.fluidLinearDrag / (2 * this.ws1.circle.radius * Math.PI);
                    else {
                        n = this.ws1.polygon;
                        f = d = 0;
                        for (n = n.edges.head; null != n;) l = n.elt, d += l.length, l = j * l.length * (l.gnormx * this.nx + l.gnormy * this.ny), 0 < l && (l = l *= -x.fluidVacuumDrag), f -= 0.5 * l * x.fluidLinearDrag, n = n.next;
                        q += f / d
                    }
                0 != q ? (j = this.b1.smass + this.b2.smass, n = f = d = 0, d = j, f = 0, n = j, 0 != this.b1.sinertia && (j = this.r1x * this.b1.sinertia, l = this.r1y * this.b1.sinertia, d += l * this.r1y, f += -l * this.r1x, n += j * this.r1x), 0 != this.b2.sinertia && (j = this.r2x * this.b2.sinertia, l = this.r2y * this.b2.sinertia,
                    d += l * this.r2y, f += -l * this.r2x, n += j * this.r2x), l = d * n - f * f, l != l ? (d = f = n = 0, 3) : 0 == l ? (j = 0, 0 != d ? d = 1 / d : (d = 0, j |= 1), 0 != n ? n = 1 / n : (n = 0, j |= 2), f = 0, j) : (l = 1 / l, j = n * l, n = d * l, d = j, f *= -l, 0), this.vMassa = d, this.vMassb = f, this.vMassc = n, j = function(a) {
                    var c = 2 * Math.PI * q;
                    a.lgamma = 1 / (b * c * (2 + c * b));
                    c = 1 / (1 + a.lgamma);
                    a.lgamma *= c;
                    return c
                }(this), this.vMassa *= j, this.vMassb *= j, this.vMassc *= j) : this.lgamma = this.vMassc = this.vMassb = this.vMassa = 0
            }
            j = c;
            this.dampx *= j;
            this.dampy *= j;
            this.adamp *= c
        },
        retire: function() {
            this.cleared || (this.b1.arbiters.inlined_try_remove(this),
                this.b2.arbiters.inlined_try_remove(this), null != this.pair && (this.pair = this.pair.arb = null));
            this.b1 = this.b2 = null;
            this.intchange = this.active = !1;
            this.next = D.ZPP_FluidArbiter.zpp_pool;
            D.ZPP_FluidArbiter.zpp_pool = this;
            this.pre_dt = -1
        },
        getposition: function() {
            this.wrap_position = u.Vec2.get(null, null, null);
            this.wrap_position.zpp_inner._inuse = !0;
            this.wrap_position.zpp_inner._immutable = !this.mutable;
            this.wrap_position.zpp_inner._validate = w(this, this.position_validate);
            this.wrap_position.zpp_inner._invalidate =
                w(this, this.position_invalidate)
        },
        position_invalidate: function(a) {
            this.centroidx = a.x;
            this.centroidy = a.y
        },
        position_validate: function() {
            this.wrap_position.zpp_inner.x = this.centroidx;
            this.wrap_position.zpp_inner.y = this.centroidy
        },
        __class__: D.ZPP_FluidArbiter
    });
    D.ZPP_ColArbiter = function() {
        this.pre_dt = 0;
        this.stat = this.mutable = !1;
        this.next = null;
        this.hc2 = this.hpc2 = !1;
        this.c1 = this.oc1 = this.c2 = this.oc2 = null;
        this.__ref_vertex = 0;
        this.__ref_edge1 = this.__ref_edge2 = null;
        this.biasCoef = 0;
        this.rev = !1;
        this.kMassa =
            this.kMassb = this.kMassc = this.Ka = this.Kb = this.Kc = this.rMass = this.jrAcc = this.rn1a = this.rt1a = this.rn1b = this.rt1b = this.rn2a = this.rt2a = this.rn2b = this.rt2b = this.k1x = this.k1y = this.k2x = this.k2y = this.surfacex = this.surfacey = this.lnormx = this.lnormy = this.lproj = this.radius = 0;
        this.wrap_normal = null;
        this.nx = this.ny = 0;
        this.s1 = this.s2 = this.contacts = this.wrap_contacts = this.innards = null;
        this.userdef_dyn_fric = this.userdef_stat_fric = this.userdef_restitution = this.userdef_rfric = !1;
        this.dyn_fric = this.stat_fric = this.restitution =
            this.rfric = 0;
        this.outer_zn = null;
        D.ZPP_Arbiter.call(this);
        this.pre_dt = -1;
        this.contacts = new D.ZPP_Contact;
        this.innards = new D.ZPP_IContact;
        this.type = D.ZPP_Arbiter.COL;
        this.colarb = this
    };
    j["zpp_nape.dynamics.ZPP_ColArbiter"] = D.ZPP_ColArbiter;
    D.ZPP_ColArbiter.__name__ = ["zpp_nape", "dynamics", "ZPP_ColArbiter"];
    D.ZPP_ColArbiter.__super__ = D.ZPP_Arbiter;
    D.ZPP_ColArbiter.prototype = C(D.ZPP_Arbiter.prototype, {
        applyImpulsePos: function() {
            if (2 == this.ptype) {
                var a = this.c1,
                    b = 0,
                    c = 0,
                    b = this.b2.axisy * a.lr2x - this.b2.axisx *
                    a.lr2y,
                    c = a.lr2x * this.b2.axisx + a.lr2y * this.b2.axisy,
                    d = 1,
                    b = b + this.b2.posx * d,
                    c = c + this.b2.posy * d,
                    f = 0,
                    e = 0,
                    f = this.b1.axisy * a.lr1x - this.b1.axisx * a.lr1y,
                    e = a.lr1x * this.b1.axisx + a.lr1y * this.b1.axisy,
                    d = 1,
                    f = f + this.b1.posx * d,
                    e = e + this.b1.posy * d,
                    l = a = 0,
                    a = b - f,
                    l = c - e,
                    s = Math.sqrt(a * a + l * l),
                    g = this.radius - x.collisionSlop,
                    d = s - g;
                0 > a * this.nx + l * this.ny && (a = -a, l = -l, d -= this.radius);
                0 > d && (s < x.epsilon ? 0 != this.b1.smass ? this.b1.posx += 10 * x.epsilon : this.b2.posx += 10 * x.epsilon : (d = 1 / s, a *= d, l *= d, d = 0.5 * (f + b), c = 0.5 * (e + c), f = d - this.b1.posx,
                    e = c - this.b1.posy, b = d - this.b2.posx, c -= this.b2.posy, f = l * f - a * e, b = l * b - a * c, c = this.b2.smass + b * b * this.b2.sinertia + this.b1.smass + f * f * this.b1.sinertia, 0 != c && (s = -this.biasCoef * (s - g) / c, c = g = 0, d = s, g = a * d, c = l * d, d = this.b1.imass, this.b1.posx -= g * d, this.b1.posy -= c * d, this.b1.delta_rot(-f * this.b1.iinertia * s), d = this.b2.imass, this.b2.posx += g * d, this.b2.posy += c * d, this.b2.delta_rot(b * this.b2.iinertia * s))))
            } else {
                var i = e = a = l = 0,
                    g = s = 0;
                0 == this.ptype ? (l = this.b1.axisy * this.lnormx - this.b1.axisx * this.lnormy, a = this.lnormx * this.b1.axisx +
                    this.lnormy * this.b1.axisy, b = this.lproj + (l * this.b1.posx + a * this.b1.posy), e = this.b2.axisy * this.c1.lr1x - this.b2.axisx * this.c1.lr1y, i = this.c1.lr1x * this.b2.axisx + this.c1.lr1y * this.b2.axisy, d = 1, e += this.b2.posx * d, i += this.b2.posy * d, this.hpc2 && (s = this.b2.axisy * this.c2.lr1x - this.b2.axisx * this.c2.lr1y, g = this.c2.lr1x * this.b2.axisx + this.c2.lr1y * this.b2.axisy, d = 1, s += this.b2.posx * d, g += this.b2.posy * d)) : (l = this.b2.axisy * this.lnormx - this.b2.axisx * this.lnormy, a = this.lnormx * this.b2.axisx + this.lnormy * this.b2.axisy, b = this.lproj +
                    (l * this.b2.posx + a * this.b2.posy), e = this.b1.axisy * this.c1.lr1x - this.b1.axisx * this.c1.lr1y, i = this.c1.lr1x * this.b1.axisx + this.c1.lr1y * this.b1.axisy, d = 1, e += this.b1.posx * d, i += this.b1.posy * d, this.hpc2 && (s = this.b1.axisy * this.c2.lr1x - this.b1.axisx * this.c2.lr1y, g = this.c2.lr1x * this.b1.axisx + this.c2.lr1y * this.b1.axisy, d = 1, s += this.b1.posx * d, g += this.b1.posy * d));
                d = e * l + i * a - b - this.radius;
                d += x.collisionSlop;
                f = 0;
                this.hpc2 && (f = s * l + g * a - b - this.radius, f += x.collisionSlop);
                if (0 > d || 0 > f) {
                    this.rev && (l = -l, a = -a);
                    var h = 0,
                        j = 0,
                        h =
                        e - this.b1.posx,
                        j = i - this.b1.posy,
                        c = b = 0,
                        b = e - this.b2.posx,
                        c = i - this.b2.posy,
                        k = 0,
                        m = 0,
                        i = e = 0;
                    if (this.hpc2) {
                        k = s - this.b1.posx;
                        m = g - this.b1.posy;
                        e = s - this.b2.posx;
                        i = g - this.b2.posy;
                        s = a * h - l * j;
                        g = a * b - l * c;
                        b = a * k - l * m;
                        c = a * e - l * i;
                        e = this.b1.smass + this.b2.smass;
                        this.kMassa = e + this.b1.sinertia * s * s + this.b2.sinertia * g * g;
                        this.kMassb = e + this.b1.sinertia * s * b + this.b2.sinertia * g * c;
                        this.kMassc = e + this.b1.sinertia * b * b + this.b2.sinertia * c * c;
                        var h = i = e = 0,
                            e = this.kMassa,
                            i = this.kMassb,
                            h = this.kMassc,
                            j = d * this.biasCoef,
                            f = f * this.biasCoef,
                            m = k = 0,
                            k = -j,
                            m = -f,
                            r = this.kMassa * this.kMassc - this.kMassb * this.kMassb;
                        r != r ? k = m = 0 : 0 == r ? (k = 0 != this.kMassa ? k / this.kMassa : 0, m = 0 != this.kMassc ? m / this.kMassc : 0) : (r = 1 / r, d = r * (this.kMassc * k - this.kMassb * m), m = r * (this.kMassa * m - this.kMassb * k), k = d);
                        0 <= k && 0 <= m ? (d = (k + m) * this.b1.imass, this.b1.posx -= l * d, this.b1.posy -= a * d, this.b1.delta_rot(-this.b1.iinertia * (s * k + b * m)), d = (k + m) * this.b2.imass, this.b2.posx += l * d, this.b2.posy += a * d, this.b2.delta_rot(this.b2.iinertia * (g * k + c * m))) : (k = -j / e, m = 0, 0 <= k && 0 <= i * k + f ? (d = (k + m) * this.b1.imass, this.b1.posx -=
                            l * d, this.b1.posy -= a * d, this.b1.delta_rot(-this.b1.iinertia * (s * k + b * m)), d = (k + m) * this.b2.imass, this.b2.posx += l * d, this.b2.posy += a * d, this.b2.delta_rot(this.b2.iinertia * (g * k + c * m))) : (k = 0, m = -f / h, 0 <= m && 0 <= i * m + j && (d = (k + m) * this.b1.imass, this.b1.posx -= l * d, this.b1.posy -= a * d, this.b1.delta_rot(-this.b1.iinertia * (s * k + b * m)), d = (k + m) * this.b2.imass, this.b2.posx += l * d, this.b2.posy += a * d, this.b2.delta_rot(this.b2.iinertia * (g * k + c * m)))))
                    } else f = a * h - l * j, b = a * b - l * c, c = this.b2.smass + b * b * this.b2.sinertia + this.b1.smass + f * f * this.b1.sinertia,
                        0 != c && (d = s = -this.biasCoef * d / c, g = l * d, c = a * d, d = this.b1.imass, this.b1.posx -= g * d, this.b1.posy -= c * d, this.b1.delta_rot(-f * this.b1.iinertia * s), d = this.b2.imass, this.b2.posx += g * d, this.b2.posy += c * d, this.b2.delta_rot(b * this.b2.iinertia * s))
                }
            }
        },
        applyImpulseVel: function() {
            var a, b, c, d, f;
            d = this.k1x + this.b2.velx - this.c1.r2y * this.b2.angvel - (this.b1.velx - this.c1.r1y * this.b1.angvel);
            var e = this.k1y + this.b2.vely + this.c1.r2x * this.b2.angvel - (this.b1.vely + this.c1.r1x * this.b1.angvel);
            c = (e * this.nx - d * this.ny + this.surfacex) * this.c1.tMass;
            d = this.c1.friction * this.c1.jnAcc;
            a = this.c1.jtAcc;
            f = a - c;
            f > d ? f = d : f < -d && (f = -d);
            c = f - a;
            this.c1.jtAcc = f;
            a = -this.ny * c;
            b = this.nx * c;
            this.b2.velx += a * this.b2.imass;
            this.b2.vely += b * this.b2.imass;
            this.b1.velx -= a * this.b1.imass;
            this.b1.vely -= b * this.b1.imass;
            this.b2.angvel += this.rt1b * c * this.b2.iinertia;
            this.b1.angvel -= this.rt1a * c * this.b1.iinertia;
            this.hc2 ? (f = this.k2x + this.b2.velx - this.c2.r2y * this.b2.angvel - (this.b1.velx - this.c2.r1y * this.b1.angvel), b = this.k2y + this.b2.vely + this.c2.r2x * this.b2.angvel - (this.b1.vely +
                    this.c2.r1x * this.b1.angvel), c = (b * this.nx - f * this.ny + this.surfacex) * this.c2.tMass, d = this.c2.friction * this.c2.jnAcc, a = this.c2.jtAcc, f = a - c, f > d ? f = d : f < -d && (f = -d), c = f - a, this.c2.jtAcc = f, a = -this.ny * c, b = this.nx * c, this.b2.velx += a * this.b2.imass, this.b2.vely += b * this.b2.imass, this.b1.velx -= a * this.b1.imass, this.b1.vely -= b * this.b1.imass, this.b2.angvel += this.rt2b * c * this.b2.iinertia, this.b1.angvel -= this.rt2a * c * this.b1.iinertia, d = this.k1x + this.b2.velx - this.c1.r2y * this.b2.angvel - (this.b1.velx - this.c1.r1y * this.b1.angvel),
                e = this.k1y + this.b2.vely + this.c1.r2x * this.b2.angvel - (this.b1.vely + this.c1.r1x * this.b1.angvel), f = this.k2x + this.b2.velx - this.c2.r2y * this.b2.angvel - (this.b1.velx - this.c2.r1y * this.b1.angvel), b = this.k2y + this.b2.vely + this.c2.r2x * this.b2.angvel - (this.b1.vely + this.c2.r1x * this.b1.angvel), c = this.c1.jnAcc, a = this.c2.jnAcc, d = d * this.nx + e * this.ny + this.surfacey + this.c1.bounce - (this.Ka * c + this.Kb * a), f = f * this.nx + b * this.ny + this.surfacey + this.c2.bounce - (this.Kb * c + this.Kc * a), b = -(this.kMassa * d + this.kMassb * f), e = -(this.kMassb *
                    d + this.kMassc * f), 0 <= b && 0 <= e ? (d = b - c, f = e - a, this.c1.jnAcc = b, this.c2.jnAcc = e) : (b = -this.c1.nMass * d, 0 <= b && 0 <= this.Kb * b + f ? (d = b - c, f = -a, this.c1.jnAcc = b, this.c2.jnAcc = 0) : (e = -this.c2.nMass * f, 0 <= e && 0 <= this.Kb * e + d ? (d = -c, f = e - a, this.c1.jnAcc = 0, this.c2.jnAcc = e) : 0 <= d && 0 <= f ? (d = -c, f = -a, this.c1.jnAcc = this.c2.jnAcc = 0) : f = d = 0)), c = d + f, a = this.nx * c, b = this.ny * c, this.b2.velx += a * this.b2.imass, this.b2.vely += b * this.b2.imass, this.b1.velx -= a * this.b1.imass, this.b1.vely -= b * this.b1.imass, this.b2.angvel += (this.rn1b * d + this.rn2b * f) * this.b2.iinertia,
                this.b1.angvel -= (this.rn1a * d + this.rn2a * f) * this.b1.iinertia) : (0 != this.radius && (c = (this.b2.angvel - this.b1.angvel) * this.rMass, d = this.rfric * this.c1.jnAcc, a = this.jrAcc, this.jrAcc -= c, this.jrAcc > d ? this.jrAcc = d : this.jrAcc < -d && (this.jrAcc = -d), c = this.jrAcc - a, this.b2.angvel += c * this.b2.iinertia, this.b1.angvel -= c * this.b1.iinertia), d = this.k1x + this.b2.velx - this.c1.r2y * this.b2.angvel - (this.b1.velx - this.c1.r1y * this.b1.angvel), e = this.k1y + this.b2.vely + this.c1.r2x * this.b2.angvel - (this.b1.vely + this.c1.r1x * this.b1.angvel),
                c = (this.c1.bounce + (this.nx * d + this.ny * e) + this.surfacey) * this.c1.nMass, a = this.c1.jnAcc, f = a - c, 0 > f && (f = 0), c = f - a, this.c1.jnAcc = f, a = this.nx * c, b = this.ny * c, this.b2.velx += a * this.b2.imass, this.b2.vely += b * this.b2.imass, this.b1.velx -= a * this.b1.imass, this.b1.vely -= b * this.b1.imass, this.b2.angvel += this.rn1b * c * this.b2.iinertia, this.b1.angvel -= this.rn1a * c * this.b1.iinertia)
        },
        warmStart: function() {
            var a = this.nx * this.c1.jnAcc - this.ny * this.c1.jtAcc,
                b = this.ny * this.c1.jnAcc + this.nx * this.c1.jtAcc,
                c = this.b1.imass;
            this.b1.velx -=
                a * c;
            this.b1.vely -= b * c;
            this.b1.angvel -= this.b1.iinertia * (b * this.c1.r1x - a * this.c1.r1y);
            c = this.b2.imass;
            this.b2.velx += a * c;
            this.b2.vely += b * c;
            this.b2.angvel += this.b2.iinertia * (b * this.c1.r2x - a * this.c1.r2y);
            this.hc2 && (a = this.nx * this.c2.jnAcc - this.ny * this.c2.jtAcc, b = this.ny * this.c2.jnAcc + this.nx * this.c2.jtAcc, c = this.b1.imass, this.b1.velx -= a * c, this.b1.vely -= b * c, this.b1.angvel -= this.b1.iinertia * (b * this.c2.r1x - a * this.c2.r1y), c = this.b2.imass, this.b2.velx += a * c, this.b2.vely += b * c, this.b2.angvel += this.b2.iinertia *
                (b * this.c2.r2x - a * this.c2.r2y));
            this.b2.angvel += this.jrAcc * this.b2.iinertia;
            this.b1.angvel -= this.jrAcc * this.b1.iinertia
        },
        preStep: function(a) {
            this.invalidated && (this.invalidated = !1, this.userdef_restitution || (this.restitution = this.s1.material.elasticity <= Math.NEGATIVE_INFINITY || this.s2.material.elasticity <= Math.NEGATIVE_INFINITY ? 0 : this.s1.material.elasticity >= Math.POSITIVE_INFINITY || this.s2.material.elasticity >= Math.POSITIVE_INFINITY ? 1 : (this.s1.material.elasticity + this.s2.material.elasticity) / 2, 0 > this.restitution &&
                (this.restitution = 0), 1 < this.restitution && (this.restitution = 1)), this.userdef_dyn_fric || (this.dyn_fric = Math.sqrt(this.s1.material.dynamicFriction * this.s2.material.dynamicFriction)), this.userdef_stat_fric || (this.stat_fric = Math.sqrt(this.s1.material.staticFriction * this.s2.material.staticFriction)), this.userdef_rfric || (this.rfric = Math.sqrt(this.s1.material.rollingFriction * this.s2.material.rollingFriction))); - 1 == this.pre_dt && (this.pre_dt = a);
            var b = a / this.pre_dt;
            this.pre_dt = a;
            var c = this.b1.smass + this.b2.smass;
            this.hc2 = !1;
            a = !0;
            this.biasCoef = this.b1.type != e.ZPP_Flags.id_BodyType_DYNAMIC || this.b2.type != e.ZPP_Flags.id_BodyType_DYNAMIC ? this.continuous ? x.contactContinuousStaticBiasCoef : x.contactStaticBiasCoef : this.continuous ? x.contactContinuousBiasCoef : x.contactBiasCoef;
            this.continuous = !1;
            for (var d = null, f = null, n = this.innards.next, l = this.contacts.next; null != l;) {
                var s = l;
                if (s.stamp + x.arbiterExpirationDelay < this.stamp) l = this.contacts.inlined_erase(d), n = this.innards.inlined_erase(f), s.arbiter = null, s.next = D.ZPP_Contact.zpp_pool,
                    D.ZPP_Contact.zpp_pool = s;
                else {
                    d = s.inner;
                    f = s.active;
                    s.active = s.stamp == this.stamp;
                    if (s.active) {
                        a ? (a = !1, this.c1 = d, this.oc1 = s) : (this.hc2 = !0, this.c2 = d, this.oc2 = s);
                        d.r2x = s.px - this.b2.posx;
                        d.r2y = s.py - this.b2.posy;
                        d.r1x = s.px - this.b1.posx;
                        d.r1y = s.py - this.b1.posy;
                        var g = c + this.b2.sinertia * e.ZPP_Math.sqr(d.r2x * this.nx + d.r2y * this.ny),
                            g = g + this.b1.sinertia * e.ZPP_Math.sqr(d.r1x * this.nx + d.r1y * this.ny);
                        d.tMass = g < x.epsilon * x.epsilon ? 0 : 1 / g;
                        g = c + this.b2.sinertia * e.ZPP_Math.sqr(this.ny * d.r2x - this.nx * d.r2y);
                        g += this.b1.sinertia *
                            e.ZPP_Math.sqr(this.ny * d.r1x - this.nx * d.r1y);
                        d.nMass = g < x.epsilon * x.epsilon ? 0 : 1 / g;
                        var i = g = 0,
                            h = this.b2.angvel + this.b2.kinangvel,
                            g = this.b2.velx + this.b2.kinvelx - d.r2y * h,
                            i = this.b2.vely + this.b2.kinvely + d.r2x * h,
                            h = this.b1.angvel + this.b1.kinangvel,
                            g = g - (this.b1.velx + this.b1.kinvelx - d.r1y * h),
                            i = i - (this.b1.vely + this.b1.kinvely + d.r1x * h),
                            h = this.nx * g + this.ny * i;
                        s.elasticity = this.restitution;
                        d.bounce = h * s.elasticity;
                        d.bounce > -x.elasticThreshold && (d.bounce = 0);
                        h = i * this.nx - g * this.ny;
                        g = x.staticFrictionThreshold;
                        d.friction =
                            h * h > g * g ? this.dyn_fric : this.stat_fric;
                        d.jnAcc *= b;
                        d.jtAcc *= b
                    }
                    f != s.active && (this.contacts.modified = !0);
                    d = l;
                    f = n;
                    n = n.next;
                    l = l.next
                }
            }
            this.hc2 ? (this.hpc2 = !0, this.oc1.posOnly ? (n = this.c1, this.c1 = this.c2, this.c2 = n, n = this.oc1, this.oc1 = this.oc2, this.oc2 = n, this.hc2 = !1) : this.oc2.posOnly && (this.hc2 = !1), this.oc1.posOnly && (a = !0)) : this.hpc2 = !1;
            this.jrAcc *= b;
            a || (this.rn1a = this.ny * this.c1.r1x - this.nx * this.c1.r1y, this.rt1a = this.c1.r1x * this.nx + this.c1.r1y * this.ny, this.rn1b = this.ny * this.c1.r2x - this.nx * this.c1.r2y, this.rt1b =
                this.c1.r2x * this.nx + this.c1.r2y * this.ny, this.k1x = this.b2.kinvelx - this.c1.r2y * this.b2.kinangvel - (this.b1.kinvelx - this.c1.r1y * this.b1.kinangvel), this.k1y = this.b2.kinvely + this.c1.r2x * this.b2.kinangvel - (this.b1.kinvely + this.c1.r1x * this.b1.kinangvel));
            this.hc2 && (this.rn2a = this.ny * this.c2.r1x - this.nx * this.c2.r1y, this.rt2a = this.c2.r1x * this.nx + this.c2.r1y * this.ny, this.rn2b = this.ny * this.c2.r2x - this.nx * this.c2.r2y, this.rt2b = this.c2.r2x * this.nx + this.c2.r2y * this.ny, this.k2x = this.b2.kinvelx - this.c2.r2y * this.b2.kinangvel -
                (this.b1.kinvelx - this.c2.r1y * this.b1.kinangvel), this.k2y = this.b2.kinvely + this.c2.r2x * this.b2.kinangvel - (this.b1.kinvely + this.c2.r1x * this.b1.kinangvel), this.kMassa = c + this.b1.sinertia * this.rn1a * this.rn1a + this.b2.sinertia * this.rn1b * this.rn1b, this.kMassb = c + this.b1.sinertia * this.rn1a * this.rn2a + this.b2.sinertia * this.rn1b * this.rn2b, this.kMassc = c + this.b1.sinertia * this.rn2a * this.rn2a + this.b2.sinertia * this.rn2b * this.rn2b, this.kMassa * this.kMassa + 2 * this.kMassb * this.kMassb + this.kMassc * this.kMassc < x.illConditionedThreshold *
                (this.kMassa * this.kMassc - this.kMassb * this.kMassb) ? (this.Ka = this.kMassa, this.Kb = this.kMassb, this.Kc = this.kMassc, b = this.kMassa * this.kMassc - this.kMassb * this.kMassb, b != b ? (this.kMassa = this.kMassb = this.kMassc = 0, 3) : 0 == b ? (b = 0, 0 != this.kMassa ? this.kMassa = 1 / this.kMassa : (this.kMassa = 0, b |= 1), 0 != this.kMassc ? this.kMassc = 1 / this.kMassc : (this.kMassc = 0, b |= 2), this.kMassb = 0, b) : (b = 1 / b, c = this.kMassc * b, this.kMassc = this.kMassa * b, this.kMassa = c, this.kMassb *= -b, 0)) : (this.hc2 = !1, this.oc2.dist < this.oc1.dist && (c = this.c1, this.c1 =
                    this.c2, this.c2 = c), this.oc2.active = !1, this.contacts.modified = !0));
            this.surfacex = this.b2.svelx;
            this.surfacey = this.b2.svely;
            c = 1;
            this.surfacex += this.b1.svelx * c;
            this.surfacey += this.b1.svely * c;
            this.surfacex = -this.surfacex;
            this.surfacey = -this.surfacey;
            this.rMass = this.b1.sinertia + this.b2.sinertia;
            0 != this.rMass && (this.rMass = 1 / this.rMass);
            return a
        },
        cleanupContacts: function() {
            var a = !0,
                b = null,
                c = null,
                d = this.innards.next;
            this.hc2 = !1;
            for (var f = this.contacts.next; null != f;) {
                var e = f;
                e.stamp + x.arbiterExpirationDelay <
                    this.stamp ? (f = this.contacts.inlined_erase(b), d = this.innards.inlined_erase(c), e.arbiter = null, e.next = D.ZPP_Contact.zpp_pool, D.ZPP_Contact.zpp_pool = e) : (b = e.inner, c = e.active, e.active = e.stamp == this.stamp, e.active && (a ? (a = !1, this.c1 = b, this.oc1 = e) : (this.hc2 = !0, this.c2 = b, this.oc2 = e)), c != e.active && (this.contacts.modified = !0), b = f, c = d, d = d.next, f = f.next)
            }
            this.hc2 ? (this.hpc2 = !0, this.oc1.posOnly ? (d = this.c1, this.c1 = this.c2, this.c2 = d, d = this.oc1, this.oc1 = this.oc2, this.oc2 = d, this.hc2 = !1) : this.oc2.posOnly && (this.hc2 = !1), this.oc1.posOnly && (a = !0)) : this.hpc2 = !1;
            return a
        },
        setupcontacts: function() {
            this.wrap_contacts = e.ZPP_ContactList.get(this.contacts, !0);
            this.wrap_contacts.zpp_inner.immutable = !this.mutable;
            this.wrap_contacts.zpp_inner.adder = w(this, this.contacts_adder);
            this.wrap_contacts.zpp_inner.dontremove = !0;
            this.wrap_contacts.zpp_inner.subber = w(this, this.contacts_subber)
        },
        contacts_subber: function(a) {
            for (var b = null, c = null, d = this.innards.next, f = this.contacts.next; null != f;) {
                var e = f;
                if (e == a.zpp_inner) {
                    this.contacts.erase(b);
                    this.innards.erase(c);
                    a = e;
                    a.arbiter = null;
                    a.next = D.ZPP_Contact.zpp_pool;
                    D.ZPP_Contact.zpp_pool = a;
                    break
                }
                b = f;
                c = d;
                d = d.next;
                f = f.next
            }
        },
        contacts_adder: function() {
            return !1
        },
        retire: function() {
            this.cleared || (this.b1.arbiters.inlined_try_remove(this), this.b2.arbiters.inlined_try_remove(this), null != this.pair && (this.pair = this.pair.arb = null));
            this.b1 = this.b2 = null;
            for (this.intchange = this.active = !1; null != this.contacts.next;) {
                var a = this.contacts.inlined_pop_unsafe();
                a.arbiter = null;
                a.next = D.ZPP_Contact.zpp_pool;
                D.ZPP_Contact.zpp_pool =
                    a;
                this.innards.inlined_pop()
            }
            a = this;
            a.userdef_dyn_fric = !1;
            a.userdef_stat_fric = !1;
            a.userdef_restitution = !1;
            a.userdef_rfric = !1;
            a.__ref_edge1 = a.__ref_edge2 = null;
            a.next = D.ZPP_ColArbiter.zpp_pool;
            D.ZPP_ColArbiter.zpp_pool = a;
            this.pre_dt = -1
        },
        injectContact: function(a, b, c, d, f, e, l) {
            null == l && (l = !1);
            for (var g = null, i = this.contacts.next; null != i;) {
                var h = i;
                if (e == h.hash) {
                    g = h;
                    break
                }
                i = i.next
            }
            null == g ? (null == D.ZPP_Contact.zpp_pool ? g = new D.ZPP_Contact : (g = D.ZPP_Contact.zpp_pool, D.ZPP_Contact.zpp_pool = g.next, g.next = null),
                null, i = g.inner, i.jnAcc = i.jtAcc = 0, g.hash = e, g.fresh = !0, g.arbiter = this, this.jrAcc = 0, this.contacts.inlined_add(g), this.innards.add(i)) : g.fresh = !1;
            g.px = a;
            g.py = b;
            this.nx = c;
            this.ny = d;
            g.dist = f;
            g.stamp = this.stamp;
            g.posOnly = l;
            return g
        },
        getnormal: function() {
            this.wrap_normal = u.Vec2.get(0, 0, null);
            this.wrap_normal.zpp_inner._immutable = !0;
            this.wrap_normal.zpp_inner._inuse = !0;
            this.wrap_normal.zpp_inner._validate = w(this, this.normal_validate)
        },
        normal_validate: function() {
            if (this.cleared) throw "Error: Arbiter not currently in use";
            this.wrap_normal.zpp_inner.x = this.nx;
            this.wrap_normal.zpp_inner.y = this.ny
        },
        __class__: D.ZPP_ColArbiter
    });
    D.ZPP_Contact = function() {
        this.length = 0;
        this._inuse = this.modified = this.pushmod = !1;
        this.next = null;
        this.dist = this.elasticity = 0;
        this.fresh = !1;
        this.stamp = this.hash = 0;
        this.active = this.posOnly = !1;
        this.wrap_position = this.arbiter = this.inner = null;
        this.px = this.py = 0;
        this.outer = null;
        this.inner = new D.ZPP_IContact
    };
    j["zpp_nape.dynamics.ZPP_Contact"] = D.ZPP_Contact;
    D.ZPP_Contact.__name__ = ["zpp_nape", "dynamics",
        "ZPP_Contact"
    ];
    D.ZPP_Contact.prototype = {
        iterator_at: function(a) {
            for (var b = this.next; 0 < a-- && null != b;) b = b.next;
            return b
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.next, this.next = c = b.next, null == this.next && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            b._inuse = !1;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        erase: function(a) {
            return this.inlined_erase(a)
        },
        inlined_pop_unsafe: function() {
            var a = this.next;
            this.pop();
            return a
        },
        inlined_pop: function() {
            var a = this.next;
            this.next = a.next;
            a._inuse = !1;
            null == this.next && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_add: function(a) {
            a._inuse = !0;
            a.next = this.next;
            this.next = a;
            this.modified = !0;
            this.length++;
            return a
        },
        getposition: function() {
            this.wrap_position = u.Vec2.get(null, null, null);
            this.wrap_position.zpp_inner._inuse = !0;
            this.wrap_position.zpp_inner._immutable = !0;
            this.wrap_position.zpp_inner._validate = w(this, this.position_validate)
        },
        position_validate: function() {
            this.wrap_position.zpp_inner.x =
                this.px;
            this.wrap_position.zpp_inner.y = this.py
        },
        wrapper: function() {
            null == this.outer && (D.ZPP_Contact.internal = !0, this.outer = new K.Contact, D.ZPP_Contact.internal = !1, this.outer.zpp_inner = this);
            return this.outer
        },
        __class__: D.ZPP_Contact
    };
    D.ZPP_IContact = function() {
        this.length = 0;
        this._inuse = this.modified = this.pushmod = !1;
        this.next = null;
        this.r1x = this.r1y = this.r2x = this.r2y = this.nMass = this.tMass = this.bounce = this.friction = this.jnAcc = this.jtAcc = this.lr1x = this.lr1y = this.lr2x = this.lr2y = 0
    };
    j["zpp_nape.dynamics.ZPP_IContact"] =
        D.ZPP_IContact;
    D.ZPP_IContact.__name__ = ["zpp_nape", "dynamics", "ZPP_IContact"];
    D.ZPP_IContact.prototype = {
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.next, this.next = c = b.next, null == this.next && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            b._inuse = !1;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        erase: function(a) {
            return this.inlined_erase(a)
        },
        inlined_pop: function() {
            var a = this.next;
            this.next = a.next;
            a._inuse = !1;
            null == this.next && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        inlined_add: function(a) {
            a._inuse = !0;
            a.next = this.next;
            this.next = a;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: D.ZPP_IContact
    };
    D.ZPP_InteractionFilter = function() {
        this.collisionGroup = this.collisionMask = this.sensorGroup = this.sensorMask = this.fluidGroup = this.fluidMask = 0;
        this.next = this.userData = this.outer = this.shapes = this.wrap_shapes = null;
        this.shapes = new e.ZNPList_ZPP_Shape;
        this.collisionGroup = this.sensorGroup = this.fluidGroup = 1;
        this.collisionMask =
            this.sensorMask = this.fluidMask = -1
    };
    j["zpp_nape.dynamics.ZPP_InteractionFilter"] = D.ZPP_InteractionFilter;
    D.ZPP_InteractionFilter.__name__ = ["zpp_nape", "dynamics", "ZPP_InteractionFilter"];
    D.ZPP_InteractionFilter.prototype = {
        invalidate: function() {
            for (var a = this.shapes.head; null != a;) a.elt.invalidate_filter(), a = a.next
        },
        shouldFlow: function(a) {
            return 0 != (this.fluidMask & a.fluidGroup) && 0 != (a.fluidMask & this.fluidGroup)
        },
        shouldSense: function(a) {
            return 0 != (this.sensorMask & a.sensorGroup) && 0 != (a.sensorMask & this.sensorGroup)
        },
        shouldCollide: function(a) {
            return 0 != (this.collisionMask & a.collisionGroup) && 0 != (a.collisionMask & this.collisionGroup)
        },
        wrapper: function() {
            if (null == this.outer) {
                this.outer = new K.InteractionFilter;
                var a = this.outer.zpp_inner;
                a.outer = null;
                a.next = D.ZPP_InteractionFilter.zpp_pool;
                D.ZPP_InteractionFilter.zpp_pool = a;
                this.outer.zpp_inner = this
            }
            return this.outer
        },
        __class__: D.ZPP_InteractionFilter
    };
    D.ZPP_InteractionGroup = function() {
        this.depth = 0;
        this.group = this.groups = this.wrap_groups = this.interactors = this.wrap_interactors =
            null;
        this.ignore = !1;
        this.outer = null
    };
    j["zpp_nape.dynamics.ZPP_InteractionGroup"] = D.ZPP_InteractionGroup;
    D.ZPP_InteractionGroup.__name__ = ["zpp_nape", "dynamics", "ZPP_InteractionGroup"];
    D.ZPP_InteractionGroup.prototype = {
        invalidate: function(a) {
            null == a && (a = !1);
            if (a || this.ignore) {
                for (var b = this.interactors.head; null != b;) {
                    var c = b.elt;
                    null != c.ibody ? c.ibody.wake() : null != c.ishape ? c.ishape.body.wake() : c.icompound.wake();
                    b = b.next
                }
                for (b = this.groups.head; null != b;) b.elt.invalidate(a), b = b.next
            }
        },
        setGroup: function(a) {
            this.group !=
                a && (null != this.group && (this.group.groups.remove(this), this.depth = 0, this.group.invalidate(!0)), this.group = a, null != a ? (a.groups.add(this), this.depth = a.depth + 1, a.invalidate(!0)) : this.invalidate(!0))
        },
        __class__: D.ZPP_InteractionGroup
    };
    D.ZPP_SpaceArbiterList = function() {
        this.at_index_0 = this.at_index_1 = this.at_index_2 = this.at_index_3 = 0;
        this.lengths = this.ite_0 = this.ite_1 = this.ite_2 = this.ite_3 = null;
        this.zip_length = !1;
        this._length = 0;
        this.space = null;
        K.ArbiterList.call(this);
        this.at_index_3 = this.at_index_2 = this.at_index_1 =
            this.at_index_0 = 0;
        this.zip_length = !0;
        this._length = 0;
        this.lengths = [];
        for (var a = 0; 4 > a;) a++, this.lengths.push(0)
    };
    j["zpp_nape.dynamics.ZPP_SpaceArbiterList"] = D.ZPP_SpaceArbiterList;
    D.ZPP_SpaceArbiterList.__name__ = ["zpp_nape", "dynamics", "ZPP_SpaceArbiterList"];
    D.ZPP_SpaceArbiterList.__super__ = K.ArbiterList;
    D.ZPP_SpaceArbiterList.prototype = C(K.ArbiterList.prototype, {
        at: function(a) {
            this.zpp_vm();
            var b = null,
                c = 0;
            if (null == b)
                if (a < c + this.lengths[0]) {
                    b = a - c;
                    if (b < this.at_index_0 || null == this.ite_0) {
                        this.at_index_0 =
                            0;
                        for (this.ite_0 = this.space.c_arbiters_true.head;;) {
                            var d = this.ite_0.elt;
                            if (d.active) break;
                            this.ite_0 = this.ite_0.next
                        }
                    }
                    for (; this.at_index_0 != b;) {
                        this.at_index_0++;
                        for (this.ite_0 = this.ite_0.next;;) {
                            d = this.ite_0.elt;
                            if (d.active) break;
                            this.ite_0 = this.ite_0.next
                        }
                    }
                    b = this.ite_0.elt.wrapper()
                } else c += this.lengths[0];
            if (null == b)
                if (a < c + this.lengths[1]) {
                    b = a - c;
                    if (b < this.at_index_1 || null == this.ite_1) {
                        this.at_index_1 = 0;
                        for (this.ite_1 = this.space.c_arbiters_false.head;;) {
                            d = this.ite_1.elt;
                            if (d.active) break;
                            this.ite_1 =
                                this.ite_1.next
                        }
                    }
                    for (; this.at_index_1 != b;) {
                        this.at_index_1++;
                        for (this.ite_1 = this.ite_1.next;;) {
                            d = this.ite_1.elt;
                            if (d.active) break;
                            this.ite_1 = this.ite_1.next
                        }
                    }
                    b = this.ite_1.elt.wrapper()
                } else c += this.lengths[1];
            if (null == b)
                if (a < c + this.lengths[2]) {
                    b = a - c;
                    if (b < this.at_index_2 || null == this.ite_2) {
                        this.at_index_2 = 0;
                        for (this.ite_2 = this.space.f_arbiters.head;;) {
                            d = this.ite_2.elt;
                            if (d.active) break;
                            this.ite_2 = this.ite_2.next
                        }
                    }
                    for (; this.at_index_2 != b;) {
                        this.at_index_2++;
                        for (this.ite_2 = this.ite_2.next;;) {
                            d = this.ite_2.elt;
                            if (d.active) break;
                            this.ite_2 = this.ite_2.next
                        }
                    }
                    b = this.ite_2.elt.wrapper()
                } else c += this.lengths[2];
            if (null == b && a < c + this.lengths[3]) {
                b = a - c;
                if (b < this.at_index_3 || null == this.ite_3) {
                    this.at_index_3 = 0;
                    for (this.ite_3 = this.space.s_arbiters.head;;) {
                        d = this.ite_3.elt;
                        if (d.active) break;
                        this.ite_3 = this.ite_3.next
                    }
                }
                for (; this.at_index_3 != b;) {
                    this.at_index_3++;
                    for (this.ite_3 = this.ite_3.next;;) {
                        d = this.ite_3.elt;
                        if (d.active) break;
                        this.ite_3 = this.ite_3.next
                    }
                }
                b = this.ite_3.elt.wrapper()
            }
            return b
        },
        clear: function() {},
        remove: function() {
            return !1
        },
        shift: function() {
            return null
        },
        unshift: function() {
            return !1
        },
        pop: function() {
            return null
        },
        push: function() {
            return !1
        },
        zpp_vm: function() {
            var a = !1;
            this.space.c_arbiters_true.modified && (a = !0, this.space.c_arbiters_true.modified = !1);
            this.space.c_arbiters_false.modified && (a = !0, this.space.c_arbiters_false.modified = !1);
            this.space.f_arbiters.modified && (a = !0, this.space.f_arbiters.modified = !1);
            this.space.s_arbiters.modified && (a = !0, this.space.s_arbiters.modified = !1);
            a && (this.zip_length = !0, this._length = 0, this.ite_3 =
                this.ite_2 = this.ite_1 = this.ite_0 = null)
        },
        zpp_gl: function() {
            this.zpp_vm();
            if (this.zip_length) {
                for (var a = this._length = 0, b = 0, c = this.space.c_arbiters_true.head; null != c;) {
                    var d = c.elt;
                    d.active && b++;
                    c = c.next
                }
                this.lengths[a++] = b;
                this._length += b;
                b = 0;
                for (c = this.space.c_arbiters_false.head; null != c;) d = c.elt, d.active && b++, c = c.next;
                this.lengths[a++] = b;
                this._length += b;
                b = 0;
                for (c = this.space.f_arbiters.head; null != c;) d = c.elt, d.active && b++, c = c.next;
                this.lengths[a++] = b;
                this._length += b;
                b = 0;
                for (c = this.space.s_arbiters.head; null !=
                    c;) d = c.elt, d.active && b++, c = c.next;
                this.lengths[a++] = b;
                this._length += b;
                this.zip_length = !1
            }
            return this._length
        },
        __class__: D.ZPP_SpaceArbiterList
    });
    q = {
        ZPP_AABB: function() {
            this.wrap_max = null;
            this.maxx = this.maxy = 0;
            this.wrap_min = null;
            this.minx = this.miny = 0;
            this.outer = this.next = null;
            this._immutable = !1;
            this._invalidate = this._validate = null
        }
    };
    j["zpp_nape.geom.ZPP_AABB"] = q.ZPP_AABB;
    q.ZPP_AABB.__name__ = ["zpp_nape", "geom", "ZPP_AABB"];
    q.ZPP_AABB.get = function(a, b, c, d) {
        var f;
        null == q.ZPP_AABB.zpp_pool ? f = new q.ZPP_AABB :
            (f = q.ZPP_AABB.zpp_pool, q.ZPP_AABB.zpp_pool = f.next, f.next = null);
        null;
        f.minx = a;
        f.miny = b;
        f.maxx = c;
        f.maxy = d;
        return f
    };
    q.ZPP_AABB.prototype = {
        toString: function() {
            return "{ x: " + this.minx + " y: " + this.miny + " w: " + (this.maxx - this.minx) + " h: " + (this.maxy - this.miny) + " }"
        },
        setExpand: function(a, b) {
            this.minx = a.minx - b;
            this.miny = a.miny - b;
            this.maxx = a.maxx + b;
            this.maxy = a.maxy + b
        },
        setCombine: function(a, b) {
            this.minx = a.minx < b.minx ? a.minx : b.minx;
            this.miny = a.miny < b.miny ? a.miny : b.miny;
            this.maxx = a.maxx > b.maxx ? a.maxx : b.maxx;
            this.maxy = a.maxy > b.maxy ? a.maxy : b.maxy
        },
        containsPoint: function(a) {
            return a.x >= this.minx && a.x <= this.maxx && a.y >= this.miny && a.y <= this.maxy
        },
        contains: function(a) {
            return a.minx >= this.minx && a.miny >= this.miny && a.maxx <= this.maxx && a.maxy <= this.maxy
        },
        combine: function(a) {
            a.minx < this.minx && (this.minx = a.minx);
            a.maxx > this.maxx && (this.maxx = a.maxx);
            a.miny < this.miny && (this.miny = a.miny);
            a.maxy > this.maxy && (this.maxy = a.maxy)
        },
        intersect: function(a) {
            return a.miny <= this.maxy && this.miny <= a.maxy && a.minx <= this.maxx && this.minx <=
                a.maxx
        },
        intersectY: function(a) {
            return !(a.miny > this.maxy || this.miny > a.maxy)
        },
        mod_max: function(a) {
            if (a.x != this.maxx || a.y != this.maxy) this.maxx = a.x, this.maxy = a.y, null != this._invalidate && this._invalidate(this)
        },
        dom_max: function() {
            null != this._validate && this._validate();
            this.wrap_max.zpp_inner.x = this.maxx;
            this.wrap_max.zpp_inner.y = this.maxy
        },
        getmax: function() {
            null == this.wrap_max && (this.wrap_max = u.Vec2.get(this.maxx, this.maxy, null), this.wrap_max.zpp_inner._inuse = !0, this._immutable ? this.wrap_max.zpp_inner._immutable = !0 : this.wrap_max.zpp_inner._invalidate = w(this, this.mod_max), this.wrap_max.zpp_inner._validate = w(this, this.dom_max));
            return this.wrap_max
        },
        mod_min: function(a) {
            if (a.x != this.minx || a.y != this.miny) this.minx = a.x, this.miny = a.y, null != this._invalidate && this._invalidate(this)
        },
        dom_min: function() {
            null != this._validate && this._validate();
            this.wrap_min.zpp_inner.x = this.minx;
            this.wrap_min.zpp_inner.y = this.miny
        },
        getmin: function() {
            null == this.wrap_min && (this.wrap_min = u.Vec2.get(this.minx, this.miny, null), this.wrap_min.zpp_inner._inuse = !0, this._immutable ? this.wrap_min.zpp_inner._immutable = !0 : this.wrap_min.zpp_inner._invalidate = w(this, this.mod_min), this.wrap_min.zpp_inner._validate = w(this, this.dom_min));
            return this.wrap_min
        },
        perimeter: function() {
            return 2 * (this.maxx - this.minx + (this.maxy - this.miny))
        },
        height: function() {
            return this.maxy - this.miny
        },
        width: function() {
            return this.maxx - this.minx
        },
        wrapper: function() {
            if (null == this.outer) {
                this.outer = new u.AABB;
                var a = this.outer.zpp_inner;
                null != a.outer && (a.outer.zpp_inner = null, a.outer = null);
                a.wrap_min =
                    a.wrap_max = null;
                a._invalidate = null;
                a._validate = null;
                a.next = q.ZPP_AABB.zpp_pool;
                q.ZPP_AABB.zpp_pool = a;
                this.outer.zpp_inner = this
            }
            return this.outer
        },
        invalidate: function() {
            null != this._invalidate && this._invalidate(this)
        },
        validate: function() {
            null != this._validate && this._validate()
        },
        __class__: q.ZPP_AABB
    };
    e.ZNPList_ZPP_Vec2 = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_Vec2"] = e.ZNPList_ZPP_Vec2;
    e.ZNPList_ZPP_Vec2.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Vec2"];
    e.ZNPList_ZPP_Vec2.prototype = {
        iterator_at: function(a) {
            for (var b = this.head; 0 < a-- && null != b;) b = b.next;
            return b
        },
        clear: function() {
            for (; null != this.head;) this.inlined_pop();
            this.pushmod = !0
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Vec2.zpp_pool;
            e.ZNPNode_ZPP_Vec2.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        erase: function(a) {
            return this.inlined_erase(a)
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Vec2.zpp_pool;
            e.ZNPNode_ZPP_Vec2.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_insert: function(a, b) {
            var c;
            null == e.ZNPNode_ZPP_Vec2.zpp_pool ? c = new e.ZNPNode_ZPP_Vec2 : (c = e.ZNPNode_ZPP_Vec2.zpp_pool, e.ZNPNode_ZPP_Vec2.zpp_pool = c.next, c.next = null);
            null;
            c.elt = b;
            null == a ? (c.next = this.head, this.head = c) : (c.next = a.next, a.next = c);
            this.pushmod = this.modified = !0;
            this.length++;
            return c
        },
        insert: function(a, b) {
            return this.inlined_insert(a, b)
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_Vec2.zpp_pool ? b = new e.ZNPNode_ZPP_Vec2 : (b = e.ZNPNode_ZPP_Vec2.zpp_pool,
                e.ZNPNode_ZPP_Vec2.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_Vec2
    };
    q.ZPP_Collide = function() {};
    j["zpp_nape.geom.ZPP_Collide"] = q.ZPP_Collide;
    q.ZPP_Collide.__name__ = ["zpp_nape", "geom", "ZPP_Collide"];
    q.ZPP_Collide.circleContains = function(a, b) {
        var c = 0,
            d = 0,
            c = b.x - a.worldCOMx,
            d = b.y - a.worldCOMy;
        return c * c + d * d < a.radius * a.radius
    };
    q.ZPP_Collide.polyContains = function(a, b) {
        var c;
        c = !0;
        for (var d = a.edges.head; null != d;) {
            var f = d.elt;
            if (f.gnormx * b.x + f.gnormy * b.y <= f.gprojection) d = d.next;
            else {
                c = !1;
                break
            }
        }
        return c
    };
    q.ZPP_Collide.shapeContains = function(a, b) {
        return a.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? q.ZPP_Collide.circleContains(a.circle, b) : q.ZPP_Collide.polyContains(a.polygon, b)
    };
    q.ZPP_Collide.containTest = function(a, b) {
        return a.aabb.contains(b.aabb) ? a.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? b.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? function() {
            var c = a.circle.radius + -b.circle.radius,
                d = 0,
                f = 0,
                d = b.circle.worldCOMx - a.circle.worldCOMx,
                f = b.circle.worldCOMy - a.circle.worldCOMy;
            return d * d + f * f <= c * c
        }(this) : function() {
            var c;
            c = !0;
            for (var d = b.polygon.gverts.next; null != d;) {
                var f = d,
                    e = a.circle.radius,
                    l = 0,
                    g = 0,
                    l = f.x - a.circle.worldCOMx,
                    g = f.y - a.circle.worldCOMy;
                if (l * l + g * g <= e * e) d = d.next;
                else {
                    c = !1;
                    break
                }
            }
            return c
        }(this) : b.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? function() {
            var c;
            c = !0;
            for (var d = a.polygon.edges.head; null != d;) {
                var f = d.elt;
                if (f.gnormx * b.circle.worldCOMx + f.gnormy * b.circle.worldCOMy + b.circle.radius <=
                    f.gprojection) d = d.next;
                else {
                    c = !1;
                    break
                }
            }
            return c
        }(this) : function() {
            var c;
            c = !0;
            for (var d = a.polygon.edges.head; null != d;) {
                for (var f = d.elt, e = -1.0E100, l = b.polygon.gverts.next; null != l;) {
                    var g = l,
                        g = f.gnormx * g.x + f.gnormy * g.y;
                    g > e && (e = g);
                    l = l.next
                }
                if (e <= f.gprojection) d = d.next;
                else {
                    c = !1;
                    break
                }
            }
            return c
        }(this) : !1
    };
    q.ZPP_Collide.contactCollide = function(a, b, c, d) {
        if (b.type == e.ZPP_Flags.id_ShapeType_POLYGON)
            if (a.type == e.ZPP_Flags.id_ShapeType_POLYGON) {
                for (var f = !0, n = -1.0E100, l = -1, g = null, i = null, h = a.polygon.edges.head; null !=
                    h;) {
                    for (var j = h.elt, k = 1.0E100, m = b.polygon.gverts.next; null != m;) {
                        var q = m,
                            q = j.gnormx * q.x + j.gnormy * q.y;
                        q < k && (k = q);
                        if (k - j.gprojection <= n) break;
                        m = m.next
                    }
                    k -= j.gprojection;
                    if (0 <= k) {
                        f = !1;
                        break
                    }
                    k > n && (n = k, g = j, l = 1);
                    h = h.next
                }
                if (f) {
                    for (h = b.polygon.edges.head; null != h;) {
                        j = h.elt;
                        k = 1.0E100;
                        for (m = a.polygon.gverts.next; null != m;) {
                            q = m;
                            q = j.gnormx * q.x + j.gnormy * q.y;
                            q < k && (k = q);
                            if (k - j.gprojection <= n) break;
                            m = m.next
                        }
                        k -= j.gprojection;
                        if (0 <= k) {
                            f = !1;
                            break
                        }
                        k > n && (n = k, i = j, l = 2);
                        h = h.next
                    }
                    if (f) {
                        1 == l ? (n = b.polygon, j = g, g = 1) : (n = a.polygon,
                            j = i, g = -1);
                        f = null;
                        k = 1.0E100;
                        for (h = n.edges.head; null != h;) i = h.elt, q = j.gnormx * i.gnormx + j.gnormy * i.gnormy, q < k && (k = q, f = i), h = h.next;
                        var k = h = 0,
                            h = f.gp0.x,
                            k = f.gp0.y,
                            i = q = 0,
                            q = f.gp1.x,
                            i = f.gp1.y,
                            r = m = 0,
                            m = q - h,
                            r = i - k,
                            o = j.gnormy * h - j.gnormx * k,
                            p = j.gnormy * q - j.gnormx * i,
                            t = 1 / (p - o),
                            o = (-j.tp1 - o) * t;
                        o > x.epsilon && (h += m * o, k += r * o);
                        o = (-j.tp0 - p) * t;
                        o < -x.epsilon && (q += m * o, i += r * o);
                        r = m = 0;
                        o = g;
                        m = j.gnormx * o;
                        r = j.gnormy * o;
                        c.lnormx = j.lnormx;
                        c.lnormy = j.lnormy;
                        c.lproj = j.lprojection;
                        c.radius = 0;
                        c.rev = d != (-1 == g);
                        c.ptype = c.rev ? 1 : 0;
                        g = h * j.gnormx + k *
                            j.gnormy - j.gprojection;
                        p = q * j.gnormx + i * j.gnormy - j.gprojection;
                        if (0 < g && 0 < p) return !1;
                        d && (m = -m, r = -r);
                        g = c.injectContact(h - 0.5 * j.gnormx * g, k - 0.5 * j.gnormy * g, m, r, g, c.rev ? 1 : 0, 0 < g);
                        o = 1;
                        h -= n.body.posx * o;
                        k -= n.body.posy * o;
                        g.inner.lr1x = h * n.body.axisy + k * n.body.axisx;
                        g.inner.lr1y = k * n.body.axisy - h * n.body.axisx;
                        g = c.injectContact(q - 0.5 * j.gnormx * p, i - 0.5 * j.gnormy * p, m, r, p, c.rev ? 0 : 1, 0 < p);
                        o = 1;
                        q -= n.body.posx * o;
                        i -= n.body.posy * o;
                        g.inner.lr1x = q * n.body.axisy + i * n.body.axisx;
                        g.inner.lr1y = i * n.body.axisy - q * n.body.axisx;
                        1 == l ? (c.__ref_edge1 =
                            j, c.__ref_edge2 = f) : (c.__ref_edge2 = j, c.__ref_edge1 = f);
                        return !0
                    }
                }
            } else {
                n = -1.0E100;
                f = !0;
                j = l = null;
                g = b.polygon.gverts.next;
                for (h = b.polygon.edges.head; null != h;) {
                    k = h.elt;
                    q = k.gnormx * a.circle.worldCOMx + k.gnormy * a.circle.worldCOMy - k.gprojection - a.circle.radius;
                    if (0 < q) {
                        f = !1;
                        break
                    }
                    q > n && (n = q, l = k, j = g);
                    g = g.next;
                    h = h.next
                }
                if (f) {
                    var u = j,
                        v = null == j.next ? b.polygon.gverts.next : j.next,
                        j = a.circle.worldCOMy * l.gnormx - a.circle.worldCOMx * l.gnormy;
                    if (j <= u.y * l.gnormx - u.x * l.gnormy) return j = function() {
                        var b = a.circle.radius,
                            f = 0,
                            e = 0,
                            f = u.x - a.circle.worldCOMx,
                            e = u.y - a.circle.worldCOMy,
                            n = f * f + e * e;
                        if (n > b * b) b = null;
                        else if (n < x.epsilon * x.epsilon) b = c.injectContact(a.circle.worldCOMx, a.circle.worldCOMy, 1, 0, -b, 0, null);
                        else var n = 1 / Math.sqrt(n),
                            l = n < x.epsilon ? 1.0E100 : 1 / n,
                            g = 0.5 + (a.circle.radius - 0.5 * b) * n,
                            b = d ? c.injectContact(a.circle.worldCOMx + f * g, a.circle.worldCOMy + e * g, -f * n, -e * n, l - b, 0, null) : c.injectContact(a.circle.worldCOMx + f * g, a.circle.worldCOMy + e * g, f * n, e * n, l - b, 0, null);
                        return b
                    }(this), null != j && (g = j.inner, c.ptype = 2, f = n = 0, n = u.x - b.polygon.body.posx,
                        f = u.y - b.polygon.body.posy, c.__ref_edge1 = l, c.__ref_vertex = -1, d ? (g.lr1x = n * b.polygon.body.axisy + f * b.polygon.body.axisx, g.lr1y = f * b.polygon.body.axisy - n * b.polygon.body.axisx, g.lr2x = a.circle.localCOMx, g.lr2y = a.circle.localCOMy) : (g.lr2x = n * b.polygon.body.axisy + f * b.polygon.body.axisx, g.lr2y = f * b.polygon.body.axisy - n * b.polygon.body.axisx, g.lr1x = a.circle.localCOMx, g.lr1y = a.circle.localCOMy), c.radius = a.circle.radius), null != j;
                    if (j >= v.y * l.gnormx - v.x * l.gnormy) return j = function() {
                        var b = a.circle.radius,
                            f = 0,
                            e = 0,
                            f = v.x -
                            a.circle.worldCOMx,
                            e = v.y - a.circle.worldCOMy,
                            n = f * f + e * e;
                        if (n > b * b) b = null;
                        else if (n < x.epsilon * x.epsilon) b = c.injectContact(a.circle.worldCOMx, a.circle.worldCOMy, 1, 0, -b, 0, null);
                        else var n = 1 / Math.sqrt(n),
                            l = n < x.epsilon ? 1.0E100 : 1 / n,
                            g = 0.5 + (a.circle.radius - 0.5 * b) * n,
                            b = d ? c.injectContact(a.circle.worldCOMx + f * g, a.circle.worldCOMy + e * g, -f * n, -e * n, l - b, 0, null) : c.injectContact(a.circle.worldCOMx + f * g, a.circle.worldCOMy + e * g, f * n, e * n, l - b, 0, null);
                        return b
                    }(this), null != j && (g = j.inner, c.ptype = 2, f = n = 0, n = v.x - b.polygon.body.posx,
                        f = v.y - b.polygon.body.posy, c.__ref_edge1 = l, c.__ref_vertex = 1, d ? (g.lr1x = n * b.polygon.body.axisy + f * b.polygon.body.axisx, g.lr1y = f * b.polygon.body.axisy - n * b.polygon.body.axisx, g.lr2x = a.circle.localCOMx, g.lr2y = a.circle.localCOMy) : (g.lr2x = n * b.polygon.body.axisy + f * b.polygon.body.axisx, g.lr2y = f * b.polygon.body.axisy - n * b.polygon.body.axisx, g.lr1x = a.circle.localCOMx, g.lr1y = a.circle.localCOMy), c.radius = a.circle.radius), null != j;
                    r = m = 0;
                    o = a.circle.radius + 0.5 * n;
                    m = l.gnormx * o;
                    r = l.gnormy * o;
                    f = j = 0;
                    j = a.circle.worldCOMx - m;
                    f =
                        a.circle.worldCOMy - r;
                    g = d ? c.injectContact(j, f, l.gnormx, l.gnormy, n, 0, null) : c.injectContact(j, f, -l.gnormx, -l.gnormy, n, 0, null);
                    c.ptype = d ? 0 : 1;
                    c.lnormx = l.lnormx;
                    c.lnormy = l.lnormy;
                    c.rev = !d;
                    c.lproj = l.lprojection;
                    c.radius = a.circle.radius;
                    g.inner.lr1x = a.circle.localCOMx;
                    g.inner.lr1y = a.circle.localCOMy;
                    c.__ref_edge1 = l;
                    c.__ref_vertex = 0;
                    return !0
                }
            }
        else if (j = function() {
                var f = a.circle.radius + b.circle.radius,
                    e = 0,
                    n = 0,
                    e = b.circle.worldCOMx - a.circle.worldCOMx,
                    n = b.circle.worldCOMy - a.circle.worldCOMy,
                    l = e * e + n * n;
                if (l > f * f) f =
                    null;
                else if (l < x.epsilon * x.epsilon) f = c.injectContact(a.circle.worldCOMx, a.circle.worldCOMy, 1, 0, -f, 0, null);
                else var l = 1 / Math.sqrt(l),
                    g = l < x.epsilon ? 1.0E100 : 1 / l,
                    s = 0.5 + (a.circle.radius - 0.5 * f) * l,
                    f = d ? c.injectContact(a.circle.worldCOMx + e * s, a.circle.worldCOMy + n * s, -e * l, -n * l, g - f, 0, null) : c.injectContact(a.circle.worldCOMx + e * s, a.circle.worldCOMy + n * s, e * l, n * l, g - f, 0, null);
                return f
            }(this), null != j) return g = j.inner, d ? (g.lr1x = b.circle.localCOMx, g.lr1y = b.circle.localCOMy, g.lr2x = a.circle.localCOMx, g.lr2y = a.circle.localCOMy) :
            (g.lr1x = a.circle.localCOMx, g.lr1y = a.circle.localCOMy, g.lr2x = b.circle.localCOMx, g.lr2y = b.circle.localCOMy), c.radius = a.circle.radius + b.circle.radius, c.ptype = 2, !0;
        return !1
    };
    q.ZPP_Collide.testCollide_safe = function(a, b) {
        if (b.type == e.ZPP_Flags.id_ShapeType_CIRCLE) var c = a,
            a = b,
            b = c;
        return q.ZPP_Collide.testCollide(a, b)
    };
    q.ZPP_Collide.testCollide = function(a, b) {
        return b.type == e.ZPP_Flags.id_ShapeType_POLYGON ? a.type == e.ZPP_Flags.id_ShapeType_POLYGON ? function() {
            for (var c = !0, d = a.polygon.edges.head; null != d;) {
                for (var f =
                        d.elt, e = 1.0E100, l = b.polygon.gverts.next; null != l;) {
                    var g = l,
                        g = f.gnormx * g.x + f.gnormy * g.y;
                    g < e && (e = g);
                    l = l.next
                }
                e -= f.gprojection;
                if (0 < e) {
                    c = !1;
                    break
                }
                d = d.next
            }
            if (c)
                for (d = b.polygon.edges.head; null != d;) {
                    f = d.elt;
                    e = 1.0E100;
                    for (l = a.polygon.gverts.next; null != l;) g = l, g = f.gnormx * g.x + f.gnormy * g.y, g < e && (e = g), l = l.next;
                    e -= f.gprojection;
                    if (0 < e) {
                        c = !1;
                        break
                    }
                    d = d.next
                } else c = !1;
            return c
        }(this) : function(c) {
            for (var d = null, f = null, e = !0, l = -1.0E100, g = b.polygon.gverts.next, i = b.polygon.edges.head; null != i;) {
                var h = i.elt,
                    j = h.gnormx *
                    a.circle.worldCOMx + h.gnormy * a.circle.worldCOMy - h.gprojection - a.circle.radius;
                if (0 < j) {
                    e = !1;
                    break
                }
                j > l && (l = j, d = h, f = g);
                g = g.next;
                i = i.next
            }
            return e ? function(c) {
                var e = f,
                    n = null == f.next ? b.polygon.gverts.next : f.next,
                    l = a.circle.worldCOMy * d.gnormx - a.circle.worldCOMx * d.gnormy;
                return l <= e.y * d.gnormx - e.x * d.gnormy ? function() {
                    var b = a.circle.radius,
                        c = 0,
                        d = 0,
                        c = e.x - a.circle.worldCOMx,
                        d = e.y - a.circle.worldCOMy;
                    return c * c + d * d <= b * b
                }(c) : l >= n.y * d.gnormx - n.x * d.gnormy ? function() {
                    var b = a.circle.radius,
                        c = 0,
                        d = 0,
                        c = n.x - a.circle.worldCOMx,
                        d = n.y - a.circle.worldCOMy;
                    return c * c + d * d <= b * b
                }(c) : !0
            }(c) : !1
        }(this) : function() {
            var c = a.circle.radius + b.circle.radius,
                d = 0,
                f = 0,
                d = b.circle.worldCOMx - a.circle.worldCOMx,
                f = b.circle.worldCOMy - a.circle.worldCOMy;
            return d * d + f * f <= c * c
        }(this)
    };
    q.ZPP_Collide.flowCollide = function(a, b, c) {
        return b.type == e.ZPP_Flags.id_ShapeType_POLYGON ? a.type == e.ZPP_Flags.id_ShapeType_POLYGON ? function(d) {
            for (var f = [], e = [], l = !0, g = !0, i = a.polygon.edges.head; null != i;) {
                for (var h = i.elt, j = 1.0E100, k = 0, m = b.polygon.gverts.next; null != m;) {
                    var o =
                        m,
                        o = h.gnormx * o.x + h.gnormy * o.y;
                    o < j && (j = o);
                    o >= h.gprojection + x.epsilon && (e[k] = !0, g = !1);
                    k++;
                    m = m.next
                }
                j -= h.gprojection;
                if (0 < j) {
                    l = !1;
                    break
                }
                i = i.next
            }
            g ? (b.polygon.validate_worldCOM(), c.overlap = b.polygon.area, c.centroidx = b.polygon.worldCOMx, c.centroidy = b.polygon.worldCOMy, null, d = !0) : d = l ? function(d) {
                g = !0;
                for (var i = b.polygon.edges.head; null != i;) {
                    for (var h = i.elt, j = 1.0E100, k = 0, m = a.polygon.gverts.next; null != m;) {
                        var F = m,
                            F = h.gnormx * F.x + h.gnormy * F.y;
                        F < j && (j = F);
                        F >= h.gprojection + x.epsilon && (f[k] = !0, g = !1);
                        k++;
                        m = m.next
                    }
                    j -=
                        h.gprojection;
                    if (0 < j) {
                        l = !1;
                        break
                    }
                    i = i.next
                }
                g ? (a.polygon.validate_worldCOM(), c.overlap = a.polygon.area, c.centroidx = a.polygon.worldCOMx, c.centroidy = a.polygon.worldCOMy, null, d = !0) : d = l ? function(d) {
                    for (; null != q.ZPP_Collide.flowpoly.head;) {
                        var l = q.ZPP_Collide.flowpoly.pop_unsafe();
                        l._inuse || (null != l.outer && (l.outer.zpp_inner = null, l.outer = null), l._isimmutable = null, l._validate = null, l._invalidate = null, l.next = q.ZPP_Vec2.zpp_pool, q.ZPP_Vec2.zpp_pool = l)
                    }
                    for (var l = null, g = !1, s = a.polygon.gverts.next, i = 0, h = b.polygon.gverts.next,
                            j = 0, k = 0, m = b.polygon.edgeCnt; k < m;) {
                        var F = k++;
                        if (e[F]) h = h.next;
                        else {
                            j = F;
                            break
                        }
                    }
                    if (null == h) {
                        h = b.polygon.gverts.next;
                        g = !0;
                        k = 0;
                        for (m = a.polygon.edgeCnt; k < m;)
                            if (F = k++, f[F]) s = s.next;
                            else {
                                i = F;
                                break
                            }
                        null == s ? s = a.polygon.gverts.next : (q.ZPP_Collide.flowpoly.add(s), l = q.ZPP_Collide.flowpoly.head.elt)
                    } else q.ZPP_Collide.flowpoly.add(h), l = q.ZPP_Collide.flowpoly.head.elt;
                    var r = 1;
                    if (null == q.ZPP_Collide.flowpoly.head) {
                        for (var F = !0, o = k = a.polygon.gverts.next, r = k.next; null != r;) {
                            for (var p = r, m = 2, t = !0, ea = b.polygon.gverts.next,
                                    u = ea, Y = ea.next; null != Y;) {
                                var v = Y,
                                    w = 0;
                                (function() {
                                    var a = 0,
                                        b = 0,
                                        a = o.x - u.x,
                                        b = o.y - u.y,
                                        c = 0,
                                        d = 0,
                                        c = p.x - o.x,
                                        d = p.y - o.y,
                                        f = 0,
                                        e = 0,
                                        f = v.x - u.x,
                                        e = v.y - u.y,
                                        n = d * f - c * e;
                                    n * n > x.epsilon * x.epsilon ? (n = 1 / n, f = (e * a - f * b) * n, f > x.epsilon && f < 1 - x.epsilon ? (a = (d * a - c * b) * n, a > x.epsilon && a < 1 - x.epsilon ? (w = f, a = !0) : a = !1) : a = !1) : a = !1;
                                    return a
                                })(d) && w < m && (m = w, h = ea);
                                ea = Y;
                                u = v;
                                Y = Y.next
                            }
                            t && (v = Y = b.polygon.gverts.next, w = 0, function() {
                                var a = 0,
                                    b = 0,
                                    a = o.x - u.x,
                                    b = o.y - u.y,
                                    c = 0,
                                    d = 0,
                                    c = p.x - o.x,
                                    d = p.y - o.y,
                                    f = 0,
                                    e = 0,
                                    f = v.x - u.x,
                                    e = v.y - u.y,
                                    n = d * f - c * e;
                                n * n > x.epsilon * x.epsilon ?
                                    (n = 1 / n, f = (e * a - f * b) * n, f > x.epsilon && f < 1 - x.epsilon ? (a = (d * a - c * b) * n, a > x.epsilon && a < 1 - x.epsilon ? (w = f, a = !0) : a = !1) : a = !1) : a = !1;
                                return a
                            }(d) && w < m && (m = w, h = ea));
                            if (2 != m) {
                                t = r = 0;
                                F = m;
                                r = o.x + (p.x - o.x) * F;
                                t = o.y + (p.y - o.y) * F;
                                l = q.ZPP_Vec2.get(r, t, null);
                                q.ZPP_Collide.flowpoly.add(l);
                                g = !0;
                                s = k;
                                F = !1;
                                break
                            }
                            k = r;
                            o = p;
                            r = r.next
                        }
                        if (F) {
                            p = r = a.polygon.gverts.next;
                            m = 2;
                            t = !0;
                            u = ea = b.polygon.gverts.next;
                            for (Y = ea.next; null != Y;) v = Y, w = 0,
                                function() {
                                    var a = 0,
                                        b = 0,
                                        a = o.x - u.x,
                                        b = o.y - u.y,
                                        c = 0,
                                        d = 0,
                                        c = p.x - o.x,
                                        d = p.y - o.y,
                                        f = 0,
                                        e = 0,
                                        f = v.x - u.x,
                                        e = v.y - u.y,
                                        n = d * f -
                                        c * e;
                                    n * n > x.epsilon * x.epsilon ? (n = 1 / n, f = (e * a - f * b) * n, f > x.epsilon && f < 1 - x.epsilon ? (a = (d * a - c * b) * n, a > x.epsilon && a < 1 - x.epsilon ? (w = f, a = !0) : a = !1) : a = !1) : a = !1;
                                    return a
                                }(d) && w < m && (m = w, h = ea), ea = Y, u = v, Y = Y.next;
                            t && (v = Y = b.polygon.gverts.next, w = 0, function() {
                                var a = 0,
                                    b = 0,
                                    a = o.x - u.x,
                                    b = o.y - u.y,
                                    c = 0,
                                    d = 0,
                                    c = p.x - o.x,
                                    d = p.y - o.y,
                                    f = 0,
                                    e = 0,
                                    f = v.x - u.x,
                                    e = v.y - u.y,
                                    n = d * f - c * e;
                                n * n > x.epsilon * x.epsilon ? (n = 1 / n, f = (e * a - f * b) * n, f > x.epsilon && f < 1 - x.epsilon ? (a = (d * a - c * b) * n, a > x.epsilon && a < 1 - x.epsilon ? (w = f, a = !0) : a = !1) : a = !1) : a = !1;
                                return a
                            }(d) && w < m && (m =
                                w, h = ea));
                            2 != m && (t = r = 0, F = m, r = o.x + (p.x - o.x) * F, t = o.y + (p.y - o.y) * F, l = q.ZPP_Vec2.get(r, t, null), q.ZPP_Collide.flowpoly.add(l), g = !0, s = k)
                        }
                        r = 2
                    }
                    for (;;)
                        if (g)
                            if (s = s.next, i++, null == s && (s = a.polygon.gverts.next, i = 0), f[i]) {
                                u = q.ZPP_Collide.flowpoly.head.elt;
                                v = s;
                                o = h;
                                Y = h.next;
                                null == Y && (Y = b.polygon.gverts.next);
                                F = -1;
                                k = null;
                                t = m = 0;
                                ea = Y;
                                do {
                                    p = Y;
                                    w = 0;
                                    if (function() {
                                            var a = 0,
                                                b = 0,
                                                a = o.x - u.x,
                                                b = o.y - u.y,
                                                c = 0,
                                                d = 0,
                                                c = p.x - o.x,
                                                d = p.y - o.y,
                                                f = 0,
                                                e = 0,
                                                f = v.x - u.x,
                                                e = v.y - u.y,
                                                n = d * f - c * e;
                                            n * n > x.epsilon * x.epsilon ? (n = 1 / n, f = (e * a - f * b) * n, f > x.epsilon && f < 1 - x.epsilon ?
                                                (a = (d * a - c * b) * n, a > x.epsilon && a < 1 - x.epsilon ? (w = f, a = !0) : a = !1) : a = !1) : a = !1;
                                            return a
                                        }(d) && w >= F)
                                        if (k = h, m = j, ++t == r) {
                                            F = w;
                                            Y = ea;
                                            break
                                        } else F = w;
                                    o = p;
                                    h = Y;
                                    j++;
                                    j >= b.polygon.edgeCnt && (j = 0);
                                    Y = Y.next;
                                    null == Y && (Y = b.polygon.gverts.next)
                                } while (0);
                                for (; Y != ea;) {
                                    p = Y;
                                    w = 0;
                                    if (function() {
                                            var a = 0,
                                                b = 0,
                                                a = o.x - u.x,
                                                b = o.y - u.y,
                                                c = 0,
                                                d = 0,
                                                c = p.x - o.x,
                                                d = p.y - o.y,
                                                f = 0,
                                                e = 0,
                                                f = v.x - u.x,
                                                e = v.y - u.y,
                                                n = d * f - c * e;
                                            n * n > x.epsilon * x.epsilon ? (n = 1 / n, f = (e * a - f * b) * n, f > x.epsilon && f < 1 - x.epsilon ? (a = (d * a - c * b) * n, a > x.epsilon && a < 1 - x.epsilon ? (w = f, a = !0) : a = !1) : a = !1) : a = !1;
                                            return a
                                        }(d) &&
                                        w >= F)
                                        if (k = h, m = j, ++t == r) {
                                            F = w;
                                            Y = ea;
                                            break
                                        } else F = w;
                                    o = p;
                                    h = Y;
                                    j++;
                                    j >= b.polygon.edgeCnt && (j = 0);
                                    Y = Y.next;
                                    null == Y && (Y = b.polygon.gverts.next)
                                }
                                if (null == k) break;
                                ea = k;
                                r = k.next;
                                null == r && (r = b.polygon.gverts.next);
                                p = r;
                                t = r = 0;
                                r = ea.x + (p.x - ea.x) * F;
                                t = ea.y + (p.y - ea.y) * F;
                                if (null != l && q.ZPP_VecMath.vec_dsq(r, t, l.x, l.y) < x.epsilon) break;
                                q.ZPP_Collide.flowpoly.add(q.ZPP_Vec2.get(r, t, null));
                                null == l && (l = q.ZPP_Collide.flowpoly.head.elt);
                                h = k;
                                j = m;
                                g = !g;
                                r = 2
                            } else {
                                k = s;
                                if (null != l && q.ZPP_VecMath.vec_dsq(k.x, k.y, l.x, l.y) < x.epsilon) break;
                                q.ZPP_Collide.flowpoly.add(k);
                                null == l && (l = q.ZPP_Collide.flowpoly.head.elt);
                                r = 1
                            }
                    else if (h = h.next, j++, null == h && (h = b.polygon.gverts.next, j = 0), e[j]) {
                        u = q.ZPP_Collide.flowpoly.head.elt;
                        v = h;
                        o = s;
                        Y = s.next;
                        null == Y && (Y = a.polygon.gverts.next);
                        F = -1;
                        k = null;
                        t = m = 0;
                        ea = Y;
                        do {
                            p = Y;
                            w = 0;
                            if (function() {
                                    var a = 0,
                                        b = 0,
                                        a = o.x - u.x,
                                        b = o.y - u.y,
                                        c = 0,
                                        d = 0,
                                        c = p.x - o.x,
                                        d = p.y - o.y,
                                        f = 0,
                                        e = 0,
                                        f = v.x - u.x,
                                        e = v.y - u.y,
                                        n = d * f - c * e;
                                    n * n > x.epsilon * x.epsilon ? (n = 1 / n, f = (e * a - f * b) * n, f > x.epsilon && f < 1 - x.epsilon ? (a = (d * a - c * b) * n, a > x.epsilon && a < 1 - x.epsilon ? (w = f, a = !0) :
                                        a = !1) : a = !1) : a = !1;
                                    return a
                                }(d) && w >= F)
                                if (k = s, m = i, ++t == r) {
                                    F = w;
                                    Y = ea;
                                    break
                                } else F = w;
                            o = p;
                            s = Y;
                            i++;
                            i >= a.polygon.edgeCnt && (i = 0);
                            Y = Y.next;
                            null == Y && (Y = a.polygon.gverts.next)
                        } while (0);
                        for (; Y != ea;) {
                            p = Y;
                            w = 0;
                            if (function() {
                                    var a = 0,
                                        b = 0,
                                        a = o.x - u.x,
                                        b = o.y - u.y,
                                        c = 0,
                                        d = 0,
                                        c = p.x - o.x,
                                        d = p.y - o.y,
                                        f = 0,
                                        e = 0,
                                        f = v.x - u.x,
                                        e = v.y - u.y,
                                        n = d * f - c * e;
                                    n * n > x.epsilon * x.epsilon ? (n = 1 / n, f = (e * a - f * b) * n, f > x.epsilon && f < 1 - x.epsilon ? (a = (d * a - c * b) * n, a > x.epsilon && a < 1 - x.epsilon ? (w = f, a = !0) : a = !1) : a = !1) : a = !1;
                                    return a
                                }(d) && w >= F)
                                if (k = s, m = i, ++t == r) {
                                    F = w;
                                    Y = ea;
                                    break
                                } else F =
                                    w;
                            o = p;
                            s = Y;
                            i++;
                            i >= a.polygon.edgeCnt && (i = 0);
                            Y = Y.next;
                            null == Y && (Y = a.polygon.gverts.next)
                        }
                        if (null == k) break;
                        ea = k;
                        r = k.next;
                        null == r && (r = a.polygon.gverts.next);
                        p = r;
                        t = r = 0;
                        r = ea.x + (p.x - ea.x) * F;
                        t = ea.y + (p.y - ea.y) * F;
                        if (null != l && q.ZPP_VecMath.vec_dsq(r, t, l.x, l.y) < x.epsilon) break;
                        q.ZPP_Collide.flowpoly.add(q.ZPP_Vec2.get(r, t, null));
                        null == l && (l = q.ZPP_Collide.flowpoly.head.elt);
                        s = k;
                        i = m;
                        g = !g;
                        r = 2
                    } else {
                        k = h;
                        if (null != l && q.ZPP_VecMath.vec_dsq(k.x, k.y, l.x, l.y) < x.epsilon) break;
                        q.ZPP_Collide.flowpoly.add(k);
                        null == l && (l = q.ZPP_Collide.flowpoly.head.elt);
                        r = 1
                    }
                    return null != q.ZPP_Collide.flowpoly.head && null != q.ZPP_Collide.flowpoly.head.next && null != q.ZPP_Collide.flowpoly.head.next.next ? function() {
                        for (var a = 0, b = 0, d = 0, a = d = b = 0, f = q.ZPP_Collide.flowpoly.head, e = f.elt, f = f.next, n = f.elt, f = f.next; null != f;) var l = f.elt,
                            a = a + n.x * (l.y - e.y),
                            e = l.y * n.x - l.x * n.y,
                            b = b + (n.x + l.x) * e,
                            d = d + (n.y + l.y) * e,
                            e = n,
                            n = l,
                            f = f.next;
                        f = q.ZPP_Collide.flowpoly.head;
                        l = f.elt;
                        a += n.x * (l.y - e.y);
                        e = l.y * n.x - l.x * n.y;
                        b += (n.x + l.x) * e;
                        d += (n.y + l.y) * e;
                        e = n;
                        n = l;
                        f = f.next;
                        f = f.elt;
                        a += n.x * (f.y - e.y);
                        e = f.y * n.x - f.x * n.y;
                        b += (n.x + f.x) * e;
                        d += (n.y + f.y) * e;
                        a *= 0.5;
                        n = 1 / (6 * a);
                        c.overlap = -a;
                        c.centroidx = b * n;
                        c.centroidy = d * n;
                        null;
                        return !0
                    }(d) : !1
                }(d) : !1;
                return d
            }(d) : !1;
            return d
        }(this) : function(d) {
            for (var f = [], e = !0, l = null, g = null, i = -1.0E100, h = !0, j = b.polygon.gverts.next, k = 0, m = b.polygon.edges.head; null != m;) {
                var o = m.elt,
                    r = o.gnormx * a.circle.worldCOMx + o.gnormy * a.circle.worldCOMy;
                if (r > o.gprojection + a.circle.radius) {
                    h = !1;
                    break
                } else r + a.circle.radius > o.gprojection + x.epsilon && (e = !1, f[k] = !0);
                r -= o.gprojection + a.circle.radius;
                r > i && (i = r, l = o, g =
                    j);
                j = j.next;
                k++;
                m = m.next
            }
            h ? e ? (c.overlap = a.circle.area, c.centroidx = a.circle.worldCOMx, c.centroidy = a.circle.worldCOMy, null, d = !0) : d = function(d) {
                var e = g,
                    n = null == g.next ? b.polygon.gverts.next : g.next,
                    i = a.circle.worldCOMy * l.gnormx - a.circle.worldCOMx * l.gnormy;
                return i <= e.y * l.gnormx - e.x * l.gnormy ? function() {
                    var b = a.circle.radius,
                        c = 0,
                        d = 0,
                        c = e.x - a.circle.worldCOMx,
                        d = e.y - a.circle.worldCOMy;
                    return c * c + d * d <= b * b
                }(d) : i >= n.y * l.gnormx - n.x * l.gnormy ? function() {
                    var b = a.circle.radius,
                        c = 0,
                        d = 0,
                        c = n.x - a.circle.worldCOMx,
                        d = n.y -
                        a.circle.worldCOMy;
                    return c * c + d * d <= b * b
                }(d) : function(d) {
                    for (var e = [], n = 0, l = !0, g = null, s = 0, i = b.polygon.gverts.next; null != i;) {
                        var h = i,
                            h = q.ZPP_VecMath.vec_dsq(h.x, h.y, a.circle.worldCOMx, a.circle.worldCOMy);
                        (e[n] = h <= a.circle.radius * a.circle.radius) ? (s = n, g = i) : l = !1;
                        n++;
                        i = i.next
                    }
                    l ? (b.polygon.validate_worldCOM(), c.overlap = b.polygon.area, c.centroidx = b.polygon.worldCOMx, c.centroidy = b.polygon.worldCOMy, null, d = !0) : d = function(d) {
                        for (; null != q.ZPP_Collide.flowpoly.head;) {
                            var n = q.ZPP_Collide.flowpoly.pop_unsafe();
                            n._inuse || (null != n.outer && (n.outer.zpp_inner = null, n.outer = null), n._isimmutable = null, n._validate = null, n._invalidate = null, n.next = q.ZPP_Vec2.zpp_pool, q.ZPP_Vec2.zpp_pool = n)
                        }
                        q.ZPP_Collide.flowsegs.clear();
                        var n = null,
                            l = 1;
                        null == g ? (g = b.polygon.gverts.next, l = 2) : q.ZPP_Collide.flowpoly.add(n = g);
                        for (; 0 != l;)
                            if (1 == l)
                                if (g = g.next, null == g && (g = b.polygon.gverts.next), s++, s >= b.polygon.edgeCnt && (s = 0), e[s]) {
                                    if (q.ZPP_VecMath.vec_dsq(n.x, n.y, g.x, g.y) < x.epsilon) break;
                                    q.ZPP_Collide.flowpoly.add(g)
                                } else {
                                    var i = q.ZPP_Collide.flowpoly.head.elt,
                                        h = g,
                                        l = function() {
                                            var b = 0,
                                                c = 0,
                                                b = h.x - i.x,
                                                c = h.y - i.y,
                                                d = 0,
                                                f = 0,
                                                d = i.x - a.circle.worldCOMx,
                                                f = i.y - a.circle.worldCOMy,
                                                e = b * b + c * c,
                                                b = 2 * (d * b + f * c),
                                                d = Math.sqrt(b * b - 4 * e * (d * d + f * f - a.circle.radius * a.circle.radius)),
                                                e = 1 / (2 * e),
                                                f = (-b - d) * e;
                                            return f < x.epsilon ? (-b + d) * e : f
                                        }(d),
                                        j = 0,
                                        k = 0,
                                        k = l,
                                        j = i.x + (h.x - i.x) * k,
                                        k = i.y + (h.y - i.y) * k;
                                    if (q.ZPP_VecMath.vec_dsq(n.x, n.y, j, k) < x.epsilon) break;
                                    q.ZPP_Collide.flowpoly.add(q.ZPP_Vec2.get(j, k, null));
                                    l = 2
                                }
                        else if (2 == l) {
                            var m = g.next;
                            null == m && (m = b.polygon.gverts.next);
                            var i = g,
                                l = 0,
                                F = m;
                            do {
                                var h = m,
                                    r = s +
                                    1;
                                r == b.polygon.edgeCnt && (r = 0);
                                if (f[s])
                                    if (e[r]) {
                                        l = function() {
                                            var b = 0,
                                                c = 0,
                                                b = h.x - i.x,
                                                c = h.y - i.y,
                                                d = 0,
                                                f = 0,
                                                d = i.x - a.circle.worldCOMx,
                                                f = i.y - a.circle.worldCOMy,
                                                e = b * b + c * c,
                                                b = 2 * (d * b + f * c),
                                                d = Math.sqrt(b * b - 4 * e * (d * d + f * f - a.circle.radius * a.circle.radius)),
                                                e = 1 / (2 * e),
                                                f = (-b - d) * e;
                                            return f < x.epsilon ? (-b + d) * e : f
                                        }(d);
                                        k = j = 0;
                                        k = l;
                                        j = i.x + (h.x - i.x) * k;
                                        k = i.y + (h.y - i.y) * k;
                                        if (q.ZPP_VecMath.vec_dsq(n.x, n.y, j, k) < x.epsilon) {
                                            l = 0;
                                            m = F;
                                            break
                                        }
                                        j = q.ZPP_Vec2.get(j, k, null);
                                        q.ZPP_Collide.flowsegs.add(q.ZPP_Collide.flowpoly.head.elt);
                                        q.ZPP_Collide.flowsegs.add(j);
                                        q.ZPP_Collide.flowpoly.add(j);
                                        l = 1;
                                        m = F;
                                        break
                                    } else {
                                        var o = 0,
                                            p = 0,
                                            t = function() {
                                                var b = 0,
                                                    c = 0,
                                                    b = h.x - i.x,
                                                    c = h.y - i.y,
                                                    d = 0,
                                                    f = 0,
                                                    d = i.x - a.circle.worldCOMx,
                                                    f = i.y - a.circle.worldCOMy,
                                                    e = b * b + c * c,
                                                    b = 2 * (d * b + f * c),
                                                    d = b * b - 4 * e * (d * d + f * f - a.circle.radius * a.circle.radius);
                                                d * d < x.epsilon ? (o = 0 > d ? 10 : p = -b / (2 * e), e = !1) : (d = Math.sqrt(d), e = 1 / (2 * e), o = (-b - d) * e, p = (-b + d) * e, e = !0);
                                                return e
                                            }(d);
                                        if (o < 1 - x.epsilon && p > x.epsilon) {
                                            k = j = 0;
                                            k = o;
                                            j = i.x + (h.x - i.x) * k;
                                            k = i.y + (h.y - i.y) * k;
                                            if (null != n && q.ZPP_VecMath.vec_dsq(n.x, n.y, j, k) < x.epsilon) {
                                                l = 0;
                                                m = F;
                                                break
                                            }
                                            j = q.ZPP_Vec2.get(j,
                                                k, null);
                                            null != q.ZPP_Collide.flowpoly.head && (q.ZPP_Collide.flowsegs.add(q.ZPP_Collide.flowpoly.head.elt), q.ZPP_Collide.flowsegs.add(j));
                                            q.ZPP_Collide.flowpoly.add(j);
                                            null == n && (n = q.ZPP_Collide.flowpoly.head.elt);
                                            t && (t = j = 0, k = p, j = i.x + (h.x - i.x) * k, t = i.y + (h.y - i.y) * k, q.ZPP_Collide.flowpoly.add(q.ZPP_Vec2.get(j, t, null)))
                                        }
                                    }
                                i = h;
                                g = m;
                                s = r;
                                m = m.next;
                                null == m && (m = b.polygon.gverts.next)
                            } while (0);
                            for (; m != F;) {
                                h = m;
                                r = s + 1;
                                r == b.polygon.edgeCnt && (r = 0);
                                if (f[s])
                                    if (e[r]) {
                                        l = function() {
                                            var b = 0,
                                                c = 0,
                                                b = h.x - i.x,
                                                c = h.y - i.y,
                                                d = 0,
                                                f = 0,
                                                d =
                                                i.x - a.circle.worldCOMx,
                                                f = i.y - a.circle.worldCOMy,
                                                e = b * b + c * c,
                                                b = 2 * (d * b + f * c),
                                                d = Math.sqrt(b * b - 4 * e * (d * d + f * f - a.circle.radius * a.circle.radius)),
                                                e = 1 / (2 * e),
                                                f = (-b - d) * e;
                                            return f < x.epsilon ? (-b + d) * e : f
                                        }(d);
                                        k = j = 0;
                                        k = l;
                                        j = i.x + (h.x - i.x) * k;
                                        k = i.y + (h.y - i.y) * k;
                                        if (q.ZPP_VecMath.vec_dsq(n.x, n.y, j, k) < x.epsilon) {
                                            l = 0;
                                            m = F;
                                            break
                                        }
                                        j = q.ZPP_Vec2.get(j, k, null);
                                        q.ZPP_Collide.flowsegs.add(q.ZPP_Collide.flowpoly.head.elt);
                                        q.ZPP_Collide.flowsegs.add(j);
                                        q.ZPP_Collide.flowpoly.add(j);
                                        l = 1;
                                        m = F;
                                        break
                                    } else if (p = o = 0, t = function() {
                                        var b = 0,
                                            c = 0,
                                            b =
                                            h.x - i.x,
                                            c = h.y - i.y,
                                            d = 0,
                                            f = 0,
                                            d = i.x - a.circle.worldCOMx,
                                            f = i.y - a.circle.worldCOMy,
                                            e = b * b + c * c,
                                            b = 2 * (d * b + f * c),
                                            d = b * b - 4 * e * (d * d + f * f - a.circle.radius * a.circle.radius);
                                        d * d < x.epsilon ? (o = 0 > d ? 10 : p = -b / (2 * e), e = !1) : (d = Math.sqrt(d), e = 1 / (2 * e), o = (-b - d) * e, p = (-b + d) * e, e = !0);
                                        return e
                                    }(d), o < 1 - x.epsilon && p > x.epsilon) {
                                    k = j = 0;
                                    k = o;
                                    j = i.x + (h.x - i.x) * k;
                                    k = i.y + (h.y - i.y) * k;
                                    if (null != n && q.ZPP_VecMath.vec_dsq(n.x, n.y, j, k) < x.epsilon) {
                                        l = 0;
                                        m = F;
                                        break
                                    }
                                    j = q.ZPP_Vec2.get(j, k, null);
                                    null != q.ZPP_Collide.flowpoly.head && (q.ZPP_Collide.flowsegs.add(q.ZPP_Collide.flowpoly.head.elt),
                                        q.ZPP_Collide.flowsegs.add(j));
                                    q.ZPP_Collide.flowpoly.add(j);
                                    null == n && (n = q.ZPP_Collide.flowpoly.head.elt);
                                    t && (t = j = 0, k = p, j = i.x + (h.x - i.x) * k, t = i.y + (h.y - i.y) * k, q.ZPP_Collide.flowpoly.add(q.ZPP_Vec2.get(j, t, null)))
                                }
                                i = h;
                                g = m;
                                s = r;
                                m = m.next;
                                null == m && (m = b.polygon.gverts.next)
                            }
                        }
                        return null == q.ZPP_Collide.flowpoly.head ? !1 : null == q.ZPP_Collide.flowpoly.head.next ? function() {
                            for (var d = !0, f = b.polygon.edges.head; null != f;) {
                                var e = f.elt;
                                if (e.gnormx * a.circle.worldCOMx + e.gnormy * a.circle.worldCOMy > e.gprojection) {
                                    d = !1;
                                    break
                                }
                                f =
                                    f.next
                            }
                            d ? (c.overlap = a.circle.area, c.centroidx = a.circle.worldCOMx, c.centroidy = a.circle.worldCOMy, null, d = !0) : d = !1;
                            return d
                        }(d) : function() {
                            var b = 0,
                                d = 0,
                                f = 0;
                            if (null != q.ZPP_Collide.flowpoly.head.next.next) {
                                for (var e = 0, n = 0, l = 0, e = l = n = 0, g = q.ZPP_Collide.flowpoly.head, i = g.elt, g = g.next, s = g.elt, g = g.next; null != g;) var h = g.elt,
                                    e = e + s.x * (h.y - i.y),
                                    i = h.y * s.x - h.x * s.y,
                                    n = n + (s.x + h.x) * i,
                                    l = l + (s.y + h.y) * i,
                                    i = s,
                                    s = h,
                                    g = g.next;
                                g = q.ZPP_Collide.flowpoly.head;
                                h = g.elt;
                                e += s.x * (h.y - i.y);
                                i = h.y * s.x - h.x * s.y;
                                n += (s.x + h.x) * i;
                                l += (s.y + h.y) * i;
                                i = s;
                                s = h;
                                g = g.next;
                                g = g.elt;
                                e += s.x * (g.y - i.y);
                                i = g.y * s.x - g.x * s.y;
                                n += (s.x + g.x) * i;
                                l += (s.y + g.y) * i;
                                e *= 0.5;
                                g = 1 / (6 * e);
                                n *= g;
                                l *= g;
                                g = -e;
                                b += n * g;
                                d += l * g;
                                f -= e
                            } else q.ZPP_Collide.flowsegs.add(q.ZPP_Collide.flowpoly.head.elt), q.ZPP_Collide.flowsegs.add(q.ZPP_Collide.flowpoly.head.next.elt);
                            for (; null != q.ZPP_Collide.flowsegs.head;) i = q.ZPP_Collide.flowsegs.pop_unsafe(), s = q.ZPP_Collide.flowsegs.pop_unsafe(), l = g = 0, g = s.x - i.x, l = s.y - i.y, n = e = 0, e = g, n = l, g = 1 / Math.sqrt(e * e + n * n), e *= g, n *= g, g = e, e = -n, n = g, h = l = 0, l = i.x + s.x, h = i.y + s.y, g =
                                0.5, l *= g, h *= g, g = 1, l -= a.circle.worldCOMx * g, h -= a.circle.worldCOMy * g, i = s = 0, s = e * l + n * h, i = s / a.circle.radius, g = Math.sqrt(1 - i * i), l = Math.acos(i), s = a.circle.radius * (a.circle.radius * l - s * g), i = 2 / 3 * a.circle.radius * g * g * g / (l - i * g), l = a.circle.worldCOMx, h = a.circle.worldCOMy, g = i, l += e * g, h += n * g, g = s, b += l * g, d += h * g, f += s;
                            g = 1 / f;
                            c.overlap = f;
                            c.centroidx = b * g;
                            c.centroidy = d * g;
                            null;
                            return !0
                        }(d)
                    }(d);
                    return d
                }(d)
            }(d) : d = !1;
            return d
        }(this) : function() {
            var d = a.circle,
                f = b.circle,
                e = 0,
                l = 0,
                e = f.worldCOMx - d.worldCOMx,
                l = f.worldCOMy - d.worldCOMy,
                g = d.radius + f.radius,
                i = e * e + l * l;
            if (i > g * g) d = !1;
            else {
                if (i < x.epsilon * x.epsilon) d.radius < f.radius ? (c.overlap = d.area, c.centroidx = d.worldCOMx, c.centroidy = d.worldCOMy) : (c.overlap = f.area, c.centroidx = f.worldCOMx, c.centroidy = f.worldCOMy);
                else {
                    var g = Math.sqrt(i),
                        i = 1 / g,
                        h = 0.5 * (g - (f.radius * f.radius - d.radius * d.radius) * i);
                    if (h <= -d.radius) c.overlap = d.area, c.centroidx = d.worldCOMx, c.centroidy = d.worldCOMy;
                    else {
                        var j = g - h;
                        if (j <= -f.radius) c.overlap = f.area, c.centroidx = f.worldCOMx, c.centroidy = f.worldCOMy;
                        else {
                            var k = 0,
                                m = 0,
                                o =
                                0,
                                r = 0,
                                o = h,
                                r = o / d.radius,
                                h = Math.sqrt(1 - r * r),
                                p = Math.acos(r),
                                k = d.radius * (d.radius * p - o * h),
                                m = 2 / 3 * d.radius * h * h * h / (p - r * h),
                                o = j,
                                r = o / f.radius,
                                h = Math.sqrt(1 - r * r),
                                p = Math.acos(r),
                                o = f.radius * (f.radius * p - o * h),
                                r = 2 / 3 * f.radius * h * h * h / (p - r * h),
                                f = k + o,
                                g = (m * k + (g - r) * o) / f * i;
                            c.overlap = f;
                            c.centroidx = d.worldCOMx + e * g;
                            c.centroidy = d.worldCOMy + l * g
                        }
                    }
                }
                null;
                d = !0
            }
            return d
        }(this)
    };
    q.ZPP_ConvexRayResult = function() {
        this.toiDistance = 0;
        this.next = null;
        this.inner = !1;
        this.normal = this.shape = this.convex = this.position = this.ray = null
    };
    j["zpp_nape.geom.ZPP_ConvexRayResult"] =
        q.ZPP_ConvexRayResult;
    q.ZPP_ConvexRayResult.__name__ = ["zpp_nape", "geom", "ZPP_ConvexRayResult"];
    q.ZPP_ConvexRayResult.getRay = function(a, b, c, d) {
        var f;
        null == q.ZPP_ConvexRayResult.rayPool ? (q.ZPP_ConvexRayResult.internal = !0, f = new u.RayResult, f.zpp_inner = new q.ZPP_ConvexRayResult, f.zpp_inner.ray = f, q.ZPP_ConvexRayResult.internal = !1) : (f = q.ZPP_ConvexRayResult.rayPool.ray, q.ZPP_ConvexRayResult.rayPool = q.ZPP_ConvexRayResult.rayPool.next, f.zpp_inner.next = null);
        var e = f.zpp_inner;
        e.normal = a;
        a.zpp_inner._immutable = !0;
        e.toiDistance = b;
        e.inner = c;
        e.shape = d;
        return f
    };
    q.ZPP_ConvexRayResult.prototype = {
        free: function() {
            this.normal.zpp_inner._immutable = !1;
            this.normal.dispose();
            null != this.position && (this.position.zpp_inner._immutable = !1, this.position.dispose());
            this.shape = null;
            this.toiDistance = 0;
            null != this.convex ? (this.next = q.ZPP_ConvexRayResult.convexPool, q.ZPP_ConvexRayResult.convexPool = this) : (this.next = q.ZPP_ConvexRayResult.rayPool, q.ZPP_ConvexRayResult.rayPool = this)
        },
        __class__: q.ZPP_ConvexRayResult
    };
    q.ZPP_Geom = function() {};
    j["zpp_nape.geom.ZPP_Geom"] = q.ZPP_Geom;
    q.ZPP_Geom.__name__ = ["zpp_nape", "geom", "ZPP_Geom"];
    q.ZPP_Geom.validateShape = function(a) {
        a.type == e.ZPP_Flags.id_ShapeType_POLYGON && a.polygon.validate_gaxi();
        a.zip_aabb && null != a.body && (a.zip_aabb = !1, a.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? a.circle.__validate_aabb() : a.polygon.__validate_aabb());
        a.zip_worldCOM && null != a.body && (a.zip_worldCOM = !1, a.zip_localCOM && (a.zip_localCOM = !1, a.type == e.ZPP_Flags.id_ShapeType_POLYGON && a.polygon.__validate_localCOM()), a.body.validate_axis(),
            a.worldCOMx = a.body.posx + (a.body.axisy * a.localCOMx - a.body.axisx * a.localCOMy), a.worldCOMy = a.body.posy + (a.localCOMx * a.body.axisx + a.localCOMy * a.body.axisy))
    };
    q.ZPP_GeomVert = function() {
        this.forced = !1;
        this.prev = this.next = null;
        this.x = this.y = 0
    };
    j["zpp_nape.geom.ZPP_GeomVert"] = q.ZPP_GeomVert;
    q.ZPP_GeomVert.__name__ = ["zpp_nape", "geom", "ZPP_GeomVert"];
    q.ZPP_GeomVert.get = function(a, b) {
        var c;
        null == q.ZPP_GeomVert.zpp_pool ? c = new q.ZPP_GeomVert : (c = q.ZPP_GeomVert.zpp_pool, q.ZPP_GeomVert.zpp_pool = c.next, c.next = null);
        c.forced = !1;
        c.x = a;
        c.y = b;
        return c
    };
    q.ZPP_GeomVert.prototype = {
        __class__: q.ZPP_GeomVert
    };
    q.ZPP_GeomPoly = function(a) {
        this.outer = this.vertices = null;
        this.outer = a
    };
    j["zpp_nape.geom.ZPP_GeomPoly"] = q.ZPP_GeomPoly;
    q.ZPP_GeomPoly.__name__ = ["zpp_nape", "geom", "ZPP_GeomPoly"];
    q.ZPP_GeomPoly.prototype = {
        __class__: q.ZPP_GeomPoly
    };
    q.ZPP_Mat23 = function() {
        this._invalidate = this.next = null;
        this.a = this.b = this.c = this.d = this.tx = this.ty = 0;
        this.outer = null
    };
    j["zpp_nape.geom.ZPP_Mat23"] = q.ZPP_Mat23;
    q.ZPP_Mat23.__name__ = ["zpp_nape",
        "geom", "ZPP_Mat23"
    ];
    q.ZPP_Mat23.get = function() {
        var a;
        null == q.ZPP_Mat23.zpp_pool ? a = new q.ZPP_Mat23 : (a = q.ZPP_Mat23.zpp_pool, q.ZPP_Mat23.zpp_pool = a.next, a.next = null);
        null;
        return a
    };
    q.ZPP_Mat23.prototype = {
        invalidate: function() {
            null != this._invalidate && this._invalidate()
        },
        __class__: q.ZPP_Mat23
    };
    q.ZPP_MatMN = function(a, b) {
        this.x = null;
        this.m = this.n = 0;
        this.outer = null;
        this.m = a;
        this.n = b;
        this.x = [];
        for (var c = 0, d = a * b; c < d;) c++, this.x.push(0)
    };
    j["zpp_nape.geom.ZPP_MatMN"] = q.ZPP_MatMN;
    q.ZPP_MatMN.__name__ = ["zpp_nape",
        "geom", "ZPP_MatMN"
    ];
    q.ZPP_MatMN.prototype = {
        __class__: q.ZPP_MatMN
    };
    q.ZPP_Ray = function() {
        this.zip_dir = !1;
        this.originx = this.originy = this.dirx = this.diry = this.idirx = this.idiry = this.normalx = this.normaly = this.absnormalx = this.absnormaly = 0;
        this.userData = null;
        this.maxdist = 0;
        this.origin = this.direction = null
    };
    j["zpp_nape.geom.ZPP_Ray"] = q.ZPP_Ray;
    q.ZPP_Ray.__name__ = ["zpp_nape", "geom", "ZPP_Ray"];
    q.ZPP_Ray.prototype = {
        polysect2: function(a, b, c) {
            for (var d = Math.POSITIVE_INFINITY, f = -1, e = null, l = null, g = a.edges.head, i = a.gverts.next,
                    h = i, i = i.next; null != i;) {
                var j = i,
                    k = g.elt;
                if (b || 0 > k.gnormx * this.dirx + k.gnormy * this.diry) {
                    var m = 0,
                        o = 0,
                        m = j.x - h.x,
                        o = j.y - h.y,
                        r = k = 0,
                        k = h.x - this.originx,
                        r = h.y - this.originy,
                        h = o * this.dirx - m * this.diry;
                    if (h * h > x.epsilon && (h = 1 / h, m = (o * k - m * r) * h, 0 < m && m <= this.maxdist && (m < d || m > f))) h *= this.diry * k - this.dirx * r, h > -x.epsilon && h < 1 + x.epsilon && (m < d && (d = m, e = g.elt), m > f && (f = m, l = g.elt))
                }
                g = g.next;
                h = j;
                i = i.next
            }
            j = i = a.gverts.next;
            k = g.elt;
            if (b || 0 > k.gnormx * this.dirx + k.gnormy * this.diry)
                if (m = j.x - h.x, o = j.y - h.y, k = h.x - this.originx, r = h.y - this.originy,
                    h = o * this.dirx - m * this.diry, h * h > x.epsilon && (h = 1 / h, m = (o * k - m * r) * h, 0 < m && m <= this.maxdist && (m < d || m > f))) h *= this.diry * k - this.dirx * r, h > -x.epsilon && h < 1 + x.epsilon && (m < d && (d = m, e = g.elt), m > f && (f = m, l = g.elt));
            if (null != e) {
                g = b = 0;
                b = e.gnormx;
                g = e.gnormy;
                if (i = 0 < b * this.dirx + g * this.diry) b = -b, g = -g;
                d = q.ZPP_ConvexRayResult.getRay(u.Vec2.get(b, g, null), d, i, a.outer);
                b = null;
                for (g = c.zpp_inner.inner.head; null != g;) {
                    i = g.elt;
                    if (d.zpp_inner.toiDistance < i.zpp_inner.toiDistance) break;
                    b = g;
                    g = g.next
                }
                c.zpp_inner.inner.inlined_insert(b, d)
            }
            if (null !=
                l && e != l) {
                b = l.gnormx;
                g = l.gnormy;
                if (i = 0 < b * this.dirx + g * this.diry) b = -b, g = -g;
                d = q.ZPP_ConvexRayResult.getRay(u.Vec2.get(b, g, null), f, i, a.outer);
                b = null;
                for (g = c.zpp_inner.inner.head; null != g;) {
                    i = g.elt;
                    if (d.zpp_inner.toiDistance < i.zpp_inner.toiDistance) break;
                    b = g;
                    g = g.next
                }
                c.zpp_inner.inner.inlined_insert(b, d)
            }
        },
        polysect: function(a, b, c) {
            for (var d = null, f = a.edges.head, e = a.gverts.next, l = e, e = e.next; null != e;) {
                var g = e,
                    i = f.elt;
                if (b || 0 > i.gnormx * this.dirx + i.gnormy * this.diry) {
                    var h = 0,
                        j = 0,
                        h = g.x - l.x,
                        j = g.y - l.y,
                        k = i = 0,
                        i = l.x -
                        this.originx,
                        k = l.y - this.originy,
                        l = j * this.dirx - h * this.diry;
                    l * l > x.epsilon && (l = 1 / l, h = (j * i - h * k) * l, 0 < h && h < c && h <= this.maxdist && (l *= this.diry * i - this.dirx * k, l > -x.epsilon && l < 1 + x.epsilon && (c = h, d = f.elt)))
                }
                f = f.next;
                l = g;
                e = e.next
            }
            g = e = a.gverts.next;
            i = f.elt;
            if (b || 0 > i.gnormx * this.dirx + i.gnormy * this.diry) h = g.x - l.x, j = g.y - l.y, i = l.x - this.originx, k = l.y - this.originy, l = j * this.dirx - h * this.diry, l * l > x.epsilon && (l = 1 / l, h = (j * i - h * k) * l, 0 < h && h < c && h <= this.maxdist && (l *= this.diry * i - this.dirx * k, l > -x.epsilon && l < 1 + x.epsilon && (c = h, d = f.elt)));
            if (null != d) {
                f = b = 0;
                b = d.gnormx;
                f = d.gnormy;
                if (d = 0 < b * this.dirx + f * this.diry) b = -b, f = -f;
                return q.ZPP_ConvexRayResult.getRay(u.Vec2.get(b, f, null), c, d, a.outer)
            }
            return null
        },
        circlesect2: function(a, b, c) {
            a.zip_worldCOM && null != a.body && (a.zip_worldCOM = !1, a.zip_localCOM && (a.zip_localCOM = !1, a.type == e.ZPP_Flags.id_ShapeType_POLYGON && a.polygon.__validate_localCOM()), a.body.validate_axis(), a.worldCOMx = a.body.posx + (a.body.axisy * a.localCOMx - a.body.axisx * a.localCOMy), a.worldCOMy = a.body.posy + (a.localCOMx * a.body.axisx + a.localCOMy *
                a.body.axisy));
            var d = 0,
                f = 0,
                d = this.originx - a.worldCOMx,
                f = this.originy - a.worldCOMy,
                n = this.dirx * this.dirx + this.diry * this.diry,
                l = 2 * (d * this.dirx + f * this.diry),
                d = d * d + f * f - a.radius * a.radius,
                f = l * l - 4 * n * d;
            if (0 == f) {
                if (l = -l / 2 * n, (!b || 0 < d) && 0 < l && l <= this.maxdist) {
                    var g = f = 0,
                        f = this.originx,
                        g = this.originy,
                        n = l,
                        f = f + this.dirx * n,
                        g = g + this.diry * n,
                        n = 1,
                        f = f - a.worldCOMx * n,
                        g = g - a.worldCOMy * n,
                        i = 1 / Math.sqrt(f * f + g * g),
                        n = i,
                        f = f * n,
                        g = g * n;
                    0 >= d && (f = -f, g = -g);
                    d = q.ZPP_ConvexRayResult.getRay(u.Vec2.get(f, g, null), l, 0 >= d, a.outer);
                    l = null;
                    for (f =
                        c.zpp_inner.inner.head; null != f;) {
                        g = f.elt;
                        if (d.zpp_inner.toiDistance < g.zpp_inner.toiDistance) break;
                        l = f;
                        f = f.next
                    }
                    c.zpp_inner.inner.inlined_insert(l, d)
                }
            } else {
                f = Math.sqrt(f);
                n = 1 / (2 * n);
                d = (-l - f) * n;
                n *= -l + f;
                if (0 < d && d <= this.maxdist) {
                    f = this.originx;
                    g = this.originy;
                    l = d;
                    f += this.dirx * l;
                    g += this.diry * l;
                    l = 1;
                    f -= a.worldCOMx * l;
                    g -= a.worldCOMy * l;
                    l = i = 1 / Math.sqrt(f * f + g * g);
                    d = q.ZPP_ConvexRayResult.getRay(u.Vec2.get(f * l, g * l, null), d, !1, a.outer);
                    l = null;
                    for (f = c.zpp_inner.inner.head; null != f;) {
                        g = f.elt;
                        if (d.zpp_inner.toiDistance <
                            g.zpp_inner.toiDistance) break;
                        l = f;
                        f = f.next
                    }
                    c.zpp_inner.inner.inlined_insert(l, d)
                }
                if (0 < n && n <= this.maxdist && b) {
                    f = this.originx;
                    g = this.originy;
                    l = n;
                    f += this.dirx * l;
                    g += this.diry * l;
                    l = 1;
                    f -= a.worldCOMx * l;
                    g -= a.worldCOMy * l;
                    l = i = 1 / Math.sqrt(f * f + g * g);
                    d = q.ZPP_ConvexRayResult.getRay(u.Vec2.get(-(f * l), -(g * l), null), n, !0, a.outer);
                    l = null;
                    for (f = c.zpp_inner.inner.head; null != f;) {
                        g = f.elt;
                        if (d.zpp_inner.toiDistance < g.zpp_inner.toiDistance) break;
                        l = f;
                        f = f.next
                    }
                    c.zpp_inner.inner.inlined_insert(l, d)
                }
            }
        },
        circlesect: function(a, b,
            c) {
            a.zip_worldCOM && null != a.body && (a.zip_worldCOM = !1, a.zip_localCOM && (a.zip_localCOM = !1, a.type == e.ZPP_Flags.id_ShapeType_POLYGON && a.polygon.__validate_localCOM()), a.body.validate_axis(), a.worldCOMx = a.body.posx + (a.body.axisy * a.localCOMx - a.body.axisx * a.localCOMy), a.worldCOMy = a.body.posy + (a.localCOMx * a.body.axisx + a.localCOMy * a.body.axisy));
            var d = 0,
                f = 0,
                d = this.originx - a.worldCOMx,
                f = this.originy - a.worldCOMy,
                n = this.dirx * this.dirx + this.diry * this.diry,
                g = 2 * (d * this.dirx + f * this.diry),
                d = d * d + f * f - a.radius * a.radius,
                f = g * g - 4 * n * d;
            if (0 == f) {
                if (n *= -g / 2, (!b || 0 < d) && 0 < n && n < c && n <= this.maxdist) return c = b = 0, b = this.originx, c = this.originy, g = n, b += this.dirx * g, c += this.diry * g, g = 1, b -= a.worldCOMx * g, c -= a.worldCOMy * g, g = f = 1 / Math.sqrt(b * b + c * c), b *= g, c *= g, 0 >= d && (b = -b, c = -c), q.ZPP_ConvexRayResult.getRay(u.Vec2.get(b, c, null), n, 0 >= d, a.outer)
            } else if (f = Math.sqrt(f), n = 1 / (2 * n), d = (-g - f) * n, g = (-g + f) * n, 0 < d) {
                if (d < c && d <= this.maxdist) return b = this.originx, c = this.originy, n = d, b += this.dirx * n, c += this.diry * n, n = 1, b -= a.worldCOMx * n, c -= a.worldCOMy * n, n = f = 1 /
                    Math.sqrt(b * b + c * c), q.ZPP_ConvexRayResult.getRay(u.Vec2.get(b * n, c * n, null), d, !1, a.outer)
            } else if (0 < g && b && g < c && g <= this.maxdist) return b = this.originx, c = this.originy, n = g, b += this.dirx * n, c += this.diry * n, n = 1, b -= a.worldCOMx * n, c -= a.worldCOMy * n, n = f = 1 / Math.sqrt(b * b + c * c), q.ZPP_ConvexRayResult.getRay(u.Vec2.get(-(b * n), -(c * n), null), g, !0, a.outer);
            return null
        },
        aabbsect: function(a) {
            var b = this.originy >= a.miny && this.originy <= a.maxy;
            if (this.originx >= a.minx && this.originx <= a.maxx && b) return 0;
            b = -1;
            do
                if (!(0 <= this.dirx && this.originx >=
                        a.maxx) && !(0 >= this.dirx && this.originx <= a.minx) && !(0 <= this.diry && this.originy >= a.maxy) && !(0 >= this.diry && this.originy <= a.miny)) {
                    if (0 < this.dirx) {
                        var c = (a.minx - this.originx) * this.idirx;
                        if (0 <= c && c <= this.maxdist) {
                            var d = this.originy + c * this.diry;
                            if (d >= a.miny && d <= a.maxy) {
                                b = c;
                                break
                            }
                        }
                    } else if (0 > this.dirx && (c = (a.maxx - this.originx) * this.idirx, 0 <= c && c <= this.maxdist && (d = this.originy + c * this.diry, d >= a.miny && d <= a.maxy))) {
                        b = c;
                        break
                    }
                    0 < this.diry ? (c = (a.miny - this.originy) * this.idiry, 0 <= c && c <= this.maxdist && (d = this.originx +
                        c * this.dirx, d >= a.minx && d <= a.maxx && (b = c))) : 0 > this.diry && (c = (a.maxy - this.originy) * this.idiry, 0 <= c && c <= this.maxdist && (d = this.originx + c * this.dirx, d >= a.minx && d <= a.maxx && (b = c)))
                }
            while (0);
            return b
        },
        aabbtest: function(a) {
            var b = this.normalx * (this.originx - 0.5 * (a.minx + a.maxx)) + this.normaly * (this.originy - 0.5 * (a.miny + a.maxy));
            return (0 > b ? -b : b) < 0.5 * this.absnormalx * (a.maxx - a.minx) + 0.5 * this.absnormaly * (a.maxy - a.miny)
        },
        rayAABB: function() {
            var a = this.originx,
                b = a,
                c = this.originy,
                d = c;
            this.maxdist >= Math.POSITIVE_INFINITY ?
                (0 < this.dirx ? b = Math.POSITIVE_INFINITY : 0 > this.dirx && (b = Math.NEGATIVE_INFINITY), 0 < this.diry ? d = Math.POSITIVE_INFINITY : 0 > this.diry && (d = Math.NEGATIVE_INFINITY)) : (b += this.maxdist * this.dirx, d += this.maxdist * this.diry);
            if (b < a) var f = a,
                a = b,
                b = f;
            d < c && (f = c, c = d, d = f);
            return q.ZPP_AABB.get(a, c, b, d)
        },
        validate_dir: function() {
            if (this.zip_dir) {
                this.zip_dir = !1;
                var a = 1 / Math.sqrt(this.dirx * this.dirx + this.diry * this.diry);
                this.dirx *= a;
                this.diry *= a;
                this.idirx = 1 / this.dirx;
                this.idiry = 1 / this.diry;
                this.normalx = -this.diry;
                this.normaly =
                    this.dirx;
                this.absnormalx = function(a) {
                    a = a.normalx;
                    return 0 > a ? -a : a
                }(this);
                this.absnormaly = function(a) {
                    a = a.normaly;
                    return 0 > a ? -a : a
                }(this)
            }
        },
        __class__: q.ZPP_Ray
    };
    q.ZPP_ToiEvent = function() {
        this.slipped = this.failed = this.kinematic = !1;
        this.c1 = this.c2 = this.axis = null;
        this.frozen1 = this.frozen2 = !1;
        this.s1 = this.s2 = this.arbiter = null;
        this.toi = 0;
        this.next = null;
        this.c1 = new q.ZPP_Vec2;
        this.c2 = new q.ZPP_Vec2;
        this.axis = new q.ZPP_Vec2
    };
    j["zpp_nape.geom.ZPP_ToiEvent"] = q.ZPP_ToiEvent;
    q.ZPP_ToiEvent.__name__ = ["zpp_nape",
        "geom", "ZPP_ToiEvent"
    ];
    q.ZPP_ToiEvent.prototype = {
        __class__: q.ZPP_ToiEvent
    };
    q.ZPP_SweepDistance = function() {};
    j["zpp_nape.geom.ZPP_SweepDistance"] = q.ZPP_SweepDistance;
    q.ZPP_SweepDistance.__name__ = ["zpp_nape", "geom", "ZPP_SweepDistance"];
    q.ZPP_SweepDistance.dynamicSweep = function(a, b, c, d, f) {
        null == f && (f = !1);
        var e = a.s1,
            g = a.s2,
            i = e.body,
            h = g.body,
            j = 0,
            k = 0,
            j = h.velx - i.velx,
            k = h.vely - i.vely,
            m = i.angvel;
        0 > m && (m = -m);
        var o = h.angvel;
        0 > o && (o = -o);
        var p = e.sweepCoef * m + g.sweepCoef * o;
        if (!f && !a.kinematic && j * j + k * k < x.dynamicSweepLinearThreshold *
            x.dynamicSweepLinearThreshold && p < x.dynamicSweepAngularThreshold) a.toi = -1, a.failed = !0;
        else {
            for (var m = a.c1, o = a.c2, r = a.axis, t = 0;;) {
                i.sweepIntegrate(c * b);
                i.sweepValidate(e);
                h.sweepIntegrate(c * b);
                h.sweepValidate(g);
                var u = q.ZPP_SweepDistance.distance(e, g, m, o, r, null) + d,
                    v = j * r.x + k * r.y;
                if (u < x.distanceThresholdCCD) {
                    if (f) break;
                    var w = 0,
                        y = 0,
                        w = m.x - i.posx,
                        y = m.y - i.posy,
                        z = 0,
                        A = 0,
                        z = o.x - h.posx,
                        A = o.y - h.posy,
                        w = v - i.sweep_angvel * (r.y * w - r.x * y) + h.sweep_angvel * (r.y * z - r.x * A);
                    0 < w && (a.slipped = !0);
                    if (0 >= w || u < 0.5 * x.distanceThresholdCCD) break
                }
                w =
                    (p - v) * b;
                if (0 >= w) {
                    c = -1;
                    break
                }
                w = u / w;
                1.0E-6 > w && (w = 1.0E-6);
                c += w;
                if (1 <= c) {
                    c = 1;
                    i.sweepIntegrate(c * b);
                    i.sweepValidate(e);
                    h.sweepIntegrate(c * b);
                    h.sweepValidate(g);
                    b = q.ZPP_SweepDistance.distance(e, g, m, o, r, null) + d;
                    j = j * r.x + k * r.y;
                    if (b < x.distanceThresholdCCD) {
                        if (f) break;
                        w = m.x - i.posx;
                        y = m.y - i.posy;
                        z = o.x - h.posx;
                        A = o.y - h.posy;
                        w = j - i.sweep_angvel * (r.y * w - r.x * y) + h.sweep_angvel * (r.y * z - r.x * A);
                        0 < w && (a.slipped = !0);
                        if (0 >= w || b < 0.5 * x.distanceThresholdCCD) break
                    }
                    c = -1;
                    break
                }
                if (40 <= ++t) {
                    u > d && (a.failed = !0);
                    break
                }
            }
            a.toi = c
        }
    };
    q.ZPP_SweepDistance.staticSweep =
        function(a, b, c, d) {
            var f = a.s1,
                e = a.s2,
                g = f.body,
                i = 0,
                h = 0,
                i = -g.velx,
                h = -g.vely,
                j = g.sweep_angvel;
            0 > j && (j = -j);
            for (var k = f.sweepCoef * j, j = a.c1, m = a.c2, o = a.axis, p = 0;;) {
                g.sweepIntegrate(c * b);
                g.sweepValidate(f);
                var r = q.ZPP_SweepDistance.distance(f, e, j, m, o, null) + d,
                    t = i * o.x + h * o.y;
                if (r < x.distanceThresholdCCD) {
                    var u = 0,
                        v = 0,
                        u = j.x - g.posx,
                        v = j.y - g.posy,
                        u = t - g.sweep_angvel * (o.y * u - o.x * v);
                    0 < u && (a.slipped = !0);
                    if (0 >= u || r < 0.5 * x.distanceThresholdCCD) break
                }
                u = (k - t) * b;
                if (0 >= u) {
                    c = -1;
                    break
                }
                u = r / u;
                1.0E-6 > u && (u = 1.0E-6);
                c += u;
                if (1 <= c) {
                    c =
                        1;
                    g.sweepIntegrate(c * b);
                    g.sweepValidate(f);
                    b = q.ZPP_SweepDistance.distance(f, e, j, m, o, null) + d;
                    i = i * o.x + h * o.y;
                    if (b < x.distanceThresholdCCD && (u = j.x - g.posx, v = j.y - g.posy, u = i - g.sweep_angvel * (o.y * u - o.x * v), 0 < u && (a.slipped = !0), 0 >= u || b < 0.5 * x.distanceThresholdCCD)) break;
                    c = -1;
                    break
                }
                if (40 <= ++p) {
                    r > d && (a.failed = !0);
                    break
                }
            }
            a.toi = c
        };
    q.ZPP_SweepDistance.distance = function(a, b, c, d, f, n) {
        null == n && (n = 1.0E100);
        if (a.type == e.ZPP_Flags.id_ShapeType_CIRCLE && b.type == e.ZPP_Flags.id_ShapeType_CIRCLE) {
            var g = a.circle,
                a = b.circle,
                i, h =
                0,
                j = 0,
                h = a.worldCOMx - g.worldCOMx,
                j = a.worldCOMy - g.worldCOMy,
                k = Math.sqrt(h * h + j * j);
            i = k - (g.radius + a.radius);
            i < n && (0 == k ? (h = 1, j = 0) : (n = 1 / k, h *= n, j *= n), n = g.radius, c.x = g.worldCOMx + h * n, c.y = g.worldCOMy + j * n, n = -a.radius, d.x = a.worldCOMx + h * n, d.y = a.worldCOMy + j * n, f.x = h, f.y = j);
            return i
        }
        g = !1;
        a.type == e.ZPP_Flags.id_ShapeType_CIRCLE && b.type == e.ZPP_Flags.id_ShapeType_POLYGON && (h = a, a = b, b = h, g = c, c = d, d = g, g = !0);
        if (a.type == e.ZPP_Flags.id_ShapeType_POLYGON && b.type == e.ZPP_Flags.id_ShapeType_CIRCLE) {
            for (var m = b.circle, b = -1.0E100,
                    j = null, a = a.polygon.edges.head; null != a;) {
                h = a.elt;
                i = h.gnormx * m.worldCOMx + h.gnormy * m.worldCOMy - h.gprojection - m.radius;
                if (i > n) {
                    b = i;
                    break
                }
                0 < i ? i > b && (b = i, j = h) : 0 > b && i > b && (b = i, j = h);
                a = a.next
            }
            b < n && (a = j.gp0, i = j.gp1, h = m.worldCOMy * j.gnormx - m.worldCOMx * j.gnormy, h <= a.y * j.gnormx - a.x * j.gnormy ? (h = m.worldCOMx - a.x, j = m.worldCOMy - a.y, k = Math.sqrt(h * h + j * j), b = k - m.radius, b < n && (0 == k ? (h = 1, j = 0) : (n = 1 / k, h *= n, j *= n), n = 0, c.x = a.x + h * n, c.y = a.y + j * n, n = -m.radius, d.x = m.worldCOMx + h * n, d.y = m.worldCOMy + j * n, f.x = h, f.y = j)) : h >= i.y * j.gnormx - i.x * j.gnormy ?
                (h = m.worldCOMx - i.x, j = m.worldCOMy - i.y, k = Math.sqrt(h * h + j * j), b = k - m.radius, b < n && (0 == k ? (h = 1, j = 0) : (n = 1 / k, h *= n, j *= n), n = 0, c.x = i.x + h * n, c.y = i.y + j * n, n = -m.radius, d.x = m.worldCOMx + h * n, d.y = m.worldCOMy + j * n, f.x = h, f.y = j)) : (n = -m.radius, d.x = m.worldCOMx + j.gnormx * n, d.y = m.worldCOMy + j.gnormy * n, n = -b, c.x = d.x + j.gnormx * n, c.y = d.y + j.gnormy * n, f.x = j.gnormx, f.y = j.gnormy));
            g && (f.x = -f.x, f.y = -f.y);
            return b
        }
        i = a.polygon;
        for (var o = b.polygon, b = -1.0E100, k = j = null, p = 0, a = i.edges.head; null != a;) {
            for (var h = a.elt, m = 1.0E100, r = o.gverts.next; null !=
                r;) {
                var t = r,
                    t = h.gnormx * t.x + h.gnormy * t.y;
                t < m && (m = t);
                r = r.next
            }
            m -= h.gprojection;
            if (m > n) {
                b = m;
                break
            }
            0 < m ? m > b && (b = m, j = h, p = 1) : 0 > b && m > b && (b = m, j = h, p = 1);
            a = a.next
        }
        if (b < n) {
            for (a = o.edges.head; null != a;) {
                h = a.elt;
                m = 1.0E100;
                for (r = i.gverts.next; null != r;) t = r, t = h.gnormx * t.x + h.gnormy * t.y, t < m && (m = t), r = r.next;
                m -= h.gprojection;
                if (m > n) {
                    b = m;
                    break
                }
                0 < m ? m > b && (b = m, k = h, p = 2) : 0 > b && m > b && (b = m, k = h, p = 2);
                a = a.next
            }
            if (b < n) {
                1 == p ? (a = o, i = j) : (a = i, i = k, h = c, c = d, d = h, g = !g);
                n = null;
                m = 1.0E100;
                for (a = a.edges.head; null != a;) h = a.elt, t = i.gnormx * h.gnormx +
                    i.gnormy * h.gnormy, t < m && (m = t, n = h), a = a.next;
                g ? (f.x = -i.gnormx, f.y = -i.gnormy) : (f.x = i.gnormx, f.y = i.gnormy);
                if (0 <= b) {
                    a = i.gp0;
                    i = i.gp1;
                    var h = n.gp0,
                        m = n.gp1,
                        u = r = p = 0,
                        v = 0,
                        p = i.x - a.x,
                        r = i.y - a.y,
                        u = m.x - h.x,
                        v = m.y - h.y,
                        b = 1 / (p * p + r * r),
                        j = 1 / (u * u + v * v),
                        n = -(p * (a.x - h.x) + r * (a.y - h.y)) * b,
                        b = -(p * (a.x - m.x) + r * (a.y - m.y)) * b,
                        w = -(u * (h.x - a.x) + v * (h.y - a.y)) * j,
                        y = -(u * (h.x - i.x) + v * (h.y - i.y)) * j;
                    0 > n ? n = 0 : 1 < n && (n = 1);
                    0 > b ? b = 0 : 1 < b && (b = 1);
                    0 > w ? w = 0 : 1 < w && (w = 1);
                    0 > y ? y = 0 : 1 < y && (y = 1);
                    var k = j = 0,
                        j = a.x + p * n,
                        k = a.y + r * n,
                        o = t = 0,
                        n = b,
                        t = a.x + p * n,
                        o = a.y + r * n,
                        r = p = 0,
                        n = w,
                        p = h.x +
                        u * n,
                        r = h.y + v * n,
                        n = w = 0,
                        n = y,
                        w = h.x + u * n,
                        n = h.y + v * n,
                        b = q.ZPP_VecMath.vec_dsq(j, k, h.x, h.y),
                        z = q.ZPP_VecMath.vec_dsq(t, o, m.x, m.y),
                        u = q.ZPP_VecMath.vec_dsq(p, r, a.x, a.y),
                        v = q.ZPP_VecMath.vec_dsq(w, n, i.x, i.y),
                        A = y = 0,
                        B = null;
                    b < z ? (y = j, A = k, B = h) : (y = t, A = o, B = m, b = z);
                    m = h = 0;
                    j = null;
                    u < v ? (h = p, m = r, j = a) : (h = w, m = n, j = i, u = v);
                    b < u ? (c.x = y, c.y = A, d.x = B.x, d.y = B.y, b = Math.sqrt(b)) : (d.x = h, d.y = m, c.x = j.x, c.y = j.y, b = Math.sqrt(u));
                    0 != b && (f.x = d.x - c.x, f.y = d.y - c.y, n = 1 / b, f.x *= n, f.y *= n, g && (f.x = -f.x, f.y = -f.y));
                    return b
                }
                g = f = 0;
                f = n.gp0.x;
                g = n.gp0.y;
                h = a = 0;
                a =
                    n.gp1.x;
                h = n.gp1.y;
                j = m = 0;
                m = a - f;
                j = h - g;
                n = i.gnormy * f - i.gnormx * g;
                b = i.gnormy * a - i.gnormx * h;
                k = 1 / (b - n);
                n = (-i.tp1 - n) * k;
                n > x.epsilon && (f += m * n, g += j * n);
                n = (-i.tp0 - b) * k;
                n < -x.epsilon && (b = n, a += m * b, h += j * b);
                n = f * i.gnormx + g * i.gnormy - i.gprojection;
                m = a * i.gnormx + h * i.gnormy - i.gprojection;
                if (n < m) return d.x = f, d.y = g, b = -n, c.x = d.x + i.gnormx * b, c.y = d.y + i.gnormy * b, n;
                d.x = a;
                d.y = h;
                b = -m;
                c.x = d.x + i.gnormx * b;
                c.y = d.y + i.gnormy * b;
                return m
            }
        }
        return n
    };
    q.ZPP_Vec2 = function() {
        this.length = this.x = this.y = 0;
        this._inuse = this.modified = this.pushmod = !1;
        this.next = null;
        this.weak = !1;
        this._isimmutable = this.outer = null;
        this._immutable = !1;
        this._invalidate = this._validate = null
    };
    j["zpp_nape.geom.ZPP_Vec2"] = q.ZPP_Vec2;
    q.ZPP_Vec2.__name__ = ["zpp_nape", "geom", "ZPP_Vec2"];
    q.ZPP_Vec2.get = function(a, b, c) {
        null == c && (c = !1);
        var d;
        null == q.ZPP_Vec2.zpp_pool ? d = new q.ZPP_Vec2 : (d = q.ZPP_Vec2.zpp_pool, q.ZPP_Vec2.zpp_pool = d.next, d.next = null);
        d.weak = !1;
        d._immutable = c;
        d.x = a;
        d.y = b;
        return d
    };
    q.ZPP_Vec2.prototype = {
        toString: function() {
            return "{ x: " + this.x + " y: " + this.y + " }"
        },
        iterator_at: function(a) {
            for (var b =
                    this.next; 0 < a-- && null != b;) b = b.next;
            return b
        },
        reverse: function() {
            for (var a = this.next, b = null; null != a;) {
                var c = a.next;
                a.next = b;
                b = this.next = a;
                a = c
            }
            this.pushmod = this.modified = !0
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.next, this.next = c = b.next, null == this.next && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            b._inuse = !1;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        erase: function(a) {
            return this.inlined_erase(a)
        },
        inlined_try_remove: function(a) {
            for (var b = null,
                    c = this.next, d = !1; null != c;) {
                if (c == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop: function() {
            var a = this.next;
            this.next = a.next;
            a._inuse = !1;
            null == this.next && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_insert: function(a, b) {
            b._inuse = !0;
            null == a ? (b.next = this.next, this.next = b) : (b.next = a.next, a.next = b);
            this.pushmod = this.modified = !0;
            this.length++;
            return b
        },
        insert: function(a, b) {
            return this.inlined_insert(a,
                b)
        },
        inlined_add: function(a) {
            a._inuse = !0;
            a.next = this.next;
            this.next = a;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        wrapper: function() {
            if (null == this.outer) {
                this.outer = new u.Vec2;
                var a = this.outer.zpp_inner;
                null != a.outer && (a.outer.zpp_inner = null, a.outer = null);
                a._isimmutable = null;
                a._validate = null;
                a._invalidate = null;
                a.next = q.ZPP_Vec2.zpp_pool;
                q.ZPP_Vec2.zpp_pool = a;
                this.outer.zpp_inner = this
            }
            return this.outer
        },
        invalidate: function() {
            null != this._invalidate && this._invalidate(this)
        },
        validate: function() {
            null != this._validate && this._validate()
        },
        __class__: q.ZPP_Vec2
    };
    q.ZPP_Vec3 = function() {
        this._validate = null;
        this.immutable = !1;
        this.x = this.y = this.z = 0;
        this.outer = null;
        this.immutable = !1;
        this._validate = null
    };
    j["zpp_nape.geom.ZPP_Vec3"] = q.ZPP_Vec3;
    q.ZPP_Vec3.__name__ = ["zpp_nape", "geom", "ZPP_Vec3"];
    q.ZPP_Vec3.prototype = {
        validate: function() {
            null != this._validate && this._validate()
        },
        __class__: q.ZPP_Vec3
    };
    q.ZPP_VecMath = function() {};
    j["zpp_nape.geom.ZPP_VecMath"] = q.ZPP_VecMath;
    q.ZPP_VecMath.__name__ = ["zpp_nape", "geom", "ZPP_VecMath"];
    q.ZPP_VecMath.vec_dsq = function(a, b, c, d) {
        var f = 0,
            e = 0,
            f = a - c,
            e = b - d;
        return f * f + e * e
    };
    O = {
        ZPP_Interactor: function() {
            this.userData = this.ishape = this.ibody = this.icompound = this.cbsets = this.group = this.cbTypes = this.cbSet = this.wrap_cbTypes = null;
            this.id = 0;
            this.outer_i = null;
            this.id = ja.Interactor();
            this.cbsets = new e.ZNPList_ZPP_CallbackSet;
            this.cbTypes = new e.ZNPList_ZPP_CbType
        }
    };
    j["zpp_nape.phys.ZPP_Interactor"] = O.ZPP_Interactor;
    O.ZPP_Interactor.__name__ = ["zpp_nape", "phys", "ZPP_Interactor"];
    O.ZPP_Interactor.get = function(a, b) {
        for (var c = a.id < b.id ? a.id : b.id, d = a.id < b.id ? b.id : a.id, e = null, n = (a.cbsets.length < b.cbsets.length ? a.cbsets : b.cbsets).head; null != n;) {
            var g = n.elt;
            if (g.id == c && g.di == d) {
                e = g;
                break
            }
            n = n.next
        }
        return e
    };
    O.ZPP_Interactor.int_callback = function(a, b, c) {
        var d = a.int1,
            a = a.int2;
        b.options1.compatible(d.cbTypes) && b.options2.compatible(a.cbTypes) ? (c.int1 = d, c.int2 = a) : (c.int1 = a, c.int2 = d)
    };
    O.ZPP_Interactor.prototype = {
        lookup_group: function() {
            for (var a = this; null != a && null == a.group;) a = null != a.ishape ?
                a.ishape.body : null != a.icompound ? a.icompound.compound : a.ibody.compound;
            return null == a ? null : a.group
        },
        immutable_midstep: function(a) {
            null != this.ibody ? null : null != this.ishape ? this.ishape.__immutable_midstep(a) : this.icompound.__imutable_midstep(a)
        },
        setGroup: function(a) {
            if (this.group != a) {
                var b = null != (null != this.ishape ? null == this.ishape.body ? null : this.ishape.body.space : null != this.ibody ? this.ibody.space : this.icompound.space);
                b && null != this.group && this.group.interactors.remove(this);
                this.group = a;
                b && null != a &&
                    a.interactors.add(this);
                b && (null != this.ishape ? this.ishape.body.wake() : null != this.ibody ? this.ibody.wake() : this.icompound.wake())
            }
        },
        dealloc_cbSet: function() {
            var a = null != this.ishape ? null == this.ishape.body ? null : this.ishape.body.space : null != this.ibody ? this.ibody.space : this.icompound.space;
            null != this.cbSet && (this.cbSet.interactors.remove(this), a.nullInteractorType(this), 0 == --this.cbSet.count && (a.cbsets.remove(this.cbSet), a = this.cbSet, a.free(), a.next = H.ZPP_CbSet.zpp_pool, H.ZPP_CbSet.zpp_pool = a), this.cbSet =
                null)
        },
        alloc_cbSet: function() {
            var a = null != this.ishape ? null == this.ishape.body ? null : this.ishape.body.space : null != this.ibody ? this.ibody.space : this.icompound.space;
            if (null != (this.cbSet = a.cbsets.get(this.cbTypes))) this.cbSet.count++, this.cbSet.interactors.add(this), this.cbSet.validate(), a.freshInteractorType(this)
        },
        insert_cbtype: function(a) {
            if (!this.cbTypes.has(a)) {
                var b = null != this.ishape ? null == this.ishape.body ? null : this.ishape.body.space : null != this.ibody ? this.ibody.space : this.icompound.space;
                null != b &&
                    (this.dealloc_cbSet(), a.interactors.add(this));
                for (var c = null, d = this.cbTypes.head; null != d && !(a.id < d.elt.id);) {
                    c = d;
                    d = d.next
                }
                this.cbTypes.inlined_insert(c, a);
                null != b && (this.alloc_cbSet(), this.wake())
            }
        },
        wrap_cbTypes_adder: function(a) {
            this.insert_cbtype(a.zpp_inner);
            return !1
        },
        wrap_cbTypes_subber: function(a) {
            a = a.zpp_inner;
            if (this.cbTypes.has(a)) {
                var b = null != this.ishape ? null == this.ishape.body ? null : this.ishape.body.space : null != this.ibody ? this.ibody.space : this.icompound.space;
                null != b && (this.dealloc_cbSet(),
                    a.interactors.remove(this));
                this.cbTypes.remove(a);
                null != b && (this.alloc_cbSet(), this.wake())
            }
        },
        setupcbTypes: function() {
            this.wrap_cbTypes = e.ZPP_CbTypeList.get(this.cbTypes);
            this.wrap_cbTypes.zpp_inner.adder = w(this, this.wrap_cbTypes_adder);
            this.wrap_cbTypes.zpp_inner.subber = w(this, this.wrap_cbTypes_subber);
            this.wrap_cbTypes.zpp_inner.dontremove = !0
        },
        wake: function() {
            if (null != this.ishape) {
                var a = this.ishape.body;
                null != a && null != a.space && a.space.non_inlined_wake(a);
                !0
            } else null != this.ibody ? null != this.ibody.space ?
                this.ibody.space.non_inlined_wake(this.ibody) : !1 : (null != this.icompound.space && this.icompound.space.wakeCompound(this.icompound), !0)
        },
        __iremovedFromSpace: function() {
            null != this.group && this.group.interactors.remove(this);
            for (var a = this.cbTypes.head; null != a;) a.elt.interactors.remove(this), a = a.next;
            this.dealloc_cbSet()
        },
        __iaddedToSpace: function() {
            null != this.group && this.group.interactors.add(this);
            for (var a = this.cbTypes.head; null != a;) a.elt.interactors.add(this), a = a.next;
            this.alloc_cbSet()
        },
        __class__: O.ZPP_Interactor
    };
    O.ZPP_Body = function() {
        this.wrap_localCOM = this.wrap_worldCOM = null;
        this.zip_worldCOM = !1;
        this.worldCOMx = this.worldCOMy = 0;
        this.zip_localCOM = !1;
        this.localCOMx = this.localCOMy = 0;
        this.zip_aabb = !1;
        this.aabb = null;
        this.norotate = !1;
        this.cinertia = this.iinertia = this.sinertia = 0;
        this.zip_inertia = !1;
        this.inertiaMode = this.inertia = 0;
        this.zip_gravMassScale = !1;
        this.gravMassMode = this.gravMassScale = 0;
        this.zip_gravMass = !1;
        this.gravMass = 0;
        this.nomove = !1;
        this.massMode = this.imass = this.smass = this.cmass = 0;
        this.zip_mass = !1;
        this.mass =
            0;
        this.zip_axis = !1;
        this.angvel = this.torque = this.kinangvel = this.pre_rot = this.rot = this.axisx = this.axisy = 0;
        this.wrap_svel = this.wrapcvel = null;
        this.svelx = this.svely = 0;
        this.wrap_kinvel = null;
        this.kinvelx = this.kinvely = 0;
        this.wrap_force = null;
        this.forcex = this.forcey = 0;
        this.wrap_vel = null;
        this.velx = this.vely = 0;
        this.wrap_pos = null;
        this.pre_posx = this.pre_posy = this.posx = this.posy = 0;
        this.bullet = this.bulletEnabled = this.disableCCD = !1;
        this.sweepRadius = 0;
        this.sweepFrozen = !1;
        this.sweepTime = this.sweep_angvel = 0;
        this.compound =
            this.shapes = this.wrap_shapes = this.space = this.arbiters = this.wrap_arbiters = this.constraints = this.wrap_constraints = this.component = null;
        this.type = 0;
        this.world = !1;
        this.outer = null;
        O.ZPP_Interactor.call(this);
        this.ibody = this;
        this.bulletEnabled = this.world = !1;
        this.sweep_angvel = this.sweepTime = 0;
        this.disableCCD = this.norotate = this.nomove = !1;
        this.axisx = this.rot = this.posy = this.posx = 0;
        this.axisy = 1;
        this.torque = this.angvel = this.kinangvel = this.forcey = this.forcex = this.kinvely = this.kinvelx = this.vely = this.velx = this.svely =
            this.svelx = 0;
        this.pre_rot = this.pre_posy = this.pre_posx = Math.POSITIVE_INFINITY;
        this.worldCOMy = this.worldCOMx = this.localCOMy = this.localCOMx = 0;
        this.zip_aabb = !0;
        this.aabb = q.ZPP_AABB.get(0, 0, 0, 0);
        this.aabb._immutable = !0;
        this.aabb._validate = w(this, this.aabb_validate);
        this.massMode = e.ZPP_Flags.id_MassMode_DEFAULT;
        this.gravMassMode = e.ZPP_Flags.id_GravMassMode_DEFAULT;
        this.gravMassScale = 1;
        this.inertiaMode = e.ZPP_Flags.id_InertiaMode_DEFAULT;
        this.arbiters = new e.ZNPList_ZPP_Arbiter;
        this.constraints = new e.ZNPList_ZPP_Constraint;
        this.shapes = new e.ZNPList_ZPP_Shape;
        this.wrap_shapes = e.ZPP_ShapeList.get(this.shapes);
        this.wrap_shapes.zpp_inner.adder = w(this, this.shapes_adder);
        this.wrap_shapes.zpp_inner.subber = w(this, this.shapes_subber);
        this.wrap_shapes.zpp_inner._invalidate = w(this, this.shapes_invalidate);
        this.kinematicDelaySleep = !1
    };
    j["zpp_nape.phys.ZPP_Body"] = O.ZPP_Body;
    O.ZPP_Body.__name__ = ["zpp_nape", "phys", "ZPP_Body"];
    O.ZPP_Body.__static = function() {
        var a = B.Body;
        null == e.ZPP_Flags.BodyType_STATIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_STATIC =
            new B.BodyType, e.ZPP_Flags.internal = !1);
        var a = new a(e.ZPP_Flags.BodyType_STATIC),
            b = a.zpp_inner;
        b.world = !0;
        b.wrap_shapes.zpp_inner.immutable = !0;
        b.smass = b.imass = b.cmass = b.mass = b.gravMass = 0;
        b.sinertia = b.iinertia = b.cinertia = b.inertia = 0;
        b.cbTypes.clear();
        return a
    };
    O.ZPP_Body.__super__ = O.ZPP_Interactor;
    O.ZPP_Body.prototype = C(O.ZPP_Interactor.prototype, {
        removedFromSpace: function() {
            for (; null != this.arbiters.head;) {
                var a = this.arbiters.pop_unsafe();
                a.cleared = !0;
                a.b2 == this && a.b1.arbiters.inlined_try_remove(a);
                a.b1 == this && a.b2.arbiters.inlined_try_remove(a);
                null != a.pair && (a.pair.arb = null, a.pair = null);
                a.active = !1;
                this.space.f_arbiters.modified = !0
            }
            a = this.component;
            a.body = null;
            a.constraint = null;
            null;
            a.next = A.ZPP_Component.zpp_pool;
            A.ZPP_Component.zpp_pool = a;
            this.component = null;
            this.__iremovedFromSpace()
        },
        addedToSpace: function() {
            null == A.ZPP_Component.zpp_pool ? this.component = new A.ZPP_Component : (this.component = A.ZPP_Component.zpp_pool, A.ZPP_Component.zpp_pool = this.component.next, this.component.next = null);
            null;
            this.component.isBody = !0;
            this.component.body = this;
            this.__iaddedToSpace()
        },
        shapes_invalidate: function() {
            this.invalidate_shapes()
        },
        shapes_subber: function(a) {
            null != this.space && this.space.removed_shape(a.zpp_inner);
            a.zpp_inner.body = null;
            a.zpp_inner.removedFromBody()
        },
        shapes_adder: function(a) {
            return a.zpp_inner.body != this ? (null != a.zpp_inner.body && a.zpp_inner.body.wrap_shapes.remove(a), a.zpp_inner.body = this, a.zpp_inner.addedToBody(), null != this.space && this.space.added_shape(a.zpp_inner, null), a.zpp_inner.type ==
                e.ZPP_Flags.id_ShapeType_POLYGON && (a.zpp_inner.polygon.invalidate_gaxi(), a.zpp_inner.polygon.invalidate_gverts()), !0) : !1
        },
        aabb_validate: function() {
            this.validate_aabb()
        },
        getworldCOM: function() {
            this.validate_worldCOM()
        },
        getlocalCOM: function() {
            this.validate_localCOM()
        },
        validate_worldCOM: function() {
            this.zip_worldCOM && (this.zip_worldCOM = !1, this.validate_localCOM(), this.zip_axis && (this.zip_axis = !1, this.axisx = Math.sin(this.rot), this.axisy = Math.cos(this.rot), null), this.worldCOMx = this.posx + (this.axisy * this.localCOMx -
                this.axisx * this.localCOMy), this.worldCOMy = this.posy + (this.localCOMx * this.axisx + this.localCOMy * this.axisy), null != this.wrap_worldCOM && (this.wrap_worldCOM.zpp_inner.x = this.worldCOMx, this.wrap_worldCOM.zpp_inner.y = this.worldCOMy))
        },
        validate_localCOM: function() {
            if (this.zip_localCOM) {
                this.zip_localCOM = !1;
                for (var a = 0, b = 0, c = 0, d = this.shapes.head; null != d;) {
                    var f = d.elt;
                    f.zip_localCOM && (f.zip_localCOM = !1, f.type == e.ZPP_Flags.id_ShapeType_POLYGON && f.polygon.__validate_localCOM());
                    f.validate_area_inertia();
                    var g =
                        f.area * f.material.density,
                        a = a + f.localCOMx * g,
                        b = b + f.localCOMy * g,
                        c = c + f.area * f.material.density,
                        d = d.next
                }
                0 != c && (g = 1 / c, this.localCOMx = a * g, this.localCOMy = b * g);
                null != this.wrap_localCOM && (this.wrap_localCOM.zpp_inner.x = this.localCOMx, this.wrap_localCOM.zpp_inner.y = this.localCOMy);
                this.zip_mass && this.massMode == e.ZPP_Flags.id_MassMode_DEFAULT && (this.zip_mass = !1, this.cmass = c, this.type == e.ZPP_Flags.id_BodyType_DYNAMIC ? (this.mass = this.cmass, this.imass = this.smass = 1 / this.mass) : (this.mass = Math.POSITIVE_INFINITY,
                    this.imass = this.smass = 0))
            }
        },
        invalidate_localCOM: function() {
            this.zip_worldCOM = this.zip_localCOM = !0
        },
        validate_aabb: function() {
            if (this.zip_aabb) {
                this.zip_aabb = !1;
                this.aabb.minx = Math.POSITIVE_INFINITY;
                this.aabb.miny = Math.POSITIVE_INFINITY;
                this.aabb.maxx = Math.NEGATIVE_INFINITY;
                this.aabb.maxy = Math.NEGATIVE_INFINITY;
                for (var a = this.shapes.head; null != a;) {
                    var b = a.elt;
                    b.zip_aabb && null != b.body && (b.zip_aabb = !1, b.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? b.circle.__validate_aabb() : b.polygon.__validate_aabb());
                    this.aabb.combine(b.aabb);
                    a = a.next
                }
            }
        },
        validate_inertia: function() {
            if (this.zip_inertia) {
                this.zip_inertia = !1;
                if (this.inertiaMode == e.ZPP_Flags.id_InertiaMode_DEFAULT) {
                    this.cinertia = 0;
                    for (var a = this.shapes.head; null != a;) {
                        var b = a.elt;
                        b.refmaterial.density = b.material.density;
                        b.validate_area_inertia();
                        this.cinertia += b.inertia * b.area * b.material.density;
                        a = a.next
                    }
                }
                this.type == e.ZPP_Flags.id_BodyType_DYNAMIC && !this.norotate ? (this.inertia = this.cinertia, this.sinertia = this.iinertia = 1 / this.inertia) : (this.inertia = Math.POSITIVE_INFINITY, this.sinertia =
                    this.iinertia = 0)
            }
        },
        invalidate_inertia: function() {
            this.zip_inertia = !0;
            this.wake()
        },
        validate_gravMassScale: function() {
            this.zip_gravMassScale && (this.zip_gravMassScale = !1, this.gravMassMode == e.ZPP_Flags.id_GravMassMode_DEFAULT ? this.gravMassScale = 1 : this.gravMassMode == e.ZPP_Flags.id_GravMassMode_FIXED && (this.validate_mass(), this.gravMassScale = this.gravMass / this.cmass))
        },
        invalidate_gravMassScale: function() {
            this.gravMassMode != e.ZPP_Flags.id_GravMassMode_SCALED ? this.zip_gravMassScale = !0 : this.invalidate_gravMass()
        },
        validate_gravMass: function() {
            this.zip_gravMass && (this.zip_gravMass = !1, this.validate_mass(), this.gravMassMode == e.ZPP_Flags.id_GravMassMode_DEFAULT ? (this.validate_mass(), this.gravMass = this.cmass) : this.gravMassMode == e.ZPP_Flags.id_GravMassMode_SCALED && (this.validate_mass(), this.gravMass = this.cmass * this.gravMassScale))
        },
        invalidate_gravMass: function() {
            this.gravMassMode != e.ZPP_Flags.id_GravMassMode_FIXED && (this.zip_gravMass = !0);
            this.gravMassMode != e.ZPP_Flags.id_GravMassMode_SCALED && (this.zip_gravMassScale = !0);
            this.wake()
        },
        validate_mass: function() {
            if (this.zip_mass) {
                this.zip_mass = !1;
                if (this.massMode == e.ZPP_Flags.id_MassMode_DEFAULT) {
                    this.cmass = 0;
                    for (var a = this.shapes.head; null != a;) {
                        var b = a.elt;
                        b.refmaterial.density = b.material.density;
                        b.validate_area_inertia();
                        this.cmass += b.area * b.material.density;
                        a = a.next
                    }
                }
                this.type == e.ZPP_Flags.id_BodyType_DYNAMIC && !this.nomove ? (this.mass = this.cmass, this.imass = this.smass = 1 / this.mass) : (this.mass = Math.POSITIVE_INFINITY, this.imass = this.smass = 0)
            }
        },
        invalidate_mass: function() {
            this.zip_mass = !0;
            this.invalidate_gravMass()
        },
        delta_rot: function(a) {
            this.rot += a;
            if (1.0E-4 < a * a) this.axisx = Math.sin(this.rot), this.axisy = Math.cos(this.rot), null;
            else {
                var b = a * a,
                    c = 1 - 0.5 * b,
                    b = 1 - b * b / 8,
                    d = (c * this.axisx + a * this.axisy) * b;
                this.axisy = (c * this.axisy - a * this.axisx) * b;
                this.axisx = d
            }
        },
        validate_axis: function() {
            this.zip_axis && (this.zip_axis = !1, this.axisx = Math.sin(this.rot), this.axisy = Math.cos(this.rot), null)
        },
        invalidate_rot: function() {
            this.zip_axis = !0;
            for (var a = this.shapes.head; null != a;) {
                var b = a.elt;
                b.type == e.ZPP_Flags.id_ShapeType_POLYGON &&
                    (b.polygon.invalidate_gverts(), b.polygon.invalidate_gaxi());
                b.invalidate_worldCOM();
                a = a.next
            }
            this.zip_worldCOM = !0
        },
        setup_cvel: function() {
            this.wrapcvel = u.Vec3.get();
            this.wrapcvel.zpp_inner.immutable = !0;
            this.wrapcvel.zpp_inner._validate = w(this, this.cvel_validate)
        },
        cvel_validate: function() {
            this.wrapcvel.zpp_inner.x = this.velx + this.kinvelx;
            this.wrapcvel.zpp_inner.y = this.vely + this.kinvely;
            this.wrapcvel.zpp_inner.z = this.angvel + this.kinangvel
        },
        setupForce: function() {
            this.wrap_force = u.Vec2.get(this.forcex,
                this.forcey, null);
            this.wrap_force.zpp_inner._inuse = !0;
            this.world ? this.wrap_force.zpp_inner._immutable = !0 : (this.wrap_force.zpp_inner._invalidate = w(this, this.force_invalidate), this.wrap_force.zpp_inner._validate = w(this, this.force_validate))
        },
        setupsvel: function() {
            this.wrap_svel = u.Vec2.get(this.svelx, this.svely, null);
            this.wrap_svel.zpp_inner._inuse = !0;
            this.world ? this.wrap_svel.zpp_inner._immutable = !0 : (this.wrap_svel.zpp_inner._invalidate = w(this, this.svel_invalidate), this.wrap_svel.zpp_inner._validate =
                w(this, this.svel_validate))
        },
        setupkinvel: function() {
            this.wrap_kinvel = u.Vec2.get(this.kinvelx, this.kinvely, null);
            this.wrap_kinvel.zpp_inner._inuse = !0;
            this.world ? this.wrap_kinvel.zpp_inner._immutable = !0 : (this.wrap_kinvel.zpp_inner._invalidate = w(this, this.kinvel_invalidate), this.wrap_kinvel.zpp_inner._validate = w(this, this.kinvel_validate))
        },
        setupVelocity: function() {
            this.wrap_vel = u.Vec2.get(this.velx, this.vely, null);
            this.wrap_vel.zpp_inner._inuse = !0;
            this.world ? this.wrap_vel.zpp_inner._immutable = !0 : (this.wrap_vel.zpp_inner._invalidate =
                w(this, this.vel_invalidate), this.wrap_vel.zpp_inner._validate = w(this, this.vel_validate))
        },
        setupPosition: function() {
            this.wrap_pos = u.Vec2.get(this.posx, this.posy, null);
            this.wrap_pos.zpp_inner._inuse = !0;
            this.world ? this.wrap_pos.zpp_inner._immutable = !0 : (this.wrap_pos.zpp_inner._invalidate = w(this, this.pos_invalidate), this.wrap_pos.zpp_inner._validate = w(this, this.pos_validate))
        },
        force_validate: function() {
            this.wrap_force.zpp_inner.x = this.forcex;
            this.wrap_force.zpp_inner.y = this.forcey
        },
        force_invalidate: function(a) {
            this.forcex =
                a.x;
            this.forcey = a.y;
            this.wake()
        },
        svel_validate: function() {
            this.wrap_svel.zpp_inner.x = this.svelx;
            this.wrap_svel.zpp_inner.y = this.svely
        },
        svel_invalidate: function(a) {
            this.svelx = a.x;
            this.svely = a.y;
            this.wake()
        },
        kinvel_validate: function() {
            this.wrap_kinvel.zpp_inner.x = this.kinvelx;
            this.wrap_kinvel.zpp_inner.y = this.kinvely
        },
        kinvel_invalidate: function(a) {
            this.kinvelx = a.x;
            this.kinvely = a.y;
            this.wake()
        },
        vel_validate: function() {
            this.wrap_vel.zpp_inner.x = this.velx;
            this.wrap_vel.zpp_inner.y = this.vely
        },
        vel_invalidate: function(a) {
            this.velx =
                a.x;
            this.vely = a.y;
            this.wake()
        },
        pos_validate: function() {
            this.wrap_pos.zpp_inner.x = this.posx;
            this.wrap_pos.zpp_inner.y = this.posy
        },
        pos_invalidate: function(a) {
            this.immutable_midstep("Body::position");
            this.posx == a.x && this.posy == a.y || (this.posx = a.x, this.posy = a.y, this.invalidate_pos(), this.wake())
        },
        invalidate_pos: function() {
            for (var a = this.shapes.head; null != a;) {
                var b = a.elt;
                b.type == e.ZPP_Flags.id_ShapeType_POLYGON && (b.polygon.invalidate_gverts(), b.polygon.invalidate_gaxi());
                b.invalidate_worldCOM();
                a = a.next
            }
            this.zip_worldCOM = !0
        },
        sweepValidate: function(a) {
            if (a.type == e.ZPP_Flags.id_ShapeType_CIRCLE) a.worldCOMx = this.posx + (this.axisy * a.localCOMx - this.axisx * a.localCOMy), a.worldCOMy = this.posy + (a.localCOMx * this.axisx + a.localCOMy * this.axisy);
            else {
                for (var a = a.polygon, b = a.lverts.next, c = a.gverts.next; null != c;) {
                    var d = c,
                        f = b,
                        b = b.next;
                    d.x = this.posx + (this.axisy * f.x - this.axisx * f.y);
                    d.y = this.posy + (f.x * this.axisx + f.y * this.axisy);
                    c = c.next
                }
                b = a.edges.head;
                d = c = a.gverts.next;
                for (c = c.next; null != c;) {
                    var f = c,
                        g = b.elt,
                        b = b.next;
                    g.gnormx = this.axisy *
                        g.lnormx - this.axisx * g.lnormy;
                    g.gnormy = g.lnormx * this.axisx + g.lnormy * this.axisy;
                    g.gprojection = this.posx * g.gnormx + this.posy * g.gnormy + g.lprojection;
                    g.tp0 = d.y * g.gnormx - d.x * g.gnormy;
                    g.tp1 = f.y * g.gnormx - f.x * g.gnormy;
                    d = f;
                    c = c.next
                }
                f = a.gverts.next;
                g = b.elt;
                g.gnormx = this.axisy * g.lnormx - this.axisx * g.lnormy;
                g.gnormy = g.lnormx * this.axisx + g.lnormy * this.axisy;
                g.gprojection = this.posx * g.gnormx + this.posy * g.gnormy + g.lprojection;
                g.tp0 = d.y * g.gnormx - d.x * g.gnormy;
                g.tp1 = f.y * g.gnormx - f.x * g.gnormy
            }
        },
        sweepIntegrate: function(a) {
            var b =
                a - this.sweepTime;
            0 != b && (this.sweepTime = a, this.posx += this.velx * b, this.posy += this.vely * b, 0 != this.angvel && this.delta_rot(this.sweep_angvel * b))
        },
        refreshArbiters: function() {
            for (var a = this.arbiters.head; null != a;) a.elt.invalidated = !0, a = a.next
        },
        atRest: function(a) {
            if (this.type != e.ZPP_Flags.id_BodyType_DYNAMIC) return this.component.sleeping;
            var b = x.linearSleepThreshold,
                b = b * b;
            if (this.velx * this.velx + this.vely * this.vely > b) a = 0;
            else if (q.ZPP_VecMath.vec_dsq(this.posx, this.posy, this.pre_posx, this.pre_posy) > 0.25 *
                b * a * a) a = 0;
            else {
                var c = b = 0,
                    b = this.aabb.maxx - this.aabb.minx,
                    c = this.aabb.maxy - this.aabb.miny,
                    b = b * b + c * c,
                    c = x.angularSleepThreshold,
                    c = c * c;
                if (4 * this.angvel * this.angvel * b > c) a = !1;
                else var d = this.rot - this.pre_rot,
                    a = d * d * b > c * a * a ? !1 : !0
            }
            a || (this.component.waket = this.space.stamp);
            return this.component.waket + x.sleepDelay < this.space.stamp
        },
        invalidate_shapes: function() {
            this.zip_worldCOM = this.zip_localCOM = this.zip_aabb = !0;
            this.invalidate_mass();
            this.invalidate_inertia()
        },
        invalidate_type: function() {
            this.invalidate_mass();
            this.invalidate_inertia()
        },
        __class__: O.ZPP_Body
    });
    O.ZPP_Compound = function() {
        this.compound = this.space = null;
        this.depth = 0;
        this.outer = this.bodies = this.constraints = this.compounds = this.wrap_bodies = this.wrap_constraints = this.wrap_compounds = null
    };
    j["zpp_nape.phys.ZPP_Compound"] = O.ZPP_Compound;
    O.ZPP_Compound.__name__ = ["zpp_nape", "phys", "ZPP_Compound"];
    O.ZPP_Compound.__super__ = O.ZPP_Interactor;
    O.ZPP_Compound.prototype = C(O.ZPP_Interactor.prototype, {
        removedFromSpace: function() {
            this.__iremovedFromSpace()
        },
        addedToSpace: function() {
            this.__iaddedToSpace()
        },
        __imutable_midstep: function() {},
        __class__: O.ZPP_Compound
    });
    O.ZPP_FluidProperties = function() {
        this.wrap_gravity = null;
        this.viscosity = this.density = this.gravityx = this.gravityy = 0;
        this.next = this.userData = this.outer = this.shapes = this.wrap_shapes = null;
        this.shapes = new e.ZNPList_ZPP_Shape;
        this.density = this.viscosity = 1;
        this.wrap_gravity = null;
        this.gravityy = this.gravityx = 0
    };
    j["zpp_nape.phys.ZPP_FluidProperties"] = O.ZPP_FluidProperties;
    O.ZPP_FluidProperties.__name__ = ["zpp_nape", "phys", "ZPP_FluidProperties"];
    O.ZPP_FluidProperties.prototype = {
        invalidate: function() {
            for (var a = this.shapes.head; null != a;) a.elt.invalidate_fluidprops(), a = a.next
        },
        getgravity: function() {
            this.wrap_gravity = u.Vec2.get(this.gravityx, this.gravityy, null);
            this.wrap_gravity.zpp_inner._inuse = !0;
            this.wrap_gravity.zpp_inner._invalidate = w(this, this.gravity_invalidate);
            this.wrap_gravity.zpp_inner._validate = w(this, this.gravity_validate)
        },
        gravity_validate: function() {
            this.wrap_gravity.zpp_inner.x = this.gravityx;
            this.wrap_gravity.zpp_inner.y = this.gravityy
        },
        gravity_invalidate: function(a) {
            this.gravityx =
                a.x;
            this.gravityy = a.y;
            this.invalidate()
        },
        wrapper: function() {
            if (null == this.outer) {
                this.outer = new B.FluidProperties;
                var a = this.outer.zpp_inner;
                a.outer = null;
                a.next = O.ZPP_FluidProperties.zpp_pool;
                O.ZPP_FluidProperties.zpp_pool = a;
                this.outer.zpp_inner = this
            }
            return this.outer
        },
        __class__: O.ZPP_FluidProperties
    };
    O.ZPP_Material = function() {
        this.dynamicFriction = this.staticFriction = this.density = this.elasticity = this.rollingFriction = 0;
        this.next = this.userData = this.outer = this.shapes = this.wrap_shapes = null;
        this.shapes =
            new e.ZNPList_ZPP_Shape;
        this.elasticity = 0;
        this.dynamicFriction = 1;
        this.staticFriction = 2;
        this.density = 0.0010;
        this.rollingFriction = 0.01
    };
    j["zpp_nape.phys.ZPP_Material"] = O.ZPP_Material;
    O.ZPP_Material.__name__ = ["zpp_nape", "phys", "ZPP_Material"];
    O.ZPP_Material.prototype = {
        invalidate: function(a) {
            for (var b = this.shapes.head; null != b;) b.elt.invalidate_material(a), b = b.next
        },
        set: function(a) {
            this.dynamicFriction = a.dynamicFriction;
            this.staticFriction = a.staticFriction;
            this.density = a.density;
            this.elasticity = a.elasticity;
            this.rollingFriction = a.rollingFriction
        },
        wrapper: function() {
            if (null == this.outer) {
                this.outer = new B.Material;
                var a = this.outer.zpp_inner;
                a.outer = null;
                a.next = O.ZPP_Material.zpp_pool;
                O.ZPP_Material.zpp_pool = a;
                this.outer.zpp_inner = this
            }
            return this.outer
        },
        __class__: O.ZPP_Material
    };
    V = {
        ZPP_Shape: function(a) {
            this.zip_aabb = !1;
            this.sweep = this.node = this.pairs = this.aabb = null;
            this.fluidEnabled = this.sensorEnabled = !1;
            this.circle = this.polygon = this.refmaterial = this.material = this.filter = this.fluidProperties = null;
            this.sweepCoef =
                0;
            this.zip_sweepRadius = !1;
            this.sweepRadius = 0;
            this.wrap_localCOM = this.wrap_worldCOM = null;
            this.zip_worldCOM = !1;
            this.worldCOMx = this.worldCOMy = 0;
            this.zip_localCOM = !1;
            this.localCOMx = this.localCOMy = 0;
            this.zip_angDrag = !1;
            this.inertia = this.angDrag = 0;
            this.zip_area_inertia = !1;
            this.type = this.area = 0;
            this.outer = this.body = null;
            O.ZPP_Interactor.call(this);
            this.pairs = new e.ZNPList_ZPP_AABBPair;
            this.ishape = this;
            this.type = a;
            this.aabb = q.ZPP_AABB.get(0, 0, 0, 0);
            this.aabb._immutable = !0;
            this.aabb._validate = w(this, this.aabb_validate);
            this.zip_area_inertia = this.zip_angDrag = this.zip_localCOM = this.zip_sweepRadius = !0;
            this.worldCOMy = this.worldCOMx = this.localCOMy = this.localCOMx = 0;
            this.sensorEnabled = this.fluidEnabled = !1;
            this.body = this.fluidProperties = null;
            this.refmaterial = new O.ZPP_Material;
            this.sweepRadius = this.sweepCoef = 0
        }
    };
    j["zpp_nape.shape.ZPP_Shape"] = V.ZPP_Shape;
    V.ZPP_Shape.__name__ = ["zpp_nape", "shape", "ZPP_Shape"];
    V.ZPP_Shape.__super__ = O.ZPP_Interactor;
    V.ZPP_Shape.prototype = C(O.ZPP_Interactor.prototype, {
        removedFromSpace: function() {
            this.__iremovedFromSpace();
            this.material.shapes.remove(this);
            this.filter.shapes.remove(this);
            null != this.fluidProperties && this.fluidProperties.shapes.remove(this)
        },
        addedToSpace: function() {
            this.__iaddedToSpace();
            this.material.shapes.add(this);
            this.filter.shapes.add(this);
            null != this.fluidProperties && this.fluidProperties.shapes.add(this)
        },
        removedFromBody: function() {},
        addedToBody: function() {
            this.invalidate_worldCOM();
            this.zip_aabb = !0;
            null != this.body && (this.body.zip_aabb = !0)
        },
        __immutable_midstep: function() {},
        setFluid: function(a) {
            this.fluidProperties !=
                a && (null != this.body && null != this.body.space && null != this.fluidProperties && this.fluidProperties.shapes.remove(this), this.fluidProperties = a, null != this.body && null != this.body.space && a.shapes.add(this), this.fluidEnabled && this.wake())
        },
        setFilter: function(a) {
            this.filter != a && (null != this.body && null != this.body.space && null != this.filter && this.filter.shapes.remove(this), this.filter = a, null != this.body && null != this.body.space && a.shapes.add(this), this.wake())
        },
        setMaterial: function(a) {
            this.material != a && (null != this.body &&
                null != this.body.space && null != this.material && this.material.shapes.remove(this), this.material = a, null != this.body && null != this.body.space && a.shapes.add(this), this.wake(), null != this.body && this.body.refreshArbiters())
        },
        aabb_validate: function() {
            this.zip_aabb && null != this.body && (this.zip_aabb = !1, this.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? this.circle.__validate_aabb() : this.polygon.__validate_aabb())
        },
        invalidate_fluidprops: function() {
            this.fluidEnabled && this.wake()
        },
        invalidate_filter: function() {
            this.wake()
        },
        invalidate_material: function(a) {
            0 !=
                (a & O.ZPP_Material.WAKE) && this.wake();
            0 != (a & O.ZPP_Material.ARBITERS) && null != this.body && this.body.refreshArbiters();
            0 != (a & O.ZPP_Material.PROPS) && null != this.body && (this.body.invalidate_localCOM(), this.body.invalidate_mass(), this.body.invalidate_inertia());
            0 != (a & O.ZPP_Material.ANGDRAG) && this.invalidate_angDrag();
            this.refmaterial.set(this.material)
        },
        invalidate_worldCOM: function() {
            this.zip_aabb = this.zip_worldCOM = !0;
            null != this.body && (this.body.zip_aabb = !0)
        },
        invalidate_localCOM: function() {
            this.zip_localCOM = !0;
            this.invalidate_area_inertia();
            this.type == e.ZPP_Flags.id_ShapeType_CIRCLE && (this.zip_sweepRadius = !0);
            this.invalidate_angDrag();
            this.invalidate_worldCOM();
            null != this.body && this.body.invalidate_localCOM()
        },
        invalidate_angDrag: function() {
            this.zip_angDrag = !0
        },
        invalidate_area_inertia: function() {
            this.zip_area_inertia = !0;
            null != this.body && (this.body.invalidate_localCOM(), this.body.invalidate_mass(), this.body.invalidate_inertia())
        },
        getworldCOM: function() {
            this.zip_worldCOM && null != this.body && (this.zip_worldCOM = !1, this.zip_localCOM && (this.zip_localCOM = !1, this.type == e.ZPP_Flags.id_ShapeType_POLYGON && this.polygon.__validate_localCOM()), this.body.validate_axis(), this.worldCOMx = this.body.posx + (this.body.axisy * this.localCOMx - this.body.axisx * this.localCOMy), this.worldCOMy = this.body.posy + (this.localCOMx * this.body.axisx + this.localCOMy * this.body.axisy));
            this.wrap_worldCOM.zpp_inner.x = this.worldCOMx;
            this.wrap_worldCOM.zpp_inner.y = this.worldCOMy
        },
        validate_worldCOM: function() {
            this.zip_worldCOM && null != this.body && (this.zip_worldCOM = !1, this.zip_localCOM && (this.zip_localCOM = !1, this.type == e.ZPP_Flags.id_ShapeType_POLYGON && this.polygon.__validate_localCOM()), this.body.validate_axis(), this.worldCOMx = this.body.posx + (this.body.axisy * this.localCOMx - this.body.axisx * this.localCOMy), this.worldCOMy = this.body.posy + (this.localCOMx * this.body.axisx + this.localCOMy * this.body.axisy))
        },
        validate_angDrag: function() {
            if (this.zip_angDrag || this.refmaterial.dynamicFriction != this.material.dynamicFriction) this.zip_angDrag = !1, this.refmaterial.dynamicFriction =
                this.material.dynamicFriction, this.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? this.circle.__validate_angDrag() : this.polygon.__validate_angDrag()
        },
        validate_area_inertia: function() {
            this.zip_area_inertia && (this.zip_area_inertia = !1, this.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? this.circle.__validate_area_inertia() : this.polygon.__validate_area_inertia())
        },
        validate_aabb: function() {
            this.zip_aabb && null != this.body && (this.zip_aabb = !1, this.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? this.circle.__validate_aabb() : this.polygon.__validate_aabb())
        },
        validate_sweepRadius: function() {
            this.zip_sweepRadius && (this.zip_sweepRadius = !1, this.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? this.circle.__validate_sweepRadius() : this.polygon.__validate_sweepRadius())
        },
        __class__: V.ZPP_Shape
    });
    V.ZPP_Circle = function() {
        this.radius = 0;
        this.outer_zn = null;
        V.ZPP_Shape.call(this, e.ZPP_Flags.id_ShapeType_CIRCLE);
        this.circle = this;
        this.zip_localCOM = !1
    };
    j["zpp_nape.shape.ZPP_Circle"] = V.ZPP_Circle;
    V.ZPP_Circle.__name__ = ["zpp_nape", "shape", "ZPP_Circle"];
    V.ZPP_Circle.__super__ = V.ZPP_Shape;
    V.ZPP_Circle.prototype = C(V.ZPP_Shape.prototype, {
        __transform: function(a) {
            var b = a.zpp_inner.a * a.zpp_inner.d - a.zpp_inner.b * a.zpp_inner.c;
            0 > b && (b = -b);
            this.radius *= Math.sqrt(b);
            b = a.zpp_inner.a * this.localCOMx + a.zpp_inner.b * this.localCOMy + a.zpp_inner.tx;
            this.localCOMy = a.zpp_inner.c * this.localCOMx + a.zpp_inner.d * this.localCOMy + a.zpp_inner.ty;
            this.localCOMx = b;
            this.invalidate_radius();
            this.invalidate_localCOM()
        },
        __validate_angDrag: function() {
            var a = this.localCOMx * this.localCOMx + this.localCOMy * this.localCOMy,
                b = this.radius * this.radius;
            this.angDrag = (a + 2 * b) * this.material.dynamicFriction * x.fluidAngularDragFriction + 0.5 * x.fluidAngularDrag * (1 + x.fluidVacuumDrag) * a;
            this.angDrag /= 2 * (a + 0.5 * b)
        },
        __validate_area_inertia: function() {
            var a = this.radius * this.radius;
            this.area = a * Math.PI;
            this.inertia = 0.5 * a + (this.localCOMx * this.localCOMx + this.localCOMy * this.localCOMy)
        },
        __validate_sweepRadius: function() {
            this.sweepCoef = Math.sqrt(this.localCOMx * this.localCOMx + this.localCOMy * this.localCOMy);
            this.sweepRadius = this.sweepCoef + this.radius
        },
        _force_validate_aabb: function() {
            this.worldCOMx = this.body.posx + (this.body.axisy * this.localCOMx - this.body.axisx * this.localCOMy);
            this.worldCOMy = this.body.posy + (this.localCOMx * this.body.axisx + this.localCOMy * this.body.axisy);
            this.aabb.minx = this.worldCOMx - this.radius;
            this.aabb.miny = this.worldCOMy - this.radius;
            this.aabb.maxx = this.worldCOMx + this.radius;
            this.aabb.maxy = this.worldCOMy + this.radius
        },
        __validate_aabb: function() {
            this.zip_worldCOM && null != this.body && (this.zip_worldCOM = !1, this.zip_localCOM && (this.zip_localCOM = !1, this.type == e.ZPP_Flags.id_ShapeType_POLYGON && this.polygon.__validate_localCOM()), this.body.validate_axis(), this.worldCOMx = this.body.posx + (this.body.axisy * this.localCOMx - this.body.axisx * this.localCOMy), this.worldCOMy = this.body.posy + (this.localCOMx * this.body.axisx + this.localCOMy * this.body.axisy));
            var a = this.radius,
                b = this.radius;
            this.aabb.minx = this.worldCOMx - a;
            this.aabb.miny = this.worldCOMy - b;
            this.aabb.maxx = this.worldCOMx + a;
            this.aabb.maxy = this.worldCOMy + b
        },
        setupLocalCOM: function() {
            this.wrap_localCOM =
                u.Vec2.get(this.localCOMx, this.localCOMy, null);
            this.wrap_localCOM.zpp_inner._inuse = !0;
            this.wrap_localCOM.zpp_inner._validate = w(this, this.localCOM_validate);
            this.wrap_localCOM.zpp_inner._invalidate = w(this, this.localCOM_invalidate)
        },
        localCOM_invalidate: function(a) {
            this.localCOMx = a.x;
            this.localCOMy = a.y;
            this.invalidate_localCOM();
            null != this.body && this.body.wake()
        },
        localCOM_validate: function() {
            this.wrap_localCOM.zpp_inner.x = this.localCOMx;
            this.wrap_localCOM.zpp_inner.y = this.localCOMy
        },
        invalidate_radius: function() {
            this.invalidate_area_inertia();
            this.invalidate_angDrag();
            this.zip_aabb = !0;
            null != this.body && (this.body.zip_aabb = !0);
            null != this.body && this.body.wake()
        },
        __class__: V.ZPP_Circle
    });
    V.ZPP_Edge = function() {
        this.tp0 = this.tp1 = 0;
        this.lp0 = this.gp0 = this.lp1 = this.gp1 = null;
        this.length = this.lprojection = this.gprojection = 0;
        this.wrap_gnorm = null;
        this.gnormx = this.gnormy = 0;
        this.wrap_lnorm = null;
        this.lnormx = this.lnormy = 0;
        this.next = this.polygon = this.outer = null;
        this.gprojection = this.lprojection = this.length = this.gnormy = this.gnormx = this.lnormy = this.lnormx =
            0
    };
    j["zpp_nape.shape.ZPP_Edge"] = V.ZPP_Edge;
    V.ZPP_Edge.__name__ = ["zpp_nape", "shape", "ZPP_Edge"];
    V.ZPP_Edge.prototype = {
        getgnorm: function() {
            this.wrap_gnorm = u.Vec2.get(this.gnormx, this.gnormy, null);
            this.wrap_gnorm.zpp_inner._immutable = !0;
            this.wrap_gnorm.zpp_inner._validate = w(this, this.gnorm_validate)
        },
        getlnorm: function() {
            this.wrap_lnorm = u.Vec2.get(this.lnormx, this.lnormy, null);
            this.wrap_lnorm.zpp_inner._immutable = !0;
            this.wrap_lnorm.zpp_inner._validate = w(this, this.lnorm_validate)
        },
        gnorm_validate: function() {
            this.polygon.validate_gaxi();
            this.wrap_gnorm.zpp_inner.x = this.gnormx;
            this.wrap_gnorm.zpp_inner.y = this.gnormy
        },
        lnorm_validate: function() {
            this.polygon.validate_laxi();
            this.wrap_lnorm.zpp_inner.x = this.lnormx;
            this.wrap_lnorm.zpp_inner.y = this.lnormy
        },
        wrapper: function() {
            null == this.outer && (V.ZPP_Edge.internal = !0, this.outer = new L.Edge, V.ZPP_Edge.internal = !1, this.outer.zpp_inner = this);
            return this.outer
        },
        __class__: V.ZPP_Edge
    };
    V.ZPP_Polygon = function() {
        this.reverse_flag = this.zip_lverts = this.zip_laxi = this.zip_gverts = this.zip_gaxi = this.zip_valid =
            this.zip_sanitation = !1;
        this.edgeCnt = 0;
        this.outer_zn = this.lverts = this.wrap_lverts = this.gverts = this.wrap_gverts = this.edges = this.wrap_edges = null;
        V.ZPP_Shape.call(this, e.ZPP_Flags.id_ShapeType_POLYGON);
        this.polygon = this;
        this.lverts = new q.ZPP_Vec2;
        this.gverts = new q.ZPP_Vec2;
        this.edges = new e.ZNPList_ZPP_Edge;
        this.edgeCnt = 0
    };
    j["zpp_nape.shape.ZPP_Polygon"] = V.ZPP_Polygon;
    V.ZPP_Polygon.__name__ = ["zpp_nape", "shape", "ZPP_Polygon"];
    V.ZPP_Polygon.__super__ = V.ZPP_Shape;
    V.ZPP_Polygon.prototype = C(V.ZPP_Shape.prototype, {
        __transform: function(a) {
            for (var b = this.lverts.next; null != b;) {
                var c = b,
                    d = a.zpp_inner.a * c.x + a.zpp_inner.b * c.y + a.zpp_inner.tx;
                c.y = a.zpp_inner.c * c.x + a.zpp_inner.d * c.y + a.zpp_inner.ty;
                c.x = d;
                b = b.next
            }
            this.invalidate_lverts()
        },
        setupLocalCOM: function() {
            this.wrap_localCOM = u.Vec2.get(this.localCOMx, this.localCOMy, null);
            this.wrap_localCOM.zpp_inner._inuse = !0;
            this.wrap_localCOM.zpp_inner._validate = w(this, this.localCOM_validate);
            this.wrap_localCOM.zpp_inner._invalidate = w(this, this.localCOM_invalidate)
        },
        localCOM_invalidate: function(a) {
            this.zip_localCOM &&
                (this.zip_localCOM = !1, this.type == e.ZPP_Flags.id_ShapeType_POLYGON && this.polygon.__validate_localCOM());
            for (var b = 0, c = 0, b = a.x - this.localCOMx, c = a.y - this.localCOMy, a = this.lverts.next; null != a;) {
                var d = a;
                d.x += 1 * b;
                d.y += 1 * c;
                a = a.next
            }
            this.invalidate_lverts()
        },
        localCOM_validate: function() {
            this.zip_localCOM && (this.zip_localCOM = !1, this.type == e.ZPP_Flags.id_ShapeType_POLYGON && this.polygon.__validate_localCOM())
        },
        __validate_localCOM: function() {
            if (null == this.lverts.next.next) this.localCOMx = this.lverts.next.x, this.localCOMy =
                this.lverts.next.y;
            else {
                if (null == this.lverts.next.next.next) {
                    this.localCOMx = this.lverts.next.x;
                    this.localCOMy = this.lverts.next.y;
                    var a = 1;
                    this.localCOMx += this.lverts.next.next.x * a;
                    this.localCOMy += this.lverts.next.next.y * a;
                    a = 0.5
                } else {
                    for (var a = this.localCOMy = this.localCOMx = 0, b = this.lverts.next, c = b, d = b = b.next, b = b.next; null != b;) {
                        var e = b,
                            a = a + d.x * (e.y - c.y),
                            c = e.y * d.x - e.x * d.y;
                        this.localCOMx += (d.x + e.x) * c;
                        this.localCOMy += (d.y + e.y) * c;
                        c = d;
                        d = e;
                        b = b.next
                    }
                    e = b = this.lverts.next;
                    a += d.x * (e.y - c.y);
                    c = e.y * d.x - e.x * d.y;
                    this.localCOMx +=
                        (d.x + e.x) * c;
                    this.localCOMy += (d.y + e.y) * c;
                    c = d;
                    d = e;
                    b = b.next;
                    a += d.x * (b.y - c.y);
                    c = b.y * d.x - b.x * d.y;
                    this.localCOMx += (d.x + b.x) * c;
                    this.localCOMy += (d.y + b.y) * c;
                    a = 1 / (3 * a)
                }
                this.localCOMx *= a;
                this.localCOMy *= a
            }
        },
        __validate_angDrag: function() {
            this.validate_area_inertia();
            this.validate_laxi();
            for (var a = 0, b = this.edges.head, c = 0, d = this.lverts.next, e = d, d = d.next; null != d;) {
                var g = d,
                    l = b.elt,
                    b = b.next,
                    c = c + l.length,
                    h = 0,
                    i = 0,
                    h = g.x - e.x,
                    i = g.y - e.y,
                    a = a + l.length * x.fluidAngularDragFriction * this.material.dynamicFriction * l.lprojection *
                    l.lprojection,
                    j = -(e.y * l.lnormx - e.x * l.lnormy) / (i * l.lnormx - h * l.lnormy);
                if (0 < j) var k = 1 < j ? 1 : j,
                    m = 0,
                    o = 0,
                    m = e.x,
                    o = e.y,
                    p = k,
                    m = m + h * p,
                    o = o + i * p,
                    r = l.lnormy * e.x - l.lnormx * e.y,
                    m = l.lnormy * m - l.lnormx * o,
                    r = (m * m * m - r * r * r) / (3 * (m - r)),
                    a = a + r * k * l.length * x.fluidAngularDrag;
                1 > j && (j = 0 > j ? 0 : j, m = e.x, o = e.y, p = j, m += h * p, o += i * p, r = l.lnormy * m - l.lnormx * o, m = l.lnormy * g.x - l.lnormx * g.y, r = (m * m * m - r * r * r) / (3 * (m - r)), a += r * x.fluidVacuumDrag * (1 - j) * l.length * x.fluidAngularDrag);
                e = g;
                d = d.next
            }
            g = d = this.lverts.next;
            l = b.elt;
            c += l.length;
            h = g.x - e.x;
            i = g.y - e.y;
            a +=
                l.length * x.fluidAngularDragFriction * this.material.dynamicFriction * l.lprojection * l.lprojection;
            j = -(e.y * l.lnormx - e.x * l.lnormy) / (i * l.lnormx - h * l.lnormy);
            0 < j && (k = 1 < j ? 1 : j, m = e.x, o = e.y, p = k, r = l.lnormy * e.x - l.lnormx * e.y, m = l.lnormy * (m + h * p) - l.lnormx * (o + i * p), a += (m * m * m - r * r * r) / (3 * (m - r)) * k * l.length * x.fluidAngularDrag);
            1 > j && (j = 0 > j ? 0 : j, m = e.x, o = e.y, p = j, r = l.lnormy * (m + h * p) - l.lnormx * (o + i * p), m = l.lnormy * g.x - l.lnormx * g.y, a += (m * m * m - r * r * r) / (3 * (m - r)) * x.fluidVacuumDrag * (1 - j) * l.length * x.fluidAngularDrag);
            this.angDrag = a / (this.inertia *
                c)
        },
        __validate_area_inertia: function() {
            if (null == this.lverts.next || null == this.lverts.next.next || null == this.lverts.next.next.next) this.inertia = this.area = 0;
            else {
                for (var a = this.area = 0, b = 0, c = this.lverts.next, d = c, e = c = c.next, c = c.next; null != c;) {
                    var g = c,
                        l = e.y * d.x - e.x * d.y,
                        h = e.x * e.x + e.y * e.y + (e.x * d.x + e.y * d.y) + (d.x * d.x + d.y * d.y),
                        a = a + l * h,
                        b = b + l;
                    this.area += e.x * (g.y - d.y);
                    d = e;
                    e = g;
                    c = c.next
                }
                g = c = this.lverts.next;
                l = e.y * d.x - e.x * d.y;
                h = e.x * e.x + e.y * e.y + (e.x * d.x + e.y * d.y) + (d.x * d.x + d.y * d.y);
                a += l * h;
                b += l;
                this.area += e.x * (g.y - d.y);
                d = e;
                e = g;
                c = c.next;
                l = e.y * d.x - e.x * d.y;
                h = e.x * e.x + e.y * e.y + (e.x * d.x + e.y * d.y) + (d.x * d.x + d.y * d.y);
                this.area += e.x * (c.y - d.y);
                this.inertia = (a + l * h) / (6 * (b + l));
                this.area *= 0.5;
                0 > this.area && (this.area = -this.area, this.reverse_vertices())
            }
        },
        __validate_sweepRadius: function() {
            var a = 0,
                b = 0;
            this.validate_laxi();
            for (var c = this.lverts.next; null != c;) {
                var d = c,
                    d = d.x * d.x + d.y * d.y;
                d > a && (a = d);
                c = c.next
            }
            for (c = this.edges.head; null != c;) {
                d = c.elt;
                if (d.lprojection < b && (b = d.lprojection, 0 > b)) break;
                c = c.next
            }
            0 > b && (b = 0);
            this.sweepRadius = Math.sqrt(a);
            this.sweepCoef = this.sweepRadius - b
        },
        _force_validate_aabb: function() {
            var a = this.lverts.next,
                b = this.gverts.next,
                c = a,
                a = a.next;
            b.x = this.body.posx + (this.body.axisy * c.x - this.body.axisx * c.y);
            b.y = this.body.posy + (c.x * this.body.axisx + c.y * this.body.axisy);
            this.aabb.minx = b.x;
            this.aabb.miny = b.y;
            this.aabb.maxx = b.x;
            this.aabb.maxy = b.y;
            for (b = this.gverts.next.next; null != b;) {
                var c = b,
                    d = a,
                    a = a.next;
                c.x = this.body.posx + (this.body.axisy * d.x - this.body.axisx * d.y);
                c.y = this.body.posy + (d.x * this.body.axisx + d.y * this.body.axisy);
                c.x < this.aabb.minx && (this.aabb.minx = c.x);
                c.x > this.aabb.maxx && (this.aabb.maxx = c.x);
                c.y < this.aabb.miny && (this.aabb.miny = c.y);
                c.y > this.aabb.maxy && (this.aabb.maxy = c.y);
                b = b.next
            }
        },
        __validate_aabb: function() {
            this.validate_gverts();
            var a = this.gverts.next;
            this.aabb.minx = a.x;
            this.aabb.miny = a.y;
            this.aabb.maxx = a.x;
            this.aabb.maxy = a.y;
            for (a = this.gverts.next.next; null != a;) {
                var b = a;
                b.x < this.aabb.minx && (this.aabb.minx = b.x);
                b.x > this.aabb.maxx && (this.aabb.maxx = b.x);
                b.y < this.aabb.miny && (this.aabb.miny = b.y);
                b.y > this.aabb.maxy &&
                    (this.aabb.maxy = b.y);
                a = a.next
            }
        },
        validate_gaxi: function() {
            if (this.zip_gaxi && null != this.body) {
                this.zip_gaxi = !1;
                this.validate_laxi();
                this.body.validate_axis();
                this.validate_gverts();
                for (var a = this.edges.head, b = this.gverts.next, c = b, b = b.next; null != b;) {
                    var d = b,
                        e = a.elt,
                        a = a.next;
                    e.gp0 = c;
                    e.gp1 = d;
                    e.gnormx = this.body.axisy * e.lnormx - this.body.axisx * e.lnormy;
                    e.gnormy = e.lnormx * this.body.axisx + e.lnormy * this.body.axisy;
                    e.gprojection = this.body.posx * e.gnormx + this.body.posy * e.gnormy + e.lprojection;
                    null != e.wrap_gnorm &&
                        (e.wrap_gnorm.zpp_inner.x = e.gnormx, e.wrap_gnorm.zpp_inner.y = e.gnormy);
                    e.tp0 = e.gp0.y * e.gnormx - e.gp0.x * e.gnormy;
                    e.tp1 = e.gp1.y * e.gnormx - e.gp1.x * e.gnormy;
                    c = d;
                    b = b.next
                }
                d = this.gverts.next;
                e = a.elt;
                e.gp0 = c;
                e.gp1 = d;
                e.gnormx = this.body.axisy * e.lnormx - this.body.axisx * e.lnormy;
                e.gnormy = e.lnormx * this.body.axisx + e.lnormy * this.body.axisy;
                e.gprojection = this.body.posx * e.gnormx + this.body.posy * e.gnormy + e.lprojection;
                null != e.wrap_gnorm && (e.wrap_gnorm.zpp_inner.x = e.gnormx, e.wrap_gnorm.zpp_inner.y = e.gnormy);
                e.tp0 = e.gp0.y *
                    e.gnormx - e.gp0.x * e.gnormy;
                e.tp1 = e.gp1.y * e.gnormx - e.gp1.x * e.gnormy
            }
        },
        validate_gverts: function() {
            if (this.zip_gverts && null != this.body) {
                this.zip_gverts = !1;
                this.validate_lverts();
                this.body.validate_axis();
                for (var a = this.lverts.next, b = this.gverts.next; null != b;) {
                    var c = b,
                        d = a,
                        a = a.next;
                    c.x = this.body.posx + (this.body.axisy * d.x - this.body.axisx * d.y);
                    c.y = this.body.posy + (d.x * this.body.axisx + d.y * this.body.axisy);
                    b = b.next
                }
            }
        },
        validate_laxi: function() {
            if (this.zip_laxi) {
                this.zip_laxi = !1;
                this.validate_lverts();
                for (var a =
                        this.edges.head, b = this.lverts.next, c = b, b = b.next; null != b;) {
                    var d = b,
                        e = a.elt,
                        a = a.next;
                    e.lp0 = c;
                    e.lp1 = d;
                    var g = 0,
                        l = 0,
                        g = c.x - d.x,
                        l = c.y - d.y,
                        h = Math.sqrt(g * g + l * l);
                    e.length = h;
                    h = 1 / h;
                    g *= h;
                    l *= h;
                    h = g;
                    g = -l;
                    l = h;
                    e.lprojection = g * c.x + l * c.y;
                    e.lnormx = g;
                    e.lnormy = l;
                    null != e.wrap_lnorm && (e.wrap_lnorm.zpp_inner.x = g, e.wrap_lnorm.zpp_inner.y = l);
                    c = d;
                    b = b.next
                }
                d = this.lverts.next;
                e = a.elt;
                e.lp0 = c;
                e.lp1 = d;
                g = c.x - d.x;
                l = c.y - d.y;
                h = Math.sqrt(g * g + l * l);
                e.length = h;
                h = 1 / h;
                l *= h;
                h *= g;
                g = -l;
                l = h;
                e.lprojection = g * c.x + l * c.y;
                e.lnormx = g;
                e.lnormy = l;
                null !=
                    e.wrap_lnorm && (e.wrap_lnorm.zpp_inner.x = g, e.wrap_lnorm.zpp_inner.y = l)
            }
        },
        reverse_vertices: function() {
            this.lverts.reverse();
            this.gverts.reverse();
            this.edges.reverse();
            var a = this.edges.iterator_at(this.edgeCnt - 1),
                b = this.edges.pop_unsafe();
            this.edges.insert(a, b);
            this.reverse_flag = !this.reverse_flag;
            null != this.wrap_lverts && (this.wrap_lverts.zpp_inner.reverse_flag = this.reverse_flag);
            null != this.wrap_gverts && (this.wrap_gverts.zpp_inner.reverse_flag = this.reverse_flag);
            null != this.wrap_edges && (this.wrap_edges.zpp_inner.reverse_flag =
                this.reverse_flag)
        },
        splice_collinear_real: function() {
            if (!(null == this.lverts.next || null == this.lverts.next.next) && null != this.lverts.next.next.next) {
                for (var a = null, b = this.lverts.next; null != b;) {
                    var c = null == b.next ? this.lverts.next : b.next,
                        d = b,
                        e = c;
                    q.ZPP_VecMath.vec_dsq(d.x, d.y, e.x, e.y) < x.epsilon * x.epsilon ? (this.cleanup_lvert(b), b = this.lverts.erase(a)) : (a = b, b = b.next)
                }
                if (null != this.lverts.next) {
                    do {
                        a = !1;
                        for (b = this.lverts.next; null != b;) {
                            var g = null == b.next ? this.lverts.next : b.next,
                                c = null == g.next ? this.lverts.next :
                                g.next,
                                d = b,
                                e = g,
                                l = 0,
                                h = 0,
                                l = e.x - d.x,
                                h = e.y - d.y,
                                i = d = 0,
                                d = c.x - e.x,
                                i = c.y - e.y,
                                e = i * l - d * h;
                            e * e >= x.epsilon * x.epsilon || (this.cleanup_lvert(g), this.lverts.erase(null == b.next ? null : b), a = !0);
                            b = b.next
                        }
                    } while (a)
                }
            }
        },
        splice_collinear: function() {
            this.zip_sanitation && (this.zip_sanitation = !1, this.splice_collinear_real())
        },
        cleanup_lvert: function(a) {
            for (var b = null, c = null, d = this.lverts.next; null != d && !(d == a);) {
                b = null == b ? this.gverts.next : b.next, c = null == c ? this.edges.head : c.next;
                d = d.next
            }
            a = null == b ? this.gverts.next : b.next;
            this.gverts.erase(b);
            b = a;
            null != b.outer && (b.outer.zpp_inner = null, b.outer = null);
            b._isimmutable = null;
            b._validate = null;
            b._invalidate = null;
            b.next = q.ZPP_Vec2.zpp_pool;
            q.ZPP_Vec2.zpp_pool = b;
            2 == this.edgeCnt ? (b = this.edges.pop_unsafe(), b.polygon = null, b.next = V.ZPP_Edge.zpp_pool, V.ZPP_Edge.zpp_pool = b, b = this.edges.pop_unsafe(), b.polygon = null, b.next = V.ZPP_Edge.zpp_pool, V.ZPP_Edge.zpp_pool = b, this.edgeCnt = 0) : 0 != this.edgeCnt && (b = null == c ? this.edges.head.elt : c.next.elt, this.edges.erase(c), b.polygon = null, b.next = V.ZPP_Edge.zpp_pool, V.ZPP_Edge.zpp_pool =
                b, this.edgeCnt--)
        },
        validate_lverts: function() {
            this.zip_lverts && (this.zip_lverts = !1, 2 < this.lverts.length && (this.validate_area_inertia(), 0 > this.area && (this.reverse_vertices(), this.area = -this.area)))
        },
        invalidate_gaxi: function() {
            this.zip_gaxi = !0
        },
        invalidate_gverts: function() {
            this.zip_aabb = !0;
            null != this.body && (this.body.zip_aabb = !0);
            this.zip_gverts = !0
        },
        invalidate_laxi: function() {
            this.invalidate_gaxi();
            this.zip_laxi = this.zip_sweepRadius = !0
        },
        invalidate_lverts: function() {
            this.invalidate_laxi();
            this.invalidate_area_inertia();
            this.invalidate_angDrag();
            this.invalidate_localCOM();
            this.invalidate_gverts();
            this.zip_sanitation = this.zip_valid = this.zip_lverts = !0;
            null != this.body && this.body.wake()
        },
        getedges: function() {
            this.wrap_edges = e.ZPP_EdgeList.get(this.edges, !0);
            this.wrap_edges.zpp_inner.reverse_flag = this.reverse_flag;
            this.wrap_edges.zpp_inner._validate = w(this, this.edges_validate)
        },
        getgverts: function() {
            this.wrap_gverts = e.ZPP_MixVec2List.get(this.gverts, !0);
            this.wrap_gverts.zpp_inner.reverse_flag = this.reverse_flag;
            this.wrap_gverts.zpp_inner._validate =
                w(this, this.gverts_validate)
        },
        getlverts: function() {
            this.wrap_lverts = e.ZPP_MixVec2List.get(this.lverts);
            this.wrap_lverts.zpp_inner.post_adder = w(this, this.lverts_post_adder);
            this.wrap_lverts.zpp_inner.subber = w(this, this.lverts_subber);
            this.wrap_lverts.zpp_inner._invalidate = w(this, this.lverts_invalidate);
            this.wrap_lverts.zpp_inner._validate = w(this, this.lverts_validate);
            this.wrap_lverts.zpp_inner.reverse_flag = this.reverse_flag
        },
        edges_validate: function() {
            this.validate_lverts()
        },
        gverts_validate: function() {
            this.validate_gverts()
        },
        lverts_validate: function() {
            this.validate_lverts()
        },
        lverts_invalidate: function() {
            this.invalidate_lverts()
        },
        lverts_subber: function(a) {
            this.cleanup_lvert(a.zpp_inner)
        },
        lverts_post_adder: function(a) {
            a.zpp_inner._invalidate = w(this, this.lverts_pa_invalidate);
            for (var b = null, c = null, d = this.lverts.next; null != d && !(d == a.zpp_inner);) {
                b = null == b ? this.gverts.next : b.next, c = null == c ? this.edges.head : c.next;
                d = d.next
            }
            a = q.ZPP_Vec2.get(0, 0, !0);
            this.gverts.insert(b, a);
            null != this.lverts.next.next && (null == this.lverts.next.next.next ?
                (null == V.ZPP_Edge.zpp_pool ? b = new V.ZPP_Edge : (b = V.ZPP_Edge.zpp_pool, V.ZPP_Edge.zpp_pool = b.next, b.next = null), null, b.polygon = this, this.edges.add(b), null == V.ZPP_Edge.zpp_pool ? c = new V.ZPP_Edge : (c = V.ZPP_Edge.zpp_pool, V.ZPP_Edge.zpp_pool = c.next, c.next = null), null, c.polygon = this, this.edges.add(c), this.edgeCnt += 2) : (null == V.ZPP_Edge.zpp_pool ? b = new V.ZPP_Edge : (b = V.ZPP_Edge.zpp_pool, V.ZPP_Edge.zpp_pool = b.next, b.next = null), null, b.polygon = this, this.edges.insert(c, b), this.edgeCnt++));
            a._validate = w(this, this.gverts_pa_validate)
        },
        gverts_pa_validate: function() {
            this.validate_gverts()
        },
        lverts_pa_invalidate: function() {
            this.invalidate_lverts()
        },
        __class__: V.ZPP_Polygon
    });
    A = {
        ZPP_Broadphase: function() {
            this.sweep = this.dynab = this.aabbShape = this.matrix = this.circShape = null;
            this.is_sweep = !1;
            this.space = null
        }
    };
    j["zpp_nape.space.ZPP_Broadphase"] = A.ZPP_Broadphase;
    A.ZPP_Broadphase.__name__ = ["zpp_nape", "space", "ZPP_Broadphase"];
    A.ZPP_Broadphase.prototype = {
        rayMultiCast: function() {
            return null
        },
        rayCast: function() {
            return null
        },
        bodiesInShape: function() {
            return null
        },
        shapesInShape: function() {
            return null
        },
        validateShape: function(a) {
            a.type == e.ZPP_Flags.id_ShapeType_POLYGON && a.polygon.validate_gaxi();
            a.zip_aabb && null != a.body && (a.zip_aabb = !1, a.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? a.circle.__validate_aabb() : a.polygon.__validate_aabb());
            a.zip_worldCOM && null != a.body && (a.zip_worldCOM = !1, a.zip_localCOM && (a.zip_localCOM = !1, a.type == e.ZPP_Flags.id_ShapeType_POLYGON && a.polygon.__validate_localCOM()), a.body.validate_axis(), a.worldCOMx = a.body.posx + (a.body.axisy * a.localCOMx -
                a.body.axisx * a.localCOMy), a.worldCOMy = a.body.posy + (a.localCOMx * a.body.axisx + a.localCOMy * a.body.axisy))
        },
        bodiesInCircle: function() {
            return null
        },
        shapesInCircle: function() {
            return null
        },
        updateCircShape: function(a, b, c) {
            if (null == this.circShape)(new B.Body(function() {
                null == e.ZPP_Flags.BodyType_STATIC && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_STATIC = new B.BodyType, e.ZPP_Flags.internal = !1);
                return e.ZPP_Flags.BodyType_STATIC
            }(this))).zpp_inner.wrap_shapes.add(this.circShape = new L.Circle(c, u.Vec2.get(a,
                b, null)));
            else {
                var d = this.circShape.zpp_inner.circle,
                    c = c / d.radius;
                null == this.matrix && (this.matrix = new u.Mat23);
                this.matrix.set_a(this.matrix.set_d(c));
                this.matrix.set_b(this.matrix.set_c(0));
                this.matrix.set_tx(a - c * d.localCOMx);
                this.matrix.set_ty(b - c * d.localCOMy);
                this.circShape.transform(this.matrix)
            }
            this.circShape.zpp_inner.validate_aabb()
        },
        bodiesInAABB: function() {
            return null
        },
        shapesInAABB: function() {
            return null
        },
        updateAABBShape: function(a) {
            if (null == this.aabbShape)(new B.Body(function() {
                null == e.ZPP_Flags.BodyType_STATIC &&
                    (e.ZPP_Flags.internal = !0, e.ZPP_Flags.BodyType_STATIC = new B.BodyType, e.ZPP_Flags.internal = !1);
                return e.ZPP_Flags.BodyType_STATIC
            }(this))).zpp_inner.wrap_shapes.add(this.aabbShape = new L.Polygon(L.Polygon.rect(a.minx, a.miny, a.maxx - a.minx, a.maxy - a.miny)));
            else {
                var b = this.aabbShape.zpp_inner.aabb,
                    c = (a.maxx - a.minx) / (b.maxx - b.minx),
                    d = (a.maxy - a.miny) / (b.maxy - b.miny);
                null == this.matrix && (this.matrix = new u.Mat23);
                this.matrix.set_a(c);
                this.matrix.set_b(this.matrix.set_c(0));
                this.matrix.set_d(d);
                this.matrix.set_tx(a.minx -
                    c * b.minx);
                this.matrix.set_ty(a.miny - d * b.miny);
                this.aabbShape.transform(this.matrix)
            }
            this.aabbShape.zpp_inner.validate_aabb();
            this.aabbShape.zpp_inner.polygon.validate_gaxi()
        },
        bodiesUnderPoint: function() {
            return null
        },
        shapesUnderPoint: function() {
            return null
        },
        clear: function() {},
        broadphase: function() {},
        sync: function(a) {
            this.is_sweep ? !this.sweep.space.continuous && a.zip_aabb && null != a.body && (a.zip_aabb = !1, a.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? a.circle.__validate_aabb() : a.polygon.__validate_aabb()) : this.dynab.__sync(a)
        },
        remove: function(a) {
            this.is_sweep ? this.sweep.__remove(a) : this.dynab.__remove(a)
        },
        insert: function(a) {
            this.is_sweep ? this.sweep.__insert(a) : this.dynab.__insert(a)
        },
        __class__: A.ZPP_Broadphase
    };
    A.ZPP_AABBNode = function() {
        this.synced = this.first_sync = !1;
        this.snext = null;
        this.moved = !1;
        this.next = this.mnext = null;
        this.height = this.rayt = 0;
        this.parent = this.child1 = this.child2 = null;
        this.dyn = !1;
        this.aabb = this.shape = null;
        this.height = -1
    };
    j["zpp_nape.space.ZPP_AABBNode"] = A.ZPP_AABBNode;
    A.ZPP_AABBNode.__name__ = ["zpp_nape",
        "space", "ZPP_AABBNode"
    ];
    A.ZPP_AABBNode.prototype = {
        free: function() {
            this.height = -1;
            var a = this.aabb;
            null != a.outer && (a.outer.zpp_inner = null, a.outer = null);
            a.wrap_min = a.wrap_max = null;
            a._invalidate = null;
            a._validate = null;
            a.next = q.ZPP_AABB.zpp_pool;
            q.ZPP_AABB.zpp_pool = a;
            this.mnext = this.snext = this.next = this.child1 = this.child2 = this.parent = null
        },
        __class__: A.ZPP_AABBNode
    };
    A.ZPP_AABBPair = function() {
        this.arb = this.next = null;
        this.id = this.di = 0;
        this.first = this.sleeping = !1;
        this.n1 = this.n2 = null
    };
    j["zpp_nape.space.ZPP_AABBPair"] =
        A.ZPP_AABBPair;
    A.ZPP_AABBPair.__name__ = ["zpp_nape", "space", "ZPP_AABBPair"];
    A.ZPP_AABBPair.prototype = {
        __class__: A.ZPP_AABBPair
    };
    A.ZPP_AABBTree = function() {
        this.root = null
    };
    j["zpp_nape.space.ZPP_AABBTree"] = A.ZPP_AABBTree;
    A.ZPP_AABBTree.__name__ = ["zpp_nape", "space", "ZPP_AABBTree"];
    A.ZPP_AABBTree.prototype = {
        balance: function(a) {
            if (null == a.child1 || 2 > a.height) return a;
            var b = a.child1,
                c = a.child2,
                d = c.height - b.height;
            if (1 < d) {
                var e = c.child1,
                    g = c.child2;
                c.child1 = a;
                c.parent = a.parent;
                a.parent = c;
                null != c.parent ? c.parent.child1 ==
                    a ? c.parent.child1 = c : c.parent.child2 = c : this.root = c;
                e.height > g.height ? (c.child2 = e, a.child2 = g, g.parent = a, a.aabb.setCombine(b.aabb, g.aabb), c.aabb.setCombine(a.aabb, e.aabb), a.height = 1 + function() {
                    var a = b.height,
                        c = g.height;
                    return a > c ? a : c
                }(this), c.height = 1 + function() {
                    var b = a.height,
                        c = e.height;
                    return b > c ? b : c
                }(this)) : (c.child2 = g, a.child2 = e, e.parent = a, a.aabb.setCombine(b.aabb, e.aabb), c.aabb.setCombine(a.aabb, g.aabb), a.height = 1 + function() {
                    var a = b.height,
                        c = e.height;
                    return a > c ? a : c
                }(this), c.height = 1 + function() {
                    var b =
                        a.height,
                        c = g.height;
                    return b > c ? b : c
                }(this));
                return c
            }
            return -1 > d ? (e = b.child1, g = b.child2, b.child1 = a, b.parent = a.parent, a.parent = b, null != b.parent ? b.parent.child1 == a ? b.parent.child1 = b : b.parent.child2 = b : this.root = b, e.height > g.height ? (b.child2 = e, a.child1 = g, g.parent = a, a.aabb.setCombine(c.aabb, g.aabb), b.aabb.setCombine(a.aabb, e.aabb), a.height = 1 + function() {
                var a = c.height,
                    b = g.height;
                return a > b ? a : b
            }(this), b.height = 1 + function() {
                var b = a.height,
                    c = e.height;
                return b > c ? b : c
            }(this)) : (b.child2 = g, a.child1 = e, e.parent = a,
                a.aabb.setCombine(c.aabb, e.aabb), b.aabb.setCombine(a.aabb, g.aabb), a.height = 1 + function() {
                    var a = c.height,
                        b = e.height;
                    return a > b ? a : b
                }(this), b.height = 1 + function() {
                    var b = a.height,
                        c = g.height;
                    return b > c ? b : c
                }(this)), b) : a
        },
        inlined_removeLeaf: function(a) {
            if (a == this.root) this.root = null;
            else {
                var b = a.parent,
                    c = b.parent,
                    a = b.child1 == a ? b.child2 : b.child1;
                if (null != c) {
                    c.child1 == b ? c.child1 = a : c.child2 = a;
                    a.parent = c;
                    b.free();
                    b.next = A.ZPP_AABBNode.zpp_pool;
                    for (A.ZPP_AABBNode.zpp_pool = b; null != c;) c = this.balance(c), a = c.child1,
                        b = c.child2, c.aabb.setCombine(a.aabb, b.aabb), a = a.height, b = b.height, c.height = 1 + (a > b ? a : b), c = c.parent
                } else this.root = a, a.parent = null, b.free(), b.next = A.ZPP_AABBNode.zpp_pool, A.ZPP_AABBNode.zpp_pool = b
            }
        },
        removeLeaf: function(a) {
            this.inlined_removeLeaf(a)
        },
        inlined_insertLeaf: function(a) {
            if (null == this.root) this.root = a, this.root.parent = null;
            else {
                for (var b = a.aabb, c = this.root; null != c.child1;) {
                    var d = c.child1,
                        e = c.child2,
                        g = c.aabb.perimeter();
                    A.ZPP_AABBTree.tmpaabb.setCombine(c.aabb, b);
                    var l = A.ZPP_AABBTree.tmpaabb.perimeter(),
                        h = 2 * l,
                        i = 2 * (l - g),
                        g = function() {
                            A.ZPP_AABBTree.tmpaabb.setCombine(b, d.aabb);
                            var a;
                            null == d.child1 ? a = A.ZPP_AABBTree.tmpaabb.perimeter() + i : (a = d.aabb.perimeter(), a = A.ZPP_AABBTree.tmpaabb.perimeter() - a + i);
                            return a
                        }(this),
                        l = function() {
                            A.ZPP_AABBTree.tmpaabb.setCombine(b, e.aabb);
                            var a;
                            null == e.child1 ? a = A.ZPP_AABBTree.tmpaabb.perimeter() + i : (a = e.aabb.perimeter(), a = A.ZPP_AABBTree.tmpaabb.perimeter() - a + i);
                            return a
                        }(this);
                    if (h < g && h < l) break;
                    else c = g < l ? d : e
                }
                h = c.parent;
                null == A.ZPP_AABBNode.zpp_pool ? g = new A.ZPP_AABBNode :
                    (g = A.ZPP_AABBNode.zpp_pool, A.ZPP_AABBNode.zpp_pool = g.next, g.next = null);
                null == q.ZPP_AABB.zpp_pool ? g.aabb = new q.ZPP_AABB : (g.aabb = q.ZPP_AABB.zpp_pool, q.ZPP_AABB.zpp_pool = g.aabb.next, g.aabb.next = null);
                null;
                g.moved = !1;
                g.synced = !1;
                g.first_sync = !1;
                g.parent = h;
                g.aabb.setCombine(b, c.aabb);
                g.height = c.height + 1;
                null != h ? (h.child1 == c ? h.child1 = g : h.child2 = g, g.child1 = c, g.child2 = a, c.parent = g, a.parent = g) : (g.child1 = c, g.child2 = a, c.parent = g, this.root = a.parent = g);
                for (c = a.parent; null != c;) c = this.balance(c), d = c.child1, e = c.child2,
                    c.height = 1 + function() {
                        var a = d.height,
                            b = e.height;
                        return a > b ? a : b
                    }(this), c.aabb.setCombine(d.aabb, e.aabb), c = c.parent
            }
        },
        clear: function() {
            if (null != this.root) {
                var a;
                this.root.next = null;
                for (a = this.root; null != a;) {
                    var b;
                    b = a;
                    a = b.next;
                    b.next = null;
                    null == b.child1 ? (b.shape.node = null, b.shape.removedFromSpace(), b.shape = null) : (null != b.child1 && (b.child1.next = a, a = b.child1), null != b.child2 && (b.child2.next = a, a = b.child2));
                    b.free();
                    b.next = A.ZPP_AABBNode.zpp_pool;
                    A.ZPP_AABBNode.zpp_pool = b
                }
                this.root = null
            }
        },
        __class__: A.ZPP_AABBTree
    };
    A.ZPP_DynAABBPhase = function(a) {
        this.stree = this.dtree = this.pairs = this.syncs = this.moves = this.treeStack = this.treeStack2 = this.failed = this.openlist = null;
        this.space = a;
        this.is_sweep = !1;
        this.dynab = this;
        this.stree = new A.ZPP_AABBTree;
        this.dtree = new A.ZPP_AABBTree
    };
    j["zpp_nape.space.ZPP_DynAABBPhase"] = A.ZPP_DynAABBPhase;
    A.ZPP_DynAABBPhase.__name__ = ["zpp_nape", "space", "ZPP_DynAABBPhase"];
    A.ZPP_DynAABBPhase.__super__ = A.ZPP_Broadphase;
    A.ZPP_DynAABBPhase.prototype = C(A.ZPP_Broadphase.prototype, {
        rayMultiCast: function(a,
            b, c, d) {
            null == this.openlist && (this.openlist = new e.ZNPList_ZPP_AABBNode);
            this.sync_broadphase();
            a.validate_dir();
            var f = a.maxdist >= Math.POSITIVE_INFINITY,
                d = null == d ? new u.RayResultList : d;
            if (null != this.dtree.root && a.aabbtest(this.dtree.root.aabb))
                if (f) this.openlist.add(this.dtree.root);
                else {
                    var g = a.aabbsect(this.dtree.root.aabb);
                    0 <= g && g < a.maxdist && this.openlist.add(this.dtree.root)
                }
            null != this.stree.root && a.aabbtest(this.stree.root.aabb) && (f ? this.openlist.add(this.stree.root) : (g = a.aabbsect(this.stree.root.aabb),
                0 <= g && g < a.maxdist && this.openlist.add(this.stree.root)));
            for (; null != this.openlist.head;) {
                var l = this.openlist.pop_unsafe();
                if (null == l.child1) {
                    if (g = l.shape, null == c || g.filter.shouldCollide(c)) g.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? a.circlesect2(g.circle, b, d) : a.aabbtest(g.aabb) && a.polysect2(g.polygon, b, d)
                } else null != l.child1 && a.aabbtest(l.child1.aabb) && (f ? this.openlist.add(l.child1) : (g = a.aabbsect(l.child1.aabb), 0 <= g && g < a.maxdist && this.openlist.add(l.child1))), null != l.child2 && a.aabbtest(l.child2.aabb) &&
                    (f ? this.openlist.add(l.child2) : (g = a.aabbsect(l.child2.aabb), 0 <= g && g < a.maxdist && this.openlist.add(l.child2)))
            }
            this.openlist.clear();
            return d
        },
        rayCast: function(a, b, c) {
            null == this.openlist && (this.openlist = new e.ZNPList_ZPP_AABBNode);
            this.sync_broadphase();
            a.validate_dir();
            var d = a.maxdist;
            if (null != this.dtree.root && a.aabbtest(this.dtree.root.aabb)) {
                var f = a.aabbsect(this.dtree.root.aabb);
                if (0 <= f && f < d) {
                    this.dtree.root.rayt = f;
                    for (var f = null, g = this.openlist.head; null != g;) {
                        var l = g.elt;
                        if (this.dtree.root.rayt <
                            l.rayt) break;
                        f = g;
                        g = g.next
                    }
                    this.openlist.inlined_insert(f, this.dtree.root)
                }
            }
            if (null != this.stree.root && a.aabbtest(this.stree.root.aabb) && (f = a.aabbsect(this.stree.root.aabb), 0 <= f && f < d)) {
                this.stree.root.rayt = f;
                f = null;
                for (g = this.openlist.head; null != g;) {
                    l = g.elt;
                    if (this.stree.root.rayt < l.rayt) break;
                    f = g;
                    g = g.next
                }
                this.openlist.inlined_insert(f, this.stree.root)
            }
            for (var h = null; null != this.openlist.head;) {
                var i = this.openlist.pop_unsafe();
                if (i.rayt >= d) break;
                if (null == i.child1) {
                    if (i = i.shape, null == c || i.filter.shouldCollide(c)) i =
                        i.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? a.circlesect(i.circle, b, d) : a.aabbtest(i.aabb) ? a.polysect(i.polygon, b, d) : null, null != i && (d = i.zpp_inner.toiDistance, null != h && h.zpp_inner.free(), h = i)
                } else {
                    if (null != i.child1 && a.aabbtest(i.child1.aabb) && (f = a.aabbsect(i.child1.aabb), 0 <= f && f < d)) {
                        i.child1.rayt = f;
                        f = null;
                        for (g = this.openlist.head; null != g;) {
                            l = g.elt;
                            if (i.child1.rayt < l.rayt) break;
                            f = g;
                            g = g.next
                        }
                        this.openlist.inlined_insert(f, i.child1)
                    }
                    if (null != i.child2 && a.aabbtest(i.child2.aabb) && (f = a.aabbsect(i.child2.aabb),
                            0 <= f && f < d)) {
                        i.child2.rayt = f;
                        f = null;
                        for (g = this.openlist.head; null != g;) {
                            l = g.elt;
                            if (i.child2.rayt < l.rayt) break;
                            f = g;
                            g = g.next
                        }
                        this.openlist.inlined_insert(f, i.child2)
                    }
                }
            }
            this.openlist.clear();
            return h
        },
        bodiesInShape: function(a, b, c, d) {
            this.sync_broadphase();
            this.validateShape(a);
            var f = a.aabb,
                d = null == d ? new B.BodyList : d;
            null == this.failed && (this.failed = new B.BodyList);
            if (null != this.stree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.stree.root); null != this.treeStack.head;) {
                    var g =
                        this.treeStack.pop_unsafe();
                    if (g.aabb.intersect(f))
                        if (null == g.child1) {
                            var l = g.shape.body.outer;
                            if (null == c || g.shape.filter.shouldCollide(c)) b ? this.failed.has(l) || (g = q.ZPP_Collide.containTest(a, g.shape), !d.has(l) && g ? d.push(l) : g || (d.remove(l), this.failed.push(l))) : !d.has(l) && q.ZPP_Collide.testCollide_safe(g.shape, a) && d.push(l)
                        } else null != g.child1 && this.treeStack.add(g.child1), null != g.child2 && this.treeStack.add(g.child2)
                }
            }
            if (null != this.dtree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.dtree.root); null != this.treeStack.head;)
                    if (g = this.treeStack.pop_unsafe(), g.aabb.intersect(f))
                        if (null == g.child1) {
                            if (l = g.shape.body.outer, null == c || g.shape.filter.shouldCollide(c)) b ? this.failed.has(l) || (g = q.ZPP_Collide.containTest(a, g.shape), !d.has(l) && g ? d.push(l) : g || (d.remove(l), this.failed.push(l))) : !d.has(l) && q.ZPP_Collide.testCollide_safe(g.shape, a) && d.push(l)
                        } else null != g.child1 && this.treeStack.add(g.child1), null != g.child2 && this.treeStack.add(g.child2)
            }
            this.failed.clear();
            return d
        },
        shapesInShape: function(a, b, c, d) {
            this.sync_broadphase();
            this.validateShape(a);
            var f = a.aabb,
                d = null == d ? new L.ShapeList : d;
            if (null != this.stree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.stree.root); null != this.treeStack.head;) {
                    var g = this.treeStack.pop_unsafe();
                    if (g.aabb.intersect(f))
                        if (null == g.child1) {
                            if (null == c || g.shape.filter.shouldCollide(c)) b ? q.ZPP_Collide.containTest(a, g.shape) && d.push(g.shape.outer) : q.ZPP_Collide.testCollide_safe(g.shape,
                                a) && d.push(g.shape.outer)
                        } else null != g.child1 && this.treeStack.add(g.child1), null != g.child2 && this.treeStack.add(g.child2)
                }
            }
            if (null != this.dtree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.dtree.root); null != this.treeStack.head;)
                    if (g = this.treeStack.pop_unsafe(), g.aabb.intersect(f))
                        if (null == g.child1) {
                            if (null == c || g.shape.filter.shouldCollide(c)) b ? q.ZPP_Collide.containTest(a, g.shape) && d.push(g.shape.outer) : q.ZPP_Collide.testCollide_safe(g.shape, a) &&
                                d.push(g.shape.outer)
                        } else null != g.child1 && this.treeStack.add(g.child1), null != g.child2 && this.treeStack.add(g.child2)
            }
            return d
        },
        bodiesInCircle: function(a, b, c, d, f, g) {
            this.sync_broadphase();
            this.updateCircShape(a, b, c);
            a = this.circShape.zpp_inner.aabb;
            g = null == g ? new B.BodyList : g;
            null == this.failed && (this.failed = new B.BodyList);
            if (null != this.stree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.stree.root); null != this.treeStack.head;)
                    if (c = this.treeStack.pop_unsafe(),
                        c.aabb.intersect(a))
                        if (null == c.child1) {
                            if (b = c.shape.body.outer, null == f || c.shape.filter.shouldCollide(f)) d ? this.failed.has(b) || (c = q.ZPP_Collide.containTest(this.circShape.zpp_inner, c.shape), !g.has(b) && c ? g.push(b) : c || (g.remove(b), this.failed.push(b))) : !g.has(b) && q.ZPP_Collide.testCollide_safe(c.shape, this.circShape.zpp_inner) && g.push(b)
                        } else null != c.child1 && this.treeStack.add(c.child1), null != c.child2 && this.treeStack.add(c.child2)
            }
            if (null != this.dtree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.dtree.root); null != this.treeStack.head;)
                    if (c = this.treeStack.pop_unsafe(), c.aabb.intersect(a))
                        if (null == c.child1) {
                            if (b = c.shape.body.outer, null == f || c.shape.filter.shouldCollide(f)) d ? this.failed.has(b) || (c = q.ZPP_Collide.containTest(this.circShape.zpp_inner, c.shape), !g.has(b) && c ? g.push(b) : c || (g.remove(b), this.failed.push(b))) : !g.has(b) && q.ZPP_Collide.testCollide_safe(c.shape, this.circShape.zpp_inner) && g.push(b)
                        } else null != c.child1 && this.treeStack.add(c.child1), null != c.child2 &&
                            this.treeStack.add(c.child2)
            }
            this.failed.clear();
            return g
        },
        shapesInCircle: function(a, b, c, d, f, g) {
            this.sync_broadphase();
            this.updateCircShape(a, b, c);
            a = this.circShape.zpp_inner.aabb;
            g = null == g ? new L.ShapeList : g;
            if (null != this.stree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.stree.root); null != this.treeStack.head;)
                    if (b = this.treeStack.pop_unsafe(), b.aabb.intersect(a))
                        if (null == b.child1) {
                            if (null == f || b.shape.filter.shouldCollide(f)) d ? q.ZPP_Collide.containTest(this.circShape.zpp_inner,
                                b.shape) && g.push(b.shape.outer) : q.ZPP_Collide.testCollide_safe(b.shape, this.circShape.zpp_inner) && g.push(b.shape.outer)
                        } else null != b.child1 && this.treeStack.add(b.child1), null != b.child2 && this.treeStack.add(b.child2)
            }
            if (null != this.dtree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.dtree.root); null != this.treeStack.head;)
                    if (b = this.treeStack.pop_unsafe(), b.aabb.intersect(a))
                        if (null == b.child1) {
                            if (null == f || b.shape.filter.shouldCollide(f)) d ? q.ZPP_Collide.containTest(this.circShape.zpp_inner,
                                b.shape) && g.push(b.shape.outer) : q.ZPP_Collide.testCollide_safe(b.shape, this.circShape.zpp_inner) && g.push(b.shape.outer)
                        } else null != b.child1 && this.treeStack.add(b.child1), null != b.child2 && this.treeStack.add(b.child2)
            }
            return g
        },
        bodiesInAABB: function(a, b, c, d, f) {
            this.sync_broadphase();
            this.updateAABBShape(a);
            a = this.aabbShape.zpp_inner.aabb;
            f = null == f ? new B.BodyList : f;
            null == this.failed && (this.failed = new B.BodyList);
            if (null != this.stree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.stree.root); null != this.treeStack.head;) {
                    var g = this.treeStack.pop_unsafe();
                    if (a.contains(g.aabb))
                        if (null == g.child1) {
                            if (null == d || g.shape.filter.shouldCollide(d)) {
                                var l = g.shape.body.outer;
                                f.has(l) || f.push(l)
                            }
                        } else {
                            null == this.treeStack2 && (this.treeStack2 = new e.ZNPList_ZPP_AABBNode);
                            for (this.treeStack2.add(g); null != this.treeStack2.head;)
                                if (l = this.treeStack2.pop_unsafe(), null == l.child1) {
                                    if (null == d || l.shape.filter.shouldCollide(d)) l = l.shape.body.outer, f.has(l) || f.push(l)
                                } else null !=
                                    l.child1 && this.treeStack2.add(l.child1), null != l.child2 && this.treeStack2.add(l.child2)
                        }
                    else if (g.aabb.intersect(a))
                        if (null == g.child1) {
                            if (l = g.shape.body.outer, null == d || g.shape.filter.shouldCollide(d)) b ? c ? this.failed.has(l) || (g = q.ZPP_Collide.containTest(this.aabbShape.zpp_inner, g.shape), !f.has(l) && g ? f.push(l) : g || (f.remove(l), this.failed.push(l))) : !f.has(l) && q.ZPP_Collide.testCollide_safe(g.shape, this.aabbShape.zpp_inner) && f.push(l) : c ? this.failed.has(l) || (g = a.contains(g.shape.aabb), !f.has(l) && g ? f.push(l) :
                                g || (f.remove(l), this.failed.push(l))) : !f.has(l) && a.contains(g.shape.aabb) && f.push(l)
                        } else null != g.child1 && this.treeStack.add(g.child1), null != g.child2 && this.treeStack.add(g.child2)
                }
            }
            if (null != this.dtree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.dtree.root); null != this.treeStack.head;)
                    if (g = this.treeStack.pop_unsafe(), a.contains(g.aabb))
                        if (null == g.child1) {
                            if (null == d || g.shape.filter.shouldCollide(d)) l = g.shape.body.outer, f.has(l) || f.push(l)
                        } else {
                            null ==
                                this.treeStack2 && (this.treeStack2 = new e.ZNPList_ZPP_AABBNode);
                            for (this.treeStack2.add(g); null != this.treeStack2.head;)
                                if (l = this.treeStack2.pop_unsafe(), null == l.child1) {
                                    if (null == d || l.shape.filter.shouldCollide(d)) l = l.shape.body.outer, f.has(l) || f.push(l)
                                } else null != l.child1 && this.treeStack2.add(l.child1), null != l.child2 && this.treeStack2.add(l.child2)
                        }
                else if (g.aabb.intersect(a))
                    if (null == g.child1) {
                        if (l = g.shape.body.outer, null == d || g.shape.filter.shouldCollide(d)) b ? c ? this.failed.has(l) || (g = q.ZPP_Collide.containTest(this.aabbShape.zpp_inner,
                            g.shape), !f.has(l) && g ? f.push(l) : g || (f.remove(l), this.failed.push(l))) : !f.has(l) && q.ZPP_Collide.testCollide_safe(g.shape, this.aabbShape.zpp_inner) && f.push(l) : c ? this.failed.has(l) || (g = a.contains(g.shape.aabb), !f.has(l) && g ? f.push(l) : g || (f.remove(l), this.failed.push(l))) : !f.has(l) && a.contains(g.shape.aabb) && f.push(l)
                    } else null != g.child1 && this.treeStack.add(g.child1), null != g.child2 && this.treeStack.add(g.child2)
            }
            this.failed.clear();
            return f
        },
        shapesInAABB: function(a, b, c, d, f) {
            this.sync_broadphase();
            this.updateAABBShape(a);
            a = this.aabbShape.zpp_inner.aabb;
            f = null == f ? new L.ShapeList : f;
            if (null != this.stree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.stree.root); null != this.treeStack.head;) {
                    var g = this.treeStack.pop_unsafe();
                    if (a.contains(g.aabb))
                        if (null == g.child1)(null == d || g.shape.filter.shouldCollide(d)) && f.push(g.shape.outer);
                        else {
                            null == this.treeStack2 && (this.treeStack2 = new e.ZNPList_ZPP_AABBNode);
                            for (this.treeStack2.add(g); null != this.treeStack2.head;) g = this.treeStack2.pop_unsafe(),
                                null == g.child1 ? (null == d || g.shape.filter.shouldCollide(d)) && f.push(g.shape.outer) : (null != g.child1 && this.treeStack2.add(g.child1), null != g.child2 && this.treeStack2.add(g.child2))
                        }
                    else if (g.aabb.intersect(a))
                        if (null == g.child1) {
                            if (null == d || g.shape.filter.shouldCollide(d)) b ? c ? q.ZPP_Collide.containTest(this.aabbShape.zpp_inner, g.shape) && f.push(g.shape.outer) : a.contains(g.shape.aabb) ? f.push(g.shape.outer) : q.ZPP_Collide.testCollide_safe(g.shape, this.aabbShape.zpp_inner) && f.push(g.shape.outer) : (!c || a.contains(g.shape.aabb)) &&
                                f.push(g.shape.outer)
                        } else null != g.child1 && this.treeStack.add(g.child1), null != g.child2 && this.treeStack.add(g.child2)
                }
            }
            if (null != this.dtree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.dtree.root); null != this.treeStack.head;)
                    if (g = this.treeStack.pop_unsafe(), a.contains(g.aabb))
                        if (null == g.child1)(null == d || g.shape.filter.shouldCollide(d)) && f.push(g.shape.outer);
                        else {
                            null == this.treeStack2 && (this.treeStack2 = new e.ZNPList_ZPP_AABBNode);
                            for (this.treeStack2.add(g); null !=
                                this.treeStack2.head;) g = this.treeStack2.pop_unsafe(), null == g.child1 ? (null == d || g.shape.filter.shouldCollide(d)) && f.push(g.shape.outer) : (null != g.child1 && this.treeStack2.add(g.child1), null != g.child2 && this.treeStack2.add(g.child2))
                        }
                else if (g.aabb.intersect(a))
                    if (null == g.child1) {
                        if (null == d || g.shape.filter.shouldCollide(d)) b ? c ? q.ZPP_Collide.containTest(this.aabbShape.zpp_inner, g.shape) && f.push(g.shape.outer) : a.contains(g.shape.aabb) ? f.push(g.shape.outer) : q.ZPP_Collide.testCollide_safe(g.shape, this.aabbShape.zpp_inner) &&
                            f.push(g.shape.outer) : (!c || a.contains(g.shape.aabb)) && f.push(g.shape.outer)
                    } else null != g.child1 && this.treeStack.add(g.child1), null != g.child2 && this.treeStack.add(g.child2)
            }
            return f
        },
        bodiesUnderPoint: function(a, b, c, d) {
            this.sync_broadphase();
            a = q.ZPP_Vec2.get(a, b, null);
            d = null == d ? new B.BodyList : d;
            if (null != this.stree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.stree.root); null != this.treeStack.head;)
                    if (b = this.treeStack.pop_unsafe(), b.aabb.containsPoint(a))
                        if (null ==
                            b.child1) {
                            var f = b.shape.body.outer;
                            if (!d.has(f) && (null == c || b.shape.filter.shouldCollide(c))) b.shape.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? q.ZPP_Collide.circleContains(b.shape.circle, a) && d.push(f) : q.ZPP_Collide.polyContains(b.shape.polygon, a) && d.push(f)
                        } else null != b.child1 && this.treeStack.add(b.child1), null != b.child2 && this.treeStack.add(b.child2)
            }
            if (null != this.dtree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.dtree.root); null != this.treeStack.head;)
                    if (b =
                        this.treeStack.pop_unsafe(), b.aabb.containsPoint(a))
                        if (null == b.child1) {
                            if (f = b.shape.body.outer, !d.has(f) && (null == c || b.shape.filter.shouldCollide(c))) b.shape.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? q.ZPP_Collide.circleContains(b.shape.circle, a) && d.push(f) : q.ZPP_Collide.polyContains(b.shape.polygon, a) && d.push(f)
                        } else null != b.child1 && this.treeStack.add(b.child1), null != b.child2 && this.treeStack.add(b.child2)
            }
            null != a.outer && (a.outer.zpp_inner = null, a.outer = null);
            a._isimmutable = null;
            a._validate = null;
            a._invalidate =
                null;
            a.next = q.ZPP_Vec2.zpp_pool;
            q.ZPP_Vec2.zpp_pool = a;
            return d
        },
        shapesUnderPoint: function(a, b, c, d) {
            this.sync_broadphase();
            a = q.ZPP_Vec2.get(a, b, null);
            d = null == d ? new L.ShapeList : d;
            if (null != this.stree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.stree.root); null != this.treeStack.head;)
                    if (b = this.treeStack.pop_unsafe(), b.aabb.containsPoint(a))
                        if (null == b.child1) {
                            if (null == c || b.shape.filter.shouldCollide(c)) b.shape.type == e.ZPP_Flags.id_ShapeType_CIRCLE ?
                                q.ZPP_Collide.circleContains(b.shape.circle, a) && d.push(b.shape.outer) : q.ZPP_Collide.polyContains(b.shape.polygon, a) && d.push(b.shape.outer)
                        } else null != b.child1 && this.treeStack.add(b.child1), null != b.child2 && this.treeStack.add(b.child2)
            }
            if (null != this.dtree.root) {
                null == this.treeStack && (this.treeStack = new e.ZNPList_ZPP_AABBNode);
                for (this.treeStack.add(this.dtree.root); null != this.treeStack.head;)
                    if (b = this.treeStack.pop_unsafe(), b.aabb.containsPoint(a))
                        if (null == b.child1) {
                            if (null == c || b.shape.filter.shouldCollide(c)) b.shape.type ==
                                e.ZPP_Flags.id_ShapeType_CIRCLE ? q.ZPP_Collide.circleContains(b.shape.circle, a) && d.push(b.shape.outer) : q.ZPP_Collide.polyContains(b.shape.polygon, a) && d.push(b.shape.outer)
                        } else null != b.child1 && this.treeStack.add(b.child1), null != b.child2 && this.treeStack.add(b.child2)
            }
            null != a.outer && (a.outer.zpp_inner = null, a.outer = null);
            a._isimmutable = null;
            a._validate = null;
            a._invalidate = null;
            a.next = q.ZPP_Vec2.zpp_pool;
            q.ZPP_Vec2.zpp_pool = a;
            return d
        },
        clear: function() {
            for (; null != this.syncs;) {
                var a = this.syncs.snext;
                this.syncs.snext =
                    null;
                this.syncs.first_sync && (this.syncs.shape.node = null, this.syncs.shape.removedFromSpace(), this.syncs.shape = null);
                this.syncs = a
            }
            for (; null != this.moves;) a = this.moves.mnext, this.moves.mnext = null, this.moves.first_sync && (this.moves.shape.node = null, this.moves.shape.removedFromSpace(), this.moves.shape = null), this.moves = a;
            for (; null != this.pairs;) {
                a = this.pairs.next;
                null != this.pairs.arb && (this.pairs.arb.pair = null);
                this.pairs.arb = null;
                this.pairs.n1.shape.pairs.inlined_try_remove(this.pairs);
                this.pairs.n2.shape.pairs.inlined_try_remove(this.pairs);
                var b = this.pairs;
                b.n1 = b.n2 = null;
                b.sleeping = !1;
                b.next = A.ZPP_AABBPair.zpp_pool;
                A.ZPP_AABBPair.zpp_pool = b;
                this.pairs = a
            }
            this.dtree.clear();
            this.stree.clear()
        },
        broadphase: function(a, b) {
            for (var c = this.syncs; null != c;) {
                var d = c.shape;
                if (c.first_sync) c.first_sync = !1;
                else {
                    var f = c.dyn ? this.dtree : this.stree;
                    f.inlined_removeLeaf(c)
                }
                f = c.aabb;
                !a.continuous && d.zip_aabb && null != d.body && (d.zip_aabb = !1, d.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? d.circle.__validate_aabb() : d.polygon.__validate_aabb());
                f.setExpand(d.aabb, 3);
                f = (c.dyn = d.body.type == e.ZPP_Flags.id_BodyType_STATIC ? !1 : !d.body.component.sleeping) ? this.dtree : this.stree;
                f.inlined_insertLeaf(c);
                c.synced = !1;
                c = c.snext
            }
            for (; null != this.syncs;)
                if (c = function(a) {
                        var b = a.syncs;
                        a.syncs = b.snext;
                        b.snext = null;
                        return b
                    }(this), !c.moved && (c.moved = !1, f = c.shape, d = f.body, !d.component.sleeping)) {
                    var g = c.aabb,
                        l = null;
                    null != this.dtree.root && (this.dtree.root.next = l, l = this.dtree.root);
                    for (; null != l;) {
                        var h = function() {
                            var a = l;
                            l = a.next;
                            a.next = null;
                            return a
                        }(this);
                        if (h != c)
                            if (null == h.child1) {
                                if (d =
                                    h.shape, d.body != f.body && !(d.body.type == e.ZPP_Flags.id_BodyType_STATIC && f.body.type == e.ZPP_Flags.id_BodyType_STATIC) && g.intersect(h.aabb)) {
                                    var i, j;
                                    f.id < d.id ? (i = f.id, j = d.id) : (i = d.id, j = f.id);
                                    for (var m = f.pairs.length < d.pairs.length ? f : d, k = null, m = m.pairs.head; null != m;) {
                                        var o = m.elt;
                                        if (o.id == i && o.di == j) {
                                            k = o;
                                            break
                                        }
                                        m = m.next
                                    }
                                    null != k ? k.sleeping && (k.sleeping = !1, k.next = this.pairs, this.pairs = k, k.first = !0) : (null == A.ZPP_AABBPair.zpp_pool ? k = new A.ZPP_AABBPair : (k = A.ZPP_AABBPair.zpp_pool, A.ZPP_AABBPair.zpp_pool = k.next,
                                        k.next = null), null, k.n1 = c, k.n2 = h, k.id = i, k.di = j, k.next = this.pairs, this.pairs = k, k.first = !0, f.pairs.inlined_add(k), d.pairs.inlined_add(k))
                                }
                            } else g.intersect(h.aabb) && (null != h.child1 && (h.child1.next = l, l = h.child1), null != h.child2 && (h.child2.next = l, l = h.child2))
                    }
                    null != this.stree.root && (this.stree.root.next = l, l = this.stree.root);
                    for (; null != l;)
                        if (h = function() {
                                var a = l;
                                l = a.next;
                                a.next = null;
                                return a
                            }(this), h != c)
                            if (null == h.child1) {
                                if (d = h.shape, d.body != f.body && !(d.body.type == e.ZPP_Flags.id_BodyType_STATIC && f.body.type ==
                                        e.ZPP_Flags.id_BodyType_STATIC) && g.intersect(h.aabb)) {
                                    f.id < d.id ? (i = f.id, j = d.id) : (i = d.id, j = f.id);
                                    m = f.pairs.length < d.pairs.length ? f : d;
                                    k = null;
                                    for (m = m.pairs.head; null != m;) {
                                        o = m.elt;
                                        if (o.id == i && o.di == j) {
                                            k = o;
                                            break
                                        }
                                        m = m.next
                                    }
                                    null != k ? k.sleeping && (k.sleeping = !1, k.next = this.pairs, this.pairs = k, k.first = !0) : (null == A.ZPP_AABBPair.zpp_pool ? k = new A.ZPP_AABBPair : (k = A.ZPP_AABBPair.zpp_pool, A.ZPP_AABBPair.zpp_pool = k.next, k.next = null), null, k.n1 = c, k.n2 = h, k.id = i, k.di = j, k.next = this.pairs, this.pairs = k, k.first = !0, f.pairs.inlined_add(k),
                                        d.pairs.inlined_add(k))
                                }
                            } else g.intersect(h.aabb) && (null != h.child1 && (h.child1.next = l, l = h.child1), null != h.child2 && (h.child2.next = l, l = h.child2))
                }
            for (; null != this.moves;)
                if (c = function(a) {
                        var b = a.moves;
                        a.moves = b.mnext;
                        b.mnext = null;
                        return b
                    }(this), c.moved = !1, f = c.shape, d = f.body, !d.component.sleeping) {
                    g = c.aabb;
                    l = null;
                    null != this.dtree.root && (this.dtree.root.next = l, l = this.dtree.root);
                    for (; null != l;)
                        if (h = function() {
                                var a = l;
                                l = a.next;
                                a.next = null;
                                return a
                            }(this), h != c)
                            if (null == h.child1) {
                                if (d = h.shape, d.body != f.body &&
                                    !(d.body.type == e.ZPP_Flags.id_BodyType_STATIC && f.body.type == e.ZPP_Flags.id_BodyType_STATIC) && g.intersect(h.aabb)) {
                                    f.id < d.id ? (i = f.id, j = d.id) : (i = d.id, j = f.id);
                                    m = f.pairs.length < d.pairs.length ? f : d;
                                    k = null;
                                    for (m = m.pairs.head; null != m;) {
                                        o = m.elt;
                                        if (o.id == i && o.di == j) {
                                            k = o;
                                            break
                                        }
                                        m = m.next
                                    }
                                    null != k ? k.sleeping && (k.sleeping = !1, k.next = this.pairs, this.pairs = k, k.first = !0) : (null == A.ZPP_AABBPair.zpp_pool ? k = new A.ZPP_AABBPair : (k = A.ZPP_AABBPair.zpp_pool, A.ZPP_AABBPair.zpp_pool = k.next, k.next = null), null, k.n1 = c, k.n2 = h, k.id =
                                        i, k.di = j, k.next = this.pairs, this.pairs = k, k.first = !0, f.pairs.inlined_add(k), d.pairs.inlined_add(k))
                                }
                            } else g.intersect(h.aabb) && (null != h.child1 && (h.child1.next = l, l = h.child1), null != h.child2 && (h.child2.next = l, l = h.child2));
                    null != this.stree.root && (this.stree.root.next = l, l = this.stree.root);
                    for (; null != l;)
                        if (h = function() {
                                var a = l;
                                l = a.next;
                                a.next = null;
                                return a
                            }(this), h != c)
                            if (null == h.child1) {
                                if (d = h.shape, d.body != f.body && !(d.body.type == e.ZPP_Flags.id_BodyType_STATIC && f.body.type == e.ZPP_Flags.id_BodyType_STATIC) &&
                                    g.intersect(h.aabb)) {
                                    f.id < d.id ? (i = f.id, j = d.id) : (i = d.id, j = f.id);
                                    m = f.pairs.length < d.pairs.length ? f : d;
                                    k = null;
                                    for (m = m.pairs.head; null != m;) {
                                        o = m.elt;
                                        if (o.id == i && o.di == j) {
                                            k = o;
                                            break
                                        }
                                        m = m.next
                                    }
                                    null != k ? k.sleeping && (k.sleeping = !1, k.next = this.pairs, this.pairs = k, k.first = !0) : (null == A.ZPP_AABBPair.zpp_pool ? k = new A.ZPP_AABBPair : (k = A.ZPP_AABBPair.zpp_pool, A.ZPP_AABBPair.zpp_pool = k.next, k.next = null), null, k.n1 = c, k.n2 = h, k.id = i, k.di = j, k.next = this.pairs, this.pairs = k, k.first = !0, f.pairs.inlined_add(k), d.pairs.inlined_add(k))
                                }
                            } else g.intersect(h.aabb) &&
                                (null != h.child1 && (h.child1.next = l, l = h.child1), null != h.child2 && (h.child2.next = l, l = h.child2))
                }
            d = null;
            for (c = this.pairs; null != c;) !c.first && !c.n1.aabb.intersect(c.n2.aabb) ? (null == d ? this.pairs = c.next : d.next = c.next, c.n1.shape.pairs.inlined_try_remove(c), c.n2.shape.pairs.inlined_try_remove(c), f = c.next, null != c.arb && (c.arb.pair = null), c.arb = null, c.n1 = c.n2 = null, c.sleeping = !1, c.next = A.ZPP_AABBPair.zpp_pool, A.ZPP_AABBPair.zpp_pool = c, c = f) : (f = c.n1.shape, g = f.body, h = c.n2.shape, i = h.body, !c.first && (g.component.sleeping ||
                g.type == e.ZPP_Flags.id_BodyType_STATIC) && (i.component.sleeping || i.type == e.ZPP_Flags.id_BodyType_STATIC) ? (c.sleeping = !0, null == d ? this.pairs = c.next : d.next = c.next) : (c.first = !1, f.aabb.intersect(h.aabb) && (d = c.arb, c.arb = b ? a.narrowPhase(f, h, g.type != e.ZPP_Flags.id_BodyType_DYNAMIC || i.type != e.ZPP_Flags.id_BodyType_DYNAMIC, c.arb, !1) : a.continuousEvent(f, h, g.type != e.ZPP_Flags.id_BodyType_DYNAMIC || i.type != e.ZPP_Flags.id_BodyType_DYNAMIC, c.arb, !1), null == c.arb ? null != d && (d.pair = null) : c.arb.pair = c), d = c), c = c.next)
        },
        sync_broadphase: function() {
            this.space.validation();
            if (null != this.syncs)
                if (null == this.moves) {
                    for (var a = this.syncs; null != a;) {
                        var b = a.shape;
                        if (a.first_sync) a.first_sync = !1;
                        else {
                            var c = a.dyn ? this.dtree : this.stree;
                            c.inlined_removeLeaf(a)
                        }
                        c = a.aabb;
                        !this.space.continuous && b.zip_aabb && null != b.body && (b.zip_aabb = !1, b.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? b.circle.__validate_aabb() : b.polygon.__validate_aabb());
                        c.setExpand(b.aabb, 3);
                        c = (a.dyn = b.body.type == e.ZPP_Flags.id_BodyType_STATIC ? !1 : !b.body.component.sleeping) ?
                            this.dtree : this.stree;
                        c.inlined_insertLeaf(a);
                        a.synced = !1;
                        a.moved = !0;
                        a.mnext = a.snext;
                        a.snext = null;
                        a = a.mnext
                    }
                    a = this.syncs;
                    this.syncs = this.moves;
                    this.moves = a
                } else
                    for (; null != this.syncs;) a = this.syncs, this.syncs = a.snext, a.snext = null, b = a.shape, a.first_sync ? a.first_sync = !1 : (c = a.dyn ? this.dtree : this.stree, c.inlined_removeLeaf(a)), c = a.aabb, !this.space.continuous && b.zip_aabb && null != b.body && (b.zip_aabb = !1, b.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? b.circle.__validate_aabb() : b.polygon.__validate_aabb()), c.setExpand(b.aabb,
                        3), c = (a.dyn = b.body.type == e.ZPP_Flags.id_BodyType_STATIC ? !1 : !b.body.component.sleeping) ? this.dtree : this.stree, c.inlined_insertLeaf(a), a.synced = !1, a.moved || (a.moved = !0, a.mnext = this.moves, this.moves = a)
        },
        __sync: function(a) {
            var b = a.node;
            if (!b.synced && (!this.space.continuous && a.zip_aabb && null != a.body && (a.zip_aabb = !1, a.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? a.circle.__validate_aabb() : a.polygon.__validate_aabb()), b.dyn != (a.body.type == e.ZPP_Flags.id_BodyType_STATIC ? !1 : !a.body.component.sleeping) || !b.aabb.contains(a.aabb))) b.synced = !0, b.snext = this.syncs, this.syncs = b
        },
        __remove: function(a) {
            var b = a.node;
            b.first_sync || (b.dyn ? this.dtree.removeLeaf(b) : this.stree.removeLeaf(b));
            a.node = null;
            if (b.synced) {
                for (var c = null, d = this.syncs; null != d && !(d == b);) {
                    c = d;
                    d = d.snext
                }
                null == c ? this.syncs = d.snext : c.snext = d.snext;
                d.snext = null;
                b.synced = !1
            }
            if (b.moved) {
                c = null;
                for (d = this.moves; null != d && !(d == b);) {
                    c = d;
                    d = d.mnext
                }
                null == c ? this.moves = d.mnext : c.mnext = d.mnext;
                d.mnext = null;
                b.moved = !1
            }
            c = null;
            for (d = this.pairs; null != d;) {
                var e = d.next;
                d.n1 == b || d.n2 == b ? (null ==
                    c ? this.pairs = e : c.next = e, null != d.arb && (d.arb.pair = null), d.arb = null, d.n1.shape.pairs.remove(d), d.n2.shape.pairs.remove(d), d.n1 = d.n2 = null, d.sleeping = !1, d.next = A.ZPP_AABBPair.zpp_pool, A.ZPP_AABBPair.zpp_pool = d) : c = d;
                d = e
            }
            for (; null != a.pairs.head;) c = a.pairs.pop_unsafe(), c.n1 == b ? c.n2.shape.pairs.remove(c) : c.n1.shape.pairs.remove(c), null != c.arb && (c.arb.pair = null), c.arb = null, d = c, d.n1 = d.n2 = null, d.sleeping = !1, d.next = A.ZPP_AABBPair.zpp_pool, A.ZPP_AABBPair.zpp_pool = d;
            d = b;
            d.free();
            d.next = A.ZPP_AABBNode.zpp_pool;
            A.ZPP_AABBNode.zpp_pool = d
        },
        __insert: function(a) {
            var b;
            null == A.ZPP_AABBNode.zpp_pool ? b = new A.ZPP_AABBNode : (b = A.ZPP_AABBNode.zpp_pool, A.ZPP_AABBNode.zpp_pool = b.next, b.next = null);
            null == q.ZPP_AABB.zpp_pool ? b.aabb = new q.ZPP_AABB : (b.aabb = q.ZPP_AABB.zpp_pool, q.ZPP_AABB.zpp_pool = b.aabb.next, b.aabb.next = null);
            null;
            b.moved = !1;
            b.synced = !1;
            b.first_sync = !1;
            b.shape = a;
            a.node = b;
            b.synced = !0;
            b.first_sync = !0;
            b.snext = this.syncs;
            this.syncs = b
        },
        __class__: A.ZPP_DynAABBPhase
    });
    A.ZPP_Island = function() {
        this.waket = 0;
        this.sleep = !1;
        this.comps = null;
        this.length = 0;
        this._inuse = this.modified = this.pushmod = !1;
        this.next = null;
        this.comps = new e.ZNPList_ZPP_Component
    };
    j["zpp_nape.space.ZPP_Island"] = A.ZPP_Island;
    A.ZPP_Island.__name__ = ["zpp_nape", "space", "ZPP_Island"];
    A.ZPP_Island.prototype = {
        inlined_pop_unsafe: function() {
            var a = this.next;
            this.pop();
            return a
        },
        inlined_pop: function() {
            var a = this.next;
            this.next = a.next;
            a._inuse = !1;
            null == this.next && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_add: function(a) {
            a._inuse = !0;
            a.next = this.next;
            this.next = a;
            this.modified = !0;
            this.length++;
            return a
        },
        __class__: A.ZPP_Island
    };
    A.ZPP_Component = function() {
        this.woken = !1;
        this.waket = 0;
        this.sleeping = !1;
        this.body = this.constraint = this.island = null;
        this.isBody = !1;
        this.rank = 0;
        this.next = this.parent = null;
        this.sleeping = !1;
        this.island = null;
        this.parent = this;
        this.rank = 0;
        this.woken = !1
    };
    j["zpp_nape.space.ZPP_Component"] = A.ZPP_Component;
    A.ZPP_Component.__name__ = ["zpp_nape", "space", "ZPP_Component"];
    A.ZPP_Component.prototype = {
        __class__: A.ZPP_Component
    };
    A.ZPP_CallbackSet = function() {
        this.freed = this.lazydel = !1;
        this.length = 0;
        this._inuse = this.modified = this.pushmod = !1;
        this.int1 = this.int2 = this.next = null;
        this.id = this.di = 0;
        this.arbiters = new e.ZNPList_ZPP_Arbiter
    };
    j["zpp_nape.space.ZPP_CallbackSet"] = A.ZPP_CallbackSet;
    A.ZPP_CallbackSet.__name__ = ["zpp_nape", "space", "ZPP_CallbackSet"];
    A.ZPP_CallbackSet.get = function(a, b) {
        var c;
        null == A.ZPP_CallbackSet.zpp_pool ? c = new A.ZPP_CallbackSet : (c = A.ZPP_CallbackSet.zpp_pool, A.ZPP_CallbackSet.zpp_pool = c.next, c.next = null);
        c.freed = !1;
        c.lazydel = !1;
        c.COLLISIONstate = e.ZPP_Flags.id_PreFlag_ACCEPT;
        c.COLLISIONstamp = 0;
        c.SENSORstate = e.ZPP_Flags.id_PreFlag_ACCEPT;
        c.SENSORstamp = 0;
        c.FLUIDstate = e.ZPP_Flags.id_PreFlag_ACCEPT;
        c.FLUIDstamp = 0;
        a.id < b.id ? (c.int1 = a, c.int2 = b) : (c.int1 = b, c.int2 = a);
        c.id = c.int1.id;
        c.di = c.int2.id;
        return c
    };
    A.ZPP_CallbackSet.prototype = {
        sleeping: function() {
            var a;
            a = !0;
            for (var b = this.arbiters.head; null != b;)
                if (b.elt.sleeping) b = b.next;
                else {
                    a = !1;
                    break
                }
            return a
        },
        empty_arb: function(a) {
            var b;
            b = !0;
            for (var c = this.arbiters.head; null !=
                c;)
                if (0 == (c.elt.type & a)) c = c.next;
                else {
                    b = !1;
                    break
                }
            return b
        },
        remove_arb: function(a) {
            this.arbiters.inlined_try_remove(a)
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.next, this.next = c = b.next, null == this.next && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            b._inuse = !1;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        inlined_pop_unsafe: function() {
            var a = this.next;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a =
                this.next;
            this.next = a.next;
            a._inuse = !1;
            null == this.next && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_add: function(a) {
            a._inuse = !0;
            a.next = this.next;
            this.next = a;
            this.modified = !0;
            this.length++;
            return a
        },
        __class__: A.ZPP_CallbackSet
    };
    A.ZPP_CbSetManager = function(a) {
        this.cbsets = this.space = null;
        null == e.ZPP_Set_ZPP_CbSet.zpp_pool ? this.cbsets = new e.ZPP_Set_ZPP_CbSet : (this.cbsets = e.ZPP_Set_ZPP_CbSet.zpp_pool, e.ZPP_Set_ZPP_CbSet.zpp_pool = this.cbsets.next, this.cbsets.next =
            null);
        null;
        this.cbsets.lt = H.ZPP_CbSet.setlt;
        this.space = a
    };
    j["zpp_nape.space.ZPP_CbSetManager"] = A.ZPP_CbSetManager;
    A.ZPP_CbSetManager.__name__ = ["zpp_nape", "space", "ZPP_CbSetManager"];
    A.ZPP_CbSetManager.prototype = {
        pair: function(a, b) {
            for (var c = null, d = (a.cbpairs.length < b.cbpairs.length ? a.cbpairs : b.cbpairs).head; null != d;) {
                var e = d.elt;
                if (e.a == a && e.b == b || e.a == b && e.b == a) {
                    c = e;
                    break
                }
                d = d.next
            }
            null == c && (c = H.ZPP_CbSetPair.get(a, b), a.cbpairs.add(c), b != a && b.cbpairs.add(c));
            c.zip_listeners && (c.zip_listeners = !1, c.__validate());
            return c
        },
        validate: function() {
            if (!this.cbsets.empty()) {
                for (var a = this.cbsets.parent; null != a.prev;) a = a.prev;
                for (; null != a;)
                    if (a.data.validate(), null != a.next)
                        for (a = a.next; null != a.prev;) a = a.prev;
                    else {
                        for (; null != a.parent && a == a.parent.next;) a = a.parent;
                        a = a.parent
                    }
            }
        },
        clear: function() {},
        remove: function(a) {
            for (this.cbsets.remove(a); null != a.cbpairs.head;) {
                var b = a.cbpairs.pop_unsafe();
                b.a != b.b && (a == b.a ? b.b.cbpairs.remove(b) : b.a.cbpairs.remove(b));
                b.a = b.b = null;
                b.listeners.clear();
                b.next = H.ZPP_CbSetPair.zpp_pool;
                H.ZPP_CbSetPair.zpp_pool = b
            }
            a.manager = null
        },
        get: function(a) {
            if (null == a.head) return null;
            var b;
            null == H.ZPP_CbSet.zpp_pool ? b = new H.ZPP_CbSet : (b = H.ZPP_CbSet.zpp_pool, H.ZPP_CbSet.zpp_pool = b.next, b.next = null);
            null;
            var c = b.cbTypes;
            b.cbTypes = a;
            var d = this.cbsets.find_weak(b);
            null != d ? a = d.data : (a = H.ZPP_CbSet.get(a), this.cbsets.insert(a), a.manager = this);
            b.cbTypes = c;
            b.free();
            b.next = H.ZPP_CbSet.zpp_pool;
            H.ZPP_CbSet.zpp_pool = b;
            return a
        },
        __class__: A.ZPP_CbSetManager
    };
    A.ZPP_Space = function(a, b) {
        this.precb = this.prelisteners =
            null;
        this.continuous = !1;
        this.toiEvents = null;
        this.pre_dt = 0;
        this.c_arbiters_true = this.c_arbiters_false = this.f_arbiters = this.s_arbiters = this.wrap_arbiters = this.live = this.wrap_live = this.live_constraints = this.wrap_livecon = this.staticsleep = this.islands = this.listeners = this.wrap_listeners = this.callbacks = this.callbackset_list = this.cbsets = null;
        this.sortcontacts = !1;
        this.time = 0;
        this.midstep = !1;
        this.global_lin_drag = this.global_ang_drag = this.stamp = 0;
        this.wrap_gravity = this.bodies = this.wrap_bodies = this.compounds =
            this.wrap_compounds = this.constraints = this.wrap_constraints = this.kinematics = this.bphase = this.__static = null;
        this.gravityx = this.gravityy = 0;
        this.outer = this.userData = null;
        this.toiEvents = new e.ZNPList_ZPP_ToiEvent;
        this.global_ang_drag = this.global_lin_drag = 0.015;
        this.precb = new v.PreCallback;
        this.precb.zpp_inner = new H.ZPP_Callback;
        this.sortcontacts = !0;
        this.pre_dt = 0;
        var c;
        if (!(c = null == b)) null == e.ZPP_Flags.Broadphase_DYNAMIC_AABB_TREE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.Broadphase_DYNAMIC_AABB_TREE = new ra.Broadphase,
            e.ZPP_Flags.internal = !1), c = b == e.ZPP_Flags.Broadphase_DYNAMIC_AABB_TREE;
        c ? this.bphase = new A.ZPP_DynAABBPhase(this) : (null == e.ZPP_Flags.Broadphase_SWEEP_AND_PRUNE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.Broadphase_SWEEP_AND_PRUNE = new ra.Broadphase, e.ZPP_Flags.internal = !1), b == e.ZPP_Flags.Broadphase_SWEEP_AND_PRUNE && (this.bphase = new A.ZPP_SweepPhase(this)));
        this.time = 0;
        null != a ? (this.gravityx = a.x, this.gravityy = a.y) : this.gravityy = this.gravityx = 0;
        this.bodies = new e.ZNPList_ZPP_Body;
        this.wrap_bodies = e.ZPP_BodyList.get(this.bodies);
        this.wrap_bodies.zpp_inner.adder = w(this, this.bodies_adder);
        this.wrap_bodies.zpp_inner.subber = w(this, this.bodies_subber);
        this.compounds = new e.ZNPList_ZPP_Compound;
        this.wrap_compounds = e.ZPP_CompoundList.get(this.compounds);
        this.wrap_compounds.zpp_inner.adder = w(this, this.compounds_adder);
        this.wrap_compounds.zpp_inner.subber = w(this, this.compounds_subber);
        this.kinematics = new e.ZNPList_ZPP_Body;
        this.c_arbiters_true = new e.ZNPList_ZPP_ColArbiter;
        this.c_arbiters_false = new e.ZNPList_ZPP_ColArbiter;
        this.f_arbiters =
            new e.ZNPList_ZPP_FluidArbiter;
        this.s_arbiters = new e.ZNPList_ZPP_SensorArbiter;
        this.islands = new A.ZPP_Island;
        this.live = new e.ZNPList_ZPP_Body;
        this.wrap_live = e.ZPP_BodyList.get(this.live, !0);
        this.staticsleep = new e.ZNPList_ZPP_Body;
        this.constraints = new e.ZNPList_ZPP_Constraint;
        this.wrap_constraints = e.ZPP_ConstraintList.get(this.constraints);
        this.wrap_constraints.zpp_inner.adder = w(this, this.constraints_adder);
        this.wrap_constraints.zpp_inner.subber = w(this, this.constraints_subber);
        this.live_constraints =
            new e.ZNPList_ZPP_Constraint;
        this.wrap_livecon = e.ZPP_ConstraintList.get(this.live_constraints, !0);
        this.__static = O.ZPP_Body.__static();
        this.__static.zpp_inner.space = this;
        this.callbacks = new H.ZPP_Callback;
        this.midstep = !1;
        this.listeners = new e.ZNPList_ZPP_Listener;
        this.wrap_listeners = e.ZPP_ListenerList.get(this.listeners);
        this.wrap_listeners.zpp_inner.adder = w(this, this.listeners_adder);
        this.wrap_listeners.zpp_inner.subber = w(this, this.listeners_subber);
        this.callbackset_list = new A.ZPP_CallbackSet;
        this.mrca1 =
            new e.ZNPList_ZPP_Interactor;
        this.mrca2 = new e.ZNPList_ZPP_Interactor;
        this.prelisteners = new e.ZNPList_ZPP_InteractionListener;
        this.cbsets = new A.ZPP_CbSetManager(this)
    };
    j["zpp_nape.space.ZPP_Space"] = A.ZPP_Space;
    A.ZPP_Space.__name__ = ["zpp_nape", "space", "ZPP_Space"];
    A.ZPP_Space.prototype = {
        inlined_MRCA_chains: function(a, b) {
            this.mrca1.inlined_clear();
            this.mrca2.inlined_clear();
            null != a.cbSet && this.mrca1.inlined_add(a);
            null != a.body.cbSet && this.mrca1.inlined_add(a.body);
            null != b.cbSet && this.mrca2.inlined_add(b);
            null != b.body.cbSet && this.mrca2.inlined_add(b.body);
            for (var c = a.body.compound, d = b.body.compound; c != d;)(null == c ? 0 : c.depth) < (null == d ? 0 : d.depth) ? (null != d.cbSet && this.mrca2.inlined_add(d), d = d.compound) : (null != c.cbSet && this.mrca1.inlined_add(c), c = c.compound)
        },
        MRCA_chains: function(a, b) {
            this.inlined_MRCA_chains(a, b)
        },
        narrowPhase: function(a, b, c, d, f) {
            var g = this,
                h = null,
                i = a.body,
                j = b.body,
                k = this.interactionType(a, b, i, j);
            if (-1 != k) {
                var m, o;
                a.type > b.type ? (m = b, o = a) : a.type == b.type ? a.id < b.id ? (m = a, o = b) : (o = a, m = b) : (m =
                    a, o = b);
                var p = m == b;
                if (0 == k) {
                    var d = null == d ? function() {
                            for (var a = null, b = (i.arbiters.length < j.arbiters.length ? i : j).arbiters.head; null != b;) {
                                var c = b.elt;
                                if (c.id == m.id && c.di == o.id) {
                                    a = c;
                                    break
                                }
                                b = b.next
                            }
                            return a
                        }(this) : d,
                        t = null == d,
                        r, u = !1;
                    t ? (null == D.ZPP_FluidArbiter.zpp_pool ? r = new D.ZPP_FluidArbiter : (r = D.ZPP_FluidArbiter.zpp_pool, D.ZPP_FluidArbiter.zpp_pool = r.next, r.next = null), null) : null == d.fluidarb ? (d.cleared = !0, d.b1.arbiters.inlined_try_remove(d), d.b2.arbiters.inlined_try_remove(d), null != d.pair && (d.pair.arb =
                        null, d.pair = null), d.active = !1, this.f_arbiters.modified = !0, null == D.ZPP_FluidArbiter.zpp_pool ? r = new D.ZPP_FluidArbiter : (r = D.ZPP_FluidArbiter.zpp_pool, D.ZPP_FluidArbiter.zpp_pool = r.next, r.next = null), null, u = t = r.intchange = !0) : r = d.fluidarb;
                    h = function(c) {
                        var d = e.ZPP_Flags.id_InteractionType_FLUID;
                        return t || r.stamp != c.stamp || f ? function(c) {
                            r.stamp = c.stamp;
                            return q.ZPP_Collide.flowCollide(m, o, r) ? function(c) {
                                    t ? (r.b1 = a.body, r.ws1 = a, r.b2 = b.body, r.ws2 = b, r.id = m.id, r.di = o.id, r.b1.arbiters.inlined_add(r), r.b2.arbiters.inlined_add(r),
                                        r.active = !0, r.present = 0, r.cleared = !1, r.sleeping = !1, r.fresh = !1, r.presentable = !1, r.nx = 0, r.ny = 1, r.dampx = 0, r.dampy = 0, r.adamp = 0, c.f_arbiters.inlined_add(r), r.fresh = !u) : r.fresh = r.up_stamp < c.stamp - 1 || r.endGenerated == c.stamp && f;
                                    r.up_stamp = r.stamp;
                                    if (r.fresh || 0 == (r.immState & e.ZPP_Flags.id_ImmState_ALWAYS)) {
                                        r.immState = e.ZPP_Flags.id_ImmState_ACCEPT;
                                        var h = !1;
                                        c.inlined_MRCA_chains(a, b);
                                        for (var l = c.mrca1.head; null != l;) {
                                            for (var i = l.elt, j = c.mrca2.head; null != j;) {
                                                var k = j.elt,
                                                    s = i.cbSet,
                                                    p = k.cbSet;
                                                if (null != s.manager.pair(s,
                                                        p).listeners.head) {
                                                    var q = null,
                                                        F = null;
                                                    c.prelisteners.inlined_clear();
                                                    s.manager.pair(s, p).forall(e.ZPP_Flags.id_CbEvent_PRE, function(a) {
                                                        return function(b) {
                                                            0 != (b.itype & d) && (a[0] = g.prelisteners.inlined_insert(a[0], b), h = h || !b.pure)
                                                        }
                                                    }([null]));
                                                    if (null != c.prelisteners.head)
                                                        if (q = O.ZPP_Interactor.get(i, k), null == q && (F = A.ZPP_CallbackSet.get(i, k), c.add_callbackset(F)), null == q || (q.FLUIDstamp != c.stamp || f) && 0 == (q.FLUIDstate & e.ZPP_Flags.id_ImmState_ALWAYS)) {
                                                            null != F && (q = F);
                                                            if (null != q)
                                                                for (k = c.prelisteners.head; null !=
                                                                    k;) p = k.elt, p.itype == e.ZPP_Flags.id_InteractionType_ANY && (q.COLLISIONstamp = c.stamp, q.SENSORstamp = c.stamp), q.FLUIDstamp = c.stamp, k = k.next;
                                                            s = r.active;
                                                            r.active = !0;
                                                            c.precb.zpp_inner.pre_arbiter = r;
                                                            c.precb.zpp_inner.set = q;
                                                            for (k = c.prelisteners.head; null != k;) {
                                                                p = k.elt;
                                                                c.precb.zpp_inner.listener = p;
                                                                O.ZPP_Interactor.int_callback(q, p, c.precb.zpp_inner);
                                                                c.precb.zpp_inner.pre_swapped = i != c.precb.zpp_inner.int1;
                                                                F = p.handlerp(c.precb);
                                                                if (null != F) {
                                                                    var p = r,
                                                                        w = F;
                                                                    null == e.ZPP_Flags.PreFlag_ACCEPT && (e.ZPP_Flags.internal = !0,
                                                                        e.ZPP_Flags.PreFlag_ACCEPT = new v.PreFlag, e.ZPP_Flags.internal = !1);
                                                                    w == e.ZPP_Flags.PreFlag_ACCEPT ? F = e.ZPP_Flags.id_ImmState_ACCEPT | e.ZPP_Flags.id_ImmState_ALWAYS : (w = F, null == e.ZPP_Flags.PreFlag_ACCEPT_ONCE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_ACCEPT_ONCE = new v.PreFlag, e.ZPP_Flags.internal = !1), w == e.ZPP_Flags.PreFlag_ACCEPT_ONCE ? F = e.ZPP_Flags.id_ImmState_ACCEPT : (null == e.ZPP_Flags.PreFlag_IGNORE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_IGNORE = new v.PreFlag, e.ZPP_Flags.internal = !1), F = F == e.ZPP_Flags.PreFlag_IGNORE ?
                                                                        e.ZPP_Flags.id_ImmState_IGNORE | e.ZPP_Flags.id_ImmState_ALWAYS : e.ZPP_Flags.id_ImmState_IGNORE));
                                                                    p.immState = F
                                                                }
                                                                k = k.next
                                                            }
                                                            r.active = s;
                                                            if (null != q)
                                                                for (k = c.prelisteners.head; null != k;) p = k.elt, p.itype == e.ZPP_Flags.id_InteractionType_ANY && (q.COLLISIONstate = r.immState, q.SENSORstate = r.immState), q.FLUIDstate = r.immState, k = k.next
                                                        } else null == q ? 0 == (r.immState & e.ZPP_Flags.id_ImmState_ALWAYS) && (r.immState = e.ZPP_Flags.id_ImmState_ACCEPT) : r.immState = q.FLUIDstate
                                                }
                                                j = j.next
                                            }
                                            l = l.next
                                        }
                                        h && 0 == (r.immState & e.ZPP_Flags.id_ImmState_ALWAYS) &&
                                            (r.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (l = r.b1, l.world || (l.component.waket = c.stamp + (c.midstep ? 0 : 1), l.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (l.kinematicDelaySleep = !0), l.component.sleeping && c.really_wake(l, !1))), r.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (l = r.b2, l.world || (l.component.waket = c.stamp + (c.midstep ? 0 : 1), l.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (l.kinematicDelaySleep = !0), l.component.sleeping && c.really_wake(l, !1))))
                                    }
                                    0 != (r.immState & e.ZPP_Flags.id_ImmState_ACCEPT) && (r.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC &&
                                        r.b1.component.sleeping && (l = r.b1, l.world || (l.component.waket = c.stamp + (c.midstep ? 0 : 1), l.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (l.kinematicDelaySleep = !0), l.component.sleeping && c.really_wake(l, !1))), r.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && r.b2.component.sleeping && (l = r.b2, l.world || (l.component.waket = c.stamp + (c.midstep ? 0 : 1), l.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (l.kinematicDelaySleep = !0), l.component.sleeping && c.really_wake(l, !1))));
                                    r.sleeping && (r.sleeping = !1, c.f_arbiters.inlined_add(r));
                                    return r
                                }(c) :
                                t ? function() {
                                    var a = r;
                                    a.next = D.ZPP_FluidArbiter.zpp_pool;
                                    D.ZPP_FluidArbiter.zpp_pool = a;
                                    return null
                                }(c) : r
                        }(c) : r
                    }(this)
                } else if (1 == k) {
                    var w = c ? this.c_arbiters_true : this.c_arbiters_false,
                        d = null == d ? function() {
                            for (var a = null, b = (i.arbiters.length < j.arbiters.length ? i : j).arbiters.head; null != b;) {
                                var c = b.elt;
                                if (c.id == m.id && c.di == o.id) {
                                    a = c;
                                    break
                                }
                                b = b.next
                            }
                            return a
                        }(this) : d,
                        t = null == d,
                        u = !1;
                    t ? (null == D.ZPP_ColArbiter.zpp_pool ? r = new D.ZPP_ColArbiter : (r = D.ZPP_ColArbiter.zpp_pool, D.ZPP_ColArbiter.zpp_pool = r.next, r.next =
                        null), null, r.stat = c) : null == d.colarb ? (d.cleared = !0, d.b1.arbiters.inlined_try_remove(d), d.b2.arbiters.inlined_try_remove(d), null != d.pair && (d.pair.arb = null, d.pair = null), d.active = !1, this.f_arbiters.modified = !0, null == D.ZPP_ColArbiter.zpp_pool ? r = new D.ZPP_ColArbiter : (r = D.ZPP_ColArbiter.zpp_pool, D.ZPP_ColArbiter.zpp_pool = r.next, r.next = null), null, r.intchange = !0, r.stat = c, u = t = !0) : (r = d.colarb, p = m != r.s1, r.stat != c && (r.stat = c, r.sleeping || ((c ? this.c_arbiters_false : this.c_arbiters_true).remove(r), w.add(r))));
                    h = function(c) {
                        var d =
                            e.ZPP_Flags.id_InteractionType_COLLISION;
                        return t || r.stamp != c.stamp || f ? function(c) {
                            r.stamp = c.stamp;
                            return q.ZPP_Collide.contactCollide(m, o, r, p) ? function(c) {
                                t ? (r.b1 = a.body, r.ws1 = a, r.b2 = b.body, r.ws2 = b, r.id = m.id, r.di = o.id, r.b1.arbiters.inlined_add(r), r.b2.arbiters.inlined_add(r), r.active = !0, r.present = 0, r.cleared = !1, r.sleeping = !1, r.fresh = !1, r.presentable = !1, r.s1 = a, r.s2 = b, r.userdef_restitution || (r.restitution = r.s1.material.elasticity <= Math.NEGATIVE_INFINITY || r.s2.material.elasticity <= Math.NEGATIVE_INFINITY ?
                                    0 : r.s1.material.elasticity >= Math.POSITIVE_INFINITY || r.s2.material.elasticity >= Math.POSITIVE_INFINITY ? 1 : (r.s1.material.elasticity + r.s2.material.elasticity) / 2, 0 > r.restitution && (r.restitution = 0), 1 < r.restitution && (r.restitution = 1)), r.userdef_dyn_fric || (r.dyn_fric = Math.sqrt(r.s1.material.dynamicFriction * r.s2.material.dynamicFriction)), r.userdef_stat_fric || (r.stat_fric = Math.sqrt(r.s1.material.staticFriction * r.s2.material.staticFriction)), r.userdef_rfric || (r.rfric = Math.sqrt(r.s1.material.rollingFriction *
                                    r.s2.material.rollingFriction)), w.inlined_add(r), r.fresh = !u) : r.fresh = r.up_stamp < c.stamp - 1 || r.endGenerated == c.stamp && f;
                                r.up_stamp = r.stamp;
                                if (r.fresh || 0 == (r.immState & e.ZPP_Flags.id_ImmState_ALWAYS)) {
                                    r.immState = e.ZPP_Flags.id_ImmState_ACCEPT;
                                    var h = !1;
                                    c.inlined_MRCA_chains(a, b);
                                    for (var l = c.mrca1.head; null != l;) {
                                        for (var i = l.elt, j = c.mrca2.head; null != j;) {
                                            var k = j.elt,
                                                s = i.cbSet,
                                                p = k.cbSet;
                                            if (null != s.manager.pair(s, p).listeners.head) {
                                                var q = null,
                                                    F = null;
                                                c.prelisteners.inlined_clear();
                                                s.manager.pair(s, p).forall(e.ZPP_Flags.id_CbEvent_PRE,
                                                    function(a) {
                                                        return function(b) {
                                                            0 != (b.itype & d) && (a[0] = g.prelisteners.inlined_insert(a[0], b), h = h || !b.pure)
                                                        }
                                                    }([null]));
                                                if (null != c.prelisteners.head)
                                                    if (q = O.ZPP_Interactor.get(i, k), null == q && (F = A.ZPP_CallbackSet.get(i, k), c.add_callbackset(F)), null == q || (q.COLLISIONstamp != c.stamp || f) && 0 == (q.COLLISIONstate & e.ZPP_Flags.id_ImmState_ALWAYS)) {
                                                        null != F && (q = F);
                                                        if (null != q)
                                                            for (k = c.prelisteners.head; null != k;) p = k.elt, p.itype == e.ZPP_Flags.id_InteractionType_ANY ? (q.COLLISIONstamp = c.stamp, q.SENSORstamp = c.stamp, q.FLUIDstamp =
                                                                c.stamp) : q.COLLISIONstamp = c.stamp, k = k.next;
                                                        s = r.active;
                                                        r.active = !0;
                                                        r.cleanupContacts();
                                                        c.precb.zpp_inner.pre_arbiter = r;
                                                        c.precb.zpp_inner.set = q;
                                                        for (k = c.prelisteners.head; null != k;) {
                                                            p = k.elt;
                                                            c.precb.zpp_inner.listener = p;
                                                            O.ZPP_Interactor.int_callback(q, p, c.precb.zpp_inner);
                                                            c.precb.zpp_inner.pre_swapped = i != c.precb.zpp_inner.int1;
                                                            F = p.handlerp(c.precb);
                                                            if (null != F) {
                                                                var p = r,
                                                                    x = F;
                                                                null == e.ZPP_Flags.PreFlag_ACCEPT && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_ACCEPT = new v.PreFlag, e.ZPP_Flags.internal = !1);
                                                                x == e.ZPP_Flags.PreFlag_ACCEPT ?
                                                                    F = e.ZPP_Flags.id_ImmState_ACCEPT | e.ZPP_Flags.id_ImmState_ALWAYS : (x = F, null == e.ZPP_Flags.PreFlag_ACCEPT_ONCE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_ACCEPT_ONCE = new v.PreFlag, e.ZPP_Flags.internal = !1), x == e.ZPP_Flags.PreFlag_ACCEPT_ONCE ? F = e.ZPP_Flags.id_ImmState_ACCEPT : (null == e.ZPP_Flags.PreFlag_IGNORE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_IGNORE = new v.PreFlag, e.ZPP_Flags.internal = !1), F = F == e.ZPP_Flags.PreFlag_IGNORE ? e.ZPP_Flags.id_ImmState_IGNORE | e.ZPP_Flags.id_ImmState_ALWAYS : e.ZPP_Flags.id_ImmState_IGNORE));
                                                                p.immState = F
                                                            }
                                                            k = k.next
                                                        }
                                                        r.active = s;
                                                        if (null != q)
                                                            for (k = c.prelisteners.head; null != k;) p = k.elt, p.itype == e.ZPP_Flags.id_InteractionType_ANY ? (q.COLLISIONstate = r.immState, q.SENSORstate = r.immState, q.FLUIDstate = r.immState) : q.COLLISIONstate = r.immState, k = k.next
                                                    } else null == q ? 0 == (r.immState & e.ZPP_Flags.id_ImmState_ALWAYS) && (r.immState = e.ZPP_Flags.id_ImmState_ACCEPT) : r.immState = q.COLLISIONstate
                                            }
                                            j = j.next
                                        }
                                        l = l.next
                                    }
                                    h && 0 == (r.immState & e.ZPP_Flags.id_ImmState_ALWAYS) && (r.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (l = r.b1,
                                        l.world || (l.component.waket = c.stamp + (c.midstep ? 0 : 1), l.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (l.kinematicDelaySleep = !0), l.component.sleeping && c.really_wake(l, !1))), r.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (l = r.b2, l.world || (l.component.waket = c.stamp + (c.midstep ? 0 : 1), l.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (l.kinematicDelaySleep = !0), l.component.sleeping && c.really_wake(l, !1))))
                                }
                                0 != (r.immState & e.ZPP_Flags.id_ImmState_ACCEPT) && (r.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && r.b1.component.sleeping &&
                                    (l = r.b1, l.world || (l.component.waket = c.stamp + (c.midstep ? 0 : 1), l.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (l.kinematicDelaySleep = !0), l.component.sleeping && c.really_wake(l, !1))), r.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && r.b2.component.sleeping && (l = r.b2, l.world || (l.component.waket = c.stamp + (c.midstep ? 0 : 1), l.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (l.kinematicDelaySleep = !0), l.component.sleeping && c.really_wake(l, !1))));
                                r.sleeping && (r.sleeping = !1, w.inlined_add(r));
                                return r
                            }(c) : t ? function() {
                                var a = r;
                                a.userdef_dyn_fric = !1;
                                a.userdef_stat_fric = !1;
                                a.userdef_restitution = !1;
                                a.userdef_rfric = !1;
                                a.__ref_edge1 = a.__ref_edge2 = null;
                                a.next = D.ZPP_ColArbiter.zpp_pool;
                                D.ZPP_ColArbiter.zpp_pool = a;
                                return null
                            }(c) : r
                        }(c) : r
                    }(this)
                } else d = null == d ? function() {
                    for (var a = null, b = (i.arbiters.length < j.arbiters.length ? i : j).arbiters.head; null != b;) {
                        var c = b.elt;
                        if (c.id == m.id && c.di == o.id) {
                            a = c;
                            break
                        }
                        b = b.next
                    }
                    return a
                }(this) : d, t = null == d, u = !1, t ? (null == D.ZPP_SensorArbiter.zpp_pool ? r = new D.ZPP_SensorArbiter : (r = D.ZPP_SensorArbiter.zpp_pool, D.ZPP_SensorArbiter.zpp_pool =
                    r.next, r.next = null), null) : null == d.sensorarb ? (d.cleared = !0, d.b1.arbiters.inlined_try_remove(d), d.b2.arbiters.inlined_try_remove(d), null != d.pair && (d.pair.arb = null, d.pair = null), d.active = !1, this.f_arbiters.modified = !0, null == D.ZPP_SensorArbiter.zpp_pool ? r = new D.ZPP_SensorArbiter : (r = D.ZPP_SensorArbiter.zpp_pool, D.ZPP_SensorArbiter.zpp_pool = r.next, r.next = null), null, u = t = r.intchange = !0) : r = d.sensorarb, h = function(c) {
                    var d = e.ZPP_Flags.id_InteractionType_SENSOR;
                    return t || r.stamp != c.stamp || f ? function(c) {
                        r.stamp =
                            c.stamp;
                        return q.ZPP_Collide.testCollide(m, o) ? function(c) {
                            t ? (r.b1 = a.body, r.ws1 = a, r.b2 = b.body, r.ws2 = b, r.id = m.id, r.di = o.id, r.b1.arbiters.inlined_add(r), r.b2.arbiters.inlined_add(r), r.active = !0, r.present = 0, r.cleared = !1, r.sleeping = !1, r.fresh = !1, r.presentable = !1, c.s_arbiters.inlined_add(r), r.fresh = !u) : r.fresh = r.up_stamp < c.stamp - 1 || r.endGenerated == c.stamp && f;
                            r.up_stamp = r.stamp;
                            if (r.fresh || 0 == (r.immState & e.ZPP_Flags.id_ImmState_ALWAYS)) {
                                r.immState = e.ZPP_Flags.id_ImmState_ACCEPT;
                                var l = !1;
                                c.inlined_MRCA_chains(a,
                                    b);
                                for (var h = c.mrca1.head; null != h;) {
                                    for (var i = h.elt, j = c.mrca2.head; null != j;) {
                                        var k = j.elt,
                                            s = i.cbSet,
                                            p = k.cbSet;
                                        if (null != s.manager.pair(s, p).listeners.head) {
                                            var q = null,
                                                F = null;
                                            c.prelisteners.inlined_clear();
                                            s.manager.pair(s, p).forall(e.ZPP_Flags.id_CbEvent_PRE, function(a) {
                                                return function(b) {
                                                    0 != (b.itype & d) && (a[0] = g.prelisteners.inlined_insert(a[0], b), l = l || !b.pure)
                                                }
                                            }([null]));
                                            if (null != c.prelisteners.head)
                                                if (q = O.ZPP_Interactor.get(i, k), null == q && (F = A.ZPP_CallbackSet.get(i, k), c.add_callbackset(F)), null == q ||
                                                    (q.SENSORstamp != c.stamp || f) && 0 == (q.SENSORstate & e.ZPP_Flags.id_ImmState_ALWAYS)) {
                                                    null != F && (q = F);
                                                    if (null != q)
                                                        for (k = c.prelisteners.head; null != k;) p = k.elt, p.itype == e.ZPP_Flags.id_InteractionType_ANY ? (q.COLLISIONstamp = c.stamp, q.SENSORstamp = c.stamp, q.FLUIDstamp = c.stamp) : q.SENSORstamp = c.stamp, k = k.next;
                                                    s = r.active;
                                                    r.active = !0;
                                                    c.precb.zpp_inner.pre_arbiter = r;
                                                    c.precb.zpp_inner.set = q;
                                                    for (k = c.prelisteners.head; null != k;) {
                                                        p = k.elt;
                                                        c.precb.zpp_inner.listener = p;
                                                        O.ZPP_Interactor.int_callback(q, p, c.precb.zpp_inner);
                                                        c.precb.zpp_inner.pre_swapped =
                                                            i != c.precb.zpp_inner.int1;
                                                        F = p.handlerp(c.precb);
                                                        if (null != F) {
                                                            var p = r,
                                                                w = F;
                                                            null == e.ZPP_Flags.PreFlag_ACCEPT && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_ACCEPT = new v.PreFlag, e.ZPP_Flags.internal = !1);
                                                            w == e.ZPP_Flags.PreFlag_ACCEPT ? F = e.ZPP_Flags.id_ImmState_ACCEPT | e.ZPP_Flags.id_ImmState_ALWAYS : (w = F, null == e.ZPP_Flags.PreFlag_ACCEPT_ONCE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_ACCEPT_ONCE = new v.PreFlag, e.ZPP_Flags.internal = !1), w == e.ZPP_Flags.PreFlag_ACCEPT_ONCE ? F = e.ZPP_Flags.id_ImmState_ACCEPT : (null ==
                                                                e.ZPP_Flags.PreFlag_IGNORE && (e.ZPP_Flags.internal = !0, e.ZPP_Flags.PreFlag_IGNORE = new v.PreFlag, e.ZPP_Flags.internal = !1), F = F == e.ZPP_Flags.PreFlag_IGNORE ? e.ZPP_Flags.id_ImmState_IGNORE | e.ZPP_Flags.id_ImmState_ALWAYS : e.ZPP_Flags.id_ImmState_IGNORE));
                                                            p.immState = F
                                                        }
                                                        k = k.next
                                                    }
                                                    r.active = s;
                                                    if (null != q)
                                                        for (k = c.prelisteners.head; null != k;) p = k.elt, p.itype == e.ZPP_Flags.id_InteractionType_ANY ? (q.COLLISIONstate = r.immState, q.SENSORstate = r.immState, q.FLUIDstate = r.immState) : q.SENSORstate = r.immState, k = k.next
                                                } else null ==
                                                    q ? 0 == (r.immState & e.ZPP_Flags.id_ImmState_ALWAYS) && (r.immState = e.ZPP_Flags.id_ImmState_ACCEPT) : r.immState = q.SENSORstate
                                        }
                                        j = j.next
                                    }
                                    h = h.next
                                }
                                l && 0 == (r.immState & e.ZPP_Flags.id_ImmState_ALWAYS) && (r.b1.type != e.ZPP_Flags.id_BodyType_STATIC && (h = r.b1, h.world || (h.component.waket = c.stamp + (c.midstep ? 0 : 1), h.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (h.kinematicDelaySleep = !0), h.component.sleeping && c.really_wake(h, !1))), r.b2.type != e.ZPP_Flags.id_BodyType_STATIC && (h = r.b2, h.world || (h.component.waket = c.stamp + (c.midstep ?
                                    0 : 1), h.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (h.kinematicDelaySleep = !0), h.component.sleeping && c.really_wake(h, !1))))
                            }
                            r.sleeping && (r.sleeping = !1, c.s_arbiters.inlined_add(r));
                            return r
                        }(c) : t ? function() {
                            var a = r;
                            a.next = D.ZPP_SensorArbiter.zpp_pool;
                            D.ZPP_SensorArbiter.zpp_pool = a;
                            return null
                        }(c) : r
                    }(c) : r
                }(this)
            }
            return h
        },
        interactionType: function(a, b, c, d) {
            var e;
            e = !1;
            for (var g = c.constraints.head; null != g;) {
                var h = g.elt;
                if (h.ignore && h.pair_exists(c.id, d.id)) {
                    e = !0;
                    break
                }
                g = g.next
            }
            return !e && !this.group_ignore(a,
                b) ? (a.sensorEnabled || b.sensorEnabled) && a.filter.shouldSense(b.filter) ? 2 : (a.fluidEnabled || b.fluidEnabled) && a.filter.shouldFlow(b.filter) && !(0 == c.imass && 0 == d.imass && 0 == c.iinertia && 0 == d.iinertia) ? 0 : a.filter.shouldCollide(b.filter) && !(0 == c.imass && 0 == d.imass && 0 == c.iinertia && 0 == d.iinertia) ? 1 : -1 : -1
        },
        group_ignore: function(a, b) {
            var c = a.lookup_group();
            if (null == c) return !1;
            var d = b.lookup_group();
            if (null == d) return !1;
            for (var e = !1; null != c && null != d;) {
                if (c == d) {
                    e = c.ignore;
                    break
                }
                c.depth < d.depth ? d = d.group : c = c.group
            }
            return e
        },
        iteratePos: function(a) {
            for (var b = 0; b < a;) {
                b++;
                for (var c = null, d = this.live_constraints.head; null != d;) {
                    var f = d.elt;
                    !f.__velocity && f.stiff && f.applyImpulsePos() ? (d = this.live_constraints.erase(c), f.broken(), this.constraintCbBreak(f), f.removeOnBreak ? (f.component.sleeping = !0, this.midstep = !1, null != f.compound ? f.compound.wrap_constraints.remove(f.outer) : this.wrap_constraints.remove(f.outer), this.midstep = !0) : f.active = !1, f.clearcache()) : (c = d, d = d.next)
                }
                c = this.c_arbiters_false.head;
                d = !0;
                null == c && (c = this.c_arbiters_true.head,
                    d = !1);
                for (; null != c;) f = c.elt, f.active && 0 != (f.immState & e.ZPP_Flags.id_ImmState_ACCEPT) && f.applyImpulsePos(), c = c.next, d && null == c && (c = this.c_arbiters_true.head, d = !1)
            }
        },
        iterateVel: function(a) {
            for (var b = 0; b < a;) {
                b++;
                for (var c = this.f_arbiters.head; null != c;) {
                    var d = c.elt;
                    d.active && 0 != (d.immState & e.ZPP_Flags.id_ImmState_ACCEPT) && d.applyImpulseVel();
                    c = c.next
                }
                d = null;
                for (c = this.live_constraints.head; null != c;) {
                    var f = c.elt;
                    f.applyImpulseVel() ? (c = this.live_constraints.erase(d), f.broken(), this.constraintCbBreak(f),
                        f.removeOnBreak ? (f.component.sleeping = !0, this.midstep = !1, null != f.compound ? f.compound.wrap_constraints.remove(f.outer) : this.wrap_constraints.remove(f.outer), this.midstep = !0) : f.active = !1, f.clearcache()) : (d = c, c = c.next)
                }
                c = this.c_arbiters_false.head;
                f = !0;
                null == c && (c = this.c_arbiters_true.head, f = !1);
                for (; null != c;) d = c.elt, d.active && 0 != (d.immState & e.ZPP_Flags.id_ImmState_ACCEPT) && d.applyImpulseVel(), c = c.next, f && null == c && (c = this.c_arbiters_true.head, f = !1)
            }
        },
        warmStart: function() {
            for (var a = this.f_arbiters.head; null !=
                a;) {
                var b = a.elt;
                b.active && 0 != (b.immState & e.ZPP_Flags.id_ImmState_ACCEPT) && b.warmStart();
                a = a.next
            }
            var a = this.c_arbiters_false.head,
                c = !0;
            null == a && (a = this.c_arbiters_true.head, c = !1);
            for (; null != a;) b = a.elt, b.active && 0 != (b.immState & e.ZPP_Flags.id_ImmState_ACCEPT) && b.warmStart(), a = a.next, c && null == a && (a = this.c_arbiters_true.head, c = !1);
            for (a = this.live_constraints.head; null != a;) a.elt.warmStart(), a = a.next
        },
        prestep: function(a) {
            for (var b = null, c = this.live_constraints.head; null != c;) {
                var d = c.elt;
                d.preStep(a) ? (c =
                    this.live_constraints.erase(b), d.broken(), this.constraintCbBreak(d), d.removeOnBreak ? (d.component.sleeping = !0, this.midstep = !1, null != d.compound ? d.compound.wrap_constraints.remove(d.outer) : this.wrap_constraints.remove(d.outer), this.midstep = !0) : d.active = !1, d.clearcache()) : (b = c, c = c.next)
            }
            var b = null,
                c = this.c_arbiters_true,
                d = c.head,
                e = null != this.c_arbiters_false;
            e && null == d && (e = !1, d = this.c_arbiters_false.head, c = this.c_arbiters_false, b = null);
            for (; null != d;) {
                var g = d.elt;
                this.presteparb(g, a) ? d = c.inlined_erase(b) :
                    (b = d, d = d.next);
                e && null == d && (e = !1, d = this.c_arbiters_false.head, c = this.c_arbiters_false, b = null)
            }
            b = null;
            c = this.f_arbiters;
            d = c.head;
            e = !1;
            for (; null != d;) g = d.elt, this.presteparb(g, a) ? d = c.inlined_erase(b) : (b = d, d = d.next), e && null == d && (e = !1, d = null.begin(), b = c = null);
            b = null;
            c = this.s_arbiters;
            d = c.head;
            e = !1;
            for (; null != d;) g = d.elt, this.presteparb(g, a) ? d = c.inlined_erase(b) : (b = d, d = d.next), e && null == d && (e = !1, d = null.begin(), b = c = null)
        },
        presteparb: function(a, b, c) {
            null == c && (c = !1);
            var d = this;
            if (!a.cleared && a.b1.component.sleeping &&
                a.b2.component.sleeping) return a.sleep_stamp = this.stamp, a.sleeping = !0;
            if (!a.cleared || 0 != a.present || a.intchange) {
                var f = !c && a.up_stamp == this.stamp - 1 && !a.cleared && !a.intchange,
                    c = a.fresh && !a.cleared && !a.intchange;
                f && (a.endGenerated = this.stamp);
                if (c || f || a.cleared || a.intchange) {
                    this.inlined_MRCA_chains(a.ws1, a.ws2);
                    for (f = this.mrca1.head; null != f;) {
                        for (var g = f.elt, h = this.mrca2.head; null != h;) {
                            var i = h.elt,
                                j = g.cbSet,
                                k = i.cbSet;
                            if (null != j.manager.pair(j, k).listeners.head) {
                                var m = [O.ZPP_Interactor.get(g, i)];
                                if (c ||
                                    a.intchange) {
                                    null == m[0] && (m[0] = A.ZPP_CallbackSet.get(g, i), this.add_callbackset(m[0]));
                                    j.manager.pair(j, k).forall(e.ZPP_Flags.id_CbEvent_BEGIN, function(b) {
                                        return function(c) {
                                            if (0 != (c.itype & a.type) && b[0].empty_arb(c.itype)) {
                                                var f = d.push_callback(c);
                                                f.event = e.ZPP_Flags.id_CbEvent_BEGIN;
                                                O.ZPP_Interactor.int_callback(b[0], c, f);
                                                f.set = b[0]
                                            }
                                        }
                                    }(m));
                                    if (i = !m[0].arbiters.inlined_has(a)) m[0].arbiters.inlined_add(a), i = !0;
                                    i && a.present++
                                } else a.present--, m[0].remove_arb(a), j.manager.pair(j, k).forall(e.ZPP_Flags.id_CbEvent_END,
                                    function(b) {
                                        return function(c) {
                                            if (0 != (c.itype & a.type) && b[0].empty_arb(c.itype)) {
                                                var f = d.push_callback(c);
                                                f.event = e.ZPP_Flags.id_CbEvent_END;
                                                O.ZPP_Interactor.int_callback(b[0], c, f);
                                                f.set = b[0]
                                            }
                                        }
                                    }(m)), null == m[0].arbiters.head && this.remove_callbackset(m[0])
                            }
                            h = h.next
                        }
                        f = f.next
                    }
                }
                a.fresh = !1;
                a.intchange = !1
            }
            if (a.cleared || a.up_stamp + (a.type == D.ZPP_Arbiter.COL ? x.arbiterExpirationDelay : 0) < this.stamp) return a.type == D.ZPP_Arbiter.SENSOR ? a.sensorarb.retire() : a.type == D.ZPP_Arbiter.FLUID ? a.fluidarb.retire() : a.colarb.retire(), !0;
            c = a.active;
            a.active = a.presentable = a.up_stamp == this.stamp;
            0 != (a.immState & e.ZPP_Flags.id_ImmState_ACCEPT) ? a.active && a.type != D.ZPP_Arbiter.SENSOR && (null != a.colarb ? a.colarb.preStep(b) && (a.active = !1) : a.fluidarb.preStep(this, b)) : null != a.colarb && a.colarb.cleanupContacts() && (a.active = !1);
            c != a.active && (a.b1.arbiters.modified = !0, a.b2.arbiters.modified = !0, this.c_arbiters_true.modified = this.c_arbiters_false.modified = !0, this.s_arbiters.modified = this.f_arbiters.modified = !0);
            return !1
        },
        updatePos: function(a) {
            for (var b =
                    2 * Math.PI / a, c = this.live.head; null != c;) {
                var d = c.elt;
                d.pre_posx = d.posx;
                d.pre_posy = d.posy;
                d.pre_rot = d.rot;
                d.sweepTime = 0;
                d.sweep_angvel = d.angvel % b;
                d.sweepIntegrate(a);
                if (d.disableCCD) d.sweepFrozen = !0, d.bullet = !1;
                else {
                    var f = x.staticCCDLinearThreshold * d.sweepRadius,
                        g = x.staticCCDAngularThreshold;
                    if ((d.velx * d.velx + d.vely * d.vely) * a * a > f * f || d.angvel * d.angvel * a * a > g * g || d.type == e.ZPP_Flags.id_BodyType_KINEMATIC) {
                        f = d.sweep_angvel;
                        0 > f && (f = -f);
                        for (var g = 1 / f, h = d.shapes.head; null != h;) {
                            var i = h.elt,
                                j = i.aabb,
                                k = j.minx,
                                m = j.miny,
                                o = j.maxx,
                                p = j.maxy,
                                q = f * a * i.sweepCoef * (1 / 120) | 0;
                            8 < q && (q = 8);
                            var r = f * a / q;
                            d.sweepIntegrate(a);
                            i.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? i.circle._force_validate_aabb() : i.polygon._force_validate_aabb();
                            k < j.minx ? j.minx = k : k = j.minx;
                            m < j.miny ? j.miny = m : m = j.miny;
                            o > j.maxx ? j.maxx = o : o = j.maxx;
                            p > j.maxy ? j.maxy = p : p = j.maxy;
                            for (var t = 1; t < q;) {
                                var u = t++;
                                d.sweepIntegrate(r * u * g);
                                i.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? i.circle._force_validate_aabb() : i.polygon._force_validate_aabb();
                                k < j.minx ? j.minx = k : k = j.minx;
                                m < j.miny ?
                                    j.miny = m : m = j.miny;
                                o > j.maxx ? j.maxx = o : o = j.maxx;
                                p > j.maxy ? j.maxy = p : p = j.maxy
                            }
                            this.bphase.sync(i);
                            h = h.next
                        }
                        d.sweepFrozen = !1;
                        if (d.type == e.ZPP_Flags.id_BodyType_DYNAMIC && d.bulletEnabled && (f = x.bulletCCDLinearThreshold * d.sweepRadius, g = x.bulletCCDAngularThreshold, (d.velx * d.velx + d.vely * d.vely) * a * a > f * f || d.angvel * d.angvel * a * a > g * g)) d.bullet = !0
                    } else d.sweepFrozen = !0, d.bullet = !1
                }
                c = c.next
            }
            for (c = this.kinematics.head; null != c;) {
                d = c.elt;
                d.pre_posx = d.posx;
                d.pre_posy = d.posy;
                d.pre_rot = d.rot;
                d.sweepTime = 0;
                d.sweep_angvel = d.angvel %
                    b;
                d.sweepIntegrate(a);
                if (d.disableCCD) d.sweepFrozen = !0, d.bullet = !1;
                else if (f = x.staticCCDLinearThreshold * d.sweepRadius, g = x.staticCCDAngularThreshold, (d.velx * d.velx + d.vely * d.vely) * a * a > f * f || d.angvel * d.angvel * a * a > g * g || d.type == e.ZPP_Flags.id_BodyType_KINEMATIC) {
                    f = d.sweep_angvel;
                    0 > f && (f = -f);
                    g = 1 / f;
                    for (h = d.shapes.head; null != h;) {
                        i = h.elt;
                        j = i.aabb;
                        k = j.minx;
                        m = j.miny;
                        o = j.maxx;
                        p = j.maxy;
                        q = f * a * i.sweepCoef * (1 / 120) | 0;
                        8 < q && (q = 8);
                        r = f * a / q;
                        d.sweepIntegrate(a);
                        i.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? i.circle._force_validate_aabb() :
                            i.polygon._force_validate_aabb();
                        k < j.minx ? j.minx = k : k = j.minx;
                        m < j.miny ? j.miny = m : m = j.miny;
                        o > j.maxx ? j.maxx = o : o = j.maxx;
                        p > j.maxy ? j.maxy = p : p = j.maxy;
                        for (t = 1; t < q;) u = t++, d.sweepIntegrate(r * u * g), i.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? i.circle._force_validate_aabb() : i.polygon._force_validate_aabb(), k < j.minx ? j.minx = k : k = j.minx, m < j.miny ? j.miny = m : m = j.miny, o > j.maxx ? j.maxx = o : o = j.maxx, p > j.maxy ? j.maxy = p : p = j.maxy;
                        this.bphase.sync(i);
                        h = h.next
                    }
                    d.sweepFrozen = !1;
                    if (d.type == e.ZPP_Flags.id_BodyType_DYNAMIC && d.bulletEnabled &&
                        (f = x.bulletCCDLinearThreshold * d.sweepRadius, g = x.bulletCCDAngularThreshold, (d.velx * d.velx + d.vely * d.vely) * a * a > f * f || d.angvel * d.angvel * a * a > g * g)) d.bullet = !0
                } else d.sweepFrozen = !0, d.bullet = !1;
                c = c.next
            }
        },
        updateVel: function(a) {
            for (var b = 1 - a * this.global_lin_drag, c = 1 - a * this.global_ang_drag, d = this.live.head; null != d;) {
                var e = d.elt;
                if (0 != e.smass) {
                    var g = a * e.imass;
                    e.velx = b * e.velx + (e.forcex + this.gravityx * e.gravMass) * g;
                    e.vely = b * e.vely + (e.forcey + this.gravityy * e.gravMass) * g
                }
                if (0 != e.sinertia) {
                    var h = g = 0,
                        g = e.worldCOMx -
                        e.posx,
                        h = e.worldCOMy - e.posy;
                    e.angvel = c * e.angvel + (e.torque + (this.gravityy * g - this.gravityx * h) * e.gravMass) * a * e.iinertia
                }
                d = d.next
            }
        },
        validation: function() {
            this.cbsets.validate();
            for (var a = this.live.head; null != a;) {
                var b = a.elt;
                b.sweepRadius = 0;
                for (var c = b.shapes.head; null != c;) {
                    var d = c.elt;
                    d.type == e.ZPP_Flags.id_ShapeType_POLYGON && (d.polygon.splice_collinear(), d.polygon.validate_gaxi());
                    d.validate_sweepRadius();
                    d.sweepRadius > b.sweepRadius && (b.sweepRadius = d.sweepRadius);
                    c = c.next
                }
                b.validate_mass();
                b.validate_inertia();
                null != b.shapes.head && (b.validate_aabb(), b.validate_worldCOM());
                b.validate_gravMass();
                b.zip_axis && (b.zip_axis = !1, b.axisx = Math.sin(b.rot), b.axisy = Math.cos(b.rot), null);
                if (b.component.woken && null != b.cbSet)
                    for (c = b.cbSet.bodylisteners.head; null != c;) d = c.elt, d.event == e.ZPP_Flags.id_CbEvent_WAKE && (d = this.push_callback(d), d.event = e.ZPP_Flags.id_CbEvent_WAKE, d.body = b), c = c.next;
                b.component.woken = !1;
                for (c = b.shapes.head; null != c;) b = c.elt, this.bphase.sync(b), c = c.next;
                a = a.next
            }
            for (a = this.kinematics.head; null != a;) {
                b =
                    a.elt;
                b.sweepRadius = 0;
                for (c = b.shapes.head; null != c;) d = c.elt, d.type == e.ZPP_Flags.id_ShapeType_POLYGON && (d.polygon.splice_collinear(), d.polygon.validate_gaxi()), d.validate_sweepRadius(), d.sweepRadius > b.sweepRadius && (b.sweepRadius = d.sweepRadius), c = c.next;
                b.validate_mass();
                b.validate_inertia();
                null != b.shapes.head && (b.validate_aabb(), b.validate_worldCOM());
                b.validate_gravMass();
                b.zip_axis && (b.zip_axis = !1, b.axisx = Math.sin(b.rot), b.axisy = Math.cos(b.rot), null);
                for (c = b.shapes.head; null != c;) b = c.elt, this.bphase.sync(b),
                    c = c.next;
                a = a.next
            }
            for (a = this.live_constraints.head; null != a;) {
                b = a.elt;
                if (b.active) {
                    if (b.component.woken && null != b.cbSet)
                        for (c = b.cbSet.conlisteners.head; null != c;) d = c.elt, d.event == e.ZPP_Flags.id_CbEvent_WAKE && (d = this.push_callback(d), d.event = e.ZPP_Flags.id_CbEvent_WAKE, d.constraint = b), c = c.next;
                    b.component.woken = !1
                }
                a = a.next
            }
        },
        static_validation: function(a) {
            null != a.shapes.head && a.validate_aabb();
            a.validate_mass();
            a.validate_inertia();
            for (var b = a.shapes.head; null != b;) {
                var c = b.elt;
                c.type == e.ZPP_Flags.id_ShapeType_POLYGON &&
                    (c.polygon.splice_collinear(), c.polygon.validate_gaxi());
                b = b.next
            }
            a.sweepFrozen = !0
        },
        sleepArbiters: function() {
            var a = null,
                b = this.c_arbiters_true,
                c = b.head,
                d = null != this.c_arbiters_false;
            d && null == c && (d = !1, c = this.c_arbiters_false.head, b = this.c_arbiters_false, a = null);
            for (; null != c;) {
                var e = c.elt;
                e.b1.component.sleeping && e.b2.component.sleeping ? (e.sleep_stamp = this.stamp, e.sleeping = !0, c = b.inlined_erase(a)) : (a = c, c = c.next);
                d && null == c && (d = !1, c = this.c_arbiters_false.head, b = this.c_arbiters_false, a = null)
            }
            a = null;
            b =
                this.f_arbiters;
            c = b.head;
            d = !1;
            for (; null != c;) e = c.elt, e.b1.component.sleeping && e.b2.component.sleeping ? (e.sleep_stamp = this.stamp, e.sleeping = !0, c = b.inlined_erase(a)) : (a = c, c = c.next), d && null == c && (d = !1, c = null.begin(), a = b = null);
            a = null;
            b = this.s_arbiters;
            c = b.head;
            d = !1;
            for (; null != c;) e = c.elt, e.b1.component.sleeping && e.b2.component.sleeping ? (e.sleep_stamp = this.stamp, e.sleeping = !0, c = b.inlined_erase(a)) : (a = c, c = c.next), d && null == c && (d = !1, c = null.begin(), a = b = null)
        },
        doForests: function(a) {
            for (var b = this.c_arbiters_false.head; null !=
                b;) {
                var c = b.elt;
                if (!c.cleared && c.up_stamp == this.stamp && 0 != (c.immState & e.ZPP_Flags.id_ImmState_ACCEPT) && c.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && c.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC) {
                    var d = c.b1.component == c.b1.component.parent ? c.b1.component : function() {
                            for (var a = c.b1.component, b = null; a != a.parent;) {
                                var d = a.parent;
                                a.parent = b;
                                b = a;
                                a = d
                            }
                            for (; null != b;) d = b.parent, b.parent = a, b = d;
                            return a
                        }(this),
                        f = c.b2.component == c.b2.component.parent ? c.b2.component : function() {
                            for (var a = c.b2.component, b = null; a != a.parent;) {
                                var d =
                                    a.parent;
                                a.parent = b;
                                b = a;
                                a = d
                            }
                            for (; null != b;) d = b.parent, b.parent = a, b = d;
                            return a
                        }(this);
                    d != f && (d.rank < f.rank ? d.parent = f : d.rank > f.rank ? f.parent = d : (f.parent = d, d.rank++))
                }
                b = b.next
            }
            for (b = this.f_arbiters.head; null != b;) c = b.elt, !c.cleared && c.up_stamp == this.stamp && 0 != (c.immState & e.ZPP_Flags.id_ImmState_ACCEPT) && c.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && c.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (d = c.b1.component == c.b1.component.parent ? c.b1.component : function() {
                for (var a = c.b1.component, b = null; a != a.parent;) {
                    var d =
                        a.parent;
                    a.parent = b;
                    b = a;
                    a = d
                }
                for (; null != b;) d = b.parent, b.parent = a, b = d;
                return a
            }(this), f = c.b2.component == c.b2.component.parent ? c.b2.component : function() {
                for (var a = c.b2.component, b = null; a != a.parent;) {
                    var d = a.parent;
                    a.parent = b;
                    b = a;
                    a = d
                }
                for (; null != b;) d = b.parent, b.parent = a, b = d;
                return a
            }(this), d != f && (d.rank < f.rank ? d.parent = f : d.rank > f.rank ? f.parent = d : (f.parent = d, d.rank++))), b = b.next;
            for (b = this.live_constraints.head; null != b;) d = b.elt, d.forest(), b = b.next;
            for (; null != this.live.head;) {
                var b = this.live.inlined_pop_unsafe(),
                    g = b.component,
                    d = g == g.parent ? g : function() {
                        for (var a = g, b = null; a != a.parent;) {
                            var c = a.parent;
                            a.parent = b;
                            b = a;
                            a = c
                        }
                        for (; null != b;) c = b.parent, b.parent = a, b = c;
                        return a
                    }(this);
                null == d.island && (null == A.ZPP_Island.zpp_pool ? d.island = new A.ZPP_Island : (d.island = A.ZPP_Island.zpp_pool, A.ZPP_Island.zpp_pool = d.island.next, d.island.next = null), d.island.waket = 0, this.islands.inlined_add(d.island), d.island.sleep = !0);
                g.island = d.island;
                g.island.comps.inlined_add(g);
                b = b.atRest(a);
                g.island.sleep = g.island.sleep && b;
                g.waket > g.island.waket &&
                    (g.island.waket = g.waket)
            }
            for (; null != this.live_constraints.head;) b = this.live_constraints.inlined_pop_unsafe(), g = b.component, d = g == g.parent ? g : function() {
                for (var a = g, b = null; a != a.parent;) {
                    var c = a.parent;
                    a.parent = b;
                    b = a;
                    a = c
                }
                for (; null != b;) c = b.parent, b.parent = a, b = c;
                return a
            }(this), g.island = d.island, g.island.comps.inlined_add(g), g.waket > g.island.waket && (g.island.waket = g.waket);
            for (; null != this.islands.next;)
                if (b = this.islands.inlined_pop_unsafe(), b.sleep)
                    for (b = b.comps.head; null != b;) {
                        a = b.elt;
                        if (a.isBody) {
                            d = a.body;
                            d.velx = 0;
                            d.vely = 0;
                            d.angvel = 0;
                            a.sleeping = !0;
                            for (a = d.shapes.head; null != a;) this.bphase.sync(a.elt), a = a.next;
                            this.bodyCbSleep(d)
                        } else d = a.constraint, this.constraintCbSleep(d), a.sleeping = !0;
                        b = b.next
                    } else {
                        for (; null != b.comps.head;) a = b.comps.inlined_pop_unsafe(), a.waket = b.waket, a.isBody ? this.live.inlined_add(a.body) : this.live_constraints.inlined_add(a.constraint), a.sleeping = !1, a.island = null, a.parent = a, a.rank = 0;
                        b.next = A.ZPP_Island.zpp_pool;
                        A.ZPP_Island.zpp_pool = b
                    }
        },
        wake_constraint: function(a, b) {
            null == b && (b = !1);
            return a.active && (a.component.waket = this.stamp + (this.midstep ? 0 : 1), a.component.sleeping) ? (null == a.component.island ? (a.component.sleeping = !1, this.live_constraints.inlined_add(a), a.wake_connected(), b || this.constraintCbWake(a)) : this.wakeIsland(a.component.island), !0) : !1
        },
        really_wake: function(a, b) {
            null == b && (b = !1);
            if (null == a.component.island) {
                a.component.sleeping = !1;
                a.type == e.ZPP_Flags.id_BodyType_KINEMATIC || a.type == e.ZPP_Flags.id_BodyType_STATIC ? this.staticsleep.inlined_add(a) : this.live.inlined_add(a);
                for (var c = a.constraints.head; null != c;) {
                    var d = c.elt;
                    d.space == this && this.wake_constraint(d);
                    c = c.next
                }
                for (c = a.arbiters.head; null != c;) {
                    d = c.elt;
                    if (d.sleeping)
                        if (d.sleeping = !1, d.up_stamp += this.stamp + (this.midstep ? 0 : 1) - d.sleep_stamp, d.type == D.ZPP_Arbiter.COL) {
                            var f = d.colarb;
                            f.stat ? this.c_arbiters_true.inlined_add(f) : this.c_arbiters_false.inlined_add(f)
                        } else d.type == D.ZPP_Arbiter.FLUID ? this.f_arbiters.inlined_add(d.fluidarb) : this.s_arbiters.inlined_add(d.sensorarb);
                    d.type != D.ZPP_Arbiter.SENSOR && !d.cleared &&
                        d.up_stamp >= this.stamp && 0 != (d.immState & e.ZPP_Flags.id_ImmState_ACCEPT) && (d.b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && d.b1.component.sleeping && (f = d.b1, f.world || (f.component.waket = this.stamp + (this.midstep ? 0 : 1), f.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (f.kinematicDelaySleep = !0), f.component.sleeping && this.really_wake(f, !1))), d.b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && d.b2.component.sleeping && (f = d.b2, f.world || (f.component.waket = this.stamp + (this.midstep ? 0 : 1), f.type == e.ZPP_Flags.id_BodyType_KINEMATIC &&
                            (f.kinematicDelaySleep = !0), f.component.sleeping && this.really_wake(f, !1))));
                    c = c.next
                }!b && a.type == e.ZPP_Flags.id_BodyType_DYNAMIC && this.bodyCbWake(a);
                if (!b && !this.bphase.is_sweep && a.type != e.ZPP_Flags.id_BodyType_STATIC)
                    for (c = a.shapes.head; null != c;) d = c.elt, null != d.node && this.bphase.sync(d), c = c.next
            } else this.wakeIsland(a.component.island)
        },
        non_inlined_wake: function(a, b) {
            null == b && (b = !1);
            a.world || (a.component.waket = this.stamp + (this.midstep ? 0 : 1), a.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (a.kinematicDelaySleep = !0), a.component.sleeping && this.really_wake(a, b))
        },
        wakeIsland: function(a) {
            for (; null != a.comps.head;) {
                var b = a.comps.pop_unsafe();
                b.waket = this.stamp + (this.midstep ? 0 : 1);
                if (b.isBody) {
                    var c = b.body;
                    this.live.add(c);
                    for (var d = c.arbiters.head; null != d;) {
                        var f = d.elt;
                        f.sleeping && (f.sleeping = !1, f.up_stamp += this.stamp - f.sleep_stamp, f.type == D.ZPP_Arbiter.COL ? (f = f.colarb, f.stat ? this.c_arbiters_true.inlined_add(f) : this.c_arbiters_false.inlined_add(f)) : f.type == D.ZPP_Arbiter.FLUID ? this.f_arbiters.inlined_add(f.fluidarb) :
                            this.s_arbiters.inlined_add(f.sensorarb));
                        d = d.next
                    }
                    this.bodyCbWake(c);
                    b.sleeping = !1;
                    b.island = null;
                    b.parent = b;
                    b.rank = 0;
                    if (c.type != e.ZPP_Flags.id_BodyType_STATIC)
                        for (d = c.shapes.head; null != d;) b = d.elt, null != b.node && this.bphase.sync(b), d = d.next
                } else d = b.constraint, this.live_constraints.inlined_add(d), this.constraintCbWake(d), b.sleeping = !1, b.island = null, b.parent = b, b.rank = 0
            }
            a.next = A.ZPP_Island.zpp_pool;
            A.ZPP_Island.zpp_pool = a
        },
        wakeCompound: function(a) {
            for (var b = a.bodies.head; null != b;) {
                var c = b.elt;
                c.world ||
                    (c.component.waket = this.stamp + (this.midstep ? 0 : 1), c.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (c.kinematicDelaySleep = !0), c.component.sleeping && this.really_wake(c, !1));
                b = b.next
            }
            for (b = a.constraints.head; null != b;) c = b.elt, this.wake_constraint(c), b = b.next;
            for (b = a.compounds.head; null != b;) c = b.elt, this.wakeCompound(c), b = b.next
        },
        freshInteractorType: function(a, b) {
            null == b && (b = a);
            if (null != a.icompound) {
                for (var c = a.icompound, d = c.bodies.head; null != d;) this.freshInteractorType(d.elt, b), d = d.next;
                for (d = c.compounds.head; null !=
                    d;) this.freshInteractorType(d.elt, b), d = d.next
            } else {
                c = null != a.ishape ? a.ishape : null;
                for (d = (null != a.ibody ? a.ibody : a.ishape.body).arbiters.head; null != d;) {
                    var e = d.elt;
                    if (e.presentable && (null == c || e.ws1 == c || e.ws2 == c)) {
                        this.MRCA_chains(e.ws1, e.ws2);
                        for (var g = this.mrca1.head; null != g;) {
                            for (var h = g.elt, i = this.mrca2.head; null != i;) {
                                var j = i.elt;
                                if (!(h != b && j != b)) {
                                    var k = h.cbSet,
                                        m = j.cbSet;
                                    k.validate();
                                    m.validate();
                                    if (null != k.manager.pair(k, m).listeners.head) {
                                        k = O.ZPP_Interactor.get(h, j);
                                        null == k && (k = A.ZPP_CallbackSet.get(h,
                                            j), this.add_callbackset(k));
                                        if (j = !k.arbiters.inlined_has(e)) k.arbiters.inlined_add(e), j = !0;
                                        j && e.present++
                                    }
                                }
                                i = i.next
                            }
                            g = g.next
                        }
                    }
                    d = d.next
                }
            }
        },
        freshListenerType: function(a, b) {
            for (var c = new e.ZNPList_ZPP_Interactor, d = a.interactors.head; null != d;) {
                var f = d.elt;
                c.add(f);
                d = d.next
            }
            if (a != b)
                for (d = b.interactors.head; null != d;) f = d.elt, c.add(f), d = d.next;
            for (; null != c.head;)
                if (d = c.pop_unsafe(), null != d.icompound) {
                    for (var g = d.icompound, d = g.bodies.head; null != d;) f = d.elt, c.add(f), d = d.next;
                    for (d = g.compounds.head; null != d;) f =
                        d.elt, c.add(f), d = d.next
                } else {
                    f = null != d.ishape ? d.ishape : null;
                    for (d = (null != d.ibody ? d.ibody : d.ishape.body).arbiters.head; null != d;) {
                        g = d.elt;
                        if (g.presentable && (null == f || g.ws1 == f || g.ws2 == f)) {
                            this.MRCA_chains(g.ws1, g.ws2);
                            for (var h = this.mrca1.head; null != h;) {
                                var i = h.elt;
                                if (!(i.cbSet != a && i.cbSet != b))
                                    for (var j = this.mrca2.head; null != j;) {
                                        var k = j.elt;
                                        if (!(i.cbSet == a && k.cbSet != b || i.cbSet == b && k.cbSet != a)) {
                                            var m = O.ZPP_Interactor.get(i, k);
                                            null == m && (m = A.ZPP_CallbackSet.get(i, k), this.add_callbackset(m));
                                            if (k = !m.arbiters.inlined_has(g)) m.arbiters.inlined_add(g),
                                                k = !0;
                                            k && g.present++
                                        }
                                        j = j.next
                                    }
                                h = h.next
                            }
                        }
                        d = d.next
                    }
                }
        },
        nullInteractorType: function(a, b) {
            null == b && (b = a);
            if (null != a.icompound) {
                for (var c = a.icompound, d = c.bodies.head; null != d;) this.nullInteractorType(d.elt, b), d = d.next;
                for (d = c.compounds.head; null != d;) this.nullInteractorType(d.elt, b), d = d.next
            } else {
                c = null != a.ishape ? a.ishape : null;
                for (d = (null != a.ibody ? a.ibody : a.ishape.body).arbiters.head; null != d;) {
                    var e = d.elt;
                    if (0 != e.present && (null == c || e.ws1 == c || e.ws2 == c)) {
                        this.MRCA_chains(e.ws1, e.ws2);
                        for (var g = this.mrca1.head; null !=
                            g;) {
                            for (var h = g.elt, i = this.mrca2.head; null != i;) {
                                var j = i.elt;
                                h != b && j != b || (j = O.ZPP_Interactor.get(h, j), null != j && (e.present--, j.remove_arb(e), null == j.arbiters.head && this.remove_callbackset(j)));
                                i = i.next
                            }
                            g = g.next
                        }
                    }
                    d = d.next
                }
            }
        },
        nullListenerType: function(a, b) {
            for (var c = new e.ZNPList_ZPP_Interactor, d = a.interactors.head; null != d;) {
                var f = d.elt;
                c.add(f);
                d = d.next
            }
            if (a != b)
                for (d = b.interactors.head; null != d;) f = d.elt, c.add(f), d = d.next;
            for (; null != c.head;)
                if (d = c.pop_unsafe(), null != d.icompound) {
                    for (var g = d.icompound,
                            d = g.bodies.head; null != d;) f = d.elt, c.add(f), d = d.next;
                    for (d = g.compounds.head; null != d;) f = d.elt, c.add(f), d = d.next
                } else {
                    f = null != d.ishape ? d.ishape : null;
                    for (d = (null != d.ibody ? d.ibody : d.ishape.body).arbiters.head; null != d;) {
                        g = d.elt;
                        if (0 != g.present && (null == f || g.ws1 == f || g.ws2 == f)) {
                            this.MRCA_chains(g.ws1, g.ws2);
                            for (g = this.mrca1.head; null != g;) {
                                var h = g.elt;
                                if (!(h.cbSet != a && h.cbSet != b))
                                    for (var i = this.mrca2.head; null != i;) {
                                        var j = i.elt;
                                        if (!(h.cbSet == a && j.cbSet != b || h.cbSet == b && j.cbSet != a))
                                            if (j = O.ZPP_Interactor.get(h,
                                                    j), null != j) {
                                                for (; null != j.arbiters.head;) j.arbiters.pop_unsafe().present--;
                                                this.remove_callbackset(j)
                                            }
                                        i = i.next
                                    }
                                g = g.next
                            }
                        }
                        d = d.next
                    }
                }
        },
        constraintCbBreak: function(a) {
            if (null != a.cbSet)
                for (var b = a.cbSet.conlisteners.head; null != b;) {
                    var c = b.elt;
                    c.event == e.ZPP_Flags.id_CbEvent_BREAK && (c = this.push_callback(c), c.event = e.ZPP_Flags.id_CbEvent_BREAK, c.constraint = a);
                    b = b.next
                }
        },
        constraintCbSleep: function(a) {
            if (null != a.cbSet)
                for (var b = a.cbSet.conlisteners.head; null != b;) {
                    var c = b.elt;
                    c.event == e.ZPP_Flags.id_CbEvent_SLEEP &&
                        (c = this.push_callback(c), c.event = e.ZPP_Flags.id_CbEvent_SLEEP, c.constraint = a);
                    b = b.next
                }
        },
        constraintCbWake: function(a) {
            if (null != a.cbSet)
                if (this.midstep)
                    for (var b = a.cbSet.conlisteners.head; null != b;) {
                        var c = b.elt;
                        c.event == e.ZPP_Flags.id_CbEvent_WAKE && (c = this.push_callback(c), c.event = e.ZPP_Flags.id_CbEvent_WAKE, c.constraint = a);
                        b = b.next
                    } else a.component.woken = !0
        },
        bodyCbSleep: function(a) {
            if (a.type == e.ZPP_Flags.id_BodyType_DYNAMIC && null != a.cbSet)
                for (var b = a.cbSet.bodylisteners.head; null != b;) {
                    var c = b.elt;
                    c.event == e.ZPP_Flags.id_CbEvent_SLEEP && (c = this.push_callback(c), c.event = e.ZPP_Flags.id_CbEvent_SLEEP, c.body = a);
                    b = b.next
                }
        },
        bodyCbWake: function(a) {
            if (a.type == e.ZPP_Flags.id_BodyType_DYNAMIC && null != a.cbSet)
                if (this.midstep)
                    for (var b = a.cbSet.bodylisteners.head; null != b;) {
                        var c = b.elt;
                        c.event == e.ZPP_Flags.id_CbEvent_WAKE && (c = this.push_callback(c), c.event = e.ZPP_Flags.id_CbEvent_WAKE, c.body = a);
                        b = b.next
                    } else a.component.woken = !0
        },
        continuousEvent: function(a, b, c, d) {
            if (a.body.sweepFrozen && b.body.sweepFrozen || a.body.disableCCD ||
                b.body.disableCCD || null != d && null == d.colarb || 0 == this.interactionType(a, b, a.body, b.body)) return d;
            var f = a.body,
                g = b.body;
            if (c || f.bullet || g.bullet) {
                var h;
                null == q.ZPP_ToiEvent.zpp_pool ? h = new q.ZPP_ToiEvent : (h = q.ZPP_ToiEvent.zpp_pool, q.ZPP_ToiEvent.zpp_pool = h.next, h.next = null);
                h.failed = !1;
                h.s1 = h.s2 = null;
                h.arbiter = null;
                f = f.type == e.ZPP_Flags.id_BodyType_KINEMATIC || g.type == e.ZPP_Flags.id_BodyType_KINEMATIC;
                c && !f ? (a.body.type != e.ZPP_Flags.id_BodyType_DYNAMIC ? (h.s2 = a, h.s1 = b) : (h.s1 = a, h.s2 = b), h.kinematic = !1, q.ZPP_SweepDistance.staticSweep(h,
                    this.pre_dt, 0, x.collisionSlopCCD)) : (h.s1 = a, h.s2 = b, h.kinematic = f, h.s1.body.sweepFrozen || h.s2.body.sweepFrozen ? (h.s1.body.sweepFrozen && (a = h.s1, h.s1 = h.s2, h.s2 = a, h.frozen1 = !1, h.frozen2 = !0), q.ZPP_SweepDistance.staticSweep(h, this.pre_dt, 0, x.collisionSlopCCD)) : q.ZPP_SweepDistance.dynamicSweep(h, this.pre_dt, 0, x.collisionSlopCCD));
                c && 0 > h.toi || h.failed ? (c = h, c.next = q.ZPP_ToiEvent.zpp_pool, q.ZPP_ToiEvent.zpp_pool = c) : (this.toiEvents.add(h), h.frozen1 = h.s1.body.sweepFrozen, h.frozen2 = h.s2.body.sweepFrozen, h.arbiter =
                    null != d ? d.colarb : null)
            }
            return d
        },
        continuousCollisions: function(a) {
            var b = 2 * Math.PI / a;
            this.bphase.broadphase(this, !1);
            for (var c = 0; 1 > c && null != this.toiEvents.head;) {
                for (var d = null, f = 2, g = !1, h = null, i = null, c = this.toiEvents.head; null != c;) {
                    var j = c.elt,
                        k = j.s1.body,
                        m = j.s2.body;
                    if (k.sweepFrozen && m.sweepFrozen)
                        if (0 != j.toi && q.ZPP_Collide.testCollide_safe(j.s1, j.s2)) j.toi = 0;
                        else {
                            c = this.toiEvents.erase(i);
                            k = j;
                            k.next = q.ZPP_ToiEvent.zpp_pool;
                            q.ZPP_ToiEvent.zpp_pool = k;
                            continue
                        }
                    if (j.frozen1 != k.sweepFrozen || j.frozen2 !=
                        m.sweepFrozen)
                        if (j.kinematic) {
                            c = this.toiEvents.erase(i);
                            k = j;
                            k.next = q.ZPP_ToiEvent.zpp_pool;
                            q.ZPP_ToiEvent.zpp_pool = k;
                            continue
                        } else if (j.frozen1 = k.sweepFrozen, j.frozen2 = m.sweepFrozen, j.frozen1 && (k = j.s1, j.s1 = j.s2, j.s2 = k, j.frozen1 = !1, j.frozen2 = !0), q.ZPP_SweepDistance.staticSweep(j, a, 0, x.collisionSlopCCD), 0 > j.toi) {
                        c = this.toiEvents.erase(i);
                        k = j;
                        k.next = q.ZPP_ToiEvent.zpp_pool;
                        q.ZPP_ToiEvent.zpp_pool = k;
                        continue
                    }
                    if (0 <= j.toi && (j.toi < f || !g && j.kinematic)) d = j, f = j.toi, g = j.kinematic, h = i;
                    i = c;
                    c = c.next
                }
                if (null == d) break;
                this.toiEvents.erase(h);
                c = d.toi;
                k = d.s1.body;
                m = d.s2.body;
                k.sweepFrozen || (k.sweepIntegrate(c * a), k.sweepValidate(d.s1));
                m.sweepFrozen || (m.sweepIntegrate(c * a), m.sweepValidate(d.s2));
                f = this.narrowPhase(d.s1, d.s2, !0, d.arbiter, !0);
                null == f ? null != d.arbiter && null != d.arbiter.pair && (d.arbiter.pair.arb = null, d.arbiter.pair = null) : !this.presteparb(f, a, !0) && f.type == D.ZPP_Arbiter.COL && f.active && 0 != (f.immState & e.ZPP_Flags.id_ImmState_ACCEPT) && (f.colarb.warmStart(), f.colarb.applyImpulseVel(), f.colarb.applyImpulseVel(),
                    f.colarb.applyImpulseVel(), f.colarb.applyImpulseVel(), k.sweep_angvel = k.angvel % b, m.sweep_angvel = m.angvel % b);
                null != f && f.active && 0 != (f.immState & e.ZPP_Flags.id_ImmState_ACCEPT) && f.type == D.ZPP_Arbiter.COL && (!k.sweepFrozen && k.type != e.ZPP_Flags.id_BodyType_KINEMATIC && (k.sweepFrozen = !0, k.angvel = d.failed ? k.sweep_angvel = 0 : d.slipped ? k.sweep_angvel *= x.angularCCDSlipScale : k.sweep_angvel), !m.sweepFrozen && m.type != e.ZPP_Flags.id_BodyType_KINEMATIC && (m.sweepFrozen = !0, m.angvel = d.failed ? m.sweep_angvel = 0 : d.slipped ? m.sweep_angvel *=
                    x.angularCCDSlipScale : m.sweep_angvel))
            }
            for (; null != this.toiEvents.head;) k = j = this.toiEvents.pop_unsafe(), k.next = q.ZPP_ToiEvent.zpp_pool, q.ZPP_ToiEvent.zpp_pool = k;
            for (c = this.kinematics.head; null != c;) b = c.elt, b.sweepIntegrate(a), b.sweepTime = 0, c = c.next;
            for (c = this.live.head; null != c;) b = c.elt, b.sweepFrozen || b.sweepIntegrate(a), b.sweepTime = 0, c = c.next
        },
        step: function(a, b, c) {
            var d = this;
            this.time += a;
            this.pre_dt = a;
            this.midstep = !0;
            this.stamp++;
            this.validation();
            this.bphase.broadphase(this, !0);
            this.prestep(a);
            if (this.sortcontacts) {
                var f =
                    this.c_arbiters_false;
                if (null != f.head && null != f.head.next) {
                    var g = f.head,
                        h = null,
                        i = null,
                        j = null,
                        k = null,
                        m = 1,
                        o, p, q;
                    do {
                        o = 0;
                        i = g;
                        for (h = g = null; null != i;) {
                            o++;
                            j = i;
                            p = 0;
                            for (q = m; null != j && p < m;) p++, j = j.next;
                            for (; 0 < p || 0 < q && null != j;) 0 == p ? (k = j, j = j.next, q--) : 0 == q || null == j ? (k = i, i = i.next, p--) : (i.elt.active && j.elt.active ? i.elt.oc1.dist < j.elt.oc1.dist : 1) ? (k = i, i = i.next, p--) : (k = j, j = j.next, q--), null != h ? h.next = k : g = k, h = k;
                            i = j
                        }
                        h.next = null;
                        m <<= 1
                    } while (1 < o);
                    f.head = g;
                    f.modified = !0;
                    f.pushmod = !0
                }
            }
            this.updateVel(a);
            this.warmStart();
            this.iterateVel(b);
            for (b = this.kinematics.head; null != b;) f = b.elt, f.pre_posx = f.posx, f.pre_posy = f.posy, f.pre_rot = f.rot, b = b.next;
            for (b = this.live.head; null != b;) f = b.elt, f.pre_posx = f.posx, f.pre_posy = f.posy, f.pre_rot = f.rot, b = b.next;
            this.updatePos(a);
            this.continuous = !0;
            this.continuousCollisions(a);
            this.continuous = !1;
            this.iteratePos(c);
            for (b = this.kinematics.head; null != b;) f = b.elt, c = !(f.posx == f.pre_posx && f.posy == f.pre_posy), g = f.pre_rot != f.rot, c && f.invalidate_pos(), g && f.invalidate_rot(), b = b.next;
            for (b = this.live.head; null != b;) f = b.elt,
                c = !(f.posx == f.pre_posx && f.posy == f.pre_posy), g = f.pre_rot != f.rot, c && f.invalidate_pos(), g && f.invalidate_rot(), b = b.next;
            c = null;
            for (b = this.staticsleep.head; null != b;) f = b.elt, f.type != e.ZPP_Flags.id_BodyType_KINEMATIC || 0 == f.velx && 0 == f.vely && 0 == f.angvel ? f.kinematicDelaySleep ? (f.kinematicDelaySleep = !1, b = b.next) : (f.component.sleeping = !0, b = this.staticsleep.inlined_erase(c)) : (c = b, b = b.next);
            this.doForests(a);
            this.sleepArbiters();
            this.midstep = !1;
            a = null;
            for (b = this.callbackset_list.next; null != b;) c = [b], null == c[0].arbiters.head ?
                (b = this.callbackset_list.inlined_erase(a), c = c[0], c.int1 = c.int2 = null, c.id = c.di = -1, c.freed = !0, null, c.next = A.ZPP_CallbackSet.zpp_pool, A.ZPP_CallbackSet.zpp_pool = c) : (a = [c[0].sleeping()], H.ZPP_CbSet.find_all(c[0].int1.cbSet, c[0].int2.cbSet, e.ZPP_Flags.id_CbEvent_ONGOING, function(a, b) {
                    return function(c) {
                        if ((!a[0] || c.allowSleepingCallbacks) && !b[0].empty_arb(c.itype)) {
                            var f = d.push_callback(c);
                            f.event = e.ZPP_Flags.id_CbEvent_ONGOING;
                            O.ZPP_Interactor.int_callback(b[0], c, f);
                            f.set = b[0]
                        }
                    }
                }(a, c)), a = b, b = b.next);
            for (; !this.callbacks.empty();) a = this.callbacks.pop(), a.listener.type == e.ZPP_Flags.id_ListenerType_BODY ? (c = a.listener.body, c.handler(a.wrapper_body())) : a.listener.type == e.ZPP_Flags.id_ListenerType_CONSTRAINT ? (c = a.listener.constraint, c.handler(a.wrapper_con())) : a.listener.type == e.ZPP_Flags.id_ListenerType_INTERACTION && (c = a.listener.interaction, c.handleri(a.wrapper_int())), c = a, c.int1 = c.int2 = null, c.body = null, c.constraint = null, c.listener = null, null != c.wrap_arbiters && (c.wrap_arbiters.zpp_inner.inner = null),
                c.set = null, c.next = H.ZPP_Callback.zpp_pool, H.ZPP_Callback.zpp_pool = c
        },
        push_callback: function(a) {
            var b;
            null == H.ZPP_Callback.zpp_pool ? b = new H.ZPP_Callback : (b = H.ZPP_Callback.zpp_pool, H.ZPP_Callback.zpp_pool = b.next, b.next = null);
            null;
            this.callbacks.push(b);
            b.listener = a;
            return b
        },
        remBody: function(a, b) {
            null == b && (b = -1);
            if (a.type == e.ZPP_Flags.id_BodyType_STATIC) {
                var c = a;
                c.world || (c.component.waket = this.stamp + (this.midstep ? 0 : 1), c.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (c.kinematicDelaySleep = !0), c.component.sleeping &&
                    this.really_wake(c, !0));
                this.staticsleep.remove(a)
            } else a.type == e.ZPP_Flags.id_BodyType_DYNAMIC ? (c = a, c.world || (c.component.waket = this.stamp + (this.midstep ? 0 : 1), c.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (c.kinematicDelaySleep = !0), c.component.sleeping && this.really_wake(c, !0)), this.live.remove(a)) : (b != e.ZPP_Flags.id_BodyType_KINEMATIC && this.kinematics.remove(a), c = a, c.world || (c.component.waket = this.stamp + (this.midstep ? 0 : 1), c.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (c.kinematicDelaySleep = !0), c.component.sleeping &&
                this.really_wake(c, !0)), this.staticsleep.remove(a));
            for (c = a.shapes.head; null != c;) this.removed_shape(c.elt, !0), c = c.next;
            a.removedFromSpace();
            a.space = null
        },
        addBody: function(a, b) {
            null == b && (b = -1);
            a.space = this;
            a.addedToSpace();
            a.component.sleeping = !0;
            a.world || (a.component.waket = this.stamp + (this.midstep ? 0 : 1), a.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (a.kinematicDelaySleep = !0), a.component.sleeping && this.really_wake(a, !0));
            for (var c = a.shapes.head; null != c;) this.added_shape(c.elt, !0), c = c.next;
            a.type == e.ZPP_Flags.id_BodyType_STATIC ?
                this.static_validation(a) : a.type != e.ZPP_Flags.id_BodyType_DYNAMIC && b != e.ZPP_Flags.id_BodyType_KINEMATIC && this.kinematics.add(a)
        },
        remCompound: function(a) {
            for (var b = a.bodies.head; null != b;) {
                var c = b.elt;
                this.remBody(c);
                b = b.next
            }
            for (b = a.constraints.head; null != b;) c = b.elt, this.remConstraint(c), b = b.next;
            for (b = a.compounds.head; null != b;) c = b.elt, this.remCompound(c), b = b.next;
            a.removedFromSpace();
            a.space = null
        },
        addCompound: function(a) {
            a.space = this;
            a.addedToSpace();
            for (var b = a.bodies.head; null != b;) {
                var c = b.elt;
                this.addBody(c);
                b = b.next
            }
            for (b = a.constraints.head; null != b;) c = b.elt, this.addConstraint(c), b = b.next;
            for (b = a.compounds.head; null != b;) c = b.elt, this.addCompound(c), b = b.next
        },
        remConstraint: function(a) {
            a.active && (this.wake_constraint(a, !0), this.live_constraints.remove(a));
            a.removedFromSpace();
            a.space = null
        },
        addConstraint: function(a) {
            a.space = this;
            a.addedToSpace();
            a.active && (a.component.sleeping = !0, this.wake_constraint(a, !0))
        },
        removed_shape: function(a, b) {
            null == b && (b = !1);
            var c = this,
                d = a.body;
            b || d.wake();
            for (var f =
                    null, g = d.arbiters.head; null != g;) {
                var h = [g.elt];
                if (h[0].ws1 == a || h[0].ws2 == a) {
                    if (0 != h[0].present) {
                        this.MRCA_chains(h[0].ws1, h[0].ws2);
                        for (g = this.mrca1.head; null != g;) {
                            for (var i = g.elt, j = this.mrca2.head; null != j;) {
                                var k = j.elt,
                                    m = i.cbSet,
                                    o = k.cbSet;
                                m.validate();
                                o.validate();
                                null != m.manager.pair(m, o).listeners.head && (k = [O.ZPP_Interactor.get(i, k)], k[0].remove_arb(h[0]), h[0].present--, m.manager.pair(m, o).forall(e.ZPP_Flags.id_CbEvent_END, function(a, b) {
                                    return function(d) {
                                        if (0 != (d.itype & b[0].type) && a[0].empty_arb(d.itype)) {
                                            var f =
                                                c.push_callback(d);
                                            f.event = e.ZPP_Flags.id_CbEvent_END;
                                            O.ZPP_Interactor.int_callback(a[0], d, f);
                                            f.set = a[0]
                                        }
                                    }
                                }(k, h)), null == k[0].arbiters.head && this.remove_callbackset(k[0]));
                                j = j.next
                            }
                            g = g.next
                        }
                    }
                    h[0].b1 != d && h[0].b1.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (g = h[0].b1, g.world || (g.component.waket = this.stamp + (this.midstep ? 0 : 1), g.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (g.kinematicDelaySleep = !0), g.component.sleeping && this.really_wake(g, !1)));
                    h[0].b2 != d && h[0].b2.type == e.ZPP_Flags.id_BodyType_DYNAMIC && (g = h[0].b2,
                        g.world || (g.component.waket = this.stamp + (this.midstep ? 0 : 1), g.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (g.kinematicDelaySleep = !0), g.component.sleeping && this.really_wake(g, !1)));
                    h[0].cleared = !0;
                    (null == d || h[0].b2 == d) && h[0].b1.arbiters.inlined_try_remove(h[0]);
                    (null == d || h[0].b1 == d) && h[0].b2.arbiters.inlined_try_remove(h[0]);
                    null != h[0].pair && (h[0].pair.arb = null, h[0].pair = null);
                    h[0].active = !1;
                    this.f_arbiters.modified = !0;
                    g = d.arbiters.erase(f)
                } else f = g, g = g.next
            }
            this.bphase.remove(a);
            a.removedFromSpace()
        },
        added_shape: function(a, b) {
            null == b && (b = !1);
            if (!b) {
                var c = a.body;
                c.world || (c.component.waket = this.stamp + (this.midstep ? 0 : 1), c.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (c.kinematicDelaySleep = !0), c.component.sleeping && this.really_wake(c, !1))
            }
            this.bphase.insert(a);
            a.addedToSpace()
        },
        transmitType: function(a, b) {
            var c = a;
            c.world || (c.component.waket = this.stamp + (this.midstep ? 0 : 1), c.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (c.kinematicDelaySleep = !0), c.component.sleeping && this.really_wake(c, !1));
            a.type == e.ZPP_Flags.id_BodyType_DYNAMIC ?
                this.live.remove(a) : a.type == e.ZPP_Flags.id_BodyType_KINEMATIC ? (this.kinematics.remove(a), this.staticsleep.remove(a)) : a.type == e.ZPP_Flags.id_BodyType_STATIC && this.staticsleep.remove(a);
            a.type = b;
            a.type == e.ZPP_Flags.id_BodyType_KINEMATIC && this.kinematics.add(a);
            a.type == e.ZPP_Flags.id_BodyType_STATIC && this.static_validation(a);
            a.component.sleeping = !0;
            c = a;
            c.world || (c.component.waket = this.stamp + (this.midstep ? 0 : 1), c.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (c.kinematicDelaySleep = !0), c.component.sleeping &&
                this.really_wake(c, !0))
        },
        remove_callbackset: function(a) {
            a.lazydel = !0;
            a.int1.cbsets.inlined_try_remove(a);
            a.int2.cbsets.inlined_try_remove(a)
        },
        add_callbackset: function(a) {
            a.int1.cbsets.inlined_add(a);
            a.int2.cbsets.inlined_add(a);
            this.callbackset_list.inlined_add(a)
        },
        remListener: function(a) {
            null != a.interaction && null;
            a.removedFromSpace();
            a.space = null
        },
        addListener: function(a) {
            a.space = this;
            a.addedToSpace();
            null != a.interaction && null
        },
        listeners_subber: function(a) {
            this.remListener(a.zpp_inner)
        },
        listeners_adder: function(a) {
            return a.zpp_inner.space !=
                this ? (null != a.zpp_inner.space && a.zpp_inner.space.outer.zpp_inner.wrap_listeners.remove(a), this.addListener(a.zpp_inner), !0) : !1
        },
        constraints_subber: function(a) {
            this.remConstraint(a.zpp_inner)
        },
        constraints_adder: function(a) {
            return a.zpp_inner.space != this ? (null != a.zpp_inner.space && a.zpp_inner.space.outer.zpp_inner.wrap_constraints.remove(a), this.addConstraint(a.zpp_inner), !0) : !1
        },
        compounds_subber: function(a) {
            this.remCompound(a.zpp_inner)
        },
        compounds_adder: function(a) {
            return a.zpp_inner.space != this ? (null !=
                a.zpp_inner.space && a.zpp_inner.space.wrap_compounds.remove(a), this.addCompound(a.zpp_inner), !0) : !1
        },
        bodies_subber: function(a) {
            this.remBody(a.zpp_inner)
        },
        bodies_adder: function(a) {
            return a.zpp_inner.space != this ? (null != a.zpp_inner.space && a.zpp_inner.space.outer.zpp_inner.wrap_bodies.remove(a), this.addBody(a.zpp_inner), !0) : !1
        },
        clear: function() {
            for (; null != this.listeners.head;) {
                var a = this.listeners.pop_unsafe();
                this.remListener(a)
            }
            for (; null != this.callbackset_list.next;) {
                a = this.callbackset_list.pop_unsafe();
                a.arbiters.clear();
                var b = a;
                b.int1 = b.int2 = null;
                b.id = b.di = -1;
                b.freed = !0;
                null;
                b.next = A.ZPP_CallbackSet.zpp_pool;
                A.ZPP_CallbackSet.zpp_pool = b
            }
            for (; null != this.c_arbiters_true.head;) a = this.c_arbiters_true.pop_unsafe(), a.retire();
            for (; null != this.c_arbiters_false.head;) a = this.c_arbiters_false.pop_unsafe(), a.retire();
            for (; null != this.s_arbiters.head;) a = this.s_arbiters.pop_unsafe(), a.retire();
            for (; null != this.f_arbiters.head;) a = this.f_arbiters.pop_unsafe(), a.retire();
            for (this.bphase.clear(); null != this.bodies.head;) {
                var c =
                    this.bodies.pop_unsafe();
                if (null != c.component && (b = c.component.island, null != b)) {
                    for (; null != b.comps.head;) a = b.comps.pop_unsafe(), a.sleeping = !1, a.island = null, a.parent = a, a.rank = 0;
                    b.next = A.ZPP_Island.zpp_pool;
                    A.ZPP_Island.zpp_pool = b
                }
                c.removedFromSpace();
                c.space = null
            }
            for (; null != this.constraints.head;) {
                a = this.constraints.pop_unsafe();
                if (null != a.component && (b = a.component.island, null != b)) {
                    for (; null != b.comps.head;) c = b.comps.pop_unsafe(), c.sleeping = !1, c.island = null, c.parent = c, c.rank = 0;
                    b.next = A.ZPP_Island.zpp_pool;
                    A.ZPP_Island.zpp_pool = b
                }
                a.removedFromSpace();
                a.space = null
            }
            this.kinematics.clear();
            for (var d = new e.ZNPList_ZPP_Compound; null != this.compounds.head;) a = this.compounds.pop_unsafe(), d.add(a);
            for (; null != d.head;) {
                var f = d.pop_unsafe();
                f.removedFromSpace();
                f.space = null;
                for (var g = f.bodies.head; null != g;) {
                    c = g.elt;
                    if (null != c.component && (b = c.component.island, null != b)) {
                        for (; null != b.comps.head;) a = b.comps.pop_unsafe(), a.sleeping = !1, a.island = null, a.parent = a, a.rank = 0;
                        b.next = A.ZPP_Island.zpp_pool;
                        A.ZPP_Island.zpp_pool =
                            b
                    }
                    c.removedFromSpace();
                    c.space = null;
                    g = g.next
                }
                for (g = f.constraints.head; null != g;) {
                    a = g.elt;
                    if (null != a.component && (b = a.component.island, null != b)) {
                        for (; null != b.comps.head;) c = b.comps.pop_unsafe(), c.sleeping = !1, c.island = null, c.parent = c, c.rank = 0;
                        b.next = A.ZPP_Island.zpp_pool;
                        A.ZPP_Island.zpp_pool = b
                    }
                    a.removedFromSpace();
                    a.space = null;
                    g = g.next
                }
                for (g = f.compounds.head; null != g;) b = g.elt, d.add(b), g = g.next
            }
            this.staticsleep.clear();
            this.live.clear();
            this.live_constraints.clear();
            this.time = this.stamp = 0;
            this.mrca1.clear();
            this.mrca2.clear();
            this.prelisteners.clear();
            this.cbsets.clear()
        },
        gravity_validate: function() {
            this.wrap_gravity.zpp_inner.x = this.gravityx;
            this.wrap_gravity.zpp_inner.y = this.gravityy
        },
        gravity_invalidate: function(a) {
            this.gravityx = a.x;
            this.gravityy = a.y;
            for (var a = new e.ZNPList_ZPP_Compound, b = this.bodies.head; null != b;) {
                var c = b.elt;
                c.world || (c.component.waket = this.stamp + (this.midstep ? 0 : 1), c.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (c.kinematicDelaySleep = !0), c.component.sleeping && this.really_wake(c, !1));
                b = b.next
            }
            for (b = this.compounds.head; null != b;) {
                var d = b.elt;
                a.add(d);
                b = b.next
            }
            for (; null != a.head;) {
                d = a.pop_unsafe();
                for (b = d.bodies.head; null != b;) c = b.elt, c.world || (c.component.waket = this.stamp + (this.midstep ? 0 : 1), c.type == e.ZPP_Flags.id_BodyType_KINEMATIC && (c.kinematicDelaySleep = !0), c.component.sleeping && this.really_wake(c, !1)), b = b.next;
                for (b = d.compounds.head; null != b;) d = b.elt, a.add(d), b = b.next
            }
        },
        getgravity: function() {
            this.wrap_gravity = u.Vec2.get(this.gravityx, this.gravityy, null);
            this.wrap_gravity.zpp_inner._inuse = !0;
            this.wrap_gravity.zpp_inner._invalidate = w(this, this.gravity_invalidate);
            this.wrap_gravity.zpp_inner._validate = w(this, this.gravity_validate)
        },
        __class__: A.ZPP_Space
    };
    A.ZPP_SweepData = function() {
        this.next = this.prev = this.shape = this.aabb = null
    };
    j["zpp_nape.space.ZPP_SweepData"] = A.ZPP_SweepData;
    A.ZPP_SweepData.__name__ = ["zpp_nape", "space", "ZPP_SweepData"];
    A.ZPP_SweepData.prototype = {
        __class__: A.ZPP_SweepData
    };
    A.ZPP_SweepPhase = function(a) {
        this.list = this.failed = null;
        this.space = a;
        this.is_sweep = !0;
        this.sweep =
            this
    };
    j["zpp_nape.space.ZPP_SweepPhase"] = A.ZPP_SweepPhase;
    A.ZPP_SweepPhase.__name__ = ["zpp_nape", "space", "ZPP_SweepPhase"];
    A.ZPP_SweepPhase.__super__ = A.ZPP_Broadphase;
    A.ZPP_SweepPhase.prototype = C(A.ZPP_Broadphase.prototype, {
        rayMultiCast: function(a, b, c, d) {
            this.sync_broadphase();
            a.validate_dir();
            var f = a.rayAABB(),
                d = null == d ? new u.RayResultList : d;
            if (0 == a.dirx)
                for (var g = this.list; null != g && g.aabb.minx <= f.minx;) {
                    if (g.aabb.intersect(f) && (null == c || g.shape.filter.shouldCollide(c))) {
                        var h = a.aabbsect(g.aabb);
                        0 <= h && (g.shape.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? a.circlesect2(g.shape.circle, b, d) : a.polysect2(g.shape.polygon, b, d))
                    }
                    g = g.next
                } else if (0 > a.dirx) {
                    g = this.list;
                    for (h = null; null != g && g.aabb.minx <= f.maxx;) h = g, g = g.next;
                    for (g = h; null != g;) {
                        if (g.aabb.intersect(f) && (null == c || g.shape.filter.shouldCollide(c))) h = a.aabbsect(g.aabb), 0 <= h && (g.shape.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? a.circlesect2(g.shape.circle, b, d) : a.polysect2(g.shape.polygon, b, d));
                        g = g.prev
                    }
                } else
                    for (g = this.list; null != g && g.aabb.minx <= f.maxx;) {
                        if (g.aabb.intersect(f) &&
                            (null == c || g.shape.filter.shouldCollide(c))) h = a.aabbsect(g.aabb), 0 <= h && (g.shape.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? a.circlesect2(g.shape.circle, b, d) : a.polysect2(g.shape.polygon, b, d));
                        g = g.next
                    }
            null != f.outer && (f.outer.zpp_inner = null, f.outer = null);
            f.wrap_min = f.wrap_max = null;
            f._invalidate = null;
            f._validate = null;
            f.next = q.ZPP_AABB.zpp_pool;
            q.ZPP_AABB.zpp_pool = f;
            return d
        },
        rayCast: function(a, b, c) {
            this.sync_broadphase();
            a.validate_dir();
            var d = a.rayAABB(),
                f = a.maxdist,
                g = null;
            if (0 == a.dirx)
                for (var h = this.list; null !=
                    h && h.aabb.minx <= d.minx;) {
                    if (h.aabb.intersect(d) && (null == c || h.shape.filter.shouldCollide(c))) {
                        var i = a.aabbsect(h.aabb);
                        0 <= i && i < f && (i = h.shape.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? a.circlesect(h.shape.circle, b, f) : a.polysect(h.shape.polygon, b, f), null != i && (f = i.zpp_inner.toiDistance, null != g && g.zpp_inner.free(), g = i))
                    }
                    h = h.next
                } else if (0 > a.dirx) {
                    h = this.list;
                    for (i = null; null != h && h.aabb.minx <= d.maxx;) i = h, h = h.next;
                    for (h = i; null != h;) {
                        if (h.aabb.intersect(d) && (null == c || h.shape.filter.shouldCollide(c))) i = a.aabbsect(h.aabb),
                            0 <= i && i < f && (i = h.shape.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? a.circlesect(h.shape.circle, b, f) : a.polysect(h.shape.polygon, b, f), null != i && (f = i.zpp_inner.toiDistance, null != g && g.zpp_inner.free(), g = i));
                        h = h.prev
                    }
                } else
                    for (h = this.list; null != h && h.aabb.minx <= d.maxx && h.aabb.minx < a.originx + a.dirx * f;) {
                        if (h.aabb.intersect(d) && (null == c || h.shape.filter.shouldCollide(c))) i = a.aabbsect(h.aabb), 0 <= i && i < f && (i = h.shape.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? a.circlesect(h.shape.circle, b, f) : a.polysect(h.shape.polygon, b, f),
                            null != i && (f = i.zpp_inner.toiDistance, null != g && g.zpp_inner.free(), g = i));
                        h = h.next
                    }
            null != d.outer && (d.outer.zpp_inner = null, d.outer = null);
            d.wrap_min = d.wrap_max = null;
            d._invalidate = null;
            d._validate = null;
            d.next = q.ZPP_AABB.zpp_pool;
            q.ZPP_AABB.zpp_pool = d;
            return g
        },
        bodiesInShape: function(a, b, c, d) {
            this.sync_broadphase();
            this.validateShape(a);
            var e = a.aabb,
                d = null == d ? new B.BodyList : d;
            null == this.failed && (this.failed = new B.BodyList);
            for (var g = this.list; null != g && g.aabb.maxx < e.minx;) g = g.next;
            for (; null != g && g.aabb.minx <=
                e.maxx;) {
                if (g.aabb.intersect(e)) {
                    var h = g.shape,
                        i = h.body.outer;
                    if (null == c || h.filter.shouldCollide(c)) b ? this.failed.has(i) || (h = q.ZPP_Collide.containTest(a, h), !d.has(i) && h ? d.push(i) : h || (d.remove(i), this.failed.push(i))) : !d.has(i) && q.ZPP_Collide.testCollide_safe(a, h) && d.push(i)
                }
                g = g.next
            }
            this.failed.clear();
            return d
        },
        shapesInShape: function(a, b, c, d) {
            this.sync_broadphase();
            this.validateShape(a);
            for (var e = a.aabb, d = null == d ? new L.ShapeList : d, g = this.list; null != g && g.aabb.maxx < e.minx;) g = g.next;
            for (; null != g && g.aabb.minx <=
                e.maxx;) {
                if (g.aabb.intersect(e)) {
                    var h = g.shape;
                    if (null == c || h.filter.shouldCollide(c)) b ? q.ZPP_Collide.containTest(a, h) && d.push(h.outer) : q.ZPP_Collide.testCollide_safe(h, a) && d.push(h.outer)
                }
                g = g.next
            }
            return d
        },
        bodiesInCircle: function(a, b, c, d, e, g) {
            this.sync_broadphase();
            this.updateCircShape(a, b, c);
            a = this.circShape.zpp_inner.aabb;
            g = null == g ? new B.BodyList : g;
            null == this.failed && (this.failed = new B.BodyList);
            for (b = this.list; null != b && b.aabb.maxx < a.minx;) b = b.next;
            for (; null != b && b.aabb.minx <= a.maxx;) {
                if (b.aabb.intersect(a)) {
                    var h =
                        b.shape,
                        c = h.body.outer;
                    if (null == e || h.filter.shouldCollide(e)) d ? this.failed.has(c) || (h = q.ZPP_Collide.containTest(this.circShape.zpp_inner, h), !g.has(c) && h ? g.push(c) : h || (g.remove(c), this.failed.push(c))) : !g.has(c) && q.ZPP_Collide.testCollide_safe(h, this.circShape.zpp_inner) && g.push(c)
                }
                b = b.next
            }
            this.failed.clear();
            return g
        },
        shapesInCircle: function(a, b, c, d, e, g) {
            this.sync_broadphase();
            this.updateCircShape(a, b, c);
            a = this.circShape.zpp_inner.aabb;
            g = null == g ? new L.ShapeList : g;
            for (b = this.list; null != b && b.aabb.maxx <
                a.minx;) b = b.next;
            for (; null != b && b.aabb.minx <= a.maxx;) {
                if (b.aabb.intersect(a) && (c = b.shape, null == e || c.filter.shouldCollide(e))) d ? q.ZPP_Collide.containTest(this.circShape.zpp_inner, c) && g.push(c.outer) : q.ZPP_Collide.testCollide_safe(c, this.circShape.zpp_inner) && g.push(c.outer);
                b = b.next
            }
            return g
        },
        bodiesInAABB: function(a, b, c, d, e) {
            this.sync_broadphase();
            this.updateAABBShape(a);
            a = this.aabbShape.zpp_inner.aabb;
            e = null == e ? new B.BodyList : e;
            null == this.failed && (this.failed = new B.BodyList);
            for (var g = this.list; null !=
                g && g.aabb.maxx < a.minx;) g = g.next;
            for (; null != g && g.aabb.minx <= a.maxx;) {
                var h = g.shape,
                    i = h.body.outer;
                if (g.aabb.intersect(a) && (null == d || h.filter.shouldCollide(d))) b ? c ? this.failed.has(i) || (h = q.ZPP_Collide.containTest(this.aabbShape.zpp_inner, h), !e.has(i) && h ? e.push(i) : h || (e.remove(i), this.failed.push(i))) : !e.has(i) && q.ZPP_Collide.testCollide_safe(h, this.aabbShape.zpp_inner) && e.push(i) : c ? this.failed.has(i) || (h = a.contains(h.aabb), !e.has(i) && h ? e.push(i) : h || (e.remove(i), this.failed.push(i))) : !e.has(i) && a.contains(h.aabb) &&
                    e.push(i);
                g = g.next
            }
            this.failed.clear();
            return e
        },
        shapesInAABB: function(a, b, c, d, e) {
            this.sync_broadphase();
            this.updateAABBShape(a);
            for (var a = this.aabbShape.zpp_inner.aabb, e = null == e ? new L.ShapeList : e, g = this.list; null != g && g.aabb.maxx < a.minx;) g = g.next;
            for (; null != g && g.aabb.minx <= a.maxx;) {
                var h = g.shape;
                if (null == d || h.filter.shouldCollide(d)) b ? c ? q.ZPP_Collide.containTest(this.aabbShape.zpp_inner, h) && e.push(h.outer) : a.contains(g.aabb) ? e.push(h.outer) : g.aabb.intersect(a) && q.ZPP_Collide.testCollide_safe(h, this.aabbShape.zpp_inner) &&
                    e.push(h.outer) : (c ? a.contains(g.aabb) : g.aabb.intersect(a)) && e.push(h.outer);
                g = g.next
            }
            return e
        },
        bodiesUnderPoint: function(a, b, c, d) {
            this.sync_broadphase();
            for (var f = q.ZPP_Vec2.get(a, b, null), d = null == d ? new B.BodyList : d, g = this.list; null != g && g.aabb.minx > a;) g = g.next;
            for (; null != g && g.aabb.minx <= a;) {
                if (g.aabb.maxx >= a && g.aabb.miny <= b && g.aabb.maxy >= b) {
                    var h = g.shape,
                        i = h.body.outer;
                    if (!d.has(i) && (null == c || h.filter.shouldCollide(c))) h.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? q.ZPP_Collide.circleContains(h.circle, f) &&
                        d.push(i) : q.ZPP_Collide.polyContains(h.polygon, f) && d.push(i)
                }
                g = g.next
            }
            null != f.outer && (f.outer.zpp_inner = null, f.outer = null);
            f._isimmutable = null;
            f._validate = null;
            f._invalidate = null;
            f.next = q.ZPP_Vec2.zpp_pool;
            q.ZPP_Vec2.zpp_pool = f;
            return d
        },
        shapesUnderPoint: function(a, b, c, d) {
            this.sync_broadphase();
            for (var f = q.ZPP_Vec2.get(a, b, null), d = null == d ? new L.ShapeList : d, g = this.list; null != g && g.aabb.minx > a;) g = g.next;
            for (; null != g && g.aabb.minx <= a;) {
                if (g.aabb.maxx >= a && g.aabb.miny <= b && g.aabb.maxy >= b) {
                    var h = g.shape;
                    if (null ==
                        c || h.filter.shouldCollide(c)) h.type == e.ZPP_Flags.id_ShapeType_CIRCLE ? q.ZPP_Collide.circleContains(h.circle, f) && d.push(h.outer) : q.ZPP_Collide.polyContains(h.polygon, f) && d.push(h.outer)
                }
                g = g.next
            }
            null != f.outer && (f.outer.zpp_inner = null, f.outer = null);
            f._isimmutable = null;
            f._validate = null;
            f._invalidate = null;
            f.next = q.ZPP_Vec2.zpp_pool;
            q.ZPP_Vec2.zpp_pool = f;
            return d
        },
        clear: function() {
            for (; null != this.list;) this.list.shape.removedFromSpace(), this.__remove(this.list.shape)
        },
        broadphase: function(a, b) {
            if (null !=
                this.list) {
                this.sync_broadphase_fast();
                for (var c = this.list; null != c;) {
                    for (var d = c.next, f = c.shape, g = f.body, h = c.aabb.maxx; null != d && !(d.aabb.minx > h);) {
                        var i = d.shape,
                            j = i.body;
                        if (j != g && !(g.type == e.ZPP_Flags.id_BodyType_STATIC && j.type == e.ZPP_Flags.id_BodyType_STATIC) && (!g.component.sleeping || !j.component.sleeping)) f.aabb.intersectY(i.aabb) && (b ? a.narrowPhase(f, i, g.type != e.ZPP_Flags.id_BodyType_DYNAMIC || j.type != e.ZPP_Flags.id_BodyType_DYNAMIC, null, !1) : a.continuousEvent(f, i, g.type != e.ZPP_Flags.id_BodyType_DYNAMIC ||
                            j.type != e.ZPP_Flags.id_BodyType_DYNAMIC, null, !1));
                        d = d.next
                    }
                    c = c.next
                }
            }
        },
        sync_broadphase_fast: function() {
            for (var a = this.list.next; null != a;) {
                var b = a.next,
                    c = a.prev;
                if (!(a.aabb.minx > c.aabb.minx)) {
                    for (; null != c.prev && c.prev.aabb.minx > a.aabb.minx;) c = c.prev;
                    var d = a.prev;
                    d.next = a.next;
                    null != a.next && (a.next.prev = d);
                    null == c.prev ? (a.prev = null, this.list = a, a.next = c, c.prev = a) : (a.prev = c.prev, c.prev = a, a.prev.next = a, a.next = c)
                }
                a = b
            }
        },
        sync_broadphase: function() {
            this.space.validation();
            null != this.list && this.sync_broadphase_fast()
        },
        __remove: function(a) {
            var b = a.sweep;
            null == b.prev ? this.list = b.next : b.prev.next = b.next;
            null != b.next && (b.next.prev = b.prev);
            a.sweep = null;
            b.prev = null;
            b.shape = null;
            b.aabb = null;
            b.next = A.ZPP_SweepData.zpp_pool;
            A.ZPP_SweepData.zpp_pool = b
        },
        __insert: function(a) {
            var b;
            null == A.ZPP_SweepData.zpp_pool ? b = new A.ZPP_SweepData : (b = A.ZPP_SweepData.zpp_pool, A.ZPP_SweepData.zpp_pool = b.next, b.next = null);
            null;
            a.sweep = b;
            b.shape = a;
            b.aabb = a.aabb;
            b.next = this.list;
            null != this.list && (this.list.prev = b);
            this.list = b
        },
        __class__: A.ZPP_SweepPhase
    });
    e.ZPP_Flags = function() {};
    j["zpp_nape.util.ZPP_Flags"] = e.ZPP_Flags;
    e.ZPP_Flags.__name__ = ["zpp_nape", "util", "ZPP_Flags"];
    e.ZNPList_ZPP_Shape = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_Shape"] = e.ZNPList_ZPP_Shape;
    e.ZNPList_ZPP_Shape.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Shape"];
    e.ZNPList_ZPP_Shape.prototype = {
        iterator_at: function(a) {
            for (var b = this.head; 0 < a-- && null != b;) b = b.next;
            return b
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head,
                this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Shape.zpp_pool;
            e.ZNPNode_ZPP_Shape.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        erase: function(a) {
            return this.inlined_erase(a)
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop: function() {
            var a =
                this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Shape.zpp_pool;
            e.ZNPNode_ZPP_Shape.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_insert: function(a, b) {
            var c;
            null == e.ZNPNode_ZPP_Shape.zpp_pool ? c = new e.ZNPNode_ZPP_Shape : (c = e.ZNPNode_ZPP_Shape.zpp_pool, e.ZNPNode_ZPP_Shape.zpp_pool = c.next, c.next = null);
            null;
            c.elt = b;
            null == a ? (c.next = this.head, this.head = c) : (c.next = a.next, a.next = c);
            this.pushmod = this.modified = !0;
            this.length++;
            return c
        },
        insert: function(a, b) {
            return this.inlined_insert(a, b)
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_Shape.zpp_pool ? b = new e.ZNPNode_ZPP_Shape : (b = e.ZNPNode_ZPP_Shape.zpp_pool, e.ZNPNode_ZPP_Shape.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_Shape
    };
    e.ZNPList_ZPP_CallbackSet = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_CallbackSet"] =
        e.ZNPList_ZPP_CallbackSet;
    e.ZNPList_ZPP_CallbackSet.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_CallbackSet"];
    e.ZNPList_ZPP_CallbackSet.prototype = {
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_CallbackSet.zpp_pool;
            e.ZNPNode_ZPP_CallbackSet.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        inlined_try_remove: function(a) {
            for (var b =
                    null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_CallbackSet.zpp_pool ? b = new e.ZNPNode_ZPP_CallbackSet : (b = e.ZNPNode_ZPP_CallbackSet.zpp_pool, e.ZNPNode_ZPP_CallbackSet.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        __class__: e.ZNPList_ZPP_CallbackSet
    };
    e.ZNPList_ZPP_Arbiter = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head =
            null
    };
    j["zpp_nape.util.ZNPList_ZPP_Arbiter"] = e.ZNPList_ZPP_Arbiter;
    e.ZNPList_ZPP_Arbiter.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Arbiter"];
    e.ZNPList_ZPP_Arbiter.prototype = {
        iterator_at: function(a) {
            for (var b = this.head; 0 < a-- && null != b;) b = b.next;
            return b
        },
        inlined_has: function(a) {
            var b;
            b = !1;
            for (var c = this.head; null != c;) {
                if (c.elt == a) {
                    b = !0;
                    break
                }
                c = c.next
            }
            return b
        },
        clear: function() {
            for (; null != this.head;) this.inlined_pop();
            this.pushmod = !0
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c =
                b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Arbiter.zpp_pool;
            e.ZNPNode_ZPP_Arbiter.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        erase: function(a) {
            return this.inlined_erase(a)
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop_unsafe: function() {
            var a =
                this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Arbiter.zpp_pool;
            e.ZNPNode_ZPP_Arbiter.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_insert: function(a, b) {
            var c;
            null == e.ZNPNode_ZPP_Arbiter.zpp_pool ? c = new e.ZNPNode_ZPP_Arbiter : (c = e.ZNPNode_ZPP_Arbiter.zpp_pool, e.ZNPNode_ZPP_Arbiter.zpp_pool = c.next,
                c.next = null);
            null;
            c.elt = b;
            null == a ? (c.next = this.head, this.head = c) : (c.next = a.next, a.next = c);
            this.pushmod = this.modified = !0;
            this.length++;
            return c
        },
        insert: function(a, b) {
            return this.inlined_insert(a, b)
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_Arbiter.zpp_pool ? b = new e.ZNPNode_ZPP_Arbiter : (b = e.ZNPNode_ZPP_Arbiter.zpp_pool, e.ZNPNode_ZPP_Arbiter.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_Arbiter
    };
    e.ZNPList_ZPP_Body = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_Body"] = e.ZNPList_ZPP_Body;
    e.ZNPList_ZPP_Body.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Body"];
    e.ZNPList_ZPP_Body.prototype = {
        iterator_at: function(a) {
            for (var b = this.head; 0 < a-- && null != b;) b = b.next;
            return b
        },
        inlined_has: function(a) {
            var b;
            b = !1;
            for (var c = this.head; null != c;) {
                if (c.elt == a) {
                    b = !0;
                    break
                }
                c = c.next
            }
            return b
        },
        has: function(a) {
            return this.inlined_has(a)
        },
        clear: function() {
            for (; null != this.head;) this.inlined_pop();
            this.pushmod = !0
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Body.zpp_pool;
            e.ZNPNode_ZPP_Body.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        erase: function(a) {
            return this.inlined_erase(a)
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt ==
                    a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Body.zpp_pool;
            e.ZNPNode_ZPP_Body.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_insert: function(a, b) {
            var c;
            null == e.ZNPNode_ZPP_Body.zpp_pool ? c = new e.ZNPNode_ZPP_Body : (c = e.ZNPNode_ZPP_Body.zpp_pool, e.ZNPNode_ZPP_Body.zpp_pool = c.next, c.next = null);
            null;
            c.elt = b;
            null == a ? (c.next = this.head, this.head = c) : (c.next = a.next, a.next = c);
            this.pushmod = this.modified = !0;
            this.length++;
            return c
        },
        insert: function(a, b) {
            return this.inlined_insert(a, b)
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_Body.zpp_pool ? b = new e.ZNPNode_ZPP_Body : (b = e.ZNPNode_ZPP_Body.zpp_pool, e.ZNPNode_ZPP_Body.zpp_pool = b.next, b.next = null);
            null;
            b.elt =
                a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_Body
    };
    e.ZNPList_ZPP_Compound = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_Compound"] = e.ZNPList_ZPP_Compound;
    e.ZNPList_ZPP_Compound.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Compound"];
    e.ZNPList_ZPP_Compound.prototype = {
        iterator_at: function(a) {
            for (var b = this.head; 0 < a-- && null != b;) b = b.next;
            return b
        },
        inlined_erase: function(a) {
            var b,
                c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Compound.zpp_pool;
            e.ZNPNode_ZPP_Compound.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop_unsafe: function() {
            var a =
                this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Compound.zpp_pool;
            e.ZNPNode_ZPP_Compound.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_insert: function(a, b) {
            var c;
            null == e.ZNPNode_ZPP_Compound.zpp_pool ? c = new e.ZNPNode_ZPP_Compound : (c = e.ZNPNode_ZPP_Compound.zpp_pool, e.ZNPNode_ZPP_Compound.zpp_pool =
                c.next, c.next = null);
            null;
            c.elt = b;
            null == a ? (c.next = this.head, this.head = c) : (c.next = a.next, a.next = c);
            this.pushmod = this.modified = !0;
            this.length++;
            return c
        },
        insert: function(a, b) {
            return this.inlined_insert(a, b)
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_Compound.zpp_pool ? b = new e.ZNPNode_ZPP_Compound : (b = e.ZNPNode_ZPP_Compound.zpp_pool, e.ZNPNode_ZPP_Compound.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_Compound
    };
    e.ZNPList_ZPP_CbSetPair = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_CbSetPair"] = e.ZNPList_ZPP_CbSetPair;
    e.ZNPList_ZPP_CbSetPair.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_CbSetPair"];
    e.ZNPList_ZPP_CbSetPair.prototype = {
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_CbSetPair.zpp_pool;
            e.ZNPNode_ZPP_CbSetPair.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_CbSetPair.zpp_pool;
            e.ZNPNode_ZPP_CbSetPair.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_CbSetPair.zpp_pool ? b = new e.ZNPNode_ZPP_CbSetPair : (b = e.ZNPNode_ZPP_CbSetPair.zpp_pool, e.ZNPNode_ZPP_CbSetPair.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_CbSetPair
    };
    e.ZNPList_ZPP_AABBPair =
        function() {
            this.length = 0;
            this.modified = this.pushmod = !1;
            this.head = null
        };
    j["zpp_nape.util.ZNPList_ZPP_AABBPair"] = e.ZNPList_ZPP_AABBPair;
    e.ZNPList_ZPP_AABBPair.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_AABBPair"];
    e.ZNPList_ZPP_AABBPair.prototype = {
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_AABBPair.zpp_pool;
            e.ZNPNode_ZPP_AABBPair.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_AABBPair.zpp_pool;
            e.ZNPNode_ZPP_AABBPair.zpp_pool = a;
            null ==
                this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_AABBPair.zpp_pool ? b = new e.ZNPNode_ZPP_AABBPair : (b = e.ZNPNode_ZPP_AABBPair.zpp_pool, e.ZNPNode_ZPP_AABBPair.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        __class__: e.ZNPList_ZPP_AABBPair
    };
    e.ZNPList_ZPP_Edge = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_Edge"] =
        e.ZNPList_ZPP_Edge;
    e.ZNPList_ZPP_Edge.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Edge"];
    e.ZNPList_ZPP_Edge.prototype = {
        iterator_at: function(a) {
            for (var b = this.head; 0 < a-- && null != b;) b = b.next;
            return b
        },
        reverse: function() {
            for (var a = this.head, b = null; null != a;) {
                var c = a.next;
                a.next = b;
                b = this.head = a;
                a = c
            }
            this.pushmod = this.modified = !0
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Edge.zpp_pool;
            e.ZNPNode_ZPP_Edge.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        erase: function(a) {
            return this.inlined_erase(a)
        },
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Edge.zpp_pool;
            e.ZNPNode_ZPP_Edge.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_insert: function(a, b) {
            var c;
            null == e.ZNPNode_ZPP_Edge.zpp_pool ? c = new e.ZNPNode_ZPP_Edge : (c = e.ZNPNode_ZPP_Edge.zpp_pool, e.ZNPNode_ZPP_Edge.zpp_pool = c.next, c.next = null);
            null;
            c.elt = b;
            null == a ? (c.next = this.head, this.head = c) : (c.next = a.next, a.next = c);
            this.pushmod = this.modified = !0;
            this.length++;
            return c
        },
        insert: function(a, b) {
            return this.inlined_insert(a, b)
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_Edge.zpp_pool ? b = new e.ZNPNode_ZPP_Edge : (b = e.ZNPNode_ZPP_Edge.zpp_pool, e.ZNPNode_ZPP_Edge.zpp_pool =
                b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_Edge
    };
    e.ZNPList_ZPP_AABBNode = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_AABBNode"] = e.ZNPList_ZPP_AABBNode;
    e.ZNPList_ZPP_AABBNode.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_AABBNode"];
    e.ZNPList_ZPP_AABBNode.prototype = {
        clear: function() {
            for (; null != this.head;) this.inlined_pop();
            this.pushmod = !0
        },
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_AABBNode.zpp_pool;
            e.ZNPNode_ZPP_AABBNode.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_insert: function(a, b) {
            var c;
            null == e.ZNPNode_ZPP_AABBNode.zpp_pool ? c = new e.ZNPNode_ZPP_AABBNode : (c = e.ZNPNode_ZPP_AABBNode.zpp_pool,
                e.ZNPNode_ZPP_AABBNode.zpp_pool = c.next, c.next = null);
            null;
            c.elt = b;
            null == a ? (c.next = this.head, this.head = c) : (c.next = a.next, a.next = c);
            this.pushmod = this.modified = !0;
            this.length++;
            return c
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_AABBNode.zpp_pool ? b = new e.ZNPNode_ZPP_AABBNode : (b = e.ZNPNode_ZPP_AABBNode.zpp_pool, e.ZNPNode_ZPP_AABBNode.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_AABBNode
    };
    e.ZNPList_ZPP_Component = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_Component"] = e.ZNPList_ZPP_Component;
    e.ZNPList_ZPP_Component.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Component"];
    e.ZNPList_ZPP_Component.prototype = {
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Component.zpp_pool;
            e.ZNPNode_ZPP_Component.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_Component.zpp_pool ? b = new e.ZNPNode_ZPP_Component : (b = e.ZNPNode_ZPP_Component.zpp_pool, e.ZNPNode_ZPP_Component.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        __class__: e.ZNPList_ZPP_Component
    };
    e.ZNPList_ZPP_InteractionGroup = function() {
        this.length = 0;
        this.modified =
            this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_InteractionGroup"] = e.ZNPList_ZPP_InteractionGroup;
    e.ZNPList_ZPP_InteractionGroup.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_InteractionGroup"];
    e.ZNPList_ZPP_InteractionGroup.prototype = {
        iterator_at: function(a) {
            for (var b = this.head; 0 < a-- && null != b;) b = b.next;
            return b
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_InteractionGroup.zpp_pool;
            e.ZNPNode_ZPP_InteractionGroup.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_InteractionGroup.zpp_pool ? b = new e.ZNPNode_ZPP_InteractionGroup : (b = e.ZNPNode_ZPP_InteractionGroup.zpp_pool, e.ZNPNode_ZPP_InteractionGroup.zpp_pool =
                b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_InteractionGroup
    };
    e.ZNPList_ZPP_ColArbiter = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_ColArbiter"] = e.ZNPList_ZPP_ColArbiter;
    e.ZNPList_ZPP_ColArbiter.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_ColArbiter"];
    e.ZNPList_ZPP_ColArbiter.prototype = {
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_ColArbiter.zpp_pool;
            e.ZNPNode_ZPP_ColArbiter.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null != c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop_unsafe: function() {
            var a =
                this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_ColArbiter.zpp_pool;
            e.ZNPNode_ZPP_ColArbiter.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_ColArbiter.zpp_pool ? b = new e.ZNPNode_ZPP_ColArbiter : (b = e.ZNPNode_ZPP_ColArbiter.zpp_pool, e.ZNPNode_ZPP_ColArbiter.zpp_pool =
                b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_ColArbiter
    };
    e.ZNPList_ZPP_FluidArbiter = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_FluidArbiter"] = e.ZNPList_ZPP_FluidArbiter;
    e.ZNPList_ZPP_FluidArbiter.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_FluidArbiter"];
    e.ZNPList_ZPP_FluidArbiter.prototype = {
        inlined_erase: function(a) {
            var b,
                c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_FluidArbiter.zpp_pool;
            e.ZNPNode_ZPP_FluidArbiter.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_FluidArbiter.zpp_pool;
            e.ZNPNode_ZPP_FluidArbiter.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_FluidArbiter.zpp_pool ? b = new e.ZNPNode_ZPP_FluidArbiter : (b = e.ZNPNode_ZPP_FluidArbiter.zpp_pool, e.ZNPNode_ZPP_FluidArbiter.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        __class__: e.ZNPList_ZPP_FluidArbiter
    };
    e.ZNPList_ZPP_SensorArbiter = function() {
        this.length =
            0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_SensorArbiter"] = e.ZNPList_ZPP_SensorArbiter;
    e.ZNPList_ZPP_SensorArbiter.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_SensorArbiter"];
    e.ZNPList_ZPP_SensorArbiter.prototype = {
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_SensorArbiter.zpp_pool;
            e.ZNPNode_ZPP_SensorArbiter.zpp_pool =
                a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_SensorArbiter.zpp_pool;
            e.ZNPNode_ZPP_SensorArbiter.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_SensorArbiter.zpp_pool ?
                b = new e.ZNPNode_ZPP_SensorArbiter : (b = e.ZNPNode_ZPP_SensorArbiter.zpp_pool, e.ZNPNode_ZPP_SensorArbiter.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        __class__: e.ZNPList_ZPP_SensorArbiter
    };
    e.ZNPList_ZPP_Listener = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_Listener"] = e.ZNPList_ZPP_Listener;
    e.ZNPList_ZPP_Listener.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_Listener"];
    e.ZNPList_ZPP_Listener.prototype = {
        iterator_at: function(a) {
            for (var b = this.head; 0 < a-- && null != b;) b = b.next;
            return b
        },
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head, this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Listener.zpp_pool;
            e.ZNPNode_ZPP_Listener.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        erase: function(a) {
            return this.inlined_erase(a)
        },
        inlined_try_remove: function(a) {
            for (var b = null, c = this.head, d = !1; null !=
                c;) {
                if (c.elt == a) {
                    this.inlined_erase(b);
                    d = !0;
                    break
                }
                b = c;
                c = c.next
            }
            return d
        },
        remove: function(a) {
            this.inlined_try_remove(a)
        },
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_Listener.zpp_pool;
            e.ZNPNode_ZPP_Listener.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_insert: function(a,
            b) {
            var c;
            null == e.ZNPNode_ZPP_Listener.zpp_pool ? c = new e.ZNPNode_ZPP_Listener : (c = e.ZNPNode_ZPP_Listener.zpp_pool, e.ZNPNode_ZPP_Listener.zpp_pool = c.next, c.next = null);
            null;
            c.elt = b;
            null == a ? (c.next = this.head, this.head = c) : (c.next = a.next, a.next = c);
            this.pushmod = this.modified = !0;
            this.length++;
            return c
        },
        insert: function(a, b) {
            return this.inlined_insert(a, b)
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_Listener.zpp_pool ? b = new e.ZNPNode_ZPP_Listener : (b = e.ZNPNode_ZPP_Listener.zpp_pool, e.ZNPNode_ZPP_Listener.zpp_pool =
                b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_Listener
    };
    e.ZNPList_ZPP_ToiEvent = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_ToiEvent"] = e.ZNPList_ZPP_ToiEvent;
    e.ZNPList_ZPP_ToiEvent.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_ToiEvent"];
    e.ZNPList_ZPP_ToiEvent.prototype = {
        inlined_erase: function(a) {
            var b, c;
            null == a ? (b = this.head,
                this.head = c = b.next, null == this.head && (this.pushmod = !0)) : (b = a.next, c = b.next, a.next = c, null == c && (this.pushmod = !0));
            a = b;
            a.elt = null;
            a.next = e.ZNPNode_ZPP_ToiEvent.zpp_pool;
            e.ZNPNode_ZPP_ToiEvent.zpp_pool = a;
            this.modified = !0;
            this.length--;
            this.pushmod = !0;
            return c
        },
        erase: function(a) {
            return this.inlined_erase(a)
        },
        inlined_pop_unsafe: function() {
            var a = this.head.elt;
            this.pop();
            return a
        },
        pop_unsafe: function() {
            return this.inlined_pop_unsafe()
        },
        inlined_pop: function() {
            var a = this.head;
            this.head = a.next;
            a.elt = null;
            a.next =
                e.ZNPNode_ZPP_ToiEvent.zpp_pool;
            e.ZNPNode_ZPP_ToiEvent.zpp_pool = a;
            null == this.head && (this.pushmod = !0);
            this.modified = !0;
            this.length--
        },
        pop: function() {
            this.inlined_pop()
        },
        inlined_add: function(a) {
            var b;
            null == e.ZNPNode_ZPP_ToiEvent.zpp_pool ? b = new e.ZNPNode_ZPP_ToiEvent : (b = e.ZNPNode_ZPP_ToiEvent.zpp_pool, e.ZNPNode_ZPP_ToiEvent.zpp_pool = b.next, b.next = null);
            null;
            b.elt = a;
            b.next = this.head;
            this.head = b;
            this.modified = !0;
            this.length++;
            return a
        },
        add: function(a) {
            return this.inlined_add(a)
        },
        __class__: e.ZNPList_ZPP_ToiEvent
    };
    e.ZNPList_ConvexResult = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ConvexResult"] = e.ZNPList_ConvexResult;
    e.ZNPList_ConvexResult.__name__ = ["zpp_nape", "util", "ZNPList_ConvexResult"];
    e.ZNPList_ConvexResult.prototype = {
        iterator_at: function(a) {
            for (var b = this.head; 0 < a-- && null != b;) b = b.next;
            return b
        },
        __class__: e.ZNPList_ConvexResult
    };
    e.ZNPList_ZPP_GeomPoly = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_ZPP_GeomPoly"] =
        e.ZNPList_ZPP_GeomPoly;
    e.ZNPList_ZPP_GeomPoly.__name__ = ["zpp_nape", "util", "ZNPList_ZPP_GeomPoly"];
    e.ZNPList_ZPP_GeomPoly.prototype = {
        iterator_at: function(a) {
            for (var b = this.head; 0 < a-- && null != b;) b = b.next;
            return b
        },
        __class__: e.ZNPList_ZPP_GeomPoly
    };
    e.ZNPList_RayResult = function() {
        this.length = 0;
        this.modified = this.pushmod = !1;
        this.head = null
    };
    j["zpp_nape.util.ZNPList_RayResult"] = e.ZNPList_RayResult;
    e.ZNPList_RayResult.__name__ = ["zpp_nape", "util", "ZNPList_RayResult"];
    e.ZNPList_RayResult.prototype = {
        iterator_at: function(a) {
            for (var b =
                    this.head; 0 < a-- && null != b;) b = b.next;
            return b
        },
        inlined_insert: function(a, b) {
            var c;
            null == e.ZNPNode_RayResult.zpp_pool ? c = new e.ZNPNode_RayResult : (c = e.ZNPNode_RayResult.zpp_pool, e.ZNPNode_RayResult.zpp_pool = c.next, c.next = null);
            null;
            c.elt = b;
            null == a ? (c.next = this.head, this.head = c) : (c.next = a.next, a.next = c);
            this.pushmod = this.modified = !0;
            this.length++;
            return c
        },
        __class__: e.ZNPList_RayResult
    };
    e.ZNPNode_ZPP_CbType = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_CbType"] = e.ZNPNode_ZPP_CbType;
    e.ZNPNode_ZPP_CbType.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_CbType"];
    e.ZNPNode_ZPP_CbType.prototype = {
        __class__: e.ZNPNode_ZPP_CbType
    };
    e.ZNPNode_ZPP_Shape = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_Shape"] = e.ZNPNode_ZPP_Shape;
    e.ZNPNode_ZPP_Shape.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Shape"];
    e.ZNPNode_ZPP_Shape.prototype = {
        __class__: e.ZNPNode_ZPP_Shape
    };
    e.ZNPNode_ZPP_CallbackSet = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_CallbackSet"] = e.ZNPNode_ZPP_CallbackSet;
    e.ZNPNode_ZPP_CallbackSet.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_CallbackSet"];
    e.ZNPNode_ZPP_CallbackSet.prototype = {
        __class__: e.ZNPNode_ZPP_CallbackSet
    };
    e.ZNPNode_ZPP_Arbiter = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_Arbiter"] = e.ZNPNode_ZPP_Arbiter;
    e.ZNPNode_ZPP_Arbiter.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Arbiter"];
    e.ZNPNode_ZPP_Arbiter.prototype = {
        __class__: e.ZNPNode_ZPP_Arbiter
    };
    e.ZNPNode_ZPP_Constraint = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_Constraint"] = e.ZNPNode_ZPP_Constraint;
    e.ZNPNode_ZPP_Constraint.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Constraint"];
    e.ZNPNode_ZPP_Constraint.prototype = {
        __class__: e.ZNPNode_ZPP_Constraint
    };
    e.ZNPNode_ZPP_Body = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_Body"] = e.ZNPNode_ZPP_Body;
    e.ZNPNode_ZPP_Body.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Body"];
    e.ZNPNode_ZPP_Body.prototype = {
        __class__: e.ZNPNode_ZPP_Body
    };
    e.ZNPNode_ZPP_Compound = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_Compound"] = e.ZNPNode_ZPP_Compound;
    e.ZNPNode_ZPP_Compound.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Compound"];
    e.ZNPNode_ZPP_Compound.prototype = {
        __class__: e.ZNPNode_ZPP_Compound
    };
    e.ZNPNode_ZPP_InteractionListener = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_InteractionListener"] = e.ZNPNode_ZPP_InteractionListener;
    e.ZNPNode_ZPP_InteractionListener.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_InteractionListener"];
    e.ZNPNode_ZPP_InteractionListener.prototype = {
        __class__: e.ZNPNode_ZPP_InteractionListener
    };
    e.ZNPNode_ZPP_CbSet =
        function() {
            this.next = this.elt = null
        };
    j["zpp_nape.util.ZNPNode_ZPP_CbSet"] = e.ZNPNode_ZPP_CbSet;
    e.ZNPNode_ZPP_CbSet.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_CbSet"];
    e.ZNPNode_ZPP_CbSet.prototype = {
        __class__: e.ZNPNode_ZPP_CbSet
    };
    e.ZNPNode_ZPP_Interactor = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_Interactor"] = e.ZNPNode_ZPP_Interactor;
    e.ZNPNode_ZPP_Interactor.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Interactor"];
    e.ZNPNode_ZPP_Interactor.prototype = {
        __class__: e.ZNPNode_ZPP_Interactor
    };
    e.ZNPNode_ZPP_BodyListener = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_BodyListener"] = e.ZNPNode_ZPP_BodyListener;
    e.ZNPNode_ZPP_BodyListener.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_BodyListener"];
    e.ZNPNode_ZPP_BodyListener.prototype = {
        __class__: e.ZNPNode_ZPP_BodyListener
    };
    e.ZNPNode_ZPP_CbSetPair = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_CbSetPair"] = e.ZNPNode_ZPP_CbSetPair;
    e.ZNPNode_ZPP_CbSetPair.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_CbSetPair"];
    e.ZNPNode_ZPP_CbSetPair.prototype = {
        __class__: e.ZNPNode_ZPP_CbSetPair
    };
    e.ZNPNode_ZPP_ConstraintListener = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_ConstraintListener"] = e.ZNPNode_ZPP_ConstraintListener;
    e.ZNPNode_ZPP_ConstraintListener.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_ConstraintListener"];
    e.ZNPNode_ZPP_ConstraintListener.prototype = {
        __class__: e.ZNPNode_ZPP_ConstraintListener
    };
    e.ZNPNode_ZPP_Vec2 = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_Vec2"] = e.ZNPNode_ZPP_Vec2;
    e.ZNPNode_ZPP_Vec2.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Vec2"];
    e.ZNPNode_ZPP_Vec2.prototype = {
        __class__: e.ZNPNode_ZPP_Vec2
    };
    e.ZNPNode_ZPP_AABBPair = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_AABBPair"] = e.ZNPNode_ZPP_AABBPair;
    e.ZNPNode_ZPP_AABBPair.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_AABBPair"];
    e.ZNPNode_ZPP_AABBPair.prototype = {
        __class__: e.ZNPNode_ZPP_AABBPair
    };
    e.ZNPNode_ZPP_Edge = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_Edge"] = e.ZNPNode_ZPP_Edge;
    e.ZNPNode_ZPP_Edge.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Edge"];
    e.ZNPNode_ZPP_Edge.prototype = {
        __class__: e.ZNPNode_ZPP_Edge
    };
    e.ZNPNode_ZPP_AABBNode = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_AABBNode"] = e.ZNPNode_ZPP_AABBNode;
    e.ZNPNode_ZPP_AABBNode.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_AABBNode"];
    e.ZNPNode_ZPP_AABBNode.prototype = {
        __class__: e.ZNPNode_ZPP_AABBNode
    };
    e.ZNPNode_ZPP_Component = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_Component"] = e.ZNPNode_ZPP_Component;
    e.ZNPNode_ZPP_Component.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Component"];
    e.ZNPNode_ZPP_Component.prototype = {
        __class__: e.ZNPNode_ZPP_Component
    };
    e.ZNPNode_ZPP_InteractionGroup = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_InteractionGroup"] = e.ZNPNode_ZPP_InteractionGroup;
    e.ZNPNode_ZPP_InteractionGroup.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_InteractionGroup"];
    e.ZNPNode_ZPP_InteractionGroup.prototype = {
        __class__: e.ZNPNode_ZPP_InteractionGroup
    };
    e.ZNPNode_ZPP_ColArbiter = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_ColArbiter"] =
        e.ZNPNode_ZPP_ColArbiter;
    e.ZNPNode_ZPP_ColArbiter.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_ColArbiter"];
    e.ZNPNode_ZPP_ColArbiter.prototype = {
        __class__: e.ZNPNode_ZPP_ColArbiter
    };
    e.ZNPNode_ZPP_FluidArbiter = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_FluidArbiter"] = e.ZNPNode_ZPP_FluidArbiter;
    e.ZNPNode_ZPP_FluidArbiter.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_FluidArbiter"];
    e.ZNPNode_ZPP_FluidArbiter.prototype = {
        __class__: e.ZNPNode_ZPP_FluidArbiter
    };
    e.ZNPNode_ZPP_SensorArbiter = function() {
        this.next =
            this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_SensorArbiter"] = e.ZNPNode_ZPP_SensorArbiter;
    e.ZNPNode_ZPP_SensorArbiter.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_SensorArbiter"];
    e.ZNPNode_ZPP_SensorArbiter.prototype = {
        __class__: e.ZNPNode_ZPP_SensorArbiter
    };
    e.ZNPNode_ZPP_Listener = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_Listener"] = e.ZNPNode_ZPP_Listener;
    e.ZNPNode_ZPP_Listener.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_Listener"];
    e.ZNPNode_ZPP_Listener.prototype = {
        __class__: e.ZNPNode_ZPP_Listener
    };
    e.ZNPNode_ZPP_ToiEvent = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_ToiEvent"] = e.ZNPNode_ZPP_ToiEvent;
    e.ZNPNode_ZPP_ToiEvent.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_ToiEvent"];
    e.ZNPNode_ZPP_ToiEvent.prototype = {
        __class__: e.ZNPNode_ZPP_ToiEvent
    };
    e.ZNPNode_ConvexResult = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ConvexResult"] = e.ZNPNode_ConvexResult;
    e.ZNPNode_ConvexResult.__name__ = ["zpp_nape", "util", "ZNPNode_ConvexResult"];
    e.ZNPNode_ConvexResult.prototype = {
        __class__: e.ZNPNode_ConvexResult
    };
    e.ZNPNode_ZPP_GeomPoly = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_ZPP_GeomPoly"] = e.ZNPNode_ZPP_GeomPoly;
    e.ZNPNode_ZPP_GeomPoly.__name__ = ["zpp_nape", "util", "ZNPNode_ZPP_GeomPoly"];
    e.ZNPNode_ZPP_GeomPoly.prototype = {
        __class__: e.ZNPNode_ZPP_GeomPoly
    };
    e.ZNPNode_RayResult = function() {
        this.next = this.elt = null
    };
    j["zpp_nape.util.ZNPNode_RayResult"] = e.ZNPNode_RayResult;
    e.ZNPNode_RayResult.__name__ = ["zpp_nape", "util", "ZNPNode_RayResult"];
    e.ZNPNode_RayResult.prototype = {
        __class__: e.ZNPNode_RayResult
    };
    e.ZPP_MixVec2List = function() {
        this.at_index = 0;
        this.at_ite = null;
        this.zip_length = !1;
        this._length = 0;
        this.inner = null;
        u.Vec2List.call(this);
        this.at_ite = null;
        this.at_index = 0;
        this.zip_length = !0;
        this._length = 0
    };
    j["zpp_nape.util.ZPP_MixVec2List"] = e.ZPP_MixVec2List;
    e.ZPP_MixVec2List.__name__ = ["zpp_nape", "util", "ZPP_MixVec2List"];
    e.ZPP_MixVec2List.get = function(a, b) {
        null == b && (b = !1);
        var c = new e.ZPP_MixVec2List;
        c.inner = a;
        c.zpp_inner.immutable = b;
        return c
    };
    e.ZPP_MixVec2List.__super__ = u.Vec2List;
    e.ZPP_MixVec2List.prototype =
        C(u.Vec2List.prototype, {
            clear: function() {
                if (this.zpp_inner.reverse_flag)
                    for (; !this.empty();) this.pop();
                else
                    for (; !this.empty();) this.shift()
            },
            remove: function(a) {
                this.zpp_inner.modify_test();
                this.zpp_vm();
                var b;
                b = !1;
                for (var c = this.inner.next; null != c;) {
                    if (a.zpp_inner == c) {
                        b = !0;
                        break
                    }
                    c = c.next
                }
                b && (null != this.zpp_inner.subber && this.zpp_inner.subber(a), this.zpp_inner.dontremove || this.inner.remove(a.zpp_inner), this.zpp_inner.invalidate());
                return b
            },
            shift: function() {
                this.zpp_inner.modify_test();
                this.zpp_vm();
                var a = null;
                if (this.zpp_inner.reverse_flag) {
                    null != this.at_ite && null == this.at_ite.next && (this.at_ite = null);
                    var b = 1 == this.zpp_gl() ? null : this.inner.iterator_at(this.zpp_gl() - 2),
                        a = null == b ? this.inner.next : b.next,
                        c = a.wrapper();
                    null != this.zpp_inner.subber && this.zpp_inner.subber(c);
                    this.zpp_inner.dontremove || this.inner.erase(b)
                } else a = this.inner.next, c = a.wrapper(), null != this.zpp_inner.subber && this.zpp_inner.subber(c), this.zpp_inner.dontremove || this.inner.pop();
                this.zpp_inner.invalidate();
                return c = a.wrapper()
            },
            pop: function() {
                this.zpp_inner.modify_test();
                this.zpp_vm();
                var a = null;
                if (this.zpp_inner.reverse_flag) {
                    var a = this.inner.next,
                        b = a.wrapper();
                    null != this.zpp_inner.subber && this.zpp_inner.subber(b);
                    this.zpp_inner.dontremove || this.inner.pop()
                } else {
                    null != this.at_ite && null == this.at_ite.next && (this.at_ite = null);
                    var c = 1 == this.zpp_gl() ? null : this.inner.iterator_at(this.zpp_gl() - 2),
                        a = null == c ? this.inner.next : c.next,
                        b = a.wrapper();
                    null != this.zpp_inner.subber && this.zpp_inner.subber(b);
                    this.zpp_inner.dontremove || this.inner.erase(c)
                }
                this.zpp_inner.invalidate();
                return b = a.wrapper()
            },
            unshift: function(a) {
                this.zpp_inner.modify_test();
                this.zpp_vm();
                var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
                b && (this.zpp_inner.reverse_flag ? this.inner.insert(this.inner.iterator_at(this.zpp_gl() - 1), a.zpp_inner) : this.inner.add(a.zpp_inner), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
                return b
            },
            push: function(a) {
                this.zpp_inner.modify_test();
                this.zpp_vm();
                var b = null != this.zpp_inner.adder ? this.zpp_inner.adder(a) : !0;
                b && (this.zpp_inner.reverse_flag ?
                    this.inner.add(a.zpp_inner) : this.inner.insert(this.inner.iterator_at(this.zpp_gl() - 1), a.zpp_inner), this.zpp_inner.invalidate(), null != this.zpp_inner.post_adder && this.zpp_inner.post_adder(a));
                return b
            },
            at: function(a) {
                this.zpp_vm();
                this.zpp_inner.reverse_flag && (a = this.zpp_gl() - 1 - a);
                if (a < this.at_index || null == this.at_ite) {
                    this.at_index = 0;
                    for (this.at_ite = this.inner.next;;) break
                }
                for (; this.at_index != a;) {
                    this.at_index++;
                    for (this.at_ite = this.at_ite.next;;) break
                }
                return this.at_ite.wrapper()
            },
            zpp_vm: function() {
                this.zpp_inner.validate();
                this.inner.modified && (this.zip_length = !0, this._length = 0, this.at_ite = null)
            },
            zpp_gl: function() {
                this.zpp_vm();
                if (this.zip_length) {
                    this._length = 0;
                    for (var a = this.inner.next; null != a;) this._length++, a = a.next;
                    this.zip_length = !1
                }
                return this._length
            },
            __class__: e.ZPP_MixVec2List
        });
    e.ZPP_ConstraintList = function() {
        this.user_length = 0;
        this.zip_length = !1;
        this.at_ite = this.push_ite = null;
        this.at_index = 0;
        this.dontremove = this.reverse_flag = !1;
        this._invalidate = this._validate = this.adder = this.post_adder = this.subber = null;
        this.immutable = this._invalidated = !1;
        this.outer = this.inner = null;
        this.inner = new e.ZNPList_ZPP_Constraint;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_ConstraintList"] = e.ZPP_ConstraintList;
    e.ZPP_ConstraintList.__name__ = ["zpp_nape", "util", "ZPP_ConstraintList"];
    e.ZPP_ConstraintList.get = function(a, b) {
        null == b && (b = !1);
        var c = new N.ConstraintList;
        c.zpp_inner.inner = a;
        b && (c.zpp_inner.immutable = !0);
        c.zpp_inner.zip_length = !0;
        return c
    };
    e.ZPP_ConstraintList.prototype = {
        invalidate: function() {
            this._invalidated = !0;
            null !=
                this._invalidate && this._invalidate(this)
        },
        validate: function() {
            this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
        },
        modify_test: function() {},
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_ConstraintList
    };
    e.ZPP_BodyList = function() {
        this.user_length = 0;
        this.zip_length = !1;
        this.at_ite = this.push_ite = null;
        this.at_index = 0;
        this.dontremove =
            this.reverse_flag = !1;
        this._invalidate = this._validate = this.adder = this.post_adder = this.subber = null;
        this.immutable = this._invalidated = !1;
        this.outer = this.inner = null;
        this.inner = new e.ZNPList_ZPP_Body;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_BodyList"] = e.ZPP_BodyList;
    e.ZPP_BodyList.__name__ = ["zpp_nape", "util", "ZPP_BodyList"];
    e.ZPP_BodyList.get = function(a, b) {
        null == b && (b = !1);
        var c = new B.BodyList;
        c.zpp_inner.inner = a;
        b && (c.zpp_inner.immutable = !0);
        c.zpp_inner.zip_length = !0;
        return c
    };
    e.ZPP_BodyList.prototype = {
        invalidate: function() {
            this._invalidated = !0;
            null != this._invalidate && this._invalidate(this)
        },
        validate: function() {
            this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
        },
        modify_test: function() {},
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_BodyList
    };
    e.ZPP_InteractorList = function() {
        this.user_length = 0;
        this.zip_length = !1;
        this.at_ite =
            this.push_ite = null;
        this.at_index = 0;
        this.reverse_flag = !1;
        this._validate = null;
        this.immutable = this._invalidated = !1;
        this.outer = this.inner = null;
        this.inner = new e.ZNPList_ZPP_Interactor;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_InteractorList"] = e.ZPP_InteractorList;
    e.ZPP_InteractorList.__name__ = ["zpp_nape", "util", "ZPP_InteractorList"];
    e.ZPP_InteractorList.get = function(a, b) {
        null == b && (b = !1);
        var c = new B.InteractorList;
        c.zpp_inner.inner = a;
        b && (c.zpp_inner.immutable = !0);
        c.zpp_inner.zip_length = !0;
        return c
    };
    e.ZPP_InteractorList.prototype = {
        validate: function() {
            this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
        },
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_InteractorList
    };
    e.ZPP_CompoundList = function() {
        this.user_length = 0;
        this.zip_length = !1;
        this.at_ite = this.push_ite = null;
        this.at_index = 0;
        this.dontremove = this.reverse_flag = !1;
        this._invalidate = this._validate = this.adder =
            this.post_adder = this.subber = null;
        this.immutable = this._invalidated = !1;
        this.outer = this.inner = null;
        this.inner = new e.ZNPList_ZPP_Compound;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_CompoundList"] = e.ZPP_CompoundList;
    e.ZPP_CompoundList.__name__ = ["zpp_nape", "util", "ZPP_CompoundList"];
    e.ZPP_CompoundList.get = function(a, b) {
        null == b && (b = !1);
        var c = new B.CompoundList;
        c.zpp_inner.inner = a;
        b && (c.zpp_inner.immutable = !0);
        c.zpp_inner.zip_length = !0;
        return c
    };
    e.ZPP_CompoundList.prototype = {
        invalidate: function() {
            this._invalidated = !0;
            null != this._invalidate && this._invalidate(this)
        },
        validate: function() {
            this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
        },
        modify_test: function() {},
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_CompoundList
    };
    e.ZPP_ListenerList = function() {
        this.user_length = 0;
        this.zip_length = !1;
        this.at_ite = this.push_ite = null;
        this.at_index =
            0;
        this.dontremove = this.reverse_flag = !1;
        this._invalidate = this._validate = this.adder = this.post_adder = this.subber = null;
        this.immutable = this._invalidated = !1;
        this.outer = this.inner = null;
        this.inner = new e.ZNPList_ZPP_Listener;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_ListenerList"] = e.ZPP_ListenerList;
    e.ZPP_ListenerList.__name__ = ["zpp_nape", "util", "ZPP_ListenerList"];
    e.ZPP_ListenerList.get = function(a, b) {
        null == b && (b = !1);
        var c = new v.ListenerList;
        c.zpp_inner.inner = a;
        b && (c.zpp_inner.immutable = !0);
        c.zpp_inner.zip_length = !0;
        return c
    };
    e.ZPP_ListenerList.prototype = {
        invalidate: function() {
            this._invalidated = !0;
            null != this._invalidate && this._invalidate(this)
        },
        validate: function() {
            this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
        },
        modify_test: function() {},
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_ListenerList
    };
    e.ZPP_CbTypeList = function() {
        this.user_length =
            0;
        this.zip_length = !1;
        this.at_ite = this.push_ite = null;
        this.at_index = 0;
        this.dontremove = this.reverse_flag = !1;
        this._invalidate = this._validate = this.adder = this.post_adder = this.subber = null;
        this.immutable = this._invalidated = !1;
        this.outer = this.inner = null;
        this.inner = new e.ZNPList_ZPP_CbType;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_CbTypeList"] = e.ZPP_CbTypeList;
    e.ZPP_CbTypeList.__name__ = ["zpp_nape", "util", "ZPP_CbTypeList"];
    e.ZPP_CbTypeList.get = function(a, b) {
        null == b && (b = !1);
        var c = new v.CbTypeList;
        c.zpp_inner.inner =
            a;
        b && (c.zpp_inner.immutable = !0);
        c.zpp_inner.zip_length = !0;
        return c
    };
    e.ZPP_CbTypeList.prototype = {
        invalidate: function() {
            this._invalidated = !0;
            null != this._invalidate && this._invalidate(this)
        },
        validate: function() {
            this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
        },
        modify_test: function() {},
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_CbTypeList
    };
    e.ZPP_Vec2List = function() {
        this.user_length = 0;
        this.zip_length = !1;
        this.at_ite = this.push_ite = null;
        this.at_index = 0;
        this.dontremove = this.reverse_flag = !1;
        this._invalidate = this._validate = this.adder = this.post_adder = this.subber = null;
        this.immutable = this._invalidated = !1;
        this.outer = this.inner = null;
        this.inner = new e.ZNPList_ZPP_Vec2;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_Vec2List"] = e.ZPP_Vec2List;
    e.ZPP_Vec2List.__name__ = ["zpp_nape", "util", "ZPP_Vec2List"];
    e.ZPP_Vec2List.prototype = {
        invalidate: function() {
            this._invalidated = !0;
            null != this._invalidate && this._invalidate(this)
        },
        validate: function() {
            this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
        },
        modify_test: function() {},
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_Vec2List
    };
    e.ZPP_GeomPolyList = function() {
        this.user_length = 0;
        this.zip_length = !1;
        this.at_ite = this.push_ite = null;
        this.at_index = 0;
        this.reverse_flag = !1;
        this._validate = null;
        this._invalidated = !1;
        this.inner = null;
        this.inner = new e.ZNPList_ZPP_GeomPoly;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_GeomPolyList"] = e.ZPP_GeomPolyList;
    e.ZPP_GeomPolyList.__name__ = ["zpp_nape", "util", "ZPP_GeomPolyList"];
    e.ZPP_GeomPolyList.prototype = {
        validate: function() {
            this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
        },
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_GeomPolyList
    };
    e.ZPP_RayResultList = function() {
        this.user_length = 0;
        this.zip_length = !1;
        this.at_ite = this.push_ite = null;
        this.at_index = 0;
        this.reverse_flag = !1;
        this._validate = null;
        this._invalidated = !1;
        this.outer = this.inner = null;
        this.inner = new e.ZNPList_RayResult;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_RayResultList"] = e.ZPP_RayResultList;
    e.ZPP_RayResultList.__name__ = ["zpp_nape", "util", "ZPP_RayResultList"];
    e.ZPP_RayResultList.prototype = {
        validate: function() {
            this._invalidated &&
                (this._invalidated = !1, null != this._validate && this._validate())
        },
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_RayResultList
    };
    e.ZPP_ConvexResultList = function() {
        this.user_length = 0;
        this.zip_length = !1;
        this.at_ite = this.push_ite = null;
        this.at_index = 0;
        this.reverse_flag = !1;
        this._validate = null;
        this._invalidated = !1;
        this.inner = null;
        this.inner = new e.ZNPList_ConvexResult;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_ConvexResultList"] = e.ZPP_ConvexResultList;
    e.ZPP_ConvexResultList.__name__ = ["zpp_nape", "util", "ZPP_ConvexResultList"];
    e.ZPP_ConvexResultList.prototype = {
        validate: function() {
            this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
        },
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_ConvexResultList
    };
    e.ZPP_EdgeList = function() {
        this.user_length = 0;
        this.zip_length = !1;
        this.at_ite = this.push_ite = null;
        this.at_index = 0;
        this.reverse_flag = !1;
        this._validate = null;
        this.immutable = this._invalidated = !1;
        this.outer = this.inner = null;
        this.inner = new e.ZNPList_ZPP_Edge;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_EdgeList"] = e.ZPP_EdgeList;
    e.ZPP_EdgeList.__name__ = ["zpp_nape", "util", "ZPP_EdgeList"];
    e.ZPP_EdgeList.get = function(a, b) {
        null == b && (b = !1);
        var c = new L.EdgeList;
        c.zpp_inner.inner = a;
        b && (c.zpp_inner.immutable = !0);
        c.zpp_inner.zip_length = !0;
        return c
    };
    e.ZPP_EdgeList.prototype = {
        validate: function() {
            this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
        },
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_EdgeList
    };
    e.ZPP_ShapeList = function() {
        this.user_length = 0;
        this.zip_length = !1;
        this.at_ite = this.push_ite = null;
        this.at_index = 0;
        this.dontremove = this.reverse_flag = !1;
        this._invalidate =
            this._validate = this.adder = this.post_adder = this.subber = null;
        this.immutable = this._invalidated = !1;
        this.outer = this.inner = null;
        this.inner = new e.ZNPList_ZPP_Shape;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_ShapeList"] = e.ZPP_ShapeList;
    e.ZPP_ShapeList.__name__ = ["zpp_nape", "util", "ZPP_ShapeList"];
    e.ZPP_ShapeList.get = function(a, b) {
        null == b && (b = !1);
        var c = new L.ShapeList;
        c.zpp_inner.inner = a;
        b && (c.zpp_inner.immutable = !0);
        c.zpp_inner.zip_length = !0;
        return c
    };
    e.ZPP_ShapeList.prototype = {
        invalidate: function() {
            this._invalidated = !0;
            null != this._invalidate && this._invalidate(this)
        },
        validate: function() {
            this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
        },
        modify_test: function() {},
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_ShapeList
    };
    e.ZPP_InteractionGroupList = function() {
        this.user_length = 0;
        this.zip_length = !1;
        this.at_ite = this.push_ite = null;
        this.at_index =
            0;
        this.reverse_flag = !1;
        this._validate = null;
        this.immutable = this._invalidated = !1;
        this.outer = this.inner = null;
        this.inner = new e.ZNPList_ZPP_InteractionGroup;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_InteractionGroupList"] = e.ZPP_InteractionGroupList;
    e.ZPP_InteractionGroupList.__name__ = ["zpp_nape", "util", "ZPP_InteractionGroupList"];
    e.ZPP_InteractionGroupList.get = function(a, b) {
        null == b && (b = !1);
        var c = new K.InteractionGroupList;
        c.zpp_inner.inner = a;
        b && (c.zpp_inner.immutable = !0);
        c.zpp_inner.zip_length = !0;
        return c
    };
    e.ZPP_InteractionGroupList.prototype = {
        validate: function() {
            this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
        },
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_InteractionGroupList
    };
    e.ZPP_ArbiterList = function() {
        this.user_length = 0;
        this.zip_length = !1;
        this.at_ite = this.push_ite = null;
        this.at_index = 0;
        this.dontremove = this.reverse_flag = !1;
        this._invalidate = this._validate = this.adder = this.post_adder = this.subber = null;
        this.immutable = this._invalidated = !1;
        this.outer = this.inner = null;
        this.inner = new e.ZNPList_ZPP_Arbiter;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_ArbiterList"] = e.ZPP_ArbiterList;
    e.ZPP_ArbiterList.__name__ = ["zpp_nape", "util", "ZPP_ArbiterList"];
    e.ZPP_ArbiterList.get = function(a, b) {
        null == b && (b = !1);
        var c = new K.ArbiterList;
        c.zpp_inner.inner = a;
        b && (c.zpp_inner.immutable = !0);
        c.zpp_inner.zip_length = !0;
        return c
    };
    e.ZPP_ArbiterList.prototype = {
        invalidate: function() {
            this._invalidated = !0;
            null != this._invalidate && this._invalidate(this)
        },
        validate: function() {
            this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
        },
        modify_test: function() {},
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_ArbiterList
    };
    e.ZPP_ContactList = function() {
        this.user_length = 0;
        this.zip_length = !1;
        this.at_ite =
            this.push_ite = null;
        this.at_index = 0;
        this.dontremove = this.reverse_flag = !1;
        this._validate = this.adder = this.subber = null;
        this.immutable = this._invalidated = !1;
        this.outer = this.inner = null;
        this.inner = new D.ZPP_Contact;
        this._invalidated = !0
    };
    j["zpp_nape.util.ZPP_ContactList"] = e.ZPP_ContactList;
    e.ZPP_ContactList.__name__ = ["zpp_nape", "util", "ZPP_ContactList"];
    e.ZPP_ContactList.get = function(a, b) {
        null == b && (b = !1);
        var c = new K.ContactList;
        c.zpp_inner.inner = a;
        b && (c.zpp_inner.immutable = !0);
        c.zpp_inner.zip_length = !0;
        return c
    };
    e.ZPP_ContactList.prototype = {
        validate: function() {
            this._invalidated && (this._invalidated = !1, null != this._validate && this._validate())
        },
        valmod: function() {
            this.validate();
            this.inner.modified && (this.inner.pushmod && (this.push_ite = null), this.at_ite = null, this.inner.modified = !1, this.inner.pushmod = !1, this.zip_length = !0)
        },
        __class__: e.ZPP_ContactList
    };
    e.ZPP_Math = function() {};
    j["zpp_nape.util.ZPP_Math"] = e.ZPP_Math;
    e.ZPP_Math.__name__ = ["zpp_nape", "util", "ZPP_Math"];
    e.ZPP_Math.sqr = function(a) {
        return a * a
    };
    e.ZPP_Math.clamp =
        function(a, b, c) {
            return a < b ? b : a > c ? c : a
        };
    e.ZPP_PubPool = function() {};
    j["zpp_nape.util.ZPP_PubPool"] = e.ZPP_PubPool;
    e.ZPP_PubPool.__name__ = ["zpp_nape", "util", "ZPP_PubPool"];
    e.ZPP_Set_ZPP_CbSetPair = function() {
        this.colour = 0;
        this.lt = this.swapped = this.data = this.prev = this.next = this.parent = null
    };
    j["zpp_nape.util.ZPP_Set_ZPP_CbSetPair"] = e.ZPP_Set_ZPP_CbSetPair;
    e.ZPP_Set_ZPP_CbSetPair.__name__ = ["zpp_nape", "util", "ZPP_Set_ZPP_CbSetPair"];
    e.ZPP_Set_ZPP_CbSetPair.prototype = {
        try_insert: function(a) {
            var b = null,
                c = null;
            if (null == this.parent) null == e.ZPP_Set_ZPP_CbSetPair.zpp_pool ? b = new e.ZPP_Set_ZPP_CbSetPair : (b = e.ZPP_Set_ZPP_CbSetPair.zpp_pool, e.ZPP_Set_ZPP_CbSetPair.zpp_pool = b.next, b.next = null), null, b.data = a, this.parent = b;
            else
                for (c = this.parent;;)
                    if (this.lt(a, c.data))
                        if (null == c.prev) {
                            null == e.ZPP_Set_ZPP_CbSetPair.zpp_pool ? b = new e.ZPP_Set_ZPP_CbSetPair : (b = e.ZPP_Set_ZPP_CbSetPair.zpp_pool, e.ZPP_Set_ZPP_CbSetPair.zpp_pool = b.next, b.next = null);
                            null;
                            b.data = a;
                            c.prev = b;
                            b.parent = c;
                            break
                        } else c = c.prev;
            else if (this.lt(c.data,
                    a))
                if (null == c.next) {
                    null == e.ZPP_Set_ZPP_CbSetPair.zpp_pool ? b = new e.ZPP_Set_ZPP_CbSetPair : (b = e.ZPP_Set_ZPP_CbSetPair.zpp_pool, e.ZPP_Set_ZPP_CbSetPair.zpp_pool = b.next, b.next = null);
                    null;
                    b.data = a;
                    c.next = b;
                    b.parent = c;
                    break
                } else c = c.next;
            else break;
            if (null == b) return c;
            null == b.parent ? b.colour = 1 : (b.colour = 0, 0 == b.parent.colour && this.__fix_dbl_red(b));
            return b
        },
        __fix_dbl_red: function(a) {
            for (;;) {
                var b = a.parent,
                    c = b.parent;
                if (null == c) {
                    b.colour = 1;
                    break
                }
                var d, e, g, h, i, j, k;
                b == c.prev ? (g = c, k = c.next, a == b.prev ? (d = a, e =
                    b, h = a.prev, i = a.next, j = b.next) : (d = b, e = a, h = b.prev, i = a.prev, j = a.next)) : (d = c, h = c.prev, a == b.prev ? (e = a, g = b, i = a.prev, j = a.next, k = b.next) : (e = b, g = a, i = b.prev, j = a.prev, k = a.next));
                a = c.parent;
                null == a ? this.parent = e : a.prev == c ? a.prev = e : a.next = e;
                null != e && (e.parent = a);
                d.prev = h;
                null != h && (h.parent = d);
                d.next = i;
                null != i && (i.parent = d);
                e.prev = d;
                null != d && (d.parent = e);
                e.next = g;
                null != g && (g.parent = e);
                g.prev = j;
                null != j && (j.parent = g);
                g.next = k;
                null != k && (k.parent = g);
                e.colour = c.colour - 1;
                d.colour = 1;
                g.colour = 1;
                if (e == this.parent) this.parent.colour =
                    1;
                else if (0 == e.colour && 0 == e.parent.colour) {
                    a = e;
                    continue
                }
                break
            }
        },
        clear_node: function(a, b) {
            b(a.data);
            var c = a.parent;
            null != c && (a == c.prev ? c.prev = null : c.next = null, a.parent = null);
            a.data = null;
            a.lt = null;
            a.swapped = null;
            a.next = e.ZPP_Set_ZPP_CbSetPair.zpp_pool;
            e.ZPP_Set_ZPP_CbSetPair.zpp_pool = a;
            return c
        },
        clear_with: function(a) {
            if (null != this.parent) {
                for (var b = this.parent; null != b;) b = null != b.prev ? b.prev : null != b.next ? b.next : this.clear_node(b, a);
                this.parent = null
            }
        },
        __class__: e.ZPP_Set_ZPP_CbSetPair
    };
    e.ZPP_Set_ZPP_CbSet =
        function() {
            this.colour = 0;
            this.lt = this.swapped = this.data = this.prev = this.next = this.parent = null
        };
    j["zpp_nape.util.ZPP_Set_ZPP_CbSet"] = e.ZPP_Set_ZPP_CbSet;
    e.ZPP_Set_ZPP_CbSet.__name__ = ["zpp_nape", "util", "ZPP_Set_ZPP_CbSet"];
    e.ZPP_Set_ZPP_CbSet.prototype = {
        insert: function(a) {
            var b;
            null == e.ZPP_Set_ZPP_CbSet.zpp_pool ? b = new e.ZPP_Set_ZPP_CbSet : (b = e.ZPP_Set_ZPP_CbSet.zpp_pool, e.ZPP_Set_ZPP_CbSet.zpp_pool = b.next, b.next = null);
            null;
            b.data = a;
            if (null == this.parent) this.parent = b;
            else
                for (a = this.parent;;)
                    if (this.lt(b.data,
                            a.data))
                        if (null == a.prev) {
                            a.prev = b;
                            b.parent = a;
                            break
                        } else a = a.prev;
            else if (null == a.next) {
                a.next = b;
                b.parent = a;
                break
            } else a = a.next;
            null == b.parent ? b.colour = 1 : (b.colour = 0, 0 == b.parent.colour && this.__fix_dbl_red(b));
            return b
        },
        __fix_dbl_red: function(a) {
            for (;;) {
                var b = a.parent,
                    c = b.parent;
                if (null == c) {
                    b.colour = 1;
                    break
                }
                var d, e, g, h, i, j, k;
                b == c.prev ? (g = c, k = c.next, a == b.prev ? (d = a, e = b, h = a.prev, i = a.next, j = b.next) : (d = b, e = a, h = b.prev, i = a.prev, j = a.next)) : (d = c, h = c.prev, a == b.prev ? (e = a, g = b, i = a.prev, j = a.next, k = b.next) : (e = b, g =
                    a, i = b.prev, j = a.prev, k = a.next));
                a = c.parent;
                null == a ? this.parent = e : a.prev == c ? a.prev = e : a.next = e;
                null != e && (e.parent = a);
                d.prev = h;
                null != h && (h.parent = d);
                d.next = i;
                null != i && (i.parent = d);
                e.prev = d;
                null != d && (d.parent = e);
                e.next = g;
                null != g && (g.parent = e);
                g.prev = j;
                null != j && (j.parent = g);
                g.next = k;
                null != k && (k.parent = g);
                e.colour = c.colour - 1;
                d.colour = 1;
                g.colour = 1;
                if (e == this.parent) this.parent.colour = 1;
                else if (0 == e.colour && 0 == e.parent.colour) {
                    a = e;
                    continue
                }
                break
            }
        },
        __fix_neg_red: function(a) {
            var b = a.parent,
                c = b.prev == a ? function(c) {
                    var e =
                        a.prev,
                        g = a.next,
                        h = g.prev,
                        i = g.next;
                    e.colour = 0;
                    a.colour = b.colour = 1;
                    a.next = h;
                    null != h && (h.parent = a);
                    h = b.data;
                    b.data = g.data;
                    g.data = h;
                    null != c.swapped && c.swapped(b.data, g.data);
                    g.prev = i;
                    null != i && (i.parent = g);
                    g.next = b.next;
                    null != b.next && (b.next.parent = g);
                    b.next = g;
                    null != g && (g.parent = b);
                    return e
                }(this) : function(c) {
                    var e = a.next,
                        g = a.prev,
                        h = g.next,
                        i = g.prev;
                    e.colour = 0;
                    a.colour = b.colour = 1;
                    a.prev = h;
                    null != h && (h.parent = a);
                    h = b.data;
                    b.data = g.data;
                    g.data = h;
                    null != c.swapped && c.swapped(b.data, g.data);
                    g.next = i;
                    null != i && (i.parent =
                        g);
                    g.prev = b.prev;
                    null != b.prev && (b.prev.parent = g);
                    b.prev = g;
                    null != g && (g.parent = b);
                    return e
                }(this);
            null != c.prev && 0 == c.prev.colour ? this.__fix_dbl_red(c.prev) : null != c.next && 0 == c.next.colour && this.__fix_dbl_red(c.next)
        },
        remove_node: function(a) {
            if (null != a.next && null != a.prev) {
                for (var b = a.next; null != b.prev;) b = b.prev;
                var c = a.data;
                a.data = b.data;
                b.data = c;
                null != this.swapped && this.swapped(a.data, b.data);
                a = b
            }
            b = null == a.prev ? a.next : a.prev;
            if (1 == a.colour)
                if (null != a.prev || null != a.next) b.colour = 1;
                else if (null != a.parent)
                for (c =
                    a.parent;;) {
                    c.colour++;
                    c.prev.colour--;
                    c.next.colour--;
                    var d = c.prev;
                    if (-1 == d.colour) {
                        this.__fix_neg_red(d);
                        break
                    } else if (0 == d.colour) {
                        if (null != d.prev && 0 == d.prev.colour) {
                            this.__fix_dbl_red(d.prev);
                            break
                        }
                        if (null != d.next && 0 == d.next.colour) {
                            this.__fix_dbl_red(d.next);
                            break
                        }
                    }
                    d = c.next;
                    if (-1 == d.colour) {
                        this.__fix_neg_red(d);
                        break
                    } else if (0 == d.colour) {
                        if (null != d.prev && 0 == d.prev.colour) {
                            this.__fix_dbl_red(d.prev);
                            break
                        }
                        if (null != d.next && 0 == d.next.colour) {
                            this.__fix_dbl_red(d.next);
                            break
                        }
                    }
                    if (2 == c.colour)
                        if (null ==
                            c.parent) c.colour = 1;
                        else {
                            c = c.parent;
                            continue
                        }
                    break
                }
            c = a.parent;
            null == c ? this.parent = b : c.prev == a ? c.prev = b : c.next = b;
            null != b && (b.parent = c);
            a.parent = a.prev = a.next = null;
            a.data = null;
            a.lt = null;
            a.swapped = null;
            a.next = e.ZPP_Set_ZPP_CbSet.zpp_pool;
            e.ZPP_Set_ZPP_CbSet.zpp_pool = a
        },
        remove: function(a) {
            this.remove_node(this.find(a))
        },
        find_weak: function(a) {
            for (var b = this.parent; null != b;)
                if (this.lt(a, b.data)) b = b.prev;
                else if (this.lt(b.data, a)) b = b.next;
            else break;
            return b
        },
        find: function(a) {
            for (var b = this.parent; null !=
                b && b.data != a;) b = this.lt(a, b.data) ? b.prev : b.next;
            return b
        },
        empty: function() {
            return null == this.parent
        },
        __class__: e.ZPP_Set_ZPP_CbSet
    };
    Array.prototype.indexOf ? S.remove = function(a, b) {
        var c = a.indexOf(b);
        if (-1 == c) return !1;
        a.splice(c, 1);
        return !0
    } : null;
    Math.__name__ = ["Math"];
    Math.NaN = Number.NaN;
    Math.NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY;
    Math.POSITIVE_INFINITY = Number.POSITIVE_INFINITY;
    j.Math = Math;
    Math.isFinite = function(a) {
        return isFinite(a)
    };
    Math.isNaN = function(a) {
        return isNaN(a)
    };
    String.prototype.__class__ =
        j.String = String;
    String.__name__ = ["String"];
    Array.prototype.__class__ = j.Array = Array;
    Array.__name__ = ["Array"];
    Date.prototype.__class__ = j.Date = Date;
    Date.__name__ = ["Date"];
    var Ga = j.Int = {
            __name__: ["Int"]
        },
        Ha = j.Dynamic = {
            __name__: ["Dynamic"]
        },
        Ea = j.Float = Number;
    Ea.__name__ = ["Float"];
    var Fa = j.Bool = Boolean;
    Fa.__ename__ = ["Bool"];
    var Ia = j.Class = {
            __name__: ["Class"]
        },
        Ja = {};
    P.Element = "element";
    P.PCData = "pcdata";
    P.CData = "cdata";
    P.Comment = "comment";
    P.DocType = "doctype";
    P.Prolog = "prolog";
    P.Document = "document";
    "undefined" !=
    typeof document && (R.document = document);
    "undefined" != typeof window && (R.window = window, R.window.onerror = function(a, b, c) {
        var d = R.onerror;
        return null == d ? !1 : d(a, [b + ":" + c])
    });
    "undefined" != typeof JSON && (xa = JSON);
    g.ConstantsApp.STAGE_WIDTH = 960;
    g.ConstantsApp.STAGE_HEIGHT = 560;
    g.ConstantsApp.STAGE_CENTER_X = 480;
    g.ConstantsApp.STAGE_CENTER_Y = 280;
    g.ConstantsApp.LEVEL_EASY = "easy";
    g.ConstantsApp.LEVEL_NORMAL = "normal";
    g.ConstantsApp.LEVEL_HARD = "hard";
    g.ConstantsApp.BALL_RADIUS = 24;
    g.ConstantsApp.PIPE_X = 260;
    g.ConstantsApp.PIPE_Y =
        80;
    g.ConstantsApp.PIPE_SPACING = 142;
    g.ConstantsApp.MAX_PRISMS = 2;
    g.ConstantsApp.MAX_FIREBALLS = 1;
    g.ConstantsApp.MAX_BOMBS = 5;
    g.ConstantsApp.SAVE_LEVEL = "saved_level";
    g.ConstantsApp.LAYER_BG = "layer_bg";
    g.ConstantsApp.LAYER_PLAYER = "layer_player";
    g.ConstantsApp.LAYER_FG = "layer_fg";
    g.ConstantsApp.EVENT_PAUSE = "eventPause";
    g.ConstantsApp.EVENT_UNPAUSE = "eventUnpause";
    g.ConstantsApp.EVENT_MUTE_TOGGLE = "EVENT_MUTE_TOGGLE";
    g.ConstantsApp.EVENT_WORLD_GENERATION_COMPLETE = "EVENT_WORLD_GENERATION_COMPLETE";
    g.ConstantsApp.EVENT_INPUT_FIELD_ENTER =
        "EVENT_INPUT_FIELD_ENTER";
    g.ConstantsApp.EVENT_BALL_POP = "EVENT_BALL_POP";
    g.ConstantsApp.EVENT_BALL_POP_GROUP = "EVENT_BALL_POP_GROUP";
    g.ConstantsApp.EVENT_BALL_SELECT = "EVENT_BALL_SELECT";
    g.ConstantsApp.EVENT_REMOVE_ELEMENT = "EVENT_REMOVE_ELEMENT";
    g.ConstantsApp.EVENT_LEVEL_SETUP = "EVENT_LEVEL_SETUP";
    g.ConstantsApp.EVENT_LEVEL_SETUP_FINISH = "EVENT_LEVEL_SETUP_FINISH";
    g.ConstantsApp.EVENT_LEVEL_NEXT = "EVENT_LEVEL_NEXT";
    g.ConstantsApp.EVENT_LEVEL_NEXT_FINISH = "EVENT_LEVEL_NEXT_FINISH";
    g.ConstantsApp.EVENT_ELEMENT_CHANGE_LAYER =
        "EVENT_ELEMENT_CHANGE_LAYER";
    g.ConstantsApp.EVENT_BONUS = "EVENT_BONUS";
    g.ConstantsApp.EVENT_BALL_BOMB = "EVENT_BALL_BOMB";
    g.ConstantsApp.EVENT_FIREBALL_START = "EVENT_FIREBALL_START";
    g.ConstantsApp.EVENT_FIREBALL_FINISH = "EVENT_FIREBALL_FINISH";
    g.ConstantsApp.EVENT_FIST = "EVENT_FIST";
    g.ConstantsApp.EVENT_CLEAR_ALL_SHOW = "EVENT_CLEAR_ALL_SHOW";
    g.ConstantsApp.EVENT_CLEAR_ALL_HIDE = "EVENT_CLEAR_ALL_HIDE";
    g.ConstantsApp.EVENT_SAVE = "EVENT_SAVE";
    g.ConstantsApp.EVENT_TUTORIAL_STEP = "EVENT_TUTORIAL_STEP";
    g.ConstantsApp.EVENT_TUTORIAL_FINISH =
        "EVENT_TUTORIAL_FINISH";
    g.ConstantsApp.EVENT_TUTORIAL_CLEAR = "EVENT_TUTORIAL_CLEAR";
    g.ConstantsApp.EVENT_DELETE_ARROW = "EVENT_DELETE_ARROW";
    g.ConstantsApp.BOOL_GAME_LOSE = "bool_game_lose";
    g.ConstantsApp.BOOL_GAME_WIN = "bool_game_win";
    g.ConstantsApp.BOOL_LEVEL_LOSE = "bool_level_lose";
    g.ConstantsApp.BOOL_LEVEL_WIN = "bool_level_win";
    g.ConstantsApp.BOOL_PAUSED = "bool_paused";
    g.ConstantsApp.BOOL_INPUT_LOCK = "bool_inputlock";
    g.ConstantsApp.BOOL_TOUCH_DEVICE = "bool_touch_device";
    g.ConstantsApp.BOOL_ORIENTATION_ALERT =
        "bool_orientation_alert";
    g.ConstantsApp.BOOL_RESUME = "bool_resume";
    g.ConstantsApp.BOOL_TUTORIAL = "bool_tutorial";
    g.ConstantsApp.INT_LEVEL = "int_level";
    g.ConstantsApp.INT_HEALTH = "int_health";
    g.ConstantsApp.INT_LIVES = "int_lives";
    g.ConstantsApp.INT_SCORE = "int_score";
    g.ConstantsApp.INT_LOADING_PROGRESS = "int_loading_progress";
    g.ConstantsApp.INT_MULTIPLIER = "int_multiplier";
    g.ConstantsApp.INT_LEVEL_PROGRESS = "int_level_progress";
    g.ConstantsApp.INT_NOTE_TYPE = "int_note_type";
    g.ConstantsApp.INT_TUTORIAL_STEP = "int_tutorial_step";
    g.ConstantsApp.FLOAT_TIMER = "float_timer";
    g.ConstantsApp.FLOAT_VOLUME_MUSIC = "FLOAT_VOLUME_MUSIC";
    g.ConstantsApp.FLOAT_VOLUME_SOUND = "FLOAT_VOLUME_SOUND";
    g.ConstantsApp.STRING_LEVEL_TYPE = "string_level_type";
    g.ConstantsApp.STRING_BONUS = "string_bonus";
    g.ConstantsApp.INPUT_CLICK = "input_click";
    g.ConstantsApp.INPUT_SPACE = "input_space";
    g.ConstantsApp.INPUT_Z = "input_z";
    g.ConstantsApp.INPUT_X = "input_x";
    g.ConstantsApp.INPUT_C = "input_c";
    g.ConstantsApp.INPUT_P = "input_p";
    g.ConstantsApp.INPUT_UP = "input_up";
    g.ConstantsApp.INPUT_DOWN =
        "input_down";
    g.ConstantsApp.INPUT_LEFT = "input_left";
    g.ConstantsApp.INPUT_RIGHT = "input_right";
    g.ConstantsApp.CONFIG_XML_PATH = "config/config.xml";
    g.ConstantsApp.OPTION_SILENCE_AUDIO = !1;
    g.ConstantsApp.scaleFactor = 1;
    g.ConstantsScreen.SCREEN_LOADING = "loadpanel";
    g.ConstantsScreen.SCREEN_SPLASH = "splash";
    g.ConstantsScreen.SCREEN_HELP = "help";
    g.ConstantsScreen.SCREEN_GAMEPLAY_HUD = "gameplayhud";
    g.ConstantsScreen.SCREEN_GAMEPLAY_MENU = "gameplaymenu";
    g.ConstantsScreen.SCREEN_QUIT_CONFIRM = "quitconfirm";
    g.ConstantsScreen.SCREEN_END_GAME =
        "endgame";
    g.ConstantsScreen.SCREEN_PAUSE_ALERT = "pause";
    g.ConstantsScreen.SCREEN_LEVEL_SELECT = "levelselect";
    g.ConstantsScreen.SCREEN_SOUND = "sound";
    g.ConstantsScreen.SCREEN_START = "start";
    g.ConstantsScreen.TRANSITION_FADE = 0;
    g.ConstantsScreen.TRANSITION_SCROLL = 1;
    g.ConstantsScreen.TRANSITION_SCROLL_DOWN = 2;
    g.ConstantsScreen.TRANSITION_SCROLL_UP = 3;
    g.ConstantsScreen.TRANSITION_STAGED = 4;
    g.ConstantsScreen.TRANSITION_SCREENSHOT = 5;
    g.ConstantsScreen.CHANGE_OPEN_BEGIN = 0;
    g.ConstantsScreen.CHANGE_OPEN_COMPLETE = 1;
    g.ConstantsScreen.CHANGE_CLOSE_BEGIN = 2;
    g.ConstantsScreen.CHANGE_CLOSE_COMPLETE = 3;
    g.ConstantsScreen.OUTPUT_OPENED = 0;
    g.ConstantsScreen.OUTPUT_CLOSED = 1;
    g.ConstantsScreen.CONDITION_CLOSED_ALL = 0;
    g.ConstantsScreen.CONDITION_CLOSED_SPECIFIC = 1;
    g.ConstantsScreen.CONDITION_TRANSITION_MIDWAY = 2;
    g.ConstantsScreen.CONDITION_TRANSITION_COMPLETE = 3;
    g.ConstantsScreen.CONDITION_IMMEDIATE = 4;
    g.ConstantsScreen.FLOW_SPLASH_PLAY = "FLOW_SPLASH_PLAY";
    g.ConstantsScreen.FLOW_START = "FLOW_START";
    g.ConstantsScreen.FLOW_LEVEL_SELECT =
        "FLOW_LEVEL_SELECT";
    g.ConstantsScreen.FLOW_LEVEL_SELECT_CLOSE = "FLOW_LEVEL_SELECT_CLOSE";
    g.ConstantsScreen.FLOW_HELP_CLOSE = "FLOW_HELP_CLOSE";
    g.ConstantsScreen.FLOW_GAMEPLAY_MENU = "FLOW_GAMEPLAY_MENU";
    g.ConstantsScreen.FLOW_GAMEPLAY_MENU_CLOSE = "FLOW_GAMEPLAY_MENU_CLOSE";
    g.ConstantsScreen.FLOW_GAMEPLAY_MENU_HELP = "FLOW_GAMEPLAY_MENU_HELP";
    g.ConstantsScreen.FLOW_GAMEPLAY_MENU_QUIT = "FLOW_GAMEPLAY_MENU_QUIT";
    g.ConstantsScreen.FLOW_GAMEPLAY_MENU_SOUND = "FLOW_GAMEPLAY_MENU_SOUND";
    g.ConstantsScreen.FLOW_GAMEPLAY_MENU_SOUND_CLOSE =
        "FLOW_GAMEPLAY_MENU_SOUND_CLOSE";
    g.ConstantsScreen.FLOW_GAMEPLAY_QUIT_YES = "FLOW_GAMEPLAY_QUIT_YES";
    g.ConstantsScreen.FLOW_GAMEPLAY_QUIT_NO = "FLOW_GAMEPLAY_QUIT_NO";
    g.ConstantsScreen.FLOW_END_GAME_PLAY_AGAIN = "FLOW_END_GAME_PLAY_AGAIN";
    g.ConstantsScreen.FLOW_END_GAME_START = "FLOW_END_GAME_START";
    g.ConstantsScreen.FLOW_BRANCH_GAME_WIN = "FLOW_BRANCH_GAME_WIN";
    g.ConstantsScreen.FLOW_BRANCH_GAME_LOSE = "FLOW_BRANCH_GAME_LOSE";
    g.ConstantsScreen.FLOW_BRANCH_LEVEL_WIN = "FLOW_BRANCH_LEVEL_WIN";
    g.ConstantsScreen.FLOW_BRANCH_LEVEL_LOSE =
        "FLOW_BRANCH_LEVEL_LOSE";
    p.buttons.ButtonBase.UP = "workinBtnUp";
    p.buttons.ButtonBase.DOWN = "workinBtnDown";
    p.buttons.ButtonBase.CLICK = "workinBtnClick";
    p.buttons.ButtonBase.CANCEL_DRAG = "workinBtnCancelDrag";
    t.Display.EVENT_UPDATE_DISPLAY = "event_update_display";
    p.screens.data.ScreenStateData.ACTION_STOP = 0;
    p.screens.data.ScreenStateData.ACTION_OPENED = 1;
    p.screens.data.ScreenStateData.ACTION_EVENT = 2;
    p.screens.data.ScreenStateData.ACTION_NEW_STATE = 3;
    p.screens.data.ScreenStateData.ACTION_CLOSED = 4;
    p.screens.data.ScreenStateData.ACTION_FLOW =
        5;
    o.elements.Marble.TYPE_1 = "AngryBlueFish";
    o.elements.Marble.TYPE_2 = "GreenFish";
    o.elements.Marble.TYPE_3 = "OrangeFish";
    o.elements.Marble.TYPE_4 = "PurpleFish";
    o.elements.Marble.TYPE_5 = "RedFish";
    o.elements.Marble.TYPE_6 = "ScaredBlueFish";
    o.elements.Marble.TYPE_SPONGEBOB = "Spengebabs";
    o.elements.Marble.TYPE_PLANKTON = "Plankton";
    o.elements.Marble.TYPE_SANDY = "Sally";
    o.elements.Marble.TYPE_PATRICK = "Patrick";
    o.elements.Marble.TYPE_SQUIDWARD = "Squidward";
    o.elements.Marble.TYPE_GARY = "Gary";
    o.elements.Marble.TYPE_EYE =
        "Pearl";
    o.elements.Marble.TYPE_BONUS1 = "Pickle Marble";
    o.elements.Marble.TYPE_BONUS2 = "Crabby Patty Marble";
    o.elements.Marble.TYPE_BONUS3 = "Coin Marble";
    o.elements.Marble.TYPE_SKULL = "Skull Marble";
    o.elements.Marble.TYPE_JELLYFISH = "Jellyfish";
    o.elements.Marble.TYPE_RAINBOW = "RainbowRock";
    o.elements.Marble.TYPE_FIREBALL = "ShinyBlueRock";
    o.elements.Marble.TYPE_CANNONBALL = "Rock";
    $.ConstantsCloud.FONT_DEFAULT = "Basic";
    $.ConstantsCloud.STRING_REGION_ID = "cloudregionid";
    $.ConstantsCloud.LOCALIZATION_XML_PATH = "config/";
    $.ConstantsCloud.EVENT_FILES_LOADED = "EVENT_WORKINCLOUD_FILES_LOADED";
    $.ConstantsCloud.EVENT_FILES_LOADING = "EVENT_FILES_LOADING";
    $.ConstantsCloud.EVENT_FILES_ERROR = "EVENT_FILES_ERROR";
    $.ConstantsCloud.EVENT_TWEENS_COMPLETE = "EVENT_TWEENS_COMPLETE";
    $.ConstantsCloud.EVENT_INPUT_ARBITRARY_KEY = "EVENT_INPUT_ARBITRARY_KEY";
    $.ConstantsCloud._uniqueId = 0;
    y.WMEventFlow.EVENT_FLOW = "Nflow";
    y.WMEventInput.EVENT_INPUT = "eventinput";
    y.WMEventInput.PHASE_DOWN = 1;
    y.WMEventInput.PHASE_UP = 0;
    y.WMEventInput.PHASE_MOVE = 2;
    y.WMEventInterfaceChange.EVENT_INTERFACE_OUTPUT = "Neio";
    y.WMEventScreenOut.EVENT_SCREEN_OUTPUT = "Neso";
    y.WMEventUpdate.EVENT_UPDATE = "eventupdate";
    k.tween.PennerManager.EASE_LINEAR = "linear";
    k.tween.PennerManager.EASE = "ease";
    k.tween.PennerManager.EASE_QUAD = "quad";
    k.tween.PennerManager.EASE_IN = "easeIn";
    k.tween.PennerManager.EASE_QUAD_IN = "quadIn";
    k.tween.PennerManager.EASE_OUT = "easeOut";
    k.tween.PennerManager.EASE_QUAD_OUT = "quadOut";
    k.tween.PennerManager.EASE_EXPO = "expo";
    k.tween.PennerManager.EASE_EXPO_IN =
        "expoIn";
    k.tween.PennerManager.EASE_EXPO_OUT = "expoOut";
    k.tween.PennerManager.EASE_ELASTIC = "elastic";
    k.tween.PennerManager.EASE_ELASTIC_IN = "elasticIn";
    k.tween.PennerManager.EASE_ELASTIC_OUT = "elasticOut";
    k.tween.PennerManager.EASE_BUMP = "bump";
    k.tween.PennerManager.EASE_BUMP_IN = "bumpIn";
    k.tween.PennerManager.EASE_BUMP_OUT = "bumpOut";
    k.tween.PennerManager.EASE_BOUNCE = "bounce";
    k.tween.PennerManager.EASE_BOUNCE_IN = "bounceIn";
    k.tween.PennerManager.EASE_BOUNCE_OUT = "bounceOut";
    k.tween.PennerManager.EASE_CUBIC =
        "cubic";
    k.tween.PennerManager.EASE_CUBIC_IN = "cubicIn";
    k.tween.PennerManager.EASE_CUBIC_OUT = "cubicOut";
    k.tween.PennerManager.EASE_SPACE = "space";
    k.tween.PennerManager.EASE_SPACE_IN = "spaceIn";
    k.tween.PennerManager.EASE_SPACE_OUT = "spaceOut";
    k.tween.PennerManager.EASE_BLAST = "blast";
    k.tween.PennerManager.EASE_BLAST_IN = "blastIn";
    k.tween.PennerManager.EASE_BLAST_OUT = "blastOut";
    k.tween.PennerManager.EASE_WAVE = "wave";
    k.tween.PennerManager.EASE_WAVE_IN = "waveIn";
    k.tween.PennerManager.EASE_WAVE_OUT = "waveOut";
    k.tween.PennerManager.EASE_CIRCLE = "circle";
    k.tween.PennerManager.EASE_CIRCLE_IN = "circleIn";
    k.tween.PennerManager.EASE_CIRCLE_OUT = "circleOut";
    G.ServiceAnalytics._offlineUserId = "";
    G.ServiceAnalytics._offlineTrackingId = "";
    G.ServiceAnalytics._appId = "";
    G.ServiceAnalytics._sessionId = "";
    G.ServiceAnalytics._canadaShowGameTitle = "";
    G.ServiceAnalytics._flagInitted = !1;
    G.ServiceAnalytics._flagStarted = !1;
    G.ServiceAnalytics._flagLoaded = !1;
    G.ServiceAnalytics._flagCanadaTrackingEnabled = !1;
    G.ServiceAnalytics._DEFAULT_SHARED_OBJECT_ID =
        "nkcimocuresid";
    G.ServiceAnalytics.OPTION_ENABLE_TRACKING = !0;
    i.WMPointer._DELTA_ALLOWANCE = 30;
    i.WMPointer._DELTA_TIMEOUT = 0.2;
    i.WMSound.FADE_NONE = 0;
    i.WMSound.FADE_IN = 1;
    i.WMSound.FADE_OUT = -1;
    i.WorkinCloud.instance = new i.WorkinCloud;
    m.html.HtmlPlatform.instance = new m.html.HtmlPlatform;
    z.SignalBase.DISPATCHING_SENTINEL = new z.SignalConnection(null, null);
    W.root = new ma;
    W.uncaughtError = new z.Signal1;
    W.hidden = new z.Value(!1);
    W.hasGPU = new z.Value(!1);
    W.volume = new ca.AnimatedFloat(1);
    W._platform = m.html.HtmlPlatform.instance;
    W._calledInit = !1;
    ga.logger = new z.Logger(W._platform.createLogHandler("flambe"));
    X.Manifest._buildManifest = X.Manifest.createBuildManifests();
    ha = X.Manifest;
    U = (new wa("\\b(Android)\\b", "")).match(R.window.navigator.userAgent) ? !1 : null != (new XMLHttpRequest).withCredentials;
    ha._supportsCrossOrigin = U;
    E.Sprite._scratchPoint = new fa.Point;
    m.BasicKeyboard._sharedEvent = new h.KeyboardEvent;
    m.BasicMouse._sharedEvent = new h.MouseEvent;
    m.BasicPointer._sharedEvent = new h.PointerEvent;
    m.html.CanvasRenderer.CANVAS_TEXTURES =
        (new wa("(iPhone|iPod|iPad)", "")).match(R.window.navigator.userAgent);
    m.html.HtmlAssetPackLoader._mediaRefCount = 0;
    m.html.HtmlAssetPackLoader._detectBlobSupport = !0;
    m.html.HtmlUtil.VENDOR_PREFIXES = ["webkit", "moz", "ms", "o", "khtml"];
    m.html.HtmlUtil.SHOULD_HIDE_MOBILE_BROWSER = R.window.top == R.window && (new wa("Mobile(/.*)? Safari", "")).match(R.window.navigator.userAgent);
    m.html.WebAudioSound._detectSupport = !0;
    sa.USE_CACHE = !1;
    sa.USE_ENUM_INDEX = !1;
    sa.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
    oa.DEFAULT_RESOLVER = la;
    oa.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
    x.epsilon = 1.0E-8;
    x.fluidAngularDragFriction = 2.5;
    x.fluidAngularDrag = 100;
    x.fluidVacuumDrag = 0.5;
    x.fluidLinearDrag = 0.5;
    x.collisionSlop = 0.2;
    x.collisionSlopCCD = 0.5;
    x.distanceThresholdCCD = 0.05;
    x.staticCCDLinearThreshold = 0.05;
    x.staticCCDAngularThreshold = 0.0050;
    x.bulletCCDLinearThreshold = 0.125;
    x.bulletCCDAngularThreshold = 0.0125;
    x.dynamicSweepLinearThreshold = 17;
    x.dynamicSweepAngularThreshold = 0.6;
    x.angularCCDSlipScale =
        0.75;
    x.arbiterExpirationDelay = 6;
    x.staticFrictionThreshold = 2;
    x.elasticThreshold = 20;
    x.sleepDelay = 60;
    x.linearSleepThreshold = 0.2;
    x.angularSleepThreshold = 0.4;
    x.contactBiasCoef = 0.3;
    x.contactStaticBiasCoef = 0.6;
    x.contactContinuousBiasCoef = 0.4;
    x.contactContinuousStaticBiasCoef = 0.5;
    x.constraintLinearSlop = 0.1;
    x.constraintAngularSlop = 0.0010;
    x.illConditionedThreshold = 2E8;
    ja._Constraint = 0;
    ja._Interactor = 0;
    ja._CbType = 0;
    ja._CbSet = 0;
    ja._Listener = 0;
    H.ZPP_CbType.ANY_SHAPE = new v.CbType;
    H.ZPP_CbType.ANY_BODY = new v.CbType;
    H.ZPP_CbType.ANY_COMPOUND = new v.CbType;
    H.ZPP_CbType.ANY_CONSTRAINT = new v.CbType;
    H.ZPP_InteractionListener.UCbSet = new e.ZNPList_ZPP_CbSet;
    H.ZPP_InteractionListener.VCbSet = new e.ZNPList_ZPP_CbSet;
    H.ZPP_InteractionListener.WCbSet = new e.ZNPList_ZPP_CbSet;
    H.ZPP_InteractionListener.UCbType = new e.ZNPList_ZPP_CbType;
    H.ZPP_InteractionListener.VCbType = new e.ZNPList_ZPP_CbType;
    H.ZPP_InteractionListener.WCbType = new e.ZNPList_ZPP_CbType;
    D.ZPP_Arbiter.internal = !1;
    D.ZPP_Arbiter.COL = 1;
    D.ZPP_Arbiter.FLUID = 4;
    D.ZPP_Arbiter.SENSOR =
        2;
    D.ZPP_Contact.internal = !1;
    q.ZPP_Collide.flowpoly = new e.ZNPList_ZPP_Vec2;
    q.ZPP_Collide.flowsegs = new e.ZNPList_ZPP_Vec2;
    q.ZPP_ConvexRayResult.internal = !1;
    O.ZPP_Material.WAKE = 1;
    O.ZPP_Material.PROPS = 2;
    O.ZPP_Material.ANGDRAG = 4;
    O.ZPP_Material.ARBITERS = 8;
    V.ZPP_Edge.internal = !1;
    A.ZPP_AABBTree.tmpaabb = new q.ZPP_AABB;
    e.ZPP_Flags.internal = !1;
    e.ZPP_Flags.id_ImmState_ACCEPT = 1;
    e.ZPP_Flags.id_ImmState_IGNORE = 2;
    e.ZPP_Flags.id_ImmState_ALWAYS = 4;
    e.ZPP_Flags.id_GravMassMode_DEFAULT = 0;
    e.ZPP_Flags.id_GravMassMode_FIXED =
        1;
    e.ZPP_Flags.id_GravMassMode_SCALED = 2;
    e.ZPP_Flags.id_InertiaMode_DEFAULT = 0;
    e.ZPP_Flags.id_InertiaMode_FIXED = 1;
    e.ZPP_Flags.id_MassMode_DEFAULT = 0;
    e.ZPP_Flags.id_MassMode_FIXED = 1;
    e.ZPP_Flags.id_BodyType_STATIC = 1;
    e.ZPP_Flags.id_BodyType_DYNAMIC = 2;
    e.ZPP_Flags.id_BodyType_KINEMATIC = 3;
    e.ZPP_Flags.id_ListenerType_BODY = 0;
    e.ZPP_Flags.id_PreFlag_ACCEPT = 1;
    e.ZPP_Flags.id_ListenerType_CONSTRAINT = 1;
    e.ZPP_Flags.id_ListenerType_INTERACTION = 2;
    e.ZPP_Flags.id_ListenerType_PRE = 3;
    e.ZPP_Flags.id_CbEvent_BEGIN = 0;
    e.ZPP_Flags.id_InteractionType_COLLISION =
        1;
    e.ZPP_Flags.id_CbEvent_ONGOING = 6;
    e.ZPP_Flags.id_InteractionType_SENSOR = 2;
    e.ZPP_Flags.id_CbEvent_END = 1;
    e.ZPP_Flags.id_InteractionType_FLUID = 4;
    e.ZPP_Flags.id_CbEvent_WAKE = 2;
    e.ZPP_Flags.id_InteractionType_ANY = 7;
    e.ZPP_Flags.id_CbEvent_SLEEP = 3;
    e.ZPP_Flags.id_CbEvent_BREAK = 4;
    e.ZPP_Flags.id_CbEvent_PRE = 5;
    e.ZPP_Flags.id_ShapeType_CIRCLE = 0;
    e.ZPP_Flags.id_ShapeType_POLYGON = 1;
    e.ZPP_ConstraintList.internal = !1;
    e.ZPP_BodyList.internal = !1;
    e.ZPP_InteractorList.internal = !1;
    e.ZPP_CompoundList.internal = !1;
    e.ZPP_ListenerList.internal = !1;
    e.ZPP_CbTypeList.internal = !1;
    e.ZPP_Vec2List.internal = !1;
    e.ZPP_GeomPolyList.internal = !1;
    e.ZPP_RayResultList.internal = !1;
    e.ZPP_ConvexResultList.internal = !1;
    e.ZPP_EdgeList.internal = !1;
    e.ZPP_ShapeList.internal = !1;
    e.ZPP_InteractionGroupList.internal = !1;
    e.ZPP_ArbiterList.internal = !1;
    e.ZPP_ContactList.internal = !1;
    ka.main()
})();