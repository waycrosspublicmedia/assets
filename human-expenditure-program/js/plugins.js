// Generated by RPG Maker.
// Do not edit this file directly.
var $plugins =
[
{"name":"Public_0_PixiJsFilters","status":true,"description":"[RPG Maker MZ] [Tier 0] [Version 3.1.0] [Pixi JS Filters]","parameters":{}},
{"name":"EliMZ_Book","status":true,"description":"♦5.4.17♦ Essential plugin for all Eli plugins.","parameters":{"engine":"{\"pixelPerfect\":\"false\",\"styleOverflow\":\"false\",\"--- MZ ONLY ---\":\"\",\"disableEffekseer\":\"false\"}","playtest":"{\"openDevTools\":\"false\",\"nwWindowPos\":\"0, 0\",\"--- MZ ONLY ---\":\"\",\"gameFocus\":\"true\",\"quickRestart\":\"true\"}"}},
{"name":"VisuMZ_0_CoreEngine","status":true,"description":"[RPG Maker MZ] [Tier 0] [Version 1.87] [CoreEngine]","parameters":{"BreakHead":"----------------------------------","CoreEngine":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","QoL:struct":"{\"PlayTest\":\"\",\"NewGameBoot:eval\":\"false\",\"ForceNoPlayTest:eval\":\"false\",\"OpenConsole:eval\":\"false\",\"F6key:eval\":\"true\",\"F7key:eval\":\"true\",\"CtrlQuickLoad:eval\":\"true\",\"NewGameCommonEvent:num\":\"0\",\"BattleTest\":\"\",\"BTestItems:eval\":\"true\",\"BTestWeapons:eval\":\"true\",\"BTestArmors:eval\":\"true\",\"BTestAddedQuantity:num\":\"90\",\"ShiftR_Toggle:eval\":\"true\",\"ShiftT_Toggle:eval\":\"true\",\"DigitGrouping\":\"\",\"DigitGroupingStandardText:eval\":\"false\",\"DigitGroupingExText:eval\":\"false\",\"DigitGroupingDamageSprites:eval\":\"false\",\"DigitGroupingGaugeSprites:eval\":\"false\",\"DigitGroupingLocale:str\":\"en-US\",\"PlayerBenefit\":\"\",\"EncounterRateMinimum:num\":\"10\",\"EscapeAlways:eval\":\"true\",\"ImprovedAccuracySystem:eval\":\"true\",\"AccuracyBoost:eval\":\"true\",\"LevelUpFullHp:eval\":\"true\",\"LevelUpFullMp:eval\":\"true\",\"Pictures\":\"\",\"AntiZoomPictures:eval\":\"true\",\"PictureContainers\":\"\",\"DetachBattlePictureContainer:eval\":\"false\",\"DetachMapPictureContainer:eval\":\"false\",\"Misc\":\"\",\"AnimationMirrorOffset:eval\":\"false\",\"AutoStretch:str\":\"default\",\"FontShadows:eval\":\"false\",\"FontSmoothing:eval\":\"true\",\"FontWidthFix:eval\":\"true\",\"KeyItemProtect:eval\":\"true\",\"MapNameTextCode:eval\":\"true\",\"ModernControls:eval\":\"true\",\"MvAnimationRate:num\":\"4\",\"NewGameCommonEventAll:num\":\"0\",\"NoTileShadows:eval\":\"false\",\"PixelateImageRendering:eval\":\"false\",\"RequireFocus:eval\":\"false\",\"ShortcutScripts:eval\":\"true\",\"SmartEventCollisionPriority:eval\":\"true\",\"SubfolderParse:eval\":\"true\"}","BattleSystem:str":"database","Color:struct":"{\"BasicColors\":\"\",\"ColorNormal:str\":\"0\",\"ColorSystem:str\":\"16\",\"ColorCrisis:str\":\"17\",\"ColorDeath:str\":\"18\",\"ColorGaugeBack:str\":\"19\",\"ColorHPGauge1:str\":\"20\",\"ColorHPGauge2:str\":\"21\",\"ColorMPGauge1:str\":\"22\",\"ColorMPGauge2:str\":\"23\",\"ColorMPCost:str\":\"23\",\"ColorPowerUp:str\":\"24\",\"ColorPowerDown:str\":\"25\",\"ColorCTGauge1:str\":\"26\",\"ColorCTGauge2:str\":\"27\",\"ColorTPGauge1:str\":\"28\",\"ColorTPGauge2:str\":\"29\",\"ColorTPCost:str\":\"29\",\"ColorPending:str\":\"#2a847d\",\"ColorExpGauge1:str\":\"30\",\"ColorExpGauge2:str\":\"31\",\"ColorMaxLvGauge1:str\":\"14\",\"ColorMaxLvGauge2:str\":\"6\",\"AlphaColors\":\"\",\"OutlineColor:str\":\"rgba(0, 0, 0, 0.6)\",\"DimColor1:str\":\"rgba(0, 0, 0, 0.6)\",\"DimColor2:str\":\"rgba(0, 0, 0, 0)\",\"ItemBackColor1:str\":\"rgba(32, 32, 32, 0.5)\",\"ItemBackColor2:str\":\"rgba(0, 0, 0, 0.5)\",\"ConditionalColors\":\"\",\"ActorHPColor:func\":\"\\\"// Set the variables used in this function.\\\\nlet actor = arguments[0];\\\\n\\\\n// Check if the actor exists. If not, return normal.\\\\nif (!actor) {\\\\n    return this.normalColor();\\\\n\\\\n// If the actor is dead, return death color.\\\\n} else if (actor.isDead()) {\\\\n    return this.deathColor();\\\\n\\\\n// If the actor is dying, return crisis color.\\\\n} else if (actor.isDying()) {\\\\n    return this.crisisColor();\\\\n\\\\n// Otherwise, return the normal color.\\\\n} else {\\\\n    return this.normalColor();\\\\n}\\\"\",\"ActorMPColor:func\":\"\\\"// Set the variables used in this function.\\\\nlet actor = arguments[0];\\\\n\\\\n// Check if the actor exists. If not, return normal.\\\\nif (!actor) {\\\\n    return this.normalColor();\\\\n\\\\n// If MP rate is below 25%, return crisis color.\\\\n} else if (actor.mpRate() < 0.25) {\\\\n    return this.crisisColor();\\\\n\\\\n// Otherwise, return the normal color.\\\\n} else {\\\\n    return this.normalColor();\\\\n}\\\"\",\"ActorTPColor:func\":\"\\\"// Set the variables used in this function.\\\\nlet actor = arguments[0];\\\\n\\\\n// Check if the actor exists. If not, return normal.\\\\nif (!actor) {\\\\n    return this.normalColor();\\\\n\\\\n// If TP rate is below 25%, return crisis color.\\\\n} else if (actor.tpRate() < 0.25) {\\\\n    return this.crisisColor();\\\\n\\\\n// Otherwise, return the normal color.\\\\n} else {\\\\n    return this.normalColor();\\\\n}\\\"\",\"ParamChange:func\":\"\\\"// Set the variables used in this function.\\\\nlet change = arguments[0];\\\\n\\\\n// If a positive change, use power up color.\\\\nif (change > 0) {\\\\n    return this.powerUpColor();\\\\n\\\\n// If a negative change, use power down color.\\\\n} else if (change < 0) {\\\\n    return this.powerDownColor();\\\\n\\\\n// Otherwise, return the normal color.\\\\n} else {\\\\n    return this.normalColor();\\\\n}\\\"\",\"DamageColor:func\":\"\\\"// Set the variables used in this function.\\\\nlet colorType = arguments[0];\\\\n\\\\n// Check the value of the color type\\\\n// and return an appropriate color.\\\\nswitch (colorType) {\\\\n\\\\n    case 0: // HP damage\\\\n        return \\\\\\\"#ffffff\\\\\\\";\\\\n\\\\n    case 1: // HP recover\\\\n        return \\\\\\\"#b9ffb5\\\\\\\";\\\\n\\\\n    case 2: // MP damage\\\\n        return \\\\\\\"#bb88bb\\\\\\\";\\\\n\\\\n    case 3: // MP recover\\\\n        return \\\\\\\"#80b0ff\\\\\\\";\\\\n\\\\n    default:\\\\n        return \\\\\\\"#808080\\\\\\\";\\\\n}\\\"\"}","Gold:struct":"{\"GoldMax:num\":\"999999999\",\"GoldFontSize:num\":\"24\",\"GoldIcon:num\":\"314\",\"GoldOverlap:str\":\"A Lot\",\"ItemStyle:eval\":\"true\"}","ImgLoad:struct":"{\"animations:arraystr\":\"[]\",\"battlebacks1:arraystr\":\"[]\",\"battlebacks2:arraystr\":\"[]\",\"characters:arraystr\":\"[]\",\"enemies:arraystr\":\"[]\",\"faces:arraystr\":\"[]\",\"parallaxes:arraystr\":\"[]\",\"pictures:arraystr\":\"[]\",\"sv_actors:arraystr\":\"[]\",\"sv_enemies:arraystr\":\"[]\",\"system:arraystr\":\"[\\\"Balloon\\\",\\\"IconSet\\\"]\",\"tilesets:arraystr\":\"[]\",\"titles1:arraystr\":\"[]\",\"titles2:arraystr\":\"[]\"}","KeyboardInput:struct":"{\"Controls\":\"\",\"WASD:eval\":\"false\",\"DashToggleR:eval\":\"false\",\"NameInput\":\"\",\"EnableNameInput:eval\":\"true\",\"DefaultMode:str\":\"keyboard\",\"QwertyLayout:eval\":\"true\",\"NameInputMessage:eval\":\"\\\"Type in this character's name.\\\\nPress \\\\\\\\c[5]ENTER\\\\\\\\c[0] when you're done.\\\\n\\\\n-or-\\\\n\\\\nPress \\\\\\\\c[5]arrow keys\\\\\\\\c[0]/\\\\\\\\c[5]TAB\\\\\\\\c[0] to switch\\\\nto manual character entry.\\\\n\\\\nPress \\\\\\\\c[5]ESC\\\\\\\\c[0]/\\\\\\\\c[5]TAB\\\\\\\\c[0] to use to keyboard.\\\"\",\"NumberInput\":\"\",\"EnableNumberInput:eval\":\"true\",\"ButtonAssist\":\"\",\"Keyboard:str\":\"Keyboard\",\"Manual:str\":\"Manual\"}","MenuBg:struct":"{\"Scene_Menu:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Item:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Skill:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Equip:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Status:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Options:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Save:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Load:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_GameEnd:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"128\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Shop:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Name:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\",\"Scene_Unlisted:struct\":\"{\\\"SnapshotOpacity:num\\\":\\\"192\\\",\\\"BgFilename1:str\\\":\\\"\\\",\\\"BgFilename2:str\\\":\\\"\\\"}\"}","ButtonAssist:struct":"{\"General\":\"\",\"Enable:eval\":\"false\",\"Location:str\":\"bottom\",\"BgType:num\":\"0\",\"SplitEscape:eval\":\"false\",\"Text\":\"\",\"TextFmt:str\":\"%1:%2\",\"MultiKeyFmt:str\":\"%1/%2\",\"OkText:str\":\"Select\",\"CancelText:str\":\"Back\",\"SwitchActorText:str\":\"Switch Ally\",\"Keys\":\"\",\"KeyUnlisted:str\":\"\\\\}❪%1❫\\\\{\",\"KeyUP:str\":\"^\",\"KeyDOWN:str\":\"v\",\"KeyLEFT:str\":\"<<\",\"KeyRIGHT:str\":\">>\",\"KeySHIFT:str\":\"\\\\}❪SHIFT❫\\\\{\",\"KeyTAB:str\":\"\\\\}❪TAB❫\\\\{\",\"KeyA:str\":\"A\",\"KeyB:str\":\"B\",\"KeyC:str\":\"C\",\"KeyD:str\":\"D\",\"KeyE:str\":\"E\",\"KeyF:str\":\"F\",\"KeyG:str\":\"G\",\"KeyH:str\":\"H\",\"KeyI:str\":\"I\",\"KeyJ:str\":\"J\",\"KeyK:str\":\"K\",\"KeyL:str\":\"L\",\"KeyM:str\":\"M\",\"KeyN:str\":\"N\",\"KeyO:str\":\"O\",\"KeyP:str\":\"P\",\"KeyQ:str\":\"Q\",\"KeyR:str\":\"R\",\"KeyS:str\":\"S\",\"KeyT:str\":\"T\",\"KeyU:str\":\"U\",\"KeyV:str\":\"V\",\"KeyW:str\":\"W\",\"KeyX:str\":\"X\",\"KeyY:str\":\"Y\",\"KeyZ:str\":\"Z\"}","ControllerButtons:arraystruct":"[]","MenuLayout:struct":"{\"Title:struct\":\"{\\\"TitleScreen\\\":\\\"\\\",\\\"DocumentTitleFmt:str\\\":\\\"%1: %2 - Version %3\\\",\\\"Subtitle:str\\\":\\\"Subtitle\\\",\\\"Version:str\\\":\\\"0.00\\\",\\\"drawGameTitle:func\\\":\\\"\\\\\\\"const x = 20;\\\\\\\\nconst y = Graphics.height / 4;\\\\\\\\nconst maxWidth = Graphics.width - x * 2;\\\\\\\\nconst text = $dataSystem.gameTitle;\\\\\\\\nconst bitmap = this._gameTitleSprite.bitmap;\\\\\\\\nbitmap.fontFace = $gameSystem.mainFontFace();\\\\\\\\nbitmap.outlineColor = \\\\\\\\\\\\\\\"black\\\\\\\\\\\\\\\";\\\\\\\\nbitmap.outlineWidth = 8;\\\\\\\\nbitmap.fontSize = 72;\\\\\\\\nbitmap.drawText(text, x, y, maxWidth, 48, \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"drawGameSubtitle:func\\\":\\\"\\\\\\\"const x = 20;\\\\\\\\nconst y = Graphics.height / 4 + 72;\\\\\\\\nconst maxWidth = Graphics.width - x * 2;\\\\\\\\nconst text = Scene_Title.subtitle;\\\\\\\\nconst bitmap = this._gameTitleSprite.bitmap;\\\\\\\\nbitmap.fontFace = $gameSystem.mainFontFace();\\\\\\\\nbitmap.outlineColor = \\\\\\\\\\\\\\\"black\\\\\\\\\\\\\\\";\\\\\\\\nbitmap.outlineWidth = 6;\\\\\\\\nbitmap.fontSize = 48;\\\\\\\\nbitmap.drawText(text, x, y, maxWidth, 48, \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"drawGameVersion:func\\\":\\\"\\\\\\\"const bitmap = this._gameTitleSprite.bitmap;\\\\\\\\nconst x = 0;\\\\\\\\nconst y = Graphics.height - 20;\\\\\\\\nconst width = Math.round(Graphics.width / 4);\\\\\\\\nconst height = 20;\\\\\\\\nconst c1 = ColorManager.dimColor1();\\\\\\\\nconst c2 = ColorManager.dimColor2();\\\\\\\\nconst text = 'Version ' + Scene_Title.version;\\\\\\\\nbitmap.gradientFillRect(x, y, width, height, c1, c2);\\\\\\\\nbitmap.fontFace = $gameSystem.mainFontFace();\\\\\\\\nbitmap.outlineColor = \\\\\\\\\\\\\\\"black\\\\\\\\\\\\\\\";\\\\\\\\nbitmap.outlineWidth = 3;\\\\\\\\nbitmap.fontSize = 16;\\\\\\\\nbitmap.drawText(text, x + 4, y, Graphics.width, height, \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\");\\\\\\\"\\\",\\\"CommandRect:func\\\":\\\"\\\\\\\"const offsetX = $dataSystem.titleCommandWindow.offsetX;\\\\\\\\nconst offsetY = $dataSystem.titleCommandWindow.offsetY;\\\\\\\\nconst rows = this.commandWindowRows();\\\\\\\\nconst width = this.mainCommandWidth();\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nconst x = (Graphics.boxWidth - width) / 2 + offsetX;\\\\\\\\nconst y = Graphics.boxHeight - height - 96 + offsetY;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ButtonFadeSpeed:num\\\":\\\"4\\\"}\",\"MainMenu:struct\":\"{\\\"CommandWindow\\\":\\\"\\\",\\\"CommandBgType:num\\\":\\\"0\\\",\\\"CommandRect:func\\\":\\\"\\\\\\\"const width = this.mainCommandWidth();\\\\\\\\nconst height = this.mainAreaHeight() - this.goldWindowRect().height;\\\\\\\\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"GoldWindow\\\":\\\"\\\",\\\"GoldBgType:num\\\":\\\"0\\\",\\\"GoldRect:func\\\":\\\"\\\\\\\"const rows = 1;\\\\\\\\nconst width = this.mainCommandWidth();\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\\\\\\\\nconst y = this.mainAreaBottom() - height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"StatusWindow\\\":\\\"\\\",\\\"StatusBgType:num\\\":\\\"0\\\",\\\"StatusRect:func\\\":\\\"\\\\\\\"const width = Graphics.boxWidth - this.mainCommandWidth();\\\\\\\\nconst height = this.mainAreaHeight();\\\\\\\\nconst x = this.isRightInputMode() ? 0 : Graphics.boxWidth - width;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"ItemMenu:struct\":\"{\\\"HelpWindow\\\":\\\"\\\",\\\"HelpBgType:num\\\":\\\"0\\\",\\\"HelpRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.helpAreaTop();\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.helpAreaHeight();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"CategoryWindow\\\":\\\"\\\",\\\"CategoryBgType:num\\\":\\\"0\\\",\\\"CategoryRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst rows = 1;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ItemWindow\\\":\\\"\\\",\\\"ItemBgType:num\\\":\\\"0\\\",\\\"ItemRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this._categoryWindow.y + this._categoryWindow.height;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.mainAreaBottom() - y;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ActorWindow\\\":\\\"\\\",\\\"ActorBgType:num\\\":\\\"0\\\",\\\"ActorRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.mainAreaHeight();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"SkillMenu:struct\":\"{\\\"HelpWindow\\\":\\\"\\\",\\\"HelpBgType:num\\\":\\\"0\\\",\\\"HelpRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.helpAreaTop();\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.helpAreaHeight();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"SkillTypeWindow\\\":\\\"\\\",\\\"SkillTypeBgType:num\\\":\\\"0\\\",\\\"SkillTypeRect:func\\\":\\\"\\\\\\\"const rows = 3;\\\\\\\\nconst width = this.mainCommandWidth();\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nconst x = this.isRightInputMode() ? Graphics.boxWidth - width : 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"StatusWindow\\\":\\\"\\\",\\\"StatusBgType:num\\\":\\\"0\\\",\\\"StatusRect:func\\\":\\\"\\\\\\\"const width = Graphics.boxWidth - this.mainCommandWidth();\\\\\\\\nconst height = this._skillTypeWindow.height;\\\\\\\\nconst x = this.isRightInputMode() ? 0 : Graphics.boxWidth - width;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ItemWindow\\\":\\\"\\\",\\\"ItemBgType:num\\\":\\\"0\\\",\\\"ItemRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this._statusWindow.y + this._statusWindow.height;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.mainAreaHeight() - this._statusWindow.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ActorWindow\\\":\\\"\\\",\\\"ActorBgType:num\\\":\\\"0\\\",\\\"ActorRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.mainAreaHeight();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"EquipMenu:struct\":\"{\\\"HelpWindow\\\":\\\"\\\",\\\"HelpBgType:num\\\":\\\"0\\\",\\\"HelpRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.helpAreaTop();\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.helpAreaHeight();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"StatusWindow\\\":\\\"\\\",\\\"StatusBgType:num\\\":\\\"0\\\",\\\"StatusRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst width = this.statusWidth();\\\\\\\\nconst height = this.mainAreaHeight();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"CommandWindow\\\":\\\"\\\",\\\"CommandBgType:num\\\":\\\"0\\\",\\\"CommandRect:func\\\":\\\"\\\\\\\"const x = this.statusWidth();\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst rows = 1;\\\\\\\\nconst width = Graphics.boxWidth - this.statusWidth();\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"SlotWindow\\\":\\\"\\\",\\\"SlotBgType:num\\\":\\\"0\\\",\\\"SlotRect:func\\\":\\\"\\\\\\\"const commandWindowRect = this.commandWindowRect();\\\\\\\\nconst x = this.statusWidth();\\\\\\\\nconst y = commandWindowRect.y + commandWindowRect.height;\\\\\\\\nconst width = Graphics.boxWidth - this.statusWidth();\\\\\\\\nconst height = this.mainAreaHeight() - commandWindowRect.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ItemWindow\\\":\\\"\\\",\\\"ItemBgType:num\\\":\\\"0\\\",\\\"ItemRect:func\\\":\\\"\\\\\\\"return this.slotWindowRect();\\\\\\\"\\\"}\",\"StatusMenu:struct\":\"{\\\"ProfileWindow\\\":\\\"\\\",\\\"ProfileBgType:num\\\":\\\"0\\\",\\\"ProfileRect:func\\\":\\\"\\\\\\\"const width = Graphics.boxWidth;\\\\\\\\nconst height = this.profileHeight();\\\\\\\\nconst x = 0;\\\\\\\\nconst y = this.mainAreaBottom() - height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"StatusWindow\\\":\\\"\\\",\\\"StatusBgType:num\\\":\\\"0\\\",\\\"StatusRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.statusParamsWindowRect().y - y;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"StatusParamsWindow\\\":\\\"\\\",\\\"StatusParamsBgType:num\\\":\\\"0\\\",\\\"StatusParamsRect:func\\\":\\\"\\\\\\\"const width = this.statusParamsWidth();\\\\\\\\nconst height = this.statusParamsHeight();\\\\\\\\nconst x = 0;\\\\\\\\nconst y = this.mainAreaBottom() - this.profileHeight() - height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"StatusEquipWindow\\\":\\\"\\\",\\\"StatusEquipBgType:num\\\":\\\"0\\\",\\\"StatusEquipRect:func\\\":\\\"\\\\\\\"const width = Graphics.boxWidth - this.statusParamsWidth();\\\\\\\\nconst height = this.statusParamsHeight();\\\\\\\\nconst x = this.statusParamsWidth();\\\\\\\\nconst y = this.mainAreaBottom() - this.profileHeight() - height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"OptionsMenu:struct\":\"{\\\"OptionsWindow\\\":\\\"\\\",\\\"OptionsBgType:num\\\":\\\"0\\\",\\\"OptionsRect:func\\\":\\\"\\\\\\\"const n = Math.min(this.maxCommands(), this.maxVisibleCommands());\\\\\\\\nconst width = 400;\\\\\\\\nconst height = this.calcWindowHeight(n, true);\\\\\\\\nconst x = (Graphics.boxWidth - width) / 2;\\\\\\\\nconst y = (Graphics.boxHeight - height) / 2;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"SaveMenu:struct\":\"{\\\"HelpWindow\\\":\\\"\\\",\\\"HelpBgType:num\\\":\\\"0\\\",\\\"HelpRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst rows = 1;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.calcWindowHeight(rows, false);\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ListWindow\\\":\\\"\\\",\\\"ListBgType:num\\\":\\\"0\\\",\\\"ListRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop() + this._helpWindow.height;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.mainAreaHeight() - this._helpWindow.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"LoadMenu:struct\":\"{\\\"HelpWindow\\\":\\\"\\\",\\\"HelpBgType:num\\\":\\\"0\\\",\\\"HelpRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst rows = 1;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.calcWindowHeight(rows, false);\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"ListWindow\\\":\\\"\\\",\\\"ListBgType:num\\\":\\\"0\\\",\\\"ListRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop() + this._helpWindow.height;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.mainAreaHeight() - this._helpWindow.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"GameEnd:struct\":\"{\\\"CommandList:arraystruct\\\":\\\"[\\\\\\\"{\\\\\\\\\\\\\\\"Symbol:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"toTitle\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextStr:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Untitled\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return TextManager.toTitle;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"EnableJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ExtJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return null;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CallHandlerJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"SceneManager._scene.commandToTitle();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Symbol:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"cancel\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextStr:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Untitled\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return TextManager.cancel;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"EnableJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ExtJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return null;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CallHandlerJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"SceneManager._scene.popScene();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\"]\\\",\\\"CommandBgType:num\\\":\\\"0\\\",\\\"CommandRect:func\\\":\\\"\\\\\\\"const rows = 2;\\\\\\\\nconst width = this.mainCommandWidth();\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nconst x = (Graphics.boxWidth - width) / 2;\\\\\\\\nconst y = (Graphics.boxHeight - height) / 2;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"ShopMenu:struct\":\"{\\\"HelpWindow\\\":\\\"\\\",\\\"HelpBgType:num\\\":\\\"0\\\",\\\"HelpRect:func\\\":\\\"\\\\\\\"const wx = 0;\\\\\\\\nconst wy = this.helpAreaTop();\\\\\\\\nconst ww = Graphics.boxWidth;\\\\\\\\nconst wh = this.helpAreaHeight();\\\\\\\\nreturn new Rectangle(wx, wy, ww, wh);\\\\\\\"\\\",\\\"GoldWindow\\\":\\\"\\\",\\\"GoldBgType:num\\\":\\\"0\\\",\\\"GoldRect:func\\\":\\\"\\\\\\\"const rows = 1;\\\\\\\\nconst width = this.mainCommandWidth();\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nconst x = Graphics.boxWidth - width;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"CommandWindow\\\":\\\"\\\",\\\"CommandBgType:num\\\":\\\"0\\\",\\\"CommandRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this.mainAreaTop();\\\\\\\\nconst rows = 1;\\\\\\\\nconst width = this._goldWindow.x;\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"DummyWindow\\\":\\\"\\\",\\\"DummyBgType:num\\\":\\\"0\\\",\\\"DummyRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this._commandWindow.y + this._commandWindow.height;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.mainAreaHeight() - this._commandWindow.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"NumberWindow\\\":\\\"\\\",\\\"NumberBgType:num\\\":\\\"0\\\",\\\"NumberRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this._dummyWindow.y;\\\\\\\\nconst width = Graphics.boxWidth - this.statusWidth();\\\\\\\\nconst height = this._dummyWindow.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"StatusWindow\\\":\\\"\\\",\\\"StatusBgType:num\\\":\\\"0\\\",\\\"StatusRect:func\\\":\\\"\\\\\\\"const width = this.statusWidth();\\\\\\\\nconst height = this._dummyWindow.height;\\\\\\\\nconst x = Graphics.boxWidth - width;\\\\\\\\nconst y = this._dummyWindow.y;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"BuyWindow\\\":\\\"\\\",\\\"BuyBgType:num\\\":\\\"0\\\",\\\"BuyRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this._dummyWindow.y;\\\\\\\\nconst width = Graphics.boxWidth - this.statusWidth();\\\\\\\\nconst height = this._dummyWindow.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"CategoryWindow\\\":\\\"\\\",\\\"CategoryBgType:num\\\":\\\"0\\\",\\\"CategoryRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this._dummyWindow.y;\\\\\\\\nconst rows = 1;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"SellWindow\\\":\\\"\\\",\\\"SellBgType:num\\\":\\\"0\\\",\\\"SellRect:func\\\":\\\"\\\\\\\"const x = 0;\\\\\\\\nconst y = this._categoryWindow.y + this._categoryWindow.height;\\\\\\\\nconst width = Graphics.boxWidth;\\\\\\\\nconst height =\\\\\\\\n    this.mainAreaHeight() -\\\\\\\\n    this._commandWindow.height -\\\\\\\\n    this._categoryWindow.height;\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\",\"NameMenu:struct\":\"{\\\"EditWindow\\\":\\\"\\\",\\\"EditBgType:num\\\":\\\"0\\\",\\\"EditRect:func\\\":\\\"\\\\\\\"const rows = 9;\\\\\\\\nconst inputWindowHeight = this.calcWindowHeight(rows, true);\\\\\\\\nconst padding = $gameSystem.windowPadding();\\\\\\\\nconst width = 600;\\\\\\\\nconst height = Math.min(ImageManager.faceHeight + padding * 2, this.mainAreaHeight() - inputWindowHeight);\\\\\\\\nconst x = (Graphics.boxWidth - width) / 2;\\\\\\\\nconst y = (this.mainAreaHeight() - (height + inputWindowHeight)) / 2 + this.mainAreaTop();\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\",\\\"InputWindow\\\":\\\"\\\",\\\"InputBgType:num\\\":\\\"0\\\",\\\"InputRect:func\\\":\\\"\\\\\\\"const x = this._editWindow.x;\\\\\\\\nconst y = this._editWindow.y + this._editWindow.height;\\\\\\\\nconst rows = 9;\\\\\\\\nconst width = this._editWindow.width;\\\\\\\\nconst height = this.calcWindowHeight(rows, true);\\\\\\\\nreturn new Rectangle(x, y, width, height);\\\\\\\"\\\"}\"}","Param:struct":"{\"DisplayedParams:arraystr\":\"[\\\"ATK\\\",\\\"DEF\\\",\\\"MAT\\\",\\\"MDF\\\",\\\"AGI\\\",\\\"LUK\\\"]\",\"ExtDisplayedParams:arraystr\":\"[\\\"MaxHP\\\",\\\"MaxMP\\\",\\\"ATK\\\",\\\"DEF\\\",\\\"MAT\\\",\\\"MDF\\\",\\\"AGI\\\",\\\"LUK\\\"]\",\"BasicParameters\":\"\",\"CrisisRate:num\":\"0.25\",\"BasicParameterFormula:func\":\"\\\"// Determine the variables used in this calculation.\\\\nlet paramId = arguments[0];\\\\nlet base = this.paramBase(paramId);\\\\nlet plus = this.paramPlus(paramId);\\\\nlet paramRate = this.paramRate(paramId);\\\\nlet buffRate = this.paramBuffRate(paramId);\\\\nlet flatBonus = this.paramFlatBonus(paramId);\\\\n\\\\n// Formula to determine total parameter value.\\\\nlet value = (base + plus) * paramRate * buffRate + flatBonus;\\\\n\\\\n// Determine the limits\\\\nconst maxValue = this.paramMax(paramId);\\\\nconst minValue = this.paramMin(paramId);\\\\n\\\\n// Final value\\\\nreturn Math.round(value.clamp(minValue, maxValue));\\\"\",\"BasicParamCaps\":\"\",\"BasicActorParamCaps\":\"\",\"BasicActorParamMax0:str\":\"9999\",\"BasicActorParamMax1:str\":\"9999\",\"BasicActorParamMax2:str\":\"999\",\"BasicActorParamMax3:str\":\"999\",\"BasicActorParamMax4:str\":\"999\",\"BasicActorParamMax5:str\":\"999\",\"BasicActorParamMax6:str\":\"999\",\"BasicActorParamMax7:str\":\"999\",\"BasicEnemyParamCaps\":\"\",\"BasicEnemyParamMax0:str\":\"999999\",\"BasicEnemyParamMax1:str\":\"9999\",\"BasicEnemyParamMax2:str\":\"999\",\"BasicEnemyParamMax3:str\":\"999\",\"BasicEnemyParamMax4:str\":\"999\",\"BasicEnemyParamMax5:str\":\"999\",\"BasicEnemyParamMax6:str\":\"999\",\"BasicEnemyParamMax7:str\":\"999\",\"XParameters\":\"\",\"XParameterFormula:func\":\"\\\"// Determine the variables used in this calculation.\\\\nlet xparamId = arguments[0];\\\\nlet base = this.traitsSum(Game_BattlerBase.TRAIT_XPARAM, xparamId);\\\\nlet plus = this.xparamPlus(xparamId);\\\\nlet paramRate = this.xparamRate(xparamId);\\\\nlet flatBonus = this.xparamFlatBonus(xparamId);\\\\n\\\\n// Formula to determine total parameter value.\\\\nlet value = (base + plus) * paramRate + flatBonus;\\\\n\\\\n// Final value\\\\nreturn value;\\\"\",\"XParamVocab\":\"\",\"XParamVocab0:str\":\"Hit\",\"XParamVocab1:str\":\"Evasion\",\"XParamVocab2:str\":\"Critical Rate\",\"XParamVocab3:str\":\"Critical Evade\",\"XParamVocab4:str\":\"Magic Evade\",\"XParamVocab5:str\":\"Magic Reflect\",\"XParamVocab6:str\":\"Counter\",\"XParamVocab7:str\":\"HP Regen\",\"XParamVocab8:str\":\"MP Regen\",\"XParamVocab9:str\":\"TP Regen\",\"SParameters\":\"\",\"SParameterFormula:func\":\"\\\"// Determine the variables used in this calculation.\\\\nlet sparamId = arguments[0];\\\\nlet base = this.traitsPi(Game_BattlerBase.TRAIT_SPARAM, sparamId);\\\\nlet plus = this.sparamPlus(sparamId);\\\\nlet paramRate = this.sparamRate(sparamId);\\\\nlet flatBonus = this.sparamFlatBonus(sparamId);\\\\n\\\\n// Formula to determine total parameter value.\\\\nlet value = (base + plus) * paramRate + flatBonus;\\\\n\\\\n// Final value\\\\nreturn value;\\\"\",\"SParamVocab\":\"\",\"SParamVocab0:str\":\"Aggro\",\"SParamVocab1:str\":\"Guard\",\"SParamVocab2:str\":\"Recovery\",\"SParamVocab3:str\":\"Item Effect\",\"SParamVocab4:str\":\"MP Cost\",\"SParamVocab5:str\":\"TP Charge\",\"SParamVocab6:str\":\"Physical DMG\",\"SParamVocab7:str\":\"Magical DMG\",\"SParamVocab8:str\":\"Floor DMG\",\"SParamVocab9:str\":\"EXP Gain\",\"Icons\":\"\",\"DrawIcons:eval\":\"true\",\"IconParam0:str\":\"84\",\"IconParam1:str\":\"165\",\"IconParam2:str\":\"76\",\"IconParam3:str\":\"81\",\"IconParam4:str\":\"101\",\"IconParam5:str\":\"133\",\"IconParam6:str\":\"140\",\"IconParam7:str\":\"87\",\"IconXParam0:str\":\"102\",\"IconXParam1:str\":\"82\",\"IconXParam2:str\":\"78\",\"IconXParam3:str\":\"82\",\"IconXParam4:str\":\"171\",\"IconXParam5:str\":\"222\",\"IconXParam6:str\":\"77\",\"IconXParam7:str\":\"72\",\"IconXParam8:str\":\"72\",\"IconXParam9:str\":\"72\",\"IconSParam0:str\":\"5\",\"IconSParam1:str\":\"128\",\"IconSParam2:str\":\"72\",\"IconSParam3:str\":\"176\",\"IconSParam4:str\":\"165\",\"IconSParam5:str\":\"164\",\"IconSParam6:str\":\"76\",\"IconSParam7:str\":\"79\",\"IconSParam8:str\":\"141\",\"IconSParam9:str\":\"73\"}","CustomParam:arraystruct":"[\"{\\\"ParamName:str\\\":\\\"Strength\\\",\\\"Abbreviation:str\\\":\\\"str\\\",\\\"Icon:num\\\":\\\"77\\\",\\\"Type:str\\\":\\\"integer\\\",\\\"ValueJS:json\\\":\\\"\\\\\\\"// Declare Constants\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nreturn (user.atk * 0.75) + (user.def * 0.25);\\\\\\\"\\\"}\",\"{\\\"ParamName:str\\\":\\\"Dexterity\\\",\\\"Abbreviation:str\\\":\\\"dex\\\",\\\"Icon:num\\\":\\\"82\\\",\\\"Type:str\\\":\\\"integer\\\",\\\"ValueJS:json\\\":\\\"\\\\\\\"// Declare Constants\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nreturn (user.agi * 0.75) + (user.atk * 0.25);\\\\\\\"\\\"}\",\"{\\\"ParamName:str\\\":\\\"Constitution\\\",\\\"Abbreviation:str\\\":\\\"con\\\",\\\"Icon:num\\\":\\\"81\\\",\\\"Type:str\\\":\\\"integer\\\",\\\"ValueJS:json\\\":\\\"\\\\\\\"// Declare Constants\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nreturn (user.def * 0.75) + (user.mdf * 0.25);\\\\\\\"\\\"}\",\"{\\\"ParamName:str\\\":\\\"Intelligence\\\",\\\"Abbreviation:str\\\":\\\"int\\\",\\\"Icon:num\\\":\\\"79\\\",\\\"Type:str\\\":\\\"integer\\\",\\\"ValueJS:json\\\":\\\"\\\\\\\"// Declare Constants\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nreturn (user.mat * 0.75) + (user.mdf * 0.25);\\\\\\\"\\\"}\",\"{\\\"ParamName:str\\\":\\\"Wisdom\\\",\\\"Abbreviation:str\\\":\\\"wis\\\",\\\"Icon:num\\\":\\\"72\\\",\\\"Type:str\\\":\\\"integer\\\",\\\"ValueJS:json\\\":\\\"\\\\\\\"// Declare Constants\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nreturn (user.mdf * 0.75) + (user.luk * 0.25);\\\\\\\"\\\"}\",\"{\\\"ParamName:str\\\":\\\"Charisma\\\",\\\"Abbreviation:str\\\":\\\"cha\\\",\\\"Icon:num\\\":\\\"84\\\",\\\"Type:str\\\":\\\"integer\\\",\\\"ValueJS:json\\\":\\\"\\\\\\\"// Declare Constants\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nreturn (user.luk * 0.75) + (user.agi * 0.25);\\\\\\\"\\\"}\"]","ScreenResolution:struct":"{\"Maps\":\"\",\"AutoScrollLockX:eval\":\"true\",\"AutoScrollLockY:eval\":\"true\",\"DisplayLockX:num\":\"0.15625\",\"DisplayLockY:num\":\"0.00000\",\"Troops\":\"\",\"RepositionActors:eval\":\"true\",\"RepositionEnemies:eval\":\"true\",\"RepositionEnemies130:eval\":\"false\"}","ScreenShake:struct":"{\"DefaultStyle:str\":\"random\",\"originalJS:func\":\"\\\"// Calculation\\\\nthis.x += Math.round($gameScreen.shake());\\\"\",\"randomJS:func\":\"\\\"// Calculation\\\\n// Original Formula by Aries of Sheratan\\\\nconst power = $gameScreen._shakePower * 0.75;\\\\nconst speed = $gameScreen._shakeSpeed * 0.60;\\\\nconst duration = $gameScreen._shakeDuration;\\\\nthis.x += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);\\\\nthis.y += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);\\\"\",\"horzJS:func\":\"\\\"// Calculation\\\\n// Original Formula by Aries of Sheratan\\\\nconst power = $gameScreen._shakePower * 0.75;\\\\nconst speed = $gameScreen._shakeSpeed * 0.60;\\\\nconst duration = $gameScreen._shakeDuration;\\\\nthis.x += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);\\\"\",\"vertJS:func\":\"\\\"// Calculation\\\\n// Original Formula by Aries of Sheratan\\\\nconst power = $gameScreen._shakePower * 0.75;\\\\nconst speed = $gameScreen._shakeSpeed * 0.60;\\\\nconst duration = $gameScreen._shakeDuration;\\\\nthis.y += Math.round(Math.randomInt(power) - Math.randomInt(speed)) * (Math.min(duration, 30) * 0.5);\\\"\"}","TitleCommandList:arraystruct":"[\"{\\\"Symbol:str\\\":\\\"newGame\\\",\\\"TextStr:str\\\":\\\"Untitled\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.newGame;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandNewGame();\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"options\\\",\\\"TextStr:str\\\":\\\"Untitled\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.options;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager._scene.commandOptions();\\\\\\\"\\\"}\",\"{\\\"Symbol:str\\\":\\\"shutdown\\\",\\\"TextStr:str\\\":\\\"Untitled\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return TextManager.gameEnd;\\\\\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"return Utils.isNwjs();\\\\\\\"\\\",\\\"EnableJS:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"ExtJS:func\\\":\\\"\\\\\\\"return null;\\\\\\\"\\\",\\\"CallHandlerJS:func\\\":\\\"\\\\\\\"SceneManager.exit();\\\\\\\\n\\\\\\\\n// Note!\\\\\\\\n// Do NOT use this command with mobile devices or\\\\\\\\n// browser games. All it does is cause the game to\\\\\\\\n// display a blank, black canvas which the player\\\\\\\\n// is unable to do anything with. It does NOT force\\\\\\\\n// close the browser tab nor the app.\\\\\\\"\\\"}\"]","TitlePicButtons:arraystruct":"[]","UI:struct":"{\"UIArea\":\"\",\"FadeSpeed:num\":\"24\",\"BoxMargin:num\":\"4\",\"CommandWidth:num\":\"240\",\"BottomHelp:eval\":\"false\",\"RightMenus:eval\":\"true\",\"ShowButtons:eval\":\"false\",\"cancelShowButton:eval\":\"true\",\"menuShowButton:eval\":\"true\",\"pagedownShowButton:eval\":\"true\",\"numberShowButton:eval\":\"true\",\"ButtonHeight:num\":\"52\",\"BottomButtons:eval\":\"false\",\"SideButtons:eval\":\"true\",\"StateIconsNonFrame:eval\":\"true\",\"MenuObjects\":\"\",\"LvExpGauge:eval\":\"true\",\"ParamArrow:str\":\"→\",\"TextCodeSupport\":\"\",\"TextCodeClassNames:eval\":\"true\",\"TextCodeNicknames:eval\":\"true\"}","Window:struct":"{\"WindowDefaults\":\"\",\"EnableMasking:eval\":\"false\",\"CorrectSkinBleeding:eval\":\"true\",\"LineHeight:num\":\"48\",\"ItemPadding:num\":\"8\",\"BackOpacity:num\":\"192\",\"TranslucentOpacity:num\":\"160\",\"OpenSpeed:num\":\"32\",\"ColSpacing:num\":\"8\",\"RowSpacing:num\":\"4\",\"ScrollBar\":\"\",\"ShowScrollBar:eval\":\"true\",\"BarThickness:num\":\"2\",\"BarOffset:num\":\"+2\",\"BarBodyColor:str\":\"0\",\"OffBarColor:str\":\"7\",\"OffBarOpacity:num\":\"128\",\"SelectableItems\":\"\",\"ShowItemBackground:eval\":\"false\",\"ItemHeight:num\":\"8\",\"DrawItemBackgroundJS:func\":\"\\\"const rect = arguments[0];\\\\nconst c1 = ColorManager.itemBackColor1();\\\\nconst c2 = ColorManager.itemBackColor2();\\\\nconst x = rect.x;\\\\nconst y = rect.y;\\\\nconst w = rect.width;\\\\nconst h = rect.height;\\\\nthis.contentsBack.gradientFillRect(x, y, w, h, c1, c2, true);\\\\nthis.contentsBack.strokeRect(x, y, w, h, c1);\\\"\",\"TextPopup\":\"\",\"DurationPerChat:num\":\"1.5\",\"MinDuration:num\":\"90\",\"MaxDuration:num\":\"300\"}","jsQuickFunc:arraystruct":"[\"{\\\"FunctionName:str\\\":\\\"Example\\\",\\\"CodeJS:json\\\":\\\"\\\\\\\"// Insert this as a function anywhere you can input code\\\\\\\\n// such as Script Calls or Conditional Branch Scripts.\\\\\\\\n\\\\\\\\n// Process Code\\\\\\\\nreturn 'Example';\\\\\\\"\\\"}\",\"{\\\"FunctionName:str\\\":\\\"Bad  Code  Name\\\",\\\"CodeJS:json\\\":\\\"\\\\\\\"// If a function name has spaces in them, the spaces will\\\\\\\\n// be removed. \\\\\\\\\\\\\\\"Bad  Code  Name\\\\\\\\\\\\\\\" becomes \\\\\\\\\\\\\\\"BadCodeName\\\\\\\\\\\\\\\".\\\\\\\\n\\\\\\\\n// Process Code\\\\\\\\nOhNoItsBadCode()\\\\\\\\n\\\\\\\\n// If a function has bad code, a fail safe will catch the\\\\\\\\n// error and display it in the console.\\\\\\\"\\\"}\",\"{\\\"FunctionName:str\\\":\\\"RandomNumber\\\",\\\"CodeJS:json\\\":\\\"\\\\\\\"// This generates a random number from 0 to itself.\\\\\\\\n// Example: RandomNumber(10)\\\\\\\\n\\\\\\\\n// Process Code\\\\\\\\nconst number = (arguments[0] || 0) + 1;\\\\\\\\nreturn Math.floor(number * Math.random());\\\\\\\"\\\"}\",\"{\\\"FunctionName:str\\\":\\\"RandomBetween\\\",\\\"CodeJS:json\\\":\\\"\\\\\\\"// This generates a random number between two arguments.\\\\\\\\n// Example: RandomBetween(5, 10)\\\\\\\\n\\\\\\\\n// Process Code\\\\\\\\nlet min = Math.min(arguments[0] || 0, arguments[1] || 0);\\\\\\\\nlet max = Math.max(arguments[0] || 0, arguments[1] || 0);\\\\\\\\nreturn Math.floor(Math.random() * (max - min + 1) + min);\\\\\\\"\\\"}\",\"{\\\"FunctionName:str\\\":\\\"RandomFrom\\\",\\\"CodeJS:json\\\":\\\"\\\\\\\"// Selects a number from the list of inserted numbers.\\\\\\\\n// Example: RandomFrom(5, 10, 15, 20)\\\\\\\\n\\\\\\\\n// Process Code\\\\\\\\nreturn arguments[Math.randomInt(arguments.length)];\\\\\\\"\\\"}\"]","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"VisuMZ_1_BattleCore","status":true,"description":"[RPG Maker MZ] [Tier 1] [Version 1.87] [BattleCore]","parameters":{"BreakHead":"----------------------------------","BattleCore":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","AutoBattle:struct":"{\"BattleDisplay\":\"\",\"AutoBattleMsg:str\":\"Press %1 or %2 to stop Auto Battle\",\"AutoBattleOK:str\":\"OK\",\"AutoBattleCancel:str\":\"Cancel\",\"AutoBattleBgType:num\":\"1\",\"AutoBattleRect:func\":\"\\\"const width = Graphics.width;\\\\nconst height = this.calcWindowHeight(1, false);\\\\nconst x = 0;\\\\nconst y = (Graphics.height - height) / 2;\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"Options\":\"\",\"AddOption:eval\":\"true\",\"AdjustRect:eval\":\"true\",\"StartName:str\":\"Auto Battle Start\",\"StyleName:str\":\"Auto Battle Style\",\"StyleOFF:str\":\"Attack\",\"StyleON:str\":\"Skills\"}","Damage:struct":"{\"DamageStyles\":\"\",\"DefaultDamageStyle:str\":\"Standard\",\"DamageStyleList:arraystruct\":\"[\\\"{\\\\\\\"Name:str\\\\\\\":\\\\\\\"Standard\\\\\\\",\\\\\\\"Formula:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\nconst user = this.subject();\\\\\\\\\\\\\\\\nconst target = arguments[0];\\\\\\\\\\\\\\\\nconst item = this.item();\\\\\\\\\\\\\\\\nconst a = this.subject();\\\\\\\\\\\\\\\\nconst b = target;\\\\\\\\\\\\\\\\nconst v = $gameVariables._data;\\\\\\\\\\\\\\\\nconst sign = [3, 4].includes(item.damage.type) ? -1 : 1;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Replace Formula\\\\\\\\\\\\\\\\nlet formula = item.damage.formula;\\\\\\\\\\\\\\\\nif (SceneManager.isSceneBattle() && !this.isCertainHit()) {\\\\\\\\\\\\\\\\n    const fmt = 'Math.max(this.applyArmorModifiers(b, %1), 0)';\\\\\\\\\\\\\\\\n    formula = formula.replace(/b.def/g, fmt.format('b.def'));\\\\\\\\\\\\\\\\n    formula = formula.replace(/b.mdf/g, fmt.format('b.mdf'));\\\\\\\\\\\\\\\\n    formula = formula.replace(/b.agi/g, fmt.format('b.agi'));\\\\\\\\\\\\\\\\n    formula = formula.replace(/b.luk/g, fmt.format('b.luk'));\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Calculate Damage\\\\\\\\\\\\\\\\nlet value = Math.max(eval(formula), 0);\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\nreturn (isNaN(value) ? 0 : value) * sign;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ItemsEquipsCore\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType1:str\\\\\\\":\\\\\\\"%1 Damage Multiplier\\\\\\\",\\\\\\\"DamageType2:str\\\\\\\":\\\\\\\"%1 Damage Multiplier\\\\\\\",\\\\\\\"DamageType3:str\\\\\\\":\\\\\\\"%1 Recovery Multiplier\\\\\\\",\\\\\\\"DamageType4:str\\\\\\\":\\\\\\\"%1 Recovery Multiplier\\\\\\\",\\\\\\\"DamageType5:str\\\\\\\":\\\\\\\"%1 Drain Multiplier\\\\\\\",\\\\\\\"DamageType6:str\\\\\\\":\\\\\\\"%1 Drain Multiplier\\\\\\\",\\\\\\\"DamageDisplay:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"return this.getItemDamageAmountTextOriginal();\\\\\\\\\\\\\\\"\\\\\\\"}\\\",\\\"{\\\\\\\"Name:str\\\\\\\":\\\\\\\"Armor Scaling\\\\\\\",\\\\\\\"Formula:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\nconst user = this.subject();\\\\\\\\\\\\\\\\nconst target = arguments[0];\\\\\\\\\\\\\\\\nconst item = this.item();\\\\\\\\\\\\\\\\nconst a = this.subject();\\\\\\\\\\\\\\\\nconst b = target;\\\\\\\\\\\\\\\\nconst v = $gameVariables._data;\\\\\\\\\\\\\\\\nconst sign = [3, 4].includes(item.damage.type) ? -1 : 1;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Replace Formula\\\\\\\\\\\\\\\\nlet formula = item.damage.formula;\\\\\\\\\\\\\\\\nif (SceneManager.isSceneBattle() && !this.isCertainHit()) {\\\\\\\\\\\\\\\\n    const fmt = 'Math.max(this.applyArmorModifiers(b, %1), 1)';\\\\\\\\\\\\\\\\n    formula = formula.replace(/b.def/g, fmt.format('b.def'));\\\\\\\\\\\\\\\\n    formula = formula.replace(/b.mdf/g, fmt.format('b.mdf'));\\\\\\\\\\\\\\\\n    formula = formula.replace(/b.agi/g, fmt.format('b.agi'));\\\\\\\\\\\\\\\\n    formula = formula.replace(/b.luk/g, fmt.format('b.luk'));\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Calculate Damage\\\\\\\\\\\\\\\\nlet value = Math.max(eval(formula), 0);\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Apply Defender's Defense Parameter\\\\\\\\\\\\\\\\nif (this.isDamage() && !this.isCertainHit()) {\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    // Calculate Base Armor\\\\\\\\\\\\\\\\n    let armor = this.isPhysical() ? b.def : b.mdf;\\\\\\\\\\\\\\\\n    armor = this.applyArmorModifiers(target, armor);\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    // Apply Armor to Damage\\\\\\\\\\\\\\\\n    if (armor >= 0) {\\\\\\\\\\\\\\\\n        value *= 100 / (100 + armor);\\\\\\\\\\\\\\\\n    } else {\\\\\\\\\\\\\\\\n        value *= 2 - (100 / (100 - armor));\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\nreturn (isNaN(value) ? 0 : value) * sign;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ItemsEquipsCore\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType1:str\\\\\\\":\\\\\\\"%1 Damage Multiplier\\\\\\\",\\\\\\\"DamageType2:str\\\\\\\":\\\\\\\"%1 Damage Multiplier\\\\\\\",\\\\\\\"DamageType3:str\\\\\\\":\\\\\\\"%1 Recovery Multiplier\\\\\\\",\\\\\\\"DamageType4:str\\\\\\\":\\\\\\\"%1 Recovery Multiplier\\\\\\\",\\\\\\\"DamageType5:str\\\\\\\":\\\\\\\"%1 Drain Multiplier\\\\\\\",\\\\\\\"DamageType6:str\\\\\\\":\\\\\\\"%1 Drain Multiplier\\\\\\\",\\\\\\\"DamageDisplay:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"return this.getItemDamageAmountTextOriginal();\\\\\\\\\\\\\\\"\\\\\\\"}\\\",\\\"{\\\\\\\"Name:str\\\\\\\":\\\\\\\"CT\\\\\\\",\\\\\\\"Formula:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst user = this.subject();\\\\\\\\\\\\\\\\nconst target = arguments[0];\\\\\\\\\\\\\\\\nconst item = this.item();\\\\\\\\\\\\\\\\nconst a = this.subject();\\\\\\\\\\\\\\\\nconst b = target;\\\\\\\\\\\\\\\\nconst v = $gameVariables._data;\\\\\\\\\\\\\\\\nconst sign = [3, 4].includes(item.damage.type) ? -1 : 1;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Create Multiplier\\\\\\\\\\\\\\\\nconst multiplier = Math.max(eval(item.damage.formula), 0);\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Declare Values\\\\\\\\\\\\\\\\nlet value = 0;\\\\\\\\\\\\\\\\nlet level = Math.max(a.level || a.luk, 1);\\\\\\\\\\\\\\\\nlet armor = this.isPhysical() ? b.def : b.mdf;\\\\\\\\\\\\\\\\narmor = Math.max(this.applyArmorModifiers(target, armor), 0);\\\\\\\\\\\\\\\\nlet attackStat = 0;\\\\\\\\\\\\\\\\nif (this.isPhysical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    attackStat = a.atk;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    attackStat =  a.mat;\\\\\\\\\\\\\\\\n} else if (this.isPhysical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    attackStat =  a.def;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    attackStat =  a.mdf;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Calculate Damage\\\\\\\\\\\\\\\\nattackStat = (attackStat * 1.75) + (level ** 2 / 45.5);\\\\\\\\\\\\\\\\nvalue = attackStat * 4;\\\\\\\\\\\\\\\\nif (this.isPhysical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    value *= Math.max(256 - armor, 0) / 256;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    value *= Math.max(102.4 - armor, 0) / 128;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\nvalue *= multiplier;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\nreturn (isNaN(value) ? 0 : value) * sign;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ItemsEquipsCore\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType1:str\\\\\\\":\\\\\\\"%1 Damage Multiplier\\\\\\\",\\\\\\\"DamageType2:str\\\\\\\":\\\\\\\"%1 Damage Multiplier\\\\\\\",\\\\\\\"DamageType3:str\\\\\\\":\\\\\\\"%1 Recovery Multiplier\\\\\\\",\\\\\\\"DamageType4:str\\\\\\\":\\\\\\\"%1 Recovery Multiplier\\\\\\\",\\\\\\\"DamageType5:str\\\\\\\":\\\\\\\"%1 Drain Multiplier\\\\\\\",\\\\\\\"DamageType6:str\\\\\\\":\\\\\\\"%1 Drain Multiplier\\\\\\\",\\\\\\\"DamageDisplay:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst item = this._item;\\\\\\\\\\\\\\\\nconst formula = item.damage.formula;\\\\\\\\\\\\\\\\nconst a = this._tempActorA;\\\\\\\\\\\\\\\\nconst b = this._tempActorB;\\\\\\\\\\\\\\\\nconst user = a;\\\\\\\\\\\\\\\\nconst target = b;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\ntry {\\\\\\\\\\\\\\\\n    const value = Math.max(eval(formula), 0);\\\\\\\\\\\\\\\\n    return '%1%'.format(Math.round(value * 100));\\\\\\\\\\\\\\\\n} catch (e) {\\\\\\\\\\\\\\\\n    if ($gameTemp.isPlaytest()) {\\\\\\\\\\\\\\\\n        console.log('Damage Formula Error for %1'.format(this._item.name));\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n    return '?????';\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"\\\\\\\"}\\\",\\\"{\\\\\\\"Name:str\\\\\\\":\\\\\\\"D4\\\\\\\",\\\\\\\"Formula:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst user = this.subject();\\\\\\\\\\\\\\\\nconst target = arguments[0];\\\\\\\\\\\\\\\\nconst item = this.item();\\\\\\\\\\\\\\\\nconst a = this.subject();\\\\\\\\\\\\\\\\nconst b = target;\\\\\\\\\\\\\\\\nconst v = $gameVariables._data;\\\\\\\\\\\\\\\\nconst sign = [3, 4].includes(item.damage.type) ? -1 : 1;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Create Multiplier\\\\\\\\\\\\\\\\nconst multiplier = Math.max(eval(item.damage.formula), 0);\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Declare Values\\\\\\\\\\\\\\\\nlet armor = this.isPhysical() ? b.def : b.mdf;\\\\\\\\\\\\\\\\narmor = this.applyArmorModifiers(target, armor);\\\\\\\\\\\\\\\\nlet stat = 0;\\\\\\\\\\\\\\\\nif (this.isPhysical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    stat = a.atk;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    stat = a.mat;\\\\\\\\\\\\\\\\n} else if (this.isPhysical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    stat = a.def;\\\\\\\\\\\\\\\\n    armor = 0;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    stat = a.mdf;\\\\\\\\\\\\\\\\n    armor = 0;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Calculate Damage \\\\\\\\\\\\\\\\nlet value = 1.5 * Math.max(2 * stat * multiplier - armor, 1) * multiplier / 5;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\nreturn (isNaN(value) ? 0 : value) * sign;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ItemsEquipsCore\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType1:str\\\\\\\":\\\\\\\"%1 Damage Multiplier\\\\\\\",\\\\\\\"DamageType2:str\\\\\\\":\\\\\\\"%1 Damage Multiplier\\\\\\\",\\\\\\\"DamageType3:str\\\\\\\":\\\\\\\"%1 Recovery Multiplier\\\\\\\",\\\\\\\"DamageType4:str\\\\\\\":\\\\\\\"%1 Recovery Multiplier\\\\\\\",\\\\\\\"DamageType5:str\\\\\\\":\\\\\\\"%1 Drain Multiplier\\\\\\\",\\\\\\\"DamageType6:str\\\\\\\":\\\\\\\"%1 Drain Multiplier\\\\\\\",\\\\\\\"DamageDisplay:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst item = this._item;\\\\\\\\\\\\\\\\nconst formula = item.damage.formula;\\\\\\\\\\\\\\\\nconst a = this._tempActorA;\\\\\\\\\\\\\\\\nconst b = this._tempActorB;\\\\\\\\\\\\\\\\nconst user = a;\\\\\\\\\\\\\\\\nconst target = b;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\ntry {\\\\\\\\\\\\\\\\n    const value = Math.max(eval(formula), 0);\\\\\\\\\\\\\\\\n    return '%1%'.format(Math.round(value * 100));\\\\\\\\\\\\\\\\n} catch (e) {\\\\\\\\\\\\\\\\n    if ($gameTemp.isPlaytest()) {\\\\\\\\\\\\\\\\n        console.log('Damage Formula Error for %1'.format(this._item.name));\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n    return '?????';\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"\\\\\\\"}\\\",\\\"{\\\\\\\"Name:str\\\\\\\":\\\\\\\"DQ\\\\\\\",\\\\\\\"Formula:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst user = this.subject();\\\\\\\\\\\\\\\\nconst target = arguments[0];\\\\\\\\\\\\\\\\nconst item = this.item();\\\\\\\\\\\\\\\\nconst a = this.subject();\\\\\\\\\\\\\\\\nconst b = target;\\\\\\\\\\\\\\\\nconst v = $gameVariables._data;\\\\\\\\\\\\\\\\nconst sign = [3, 4].includes(item.damage.type) ? -1 : 1;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Create Multiplier\\\\\\\\\\\\\\\\nlet multiplier = Math.max(eval(item.damage.formula), 0);\\\\\\\\\\\\\\\\nif (this.isCertainHit()) {\\\\\\\\\\\\\\\\n    let value = multiplier * Math.max(a.atk, a.mat);\\\\\\\\\\\\\\\\n    return (isNaN(value) ? 0 : value) * sign;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Get Primary Stats\\\\\\\\\\\\\\\\nlet armor = this.isPhysical() ? b.def : b.mdf;\\\\\\\\\\\\\\\\narmor = this.applyArmorModifiers(b, armor);\\\\\\\\\\\\\\\\nlet stat = 1;\\\\\\\\\\\\\\\\nif (this.isPhysical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    stat = a.atk;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    stat = a.mat;\\\\\\\\\\\\\\\\n} else if (this.isPhysical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    stat = a.def;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    stat = a.mdf;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Check for Recovery\\\\\\\\\\\\\\\\nif (this.isRecover()) {\\\\\\\\\\\\\\\\n    let value = stat * multiplier * sign;\\\\\\\\\\\\\\\\n    return isNaN(value) ? 0 : value;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Calculate Damage\\\\\\\\\\\\\\\\nlet value = 0;\\\\\\\\\\\\\\\\nif (stat < ((2 + armor) / 2)) {\\\\\\\\\\\\\\\\n    // Plink Damage\\\\\\\\\\\\\\\\n    let baseline = Math.max(stat - ((12 * (armor - stat + 1)) / stat), 5);\\\\\\\\\\\\\\\\n    value = baseline / 3;\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\n    // Normal Damage\\\\\\\\\\\\\\\\n    let baseline = Math.max(stat - (armor / 2), 1);\\\\\\\\\\\\\\\\n    value = baseline / 2;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\nvalue *= multiplier;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\nreturn isNaN(value) ? 0 : value;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ItemsEquipsCore\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType1:str\\\\\\\":\\\\\\\"%1 Damage Multiplier\\\\\\\",\\\\\\\"DamageType2:str\\\\\\\":\\\\\\\"%1 Damage Multiplier\\\\\\\",\\\\\\\"DamageType3:str\\\\\\\":\\\\\\\"%1 Recovery Multiplier\\\\\\\",\\\\\\\"DamageType4:str\\\\\\\":\\\\\\\"%1 Recovery Multiplier\\\\\\\",\\\\\\\"DamageType5:str\\\\\\\":\\\\\\\"%1 Drain Multiplier\\\\\\\",\\\\\\\"DamageType6:str\\\\\\\":\\\\\\\"%1 Drain Multiplier\\\\\\\",\\\\\\\"DamageDisplay:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst item = this._item;\\\\\\\\\\\\\\\\nconst formula = item.damage.formula;\\\\\\\\\\\\\\\\nconst a = this._tempActorA;\\\\\\\\\\\\\\\\nconst b = this._tempActorB;\\\\\\\\\\\\\\\\nconst user = a;\\\\\\\\\\\\\\\\nconst target = b;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\ntry {\\\\\\\\\\\\\\\\n    const value = Math.max(eval(formula), 0);\\\\\\\\\\\\\\\\n    return '%1%'.format(Math.round(value * 100));\\\\\\\\\\\\\\\\n} catch (e) {\\\\\\\\\\\\\\\\n    if ($gameTemp.isPlaytest()) {\\\\\\\\\\\\\\\\n        console.log('Damage Formula Error for %1'.format(this._item.name));\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n    return '?????';\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"\\\\\\\"}\\\",\\\"{\\\\\\\"Name:str\\\\\\\":\\\\\\\"FF7\\\\\\\",\\\\\\\"Formula:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst user = this.subject();\\\\\\\\\\\\\\\\nconst target = arguments[0];\\\\\\\\\\\\\\\\nconst item = this.item();\\\\\\\\\\\\\\\\nconst a = this.subject();\\\\\\\\\\\\\\\\nconst b = target;\\\\\\\\\\\\\\\\nconst v = $gameVariables._data;\\\\\\\\\\\\\\\\nconst sign = [3, 4].includes(item.damage.type) ? -1 : 1;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Create Power\\\\\\\\\\\\\\\\nconst power = Math.max(eval(item.damage.formula), 0);\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Declare base Damage\\\\\\\\\\\\\\\\nlet baseDamage = 0;\\\\\\\\\\\\\\\\nlet level = Math.max(a.level || a.luk, 1);\\\\\\\\\\\\\\\\nif (this.isPhysical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    baseDamage = a.atk + ((a.atk + level) / 32) * ((a.atk * level) / 32);\\\\\\\\\\\\\\\\n} else if (this.isMagical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    baseDamage = 6 * (a.mat + level);\\\\\\\\\\\\\\\\n} else if (this.isPhysical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    baseDamage = 6 * (a.def + level);\\\\\\\\\\\\\\\\n} else if (this.isMagical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    baseDamage = 6 * (a.mdf + level);\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Calculate Final Damage\\\\\\\\\\\\\\\\nlet value = baseDamage;\\\\\\\\\\\\\\\\nlet armor = this.isPhysical() ? b.def : b.mdf;\\\\\\\\\\\\\\\\narmor = this.applyArmorModifiers(target, armor);\\\\\\\\\\\\\\\\nif (this.isRecover()) {\\\\\\\\\\\\\\\\n    value += 22 * power;\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\n    value = (power * Math.max(512 - armor, 1) * baseDamage) / (16 * 512);\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\nreturn (isNaN(value) ? 0 : value) * sign;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ItemsEquipsCore\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType1:str\\\\\\\":\\\\\\\"%1 Damage Power\\\\\\\",\\\\\\\"DamageType2:str\\\\\\\":\\\\\\\"%1 Damage Power\\\\\\\",\\\\\\\"DamageType3:str\\\\\\\":\\\\\\\"%1 Recovery Power\\\\\\\",\\\\\\\"DamageType4:str\\\\\\\":\\\\\\\"%1 Recovery Power\\\\\\\",\\\\\\\"DamageType5:str\\\\\\\":\\\\\\\"%1 Drain Power\\\\\\\",\\\\\\\"DamageType6:str\\\\\\\":\\\\\\\"%1 Drain Power\\\\\\\",\\\\\\\"DamageDisplay:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst item = this._item;\\\\\\\\\\\\\\\\nconst formula = item.damage.formula;\\\\\\\\\\\\\\\\nconst a = this._tempActorA;\\\\\\\\\\\\\\\\nconst b = this._tempActorB;\\\\\\\\\\\\\\\\nconst user = a;\\\\\\\\\\\\\\\\nconst target = b;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\ntry {\\\\\\\\\\\\\\\\n    return formula;\\\\\\\\\\\\\\\\n} catch (e) {\\\\\\\\\\\\\\\\n    if ($gameTemp.isPlaytest()) {\\\\\\\\\\\\\\\\n        console.log('Damage Formula Error for %1'.format(this._item.name));\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n    return '?????';\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"\\\\\\\"}\\\",\\\"{\\\\\\\"Name:str\\\\\\\":\\\\\\\"FF8\\\\\\\",\\\\\\\"Formula:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst user = this.subject();\\\\\\\\\\\\\\\\nconst target = arguments[0];\\\\\\\\\\\\\\\\nconst item = this.item();\\\\\\\\\\\\\\\\nconst a = this.subject();\\\\\\\\\\\\\\\\nconst b = target;\\\\\\\\\\\\\\\\nconst v = $gameVariables._data;\\\\\\\\\\\\\\\\nconst sign = [3, 4].includes(item.damage.type) ? -1 : 1;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Create Power\\\\\\\\\\\\\\\\nconst power = Math.max(eval(item.damage.formula), 0);\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Declare Damage\\\\\\\\\\\\\\\\nlet Value = 0;\\\\\\\\\\\\\\\\nlet level = Math.max(a.level || a.luk, 1);\\\\\\\\\\\\\\\\nlet armor = this.isPhysical() ? b.def : b.mdf;\\\\\\\\\\\\\\\\narmor = this.applyArmorModifiers(target, armor);\\\\\\\\\\\\\\\\nif (this.isPhysical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    value = a.atk ** 2 / 16 + a.atk;\\\\\\\\\\\\\\\\n    value *= Math.max(265 - armor, 1) / 256;\\\\\\\\\\\\\\\\n    value *= power / 16;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    value = a.mat + power;\\\\\\\\\\\\\\\\n    value *= Math.max(265 - armor, 1) / 4;\\\\\\\\\\\\\\\\n    value *= power / 256;\\\\\\\\\\\\\\\\n} else if (this.isPhysical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    value = (power + a.def) * power / 2;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    value = (power + a.mdf) * power / 2;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\nreturn (isNaN(value) ? 0 : value) * sign;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ItemsEquipsCore\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType1:str\\\\\\\":\\\\\\\"%1 Damage Power\\\\\\\",\\\\\\\"DamageType2:str\\\\\\\":\\\\\\\"%1 Damage Power\\\\\\\",\\\\\\\"DamageType3:str\\\\\\\":\\\\\\\"%1 Recovery Power\\\\\\\",\\\\\\\"DamageType4:str\\\\\\\":\\\\\\\"%1 Recovery Power\\\\\\\",\\\\\\\"DamageType5:str\\\\\\\":\\\\\\\"%1 Drain Power\\\\\\\",\\\\\\\"DamageType6:str\\\\\\\":\\\\\\\"%1 Drain Power\\\\\\\",\\\\\\\"DamageDisplay:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst item = this._item;\\\\\\\\\\\\\\\\nconst formula = item.damage.formula;\\\\\\\\\\\\\\\\nconst a = this._tempActorA;\\\\\\\\\\\\\\\\nconst b = this._tempActorB;\\\\\\\\\\\\\\\\nconst user = a;\\\\\\\\\\\\\\\\nconst target = b;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\ntry {\\\\\\\\\\\\\\\\n    return formula;\\\\\\\\\\\\\\\\n} catch (e) {\\\\\\\\\\\\\\\\n    if ($gameTemp.isPlaytest()) {\\\\\\\\\\\\\\\\n        console.log('Damage Formula Error for %1'.format(this._item.name));\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n    return '?????';\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"\\\\\\\"}\\\",\\\"{\\\\\\\"Name:str\\\\\\\":\\\\\\\"FF9\\\\\\\",\\\\\\\"Formula:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst user = this.subject();\\\\\\\\\\\\\\\\nconst target = arguments[0];\\\\\\\\\\\\\\\\nconst item = this.item();\\\\\\\\\\\\\\\\nconst a = this.subject();\\\\\\\\\\\\\\\\nconst b = target;\\\\\\\\\\\\\\\\nconst v = $gameVariables._data;\\\\\\\\\\\\\\\\nconst sign = [3, 4].includes(item.damage.type) ? -1 : 1;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Create Damage Constant\\\\\\\\\\\\\\\\nconst power = Math.max(eval(item.damage.formula), 0);\\\\\\\\\\\\\\\\nif (this.isCertainHit()) {\\\\\\\\\\\\\\\\n    return (isNaN(power) ? 0 : power) * sign;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Declare Main Stats\\\\\\\\\\\\\\\\nlet armor = this.isPhysical() ? b.def : b.mdf;\\\\\\\\\\\\\\\\narmor = this.applyArmorModifiers(b, armor);\\\\\\\\\\\\\\\\nlet stat = 1;\\\\\\\\\\\\\\\\nif (this.isPhysical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    stat = a.atk;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    stat = a.mat;\\\\\\\\\\\\\\\\n} else if (this.isPhysical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    stat = a.def;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    stat = a.mdf;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Declare Base Damage\\\\\\\\\\\\\\\\nlet baseDamage = power;\\\\\\\\\\\\\\\\nif (this.isPhysical()) {\\\\\\\\\\\\\\\\n    baseDamage += stat;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\nif (this.isDamage() || this.isDrain()) {\\\\\\\\\\\\\\\\n    baseDamage -= armor;\\\\\\\\\\\\\\\\n    baseDamage = Math.max(1, baseDamage);\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Declare Bonus Damage\\\\\\\\\\\\\\\\nlet bonusDamage = stat + (((a.level || a.luk) + stat) / 8);\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Declare Final Damage\\\\\\\\\\\\\\\\nlet value = baseDamage * bonusDamage * sign;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\nreturn isNaN(value) ? 0 : value;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ItemsEquipsCore\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType1:str\\\\\\\":\\\\\\\"%1 Damage Power\\\\\\\",\\\\\\\"DamageType2:str\\\\\\\":\\\\\\\"%1 Damage Power\\\\\\\",\\\\\\\"DamageType3:str\\\\\\\":\\\\\\\"%1 Recovery Power\\\\\\\",\\\\\\\"DamageType4:str\\\\\\\":\\\\\\\"%1 Recovery Power\\\\\\\",\\\\\\\"DamageType5:str\\\\\\\":\\\\\\\"%1 Drain Power\\\\\\\",\\\\\\\"DamageType6:str\\\\\\\":\\\\\\\"%1 Drain Power\\\\\\\",\\\\\\\"DamageDisplay:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst item = this._item;\\\\\\\\\\\\\\\\nconst formula = item.damage.formula;\\\\\\\\\\\\\\\\nconst a = this._tempActorA;\\\\\\\\\\\\\\\\nconst b = this._tempActorB;\\\\\\\\\\\\\\\\nconst user = a;\\\\\\\\\\\\\\\\nconst target = b;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\ntry {\\\\\\\\\\\\\\\\n    return formula;\\\\\\\\\\\\\\\\n} catch (e) {\\\\\\\\\\\\\\\\n    if ($gameTemp.isPlaytest()) {\\\\\\\\\\\\\\\\n        console.log('Damage Formula Error for %1'.format(this._item.name));\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n    return '?????';\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"\\\\\\\"}\\\",\\\"{\\\\\\\"Name:str\\\\\\\":\\\\\\\"FF10\\\\\\\",\\\\\\\"Formula:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst user = this.subject();\\\\\\\\\\\\\\\\nconst target = arguments[0];\\\\\\\\\\\\\\\\nconst item = this.item();\\\\\\\\\\\\\\\\nconst a = this.subject();\\\\\\\\\\\\\\\\nconst b = target;\\\\\\\\\\\\\\\\nconst v = $gameVariables._data;\\\\\\\\\\\\\\\\nconst sign = [3, 4].includes(item.damage.type) ? -1 : 1;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Create Damage Constant\\\\\\\\\\\\\\\\nconst power = Math.max(eval(item.damage.formula), 0);\\\\\\\\\\\\\\\\nif (this.isCertainHit()) {\\\\\\\\\\\\\\\\n    return (isNaN(power) ? 0 : power) * sign;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Create Damage Offense Value\\\\\\\\\\\\\\\\nlet value = power;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nif (this.isPhysical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    value = (((a.atk ** 3) / 32) + 32) * power / 16;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    value = power * ((a.mat ** 2 / 6) + power) / 4;\\\\\\\\\\\\\\\\n} else if (this.isPhysical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    value = power * ((a.def + power) / 2);\\\\\\\\\\\\\\\\n} else if (this.isMagical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    value = power * ((a.mdf + power) / 2);\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Apply Damage Defense Value\\\\\\\\\\\\\\\\nif (this.isDamage() || this.isDrain()) {\\\\\\\\\\\\\\\\n    let armor = this.isPhysical() ? b.def : b.mdf;\\\\\\\\\\\\\\\\n    armor = this.applyArmorModifiers(b, armor);\\\\\\\\\\\\\\\\n    armor = Math.max(armor, 1);\\\\\\\\\\\\\\\\n    value *= ((((armor - 280.4) ** 2) / 110) / 16) / 730;\\\\\\\\\\\\\\\\n    value *= (730 - (armor * 51 - (armor ** 2) / 11) / 10) / 730;\\\\\\\\\\\\\\\\n} else if (this.isRecover()) {\\\\\\\\\\\\\\\\n    value *= -1;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\nreturn isNaN(value) ? 0 : value;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ItemsEquipsCore\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType1:str\\\\\\\":\\\\\\\"%1 Damage Power\\\\\\\",\\\\\\\"DamageType2:str\\\\\\\":\\\\\\\"%1 Damage Power\\\\\\\",\\\\\\\"DamageType3:str\\\\\\\":\\\\\\\"%1 Recovery Power\\\\\\\",\\\\\\\"DamageType4:str\\\\\\\":\\\\\\\"%1 Recovery Power\\\\\\\",\\\\\\\"DamageType5:str\\\\\\\":\\\\\\\"%1 Drain Power\\\\\\\",\\\\\\\"DamageType6:str\\\\\\\":\\\\\\\"%1 Drain Power\\\\\\\",\\\\\\\"DamageDisplay:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst item = this._item;\\\\\\\\\\\\\\\\nconst formula = item.damage.formula;\\\\\\\\\\\\\\\\nconst a = this._tempActorA;\\\\\\\\\\\\\\\\nconst b = this._tempActorB;\\\\\\\\\\\\\\\\nconst user = a;\\\\\\\\\\\\\\\\nconst target = b;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\ntry {\\\\\\\\\\\\\\\\n    return formula;\\\\\\\\\\\\\\\\n} catch (e) {\\\\\\\\\\\\\\\\n    if ($gameTemp.isPlaytest()) {\\\\\\\\\\\\\\\\n        console.log('Damage Formula Error for %1'.format(this._item.name));\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n    return '?????';\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"\\\\\\\"}\\\",\\\"{\\\\\\\"Name:str\\\\\\\":\\\\\\\"MK\\\\\\\",\\\\\\\"Formula:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst user = this.subject();\\\\\\\\\\\\\\\\nconst target = arguments[0];\\\\\\\\\\\\\\\\nconst item = this.item();\\\\\\\\\\\\\\\\nconst a = this.subject();\\\\\\\\\\\\\\\\nconst b = target;\\\\\\\\\\\\\\\\nconst v = $gameVariables._data;\\\\\\\\\\\\\\\\nconst sign = [3, 4].includes(item.damage.type) ? -1 : 1;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Create Multiplier\\\\\\\\\\\\\\\\nconst multiplier = Math.max(eval(item.damage.formula), 0);\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Declare Values\\\\\\\\\\\\\\\\nlet armor = this.isPhysical() ? b.def : b.mdf;\\\\\\\\\\\\\\\\narmor = this.applyArmorModifiers(target, armor);\\\\\\\\\\\\\\\\nconst denominator = Math.max(200 + armor, 1);\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Calculate Damage \\\\\\\\\\\\\\\\nlet value = 0;\\\\\\\\\\\\\\\\nif (this.isPhysical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    value = 200 * a.atk / denominator;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    value = 200 * a.mat / denominator;\\\\\\\\\\\\\\\\n} else if (this.isPhysical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    value = 200 * a.def / 200;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    value = 200 * a.mdf / 200;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\nvalue *= multiplier;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\nreturn (isNaN(value) ? 0 : value) * sign;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ItemsEquipsCore\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType1:str\\\\\\\":\\\\\\\"%1 Damage Multiplier\\\\\\\",\\\\\\\"DamageType2:str\\\\\\\":\\\\\\\"%1 Damage Multiplier\\\\\\\",\\\\\\\"DamageType3:str\\\\\\\":\\\\\\\"%1 Recovery Multiplier\\\\\\\",\\\\\\\"DamageType4:str\\\\\\\":\\\\\\\"%1 Recovery Multiplier\\\\\\\",\\\\\\\"DamageType5:str\\\\\\\":\\\\\\\"%1 Drain Multiplier\\\\\\\",\\\\\\\"DamageType6:str\\\\\\\":\\\\\\\"%1 Drain Multiplier\\\\\\\",\\\\\\\"DamageDisplay:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst item = this._item;\\\\\\\\\\\\\\\\nconst formula = item.damage.formula;\\\\\\\\\\\\\\\\nconst a = this._tempActorA;\\\\\\\\\\\\\\\\nconst b = this._tempActorB;\\\\\\\\\\\\\\\\nconst user = a;\\\\\\\\\\\\\\\\nconst target = b;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\ntry {\\\\\\\\\\\\\\\\n    const value = Math.max(eval(formula), 0);\\\\\\\\\\\\\\\\n    return '%1%'.format(Math.round(value * 100));\\\\\\\\\\\\\\\\n} catch (e) {\\\\\\\\\\\\\\\\n    if ($gameTemp.isPlaytest()) {\\\\\\\\\\\\\\\\n        console.log('Damage Formula Error for %1'.format(this._item.name));\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n    return '?????';\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"\\\\\\\"}\\\",\\\"{\\\\\\\"Name:str\\\\\\\":\\\\\\\"MOBA\\\\\\\",\\\\\\\"Formula:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst user = this.subject();\\\\\\\\\\\\\\\\nconst target = arguments[0];\\\\\\\\\\\\\\\\nconst item = this.item();\\\\\\\\\\\\\\\\nconst a = this.subject();\\\\\\\\\\\\\\\\nconst b = target;\\\\\\\\\\\\\\\\nconst v = $gameVariables._data;\\\\\\\\\\\\\\\\nconst sign = [3, 4].includes(item.damage.type) ? -1 : 1;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Create Damage Value\\\\\\\\\\\\\\\\nlet value = Math.max(eval(item.damage.formula), 0) * sign;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Apply Attacker's Offense Parameter\\\\\\\\\\\\\\\\nif (this.isPhysical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    value *= a.atk;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    value *= a.mat;\\\\\\\\\\\\\\\\n} else if (this.isPhysical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    value *= a.def;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    value *= a.mdf;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Apply Defender's Defense Parameter\\\\\\\\\\\\\\\\nif (this.isDamage() && !this.isCertainHit()) {\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    // Calculate Base Armor\\\\\\\\\\\\\\\\n    let armor = this.isPhysical() ? b.def : b.mdf;\\\\\\\\\\\\\\\\n    armor = this.applyArmorModifiers(target, armor);\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n    // Apply Armor to Damage\\\\\\\\\\\\\\\\n    if (armor >= 0) {\\\\\\\\\\\\\\\\n        value *= 100 / (100 + armor);\\\\\\\\\\\\\\\\n    } else {\\\\\\\\\\\\\\\\n        value *= 2 - (100 / (100 - armor));\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\nreturn isNaN(value) ? 0 : value;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ItemsEquipsCore\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType1:str\\\\\\\":\\\\\\\"%1 Damage Multiplier\\\\\\\",\\\\\\\"DamageType2:str\\\\\\\":\\\\\\\"%1 Damage Multiplier\\\\\\\",\\\\\\\"DamageType3:str\\\\\\\":\\\\\\\"%1 Recovery Multiplier\\\\\\\",\\\\\\\"DamageType4:str\\\\\\\":\\\\\\\"%1 Recovery Multiplier\\\\\\\",\\\\\\\"DamageType5:str\\\\\\\":\\\\\\\"%1 Drain Multiplier\\\\\\\",\\\\\\\"DamageType6:str\\\\\\\":\\\\\\\"%1 Drain Multiplier\\\\\\\",\\\\\\\"DamageDisplay:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst item = this._item;\\\\\\\\\\\\\\\\nconst formula = item.damage.formula;\\\\\\\\\\\\\\\\nconst a = this._tempActorA;\\\\\\\\\\\\\\\\nconst b = this._tempActorB;\\\\\\\\\\\\\\\\nconst user = a;\\\\\\\\\\\\\\\\nconst target = b;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\ntry {\\\\\\\\\\\\\\\\n    const value = Math.max(eval(formula), 0);\\\\\\\\\\\\\\\\n    return '%1%'.format(Math.round(value * 100));\\\\\\\\\\\\\\\\n} catch (e) {\\\\\\\\\\\\\\\\n    if ($gameTemp.isPlaytest()) {\\\\\\\\\\\\\\\\n        console.log('Damage Formula Error for %1'.format(this._item.name));\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n    return '?????';\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"\\\\\\\"}\\\",\\\"{\\\\\\\"Name:str\\\\\\\":\\\\\\\"PKMN\\\\\\\",\\\\\\\"Formula:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst user = this.subject();\\\\\\\\\\\\\\\\nconst target = arguments[0];\\\\\\\\\\\\\\\\nconst item = this.item();\\\\\\\\\\\\\\\\nconst a = this.subject();\\\\\\\\\\\\\\\\nconst b = target;\\\\\\\\\\\\\\\\nconst v = $gameVariables._data;\\\\\\\\\\\\\\\\nconst sign = [3, 4].includes(item.damage.type) ? -1 : 1;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Create Power\\\\\\\\\\\\\\\\nconst power = Math.max(eval(item.damage.formula), 0);\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Declare Values\\\\\\\\\\\\\\\\nlet value = 0;\\\\\\\\\\\\\\\\nlet level = Math.max(a.level || a.luk, 1);\\\\\\\\\\\\\\\\nlet armor = this.isPhysical() ? b.def : b.mdf;\\\\\\\\\\\\\\\\narmor = Math.max(this.applyArmorModifiers(target, armor), 0);\\\\\\\\\\\\\\\\nlet attackStat = 0;\\\\\\\\\\\\\\\\nif (this.isPhysical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    attackStat = a.atk;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && (this.isDamage() || this.isDrain())) {\\\\\\\\\\\\\\\\n    attackStat =  a.mat;\\\\\\\\\\\\\\\\n} else if (this.isPhysical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    attackStat =  a.def;\\\\\\\\\\\\\\\\n} else if (this.isMagical() && this.isRecover()) {\\\\\\\\\\\\\\\\n    attackStat =  a.mdf;\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Calculate Damage\\\\\\\\\\\\\\\\nvalue = (((((2 * level) / 5) + 2) * power * (attackStat / armor)) / 50) + 2;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\nreturn (isNaN(value) ? 0 : value) * sign;\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"ItemsEquipsCore\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"DamageType1:str\\\\\\\":\\\\\\\"%1 Damage Power\\\\\\\",\\\\\\\"DamageType2:str\\\\\\\":\\\\\\\"%1 Damage Power\\\\\\\",\\\\\\\"DamageType3:str\\\\\\\":\\\\\\\"%1 Recovery Power\\\\\\\",\\\\\\\"DamageType4:str\\\\\\\":\\\\\\\"%1 Recovery Power\\\\\\\",\\\\\\\"DamageType5:str\\\\\\\":\\\\\\\"%1 Drain Power\\\\\\\",\\\\\\\"DamageType6:str\\\\\\\":\\\\\\\"%1 Drain Power\\\\\\\",\\\\\\\"DamageDisplay:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Define Constants\\\\\\\\\\\\\\\\nconst item = this._item;\\\\\\\\\\\\\\\\nconst formula = item.damage.formula;\\\\\\\\\\\\\\\\nconst a = this._tempActorA;\\\\\\\\\\\\\\\\nconst b = this._tempActorB;\\\\\\\\\\\\\\\\nconst user = a;\\\\\\\\\\\\\\\\nconst target = b;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\ntry {\\\\\\\\\\\\\\\\n    return formula;\\\\\\\\\\\\\\\\n} catch (e) {\\\\\\\\\\\\\\\\n    if ($gameTemp.isPlaytest()) {\\\\\\\\\\\\\\\\n        console.log('Damage Formula Error for %1'.format(this._item.name));\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\n    return '?????';\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\"\\\\\\\"}\\\"]\",\"Cap\":\"\",\"EnableDamageCap:eval\":\"false\",\"DefaultHardCap:num\":\"9999\",\"EnableSoftCap:eval\":\"false\",\"DefaultSoftCap:num\":\"0.80\",\"DefaultSoftScaler:num\":\"0.1275\",\"Popups\":\"\",\"PopupDuration:num\":\"128\",\"NewPopupBottom:eval\":\"true\",\"PopupPosition:str\":\"base\",\"PopupOffsetX:num\":\"0\",\"PopupOffsetY:num\":\"0\",\"PopupShiftX:num\":\"8\",\"PopupShiftY:num\":\"-28\",\"hpDamageFmt:str\":\"-%1\",\"hpHealingFmt:str\":\"+%1\",\"mpDamageFmt:str\":\"-%1 %2\",\"mpHealingFmt:str\":\"+%1 %2\",\"CriticalColor:eval\":\"[255, 0, 0, 160]\",\"CriticalDuration:num\":\"128\",\"Formulas\":\"\",\"OverallFormulaJS:func\":\"\\\"// Declare Constants\\\\nconst target = arguments[0];\\\\nconst critical = arguments[1];\\\\nconst item = this.item();\\\\n\\\\n// Get Base Damage\\\\nconst baseValue = this.evalDamageFormula(target);\\\\n\\\\n// Calculate Element Modifiers\\\\nlet value = baseValue * this.calcElementRate(target);\\\\n\\\\n// Calculate Physical and Magical Modifiers\\\\nif (this.isPhysical()) {\\\\n    value *= target.pdr;\\\\n}\\\\nif (this.isMagical()) {\\\\n    value *= target.mdr;\\\\n}\\\\n\\\\n// Apply Healing Modifiers\\\\nif (baseValue < 0) {\\\\n    value *= target.rec;\\\\n}\\\\n\\\\n// Apply Critical Modifiers\\\\nif (critical) {\\\\n    value = this.applyCritical(value);\\\\n}\\\\n\\\\n// Apply Variance and Guard Modifiers\\\\nvalue = this.applyVariance(value, item.damage.variance);\\\\nvalue = this.applyGuard(value, target);\\\\n\\\\n// Finalize Damage\\\\nvalue = Math.round(value);\\\\nreturn value;\\\"\",\"VarianceFormulaJS:func\":\"\\\"// Declare Constants\\\\nconst damage = arguments[0];\\\\nconst variance = arguments[1];\\\\n\\\\n// Calculate Variance\\\\nconst amp = Math.floor(Math.max((Math.abs(damage) * variance) / 100, 0));\\\\nconst v = Math.randomInt(amp + 1) + Math.randomInt(amp + 1) - amp;\\\\n\\\\n// Return Damage\\\\nreturn damage >= 0 ? damage + v : damage - v;\\\"\",\"GuardFormulaJS:func\":\"\\\"// Declare Constants\\\\nconst damage = arguments[0];\\\\nconst target = arguments[1];\\\\n\\\\n// Return Damage Early\\\\nconst note = this.item().note;\\\\nif (note.match(/<UNBLOCKABLE>/i)) return damage;\\\\nif (!target.isGuard()) return damage;\\\\nif (damage < 0) return damage;\\\\n\\\\n// Declare Guard Rate\\\\nlet guardRate = 0.5;\\\\nguardRate /= target.grd;\\\\n\\\\n// Return Damage\\\\nreturn damage * guardRate;\\\"\",\"Critical\":\"\",\"CriticalHitRateJS:func\":\"\\\"// Declare Constants\\\\nconst user = this.subject();\\\\nconst target = arguments[0];\\\\n\\\\n// Create Base Critical Rate\\\\nlet rate = this.subject().cri * (1 - target.cev);\\\\n\\\\n// Apply Notetags\\\\nconst note = this.item().note;\\\\nif (note.match(/<ALWAYS CRITICAL>/i)) {\\\\n    return 1;\\\\n}\\\\nif (note.match(/<SET CRITICAL RATE:[ ](\\\\\\\\d+)([%％])>/i)) {\\\\n    return Number(RegExp.$1) / 100;\\\\n}\\\\nif (note.match(/<MODIFY CRITICAL RATE:[ ](\\\\\\\\d+)([%％])>/i)) {\\\\n    rate *= Number(RegExp.$1) / 100;\\\\n}\\\\nif (note.match(/<MODIFY CRITICAL RATE:[ ]([\\\\\\\\+\\\\\\\\-]\\\\\\\\d+)([%％])>/i)) {\\\\n    rate += Number(RegExp.$1) / 100;\\\\n}\\\\nif (note.match(/<JS CRITICAL RATE>\\\\\\\\s*([\\\\\\\\s\\\\\\\\S]*)\\\\\\\\s*<\\\\\\\\/JS CRITICAL RATE>/i)) {\\\\n    const code = String(RegExp.$1);\\\\n    try {\\\\n        eval(code);\\\\n    } catch (e) {\\\\n        if ($gameTemp.isPlaytest()) console.log(e);\\\\n    }\\\\n}\\\\n\\\\n// Apply LUK Buffs/Debuffs\\\\nconst lukStack = this.subject().buff(7);\\\\nrate *= 2 ** lukStack;\\\\n\\\\n// Return Rate\\\\nreturn rate;\\\"\",\"CriticalHitMultiplier:func\":\"\\\"// Declare Constants\\\\nconst user = this.subject();\\\\nlet damage = arguments[0];\\\\nlet multiplier = 2.0;\\\\nlet bonusDamage = this.subject().luk * this.subject().cri;\\\\nif (this.isHpRecover() || this.isMpRecover()) {\\\\n    bonusDamage *= -1;\\\\n}\\\\n\\\\n// Apply Notetags\\\\nconst note = this.item().note;\\\\nif (note.match(/<MODIFY CRITICAL MULTIPLIER:[ ](\\\\\\\\d+)([%％])>/i)) {\\\\n    multiplier = Number(RegExp.$1) / 100;\\\\n}\\\\nif (note.match(/<MODIFY CRITICAL MULTIPLIER:[ ]([\\\\\\\\+\\\\\\\\-]\\\\\\\\d+)([%％])>/i)) {\\\\n    multiplier += Number(RegExp.$1) / 100;\\\\n}\\\\nif (note.match(/<MODIFY CRITICAL BONUS DAMAGE:[ ](\\\\\\\\d+)([%％])>/i)) {\\\\n    bonusDamage *= Number(RegExp.$1) / 100;\\\\n}\\\\nif (note.match(/<MODIFY CRITICAL BONUS DAMAGE:[ ]([\\\\\\\\+\\\\\\\\-]\\\\\\\\d+)([%％])>/i)) {\\\\n    bonusDamage += bonusDamage * (RegExp.$1) / 100;\\\\n}\\\\nif (note.match(/<JS CRITICAL DAMAGE>\\\\\\\\s*([\\\\\\\\s\\\\\\\\S]*)\\\\\\\\s*<\\\\\\\\/JS CRITICAL DAMAGE>/i)) {\\\\n    const code = String(RegExp.$1);\\\\n    try {\\\\n        eval(code);\\\\n    } catch (e) {\\\\n        if ($gameTemp.isPlaytest()) console.log(e);\\\\n    }\\\\n}\\\\n\\\\n// Return Damage\\\\nreturn damage * multiplier + bonusDamage;\\\"\"}","Mechanics:struct":"{\"ActionSpeed\":\"\",\"AllowRandomSpeed:eval\":\"false\",\"CalcActionSpeedJS:func\":\"\\\"// Declare Constants\\\\nconst agi = this.subject().agi;\\\\n\\\\n// Create Speed\\\\nlet speed = agi;\\\\nif (this.allowRandomSpeed()) {\\\\n    speed += Math.randomInt(Math.floor(5 + agi / 4));\\\\n}\\\\nif (this.item()) {\\\\n    speed += this.item().speed;\\\\n}\\\\nif (this.isAttack()) {\\\\n    speed += this.subject().attackSpeed();\\\\n}\\\\n\\\\n// Return Speed\\\\nreturn speed;\\\"\",\"BaseTroop\":\"\",\"BaseTroopIDs:arraynum\":\"[\\\"1\\\"]\",\"CommonEvents\":\"\",\"BattleStartEvent:num\":\"0\",\"BattleEndEvent:num\":\"0\",\"VictoryEvent:num\":\"0\",\"DefeatEvent:num\":\"0\",\"EscapeSuccessEvent:num\":\"0\",\"EscapeFailEvent:num\":\"0\",\"Escape\":\"\",\"CalcEscapeRatioJS:func\":\"\\\"// Calculate Escape Ratio\\\\nlet ratio = 0.5;\\\\nratio *= $gameParty.agility();\\\\nratio /= $gameTroop.agility();\\\\n\\\\n// Return Ratio\\\\nreturn ratio;\\\"\",\"CalcEscapeRaiseJS:func\":\"\\\"// Calculate Escape Ratio\\\\nlet value = 0.1;\\\\nvalue += $gameParty.aliveMembers().length;\\\\n\\\\n// Return Value\\\\nreturn value;\\\"\",\"BattleJS\":\"\",\"PreStartBattleJS:func\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PostStartBattleJS:func\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"BattleVictoryJS:func\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"EscapeSuccessJS:func\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"EscapeFailureJS:func\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"BattleDefeatJS:func\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PreEndBattleJS:func\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PostEndBattleJS:func\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"TurnJS\":\"\",\"PreStartTurnJS:func\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PostStartTurnJS:func\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PreEndTurnJS:func\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PostEndTurnJS:func\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PreRegenerateJS:func\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PostRegenerateJS:func\":\"\\\"// Declare Constants\\\\nconst user = this;\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"ActionJS\":\"\",\"PreStartActionJS:func\":\"\\\"// Declare Constants\\\\nconst value = arguments[0];\\\\nconst user = this.subject();\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\nconst action = this;\\\\nconst item = this.item();\\\\nconst skill = this.item();\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PostStartActionJS:func\":\"\\\"// Declare Constants\\\\nconst value = arguments[0];\\\\nconst user = this.subject();\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\nconst action = this;\\\\nconst item = this.item();\\\\nconst skill = this.item();\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PreApplyJS:func\":\"\\\"// Declare Constants\\\\nconst value = arguments[0];\\\\nconst target = arguments[1];\\\\nconst user = this.subject();\\\\nconst a = user;\\\\nconst b = target;\\\\nconst action = this;\\\\nconst item = this.item();\\\\nconst skill = this.item();\\\\n\\\\n// Perform Actions\\\\n\\\\n// Return Value\\\\nreturn value;\\\"\",\"PreDamageJS:func\":\"\\\"// Declare Constants\\\\nconst value = arguments[0];\\\\nconst target = arguments[1];\\\\nconst user = this.subject();\\\\nconst a = user;\\\\nconst b = target;\\\\nconst action = this;\\\\nconst item = this.item();\\\\nconst skill = this.item();\\\\n\\\\n// Perform Actions\\\\n\\\\n// Return Value\\\\nreturn value;\\\"\",\"PostDamageJS:func\":\"\\\"// Declare Constants\\\\nconst value = arguments[0];\\\\nconst target = arguments[1];\\\\nconst user = this.subject();\\\\nconst a = user;\\\\nconst b = target;\\\\nconst action = this;\\\\nconst item = this.item();\\\\nconst skill = this.item();\\\\n\\\\n// Perform Actions\\\\n\\\\n// Return Value\\\\nreturn value;\\\"\",\"PostApplyJS:func\":\"\\\"// Declare Constants\\\\nconst value = arguments[0];\\\\nconst target = arguments[1];\\\\nconst user = this.subject();\\\\nconst a = user;\\\\nconst b = target;\\\\nconst action = this;\\\\nconst item = this.item();\\\\nconst skill = this.item();\\\\n\\\\n// Perform Actions\\\\n\\\\n// Return Value\\\\nreturn value;\\\"\",\"PreEndActionJS:func\":\"\\\"// Declare Constants\\\\nconst value = arguments[0];\\\\nconst user = this.subject();\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\nconst action = this;\\\\nconst item = this.item();\\\\nconst skill = this.item();\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PostEndActionJS:func\":\"\\\"// Declare Constants\\\\nconst value = arguments[0];\\\\nconst user = this.subject();\\\\nconst target = user;\\\\nconst a = user;\\\\nconst b = user;\\\\nconst action = this;\\\\nconst item = this.item();\\\\nconst skill = this.item();\\\\n\\\\n// Perform Actions\\\\n\\\"\"}","CmdWindows":"----------------------------------","BattleLayout:struct":"{\"Style:str\":\"default\",\"ListStyle\":\"\",\"ShowFacesListStyle:eval\":\"true\",\"CommandWidth:num\":\"192\",\"XPStyle\":\"\",\"XPActorCommandLines:num\":\"4\",\"XPActorDefaultHeight:num\":\"64\",\"XPSpriteYLocation:str\":\"name\",\"PotraitStyle\":\"\",\"ShowPortraits:eval\":\"true\",\"PortraitScale:num\":\"0.5\",\"BorderStyle\":\"\",\"SkillItemBorderCols:num\":\"1\",\"ShowPortraitsBorderStyle:eval\":\"true\",\"PortraitScaleBorderStyle:num\":\"1.25\",\"SkillItemWindows\":\"\",\"SkillItemMiddleLayout:eval\":\"false\",\"SkillItemStandardCols:num\":\"2\"}","BattleLog:struct":"{\"General\":\"\",\"BackColor:str\":\"#000000\",\"MaxLines:num\":\"10\",\"MessageWait:num\":\"16\",\"TextAlign:str\":\"center\",\"BattleLogRectJS:func\":\"\\\"const wx = 0;\\\\nconst wy = 0;\\\\nconst ww = Graphics.boxWidth;\\\\nconst wh = this.calcWindowHeight(10, false);\\\\nreturn new Rectangle(wx, wy, ww, wh);\\\"\",\"StartTurn\":\"\",\"StartTurnShow:eval\":\"true\",\"StartTurnMsg:str\":\"Turn %1\",\"StartTurnWait:num\":\"40\",\"DisplayAction\":\"\",\"ActionCenteredName:eval\":\"true\",\"ActionSkillMsg1:eval\":\"false\",\"ActionSkillMsg2:eval\":\"true\",\"ActionItemMsg:eval\":\"false\",\"ActionChanges\":\"\",\"ShowCounter:eval\":\"true\",\"ShowReflect:eval\":\"true\",\"ShowSubstitute:eval\":\"true\",\"ActionResults\":\"\",\"ShowFailure:eval\":\"false\",\"ShowCritical:eval\":\"false\",\"ShowMissEvasion:eval\":\"false\",\"ShowHpDmg:eval\":\"false\",\"ShowMpDmg:eval\":\"false\",\"ShowTpDmg:eval\":\"false\",\"DisplayStates\":\"\",\"ShowAddedState:eval\":\"false\",\"ShowRemovedState:eval\":\"false\",\"ShowCurrentState:eval\":\"false\",\"ShowAddedBuff:eval\":\"false\",\"ShowAddedDebuff:eval\":\"false\",\"ShowRemovedBuff:eval\":\"false\"}","BattlebackScale:struct":"{\"DefaultStyle:str\":\"1:1\",\"jsOneForOne:func\":\"\\\"// Adjust Size\\\\nthis.width = Graphics.width;\\\\nthis.height = Graphics.height;\\\\n\\\\n// Adjust Scale\\\\nconst scale = 1.0;\\\\nthis.scale.x = scale;\\\\nthis.scale.y = scale;\\\\n\\\\n// Adjust Coordinates\\\\nthis.x = 0;\\\\nthis.y = 0;\\\"\",\"jsScaleToFit:func\":\"\\\"// Adjust Size\\\\nthis.width = Graphics.width;\\\\nthis.height = Graphics.height;\\\\n\\\\n// Adjust Scale\\\\nconst ratioX = this.width / this.bitmap.width;\\\\nconst ratioY = this.height / this.bitmap.height;\\\\nconst scale = Math.max(ratioX, ratioY);\\\\nthis.scale.x = scale;\\\\nthis.scale.y = scale;\\\\n\\\\n// Adjust Coordinates\\\\nthis.x = (Graphics.width - this.width) / 2;\\\\nthis.y = Graphics.height - this.height;\\\"\",\"jsScaleDown:func\":\"\\\"// Adjust Size\\\\nthis.width = Graphics.width;\\\\nthis.height = Graphics.height;\\\\n\\\\n// Adjust Scale\\\\nconst ratioX = Math.min(1, this.width / this.bitmap.width);\\\\nconst ratioY = Math.min(1, this.height / this.bitmap.height);\\\\nconst scale = Math.max(ratioX, ratioY);\\\\nthis.scale.x = scale;\\\\nthis.scale.y = scale;\\\\n\\\\n// Adjust Coordinates\\\\nthis.x = (Graphics.width - this.width) / 2;\\\\nthis.y = Graphics.height - this.height;\\\"\",\"jsScaleUp:func\":\"\\\"// Adjust Size\\\\nthis.width = Graphics.width;\\\\nthis.height = Graphics.height;\\\\n\\\\n// Adjust Scale\\\\nconst ratioX = Math.max(1, this.width / this.bitmap.width);\\\\nconst ratioY = Math.max(1, this.height / this.bitmap.height);\\\\nconst scale = Math.max(ratioX, ratioY);\\\\nthis.scale.x = scale;\\\\nthis.scale.y = scale;\\\\n\\\\n// Adjust Coordinates\\\\nthis.x = (Graphics.width - this.width) / 2;\\\\nthis.y = Graphics.height - this.height;\\\"\"}","PartyCmd:struct":"{\"Cmd\":\"\",\"CmdStyle:str\":\"auto\",\"CmdTextAlign:str\":\"left\",\"CmdIconFight:num\":\"76\",\"CommandAddAutoBattle:eval\":\"true\",\"CmdIconAutoBattle:num\":\"78\",\"CmdTextAutoBattle:str\":\"Auto\",\"CommandAddStatus:eval\":\"true\",\"CmdIconStatus:num\":\"87\",\"CommandAddOptions:eval\":\"true\",\"CmdIconOptions:num\":\"83\",\"ActiveTpbOptionsMessage:str\":\"Options Menu queued after action is complete.\",\"CmdIconEscape:num\":\"82\",\"Access\":\"\",\"SkipPartyCmd:eval\":\"true\",\"DisablePartyCmd:eval\":\"true\",\"HelpWindow\":\"\",\"HelpFight:str\":\"Select actions to fight.\",\"HelpAutoBattle:str\":\"Sets party to Auto Battle mode.\",\"HelpOptions:str\":\"Opens up the Options Menu.\",\"HelpEscape:str\":\"Attempt to escape the battle.\"}","ActorCmd:struct":"{\"Cmd\":\"\",\"CmdStyle:str\":\"auto\",\"CmdTextAlign:str\":\"left\",\"CmdIconItem:num\":\"176\",\"IconStypeNorm:num\":\"78\",\"IconStypeMagic:num\":\"79\",\"BattleCmd\":\"\",\"BattleCmdList:arraystr\":\"[\\\"attack\\\",\\\"skills\\\",\\\"item\\\"]\",\"ShowCosts:eval\":\"true\",\"HelpWindow\":\"\",\"HelpSkillType:str\":\"Opens up a list of skills under the \\\\C[16]%1\\\\C[0] category.\",\"HelpItem:str\":\"Opens up a list of items that you can use.\",\"HelpEscape:str\":\"Attempt to escape the battle.\",\"HelpAutoBattle:str\":\"Automatically choose an action suitable for combat.\",\"HelpParty:str\":\"Automatically choose an action suitable for combat.\"}","InBattleStatus:struct":"{\"General\":\"\",\"CmdIconStatus:num\":\"87\",\"StatusGraphic:str\":\"face\",\"HelpStatus:str\":\"View battle member status.\",\"Enemy\":\"\",\"enemyStatus:eval\":\"true\",\"enemyShowLevel:eval\":\"true\",\"enemyHiddenParameter:str\":\"???\",\"enemyShowParametersAlways:eval\":\"false\",\"enemyShowParametersIfBattleTest:eval\":\"true\",\"enemyShowParametersIfDefeated:eval\":\"true\",\"PageButtons\":\"\",\"pageOffsetX:num\":\"+0\",\"pageOffsetY:num\":\"+0\",\"pageButtons:eval\":\"true\",\"Parameters\":\"\",\"buffValueFmt:str\":\"▲%1\",\"debuffValueFmt:str\":\"▼%1\",\"States\":\"\",\"statesMaxWidth:num\":\"384\",\"drawStates:eval\":\"true\",\"drawBuffs:eval\":\"true\",\"drawDebuffs:eval\":\"true\",\"BuffsDebuffs\":\"\",\"buffNameFmt:str\":\"%1▲\",\"debuffNameFmt:str\":\"%1▼\",\"NormalState\":\"\",\"normalIcon:num\":\"84\",\"normalText:str\":\"Normal\",\"HelpDesc\":\"\",\"stateHelpFmt:json\":\"\\\"%1 %2\\\"\",\"buffHelpFmt:json\":\"\\\"Increases %1 to %3%2\\\\\\\\C[0]. %4\\\"\",\"debuffHelpFmt:json\":\"\\\"Decreases %1 to %3%2\\\\\\\\C[0]. %4\\\"\",\"normalHelp:json\":\"\\\"Status is currently normal.\\\"\",\"TurnHelpDesc\":\"\",\"actionsFmt:str\":\"\\\\C[6](Actions %2%1\\\\C[6])\\\\C[0]\",\"TurnsFmt:str\":\"\\\\C[5](Turns %2%1\\\\C[5])\\\\C[0]\",\"passiveText:str\":\"\\\\C[4](Passive)\\\\C[0]\",\"Window\":\"\",\"StatusWindow_BgType:num\":\"0\",\"StatusWindow_DrawJS:func\":\"\\\"{ // Draw Face and Simple Status\\\\n    const x = this.colSpacing() / 2;\\\\n    const h = ImageManager.faceHeight;\\\\n    const y = h / 2 - this.lineHeight() * 1.5;\\\\n    this.drawActorGraphic(this._battler, x + 1, 0, ImageManager.faceWidth, h);\\\\n    this.drawActorSimpleStatus(this._battler, x + 180, y);\\\\n}\\\\n{ // Draw Actor Parameters\\\\n    let maxWidth = this.drawingAreaWidth();\\\\n    let x1 = 0;\\\\n    let x2 = Math.ceil(this.drawingAreaWidth() / 2);\\\\n\\\\n    let counter = 0;\\\\n    const params = this.displayedParams();\\\\n\\\\n    let px = x1;\\\\n    const availableHeight = this.innerHeight - ImageManager.faceHeight;\\\\n    const paramHeight = Math.ceil(params.length / 2) * this.lineHeight();\\\\n    let py = Math.ceil((availableHeight - paramHeight) / 2) + ImageManager.faceHeight;\\\\n    let pw = Math.floor(maxWidth / 2);\\\\n\\\\n    if (this._statesWindow.y !== 0) {\\\\n        this._statesWindow.y = py;\\\\n    }\\\\n\\\\n    for (const param of params) {\\\\n        this.drawDarkRect(px, py, pw, this.lineHeight());\\\\n        this.drawParamData(param, px, py, pw);\\\\n        counter++;\\\\n        if (counter % 2 === 0) {\\\\n            px = x1;\\\\n            py += this.lineHeight();\\\\n        } else {\\\\n            px = x2;\\\\n        }\\\\n    }\\\\n}\\\"\",\"StatusWindow_RectJS:func\":\"\\\"const wx = Graphics.boxWidth > 1000 ? 120 : 0;\\\\nconst wy = this._helpWindow.y + this._helpWindow.height;\\\\nconst ww = Graphics.boxWidth - (wx * 2);\\\\nconst wh = Graphics.boxHeight - wy - this.windowAreaHeight();\\\\nreturn new Rectangle(wx, wy, ww, wh);\\\"\"}","MultiTarget:struct":"{\"Properties\":\"\",\"WindowWidth:num\":\"280\",\"BgType:num\":\"2\",\"ShowButton:eval\":\"true\",\"Vocab\":\"\",\"AllActorsText:str\":\"All Allies\",\"AllEnemiesText:str\":\"All Enemies\",\"Offsets\":\"\",\"ActorOffsets\":\"\",\"ActorOffsetX:num\":\"+0\",\"ActorOffsetY:num\":\"+0\",\"EnemyOffsets\":\"\",\"EnemyOffsetX:num\":\"+0\",\"EnemyOffsetY:num\":\"+0\"}","ComboWindow:struct":"{\"General\":\"\",\"Enable:eval\":\"true\",\"Appearance\":\"\",\"CustomFontFace:str\":\"Arial\",\"TextAlign:str\":\"left\",\"ComboWindow_DrawJS:func\":\"\\\"// Declare Coordinates\\\\nlet x = 0;\\\\nlet y = 0;\\\\n\\\\n// Hit Text\\\\nconst hitText = this.hitText();\\\\nconst hitTextSize = this.textSizeEx(hitText);\\\\nif (this.textAlignment() === 'right') {\\\\n    x = this.innerWidth - this.itemPadding() - hitTextSize.width;\\\\n} else if (this.textAlignment() === 'center') {\\\\n    x = Math.floor((this.innerWidth - hitTextSize.width) / 2);\\\\n} else {\\\\n    x = this.itemPadding();\\\\n}\\\\nthis.drawTextEx(hitText, x, y);\\\\n\\\\n// New Line\\\\ny += Math.ceil(this.lineHeight() * 2/3);\\\\n\\\\n// Damage Text\\\\nconst dmgText = this.damageText();\\\\nconst dmgTextSize = this.textSizeEx(dmgText);\\\\nif (this.textAlignment() === 'right') {\\\\n    x = this.innerWidth - this.itemPadding() - dmgTextSize.width;\\\\n} else if (this.textAlignment() === 'center') {\\\\n    x = Math.floor((this.innerWidth - dmgTextSize.width) / 2);\\\\n} else {\\\\n    x = this.itemPadding();\\\\n}\\\\nthis.drawTextEx(dmgText, x, y);\\\"\",\"Vocab\":\"\",\"hitsDmgFmt:str\":\"\\\\C[6]%1\\\\} \\\\C[4]Hit Combo\\\\C[0]\\\\{\",\"hitsHealFmt:str\":\"\\\\C[6]%1\\\\} \\\\C[4]Heal Combo\\\\C[0]\\\\{\",\"totalDmgFmt:str\":\"\\\\}\\\\C[21]Total Damage: \\\\{\\\\C[0]%1\",\"totalHealFmt:str\":\"\\\\}\\\\C[21]Total Healing: \\\\{\\\\C[24]+%1\\\\C[0]\",\"Position\":\"\",\"fadeShiftX:num\":\"-2\",\"fadeShiftY:num\":\"+0\",\"PosOffsetX:num\":\"+0\",\"PosOffsetY:num\":\"+0\",\"ComboWindow_RectJS:func\":\"\\\"const ww = Math.ceil(Graphics.width / 4);\\\\nconst wh = this.calcWindowHeight(2, true);\\\\nconst wx = 0 + this.comboWindowOffsetX();\\\\nconst wy = Math.round(Graphics.boxHeight * 1 / 3) + this.comboWindowOffsetY();\\\\nreturn new Rectangle(wx, wy, ww, wh);\\\"\",\"Update\":\"\",\"updateDuration:num\":\"20\",\"minimumStayDuration:num\":\"40\",\"minimumHits:num\":\"1\",\"opacitySpeed:num\":\"16\"}","VisualBreak":"----------------------------------","Actor:struct":"{\"Flinch\":\"\",\"FlinchDistanceX:num\":\"12\",\"FlinchDistanceY:num\":\"0\",\"FlinchDuration:num\":\"6\",\"SvBattlers\":\"\",\"AnchorX:num\":\"0.5\",\"AnchorY:num\":\"1.0\",\"ChantStyle:eval\":\"true\",\"OffsetX:num\":\"0\",\"OffsetY:num\":\"0\",\"MotionSpeed:num\":\"12\",\"PrioritySortActive:eval\":\"true\",\"PrioritySortActors:eval\":\"false\",\"Shadow:eval\":\"true\",\"SmoothImage:eval\":\"true\",\"HomePosJS:func\":\"\\\"// Declare Constants\\\\nconst sprite = this;\\\\nconst actor = this._actor;\\\\nconst index = arguments[0];\\\\n\\\\n// Make Calculations\\\\nlet x = Math.round((Graphics.width / 2) + 192)\\\\nx -= Math.floor((Graphics.width - Graphics.boxWidth) / 2);\\\\nx += index * 32;\\\\nlet y = (Graphics.height - 200) - ($gameParty.maxBattleMembers() * 48);\\\\ny -= Math.floor((Graphics.height - Graphics.boxHeight) / 2);\\\\ny += index * 48;\\\\n\\\\n// Home Position Offsets\\\\nconst offsetNote = /<SIDEVIEW HOME OFFSET:[ ]([\\\\\\\\+\\\\\\\\-]\\\\\\\\d+),[ ]([\\\\\\\\+\\\\\\\\-]\\\\\\\\d+)>/i;\\\\nconst xOffsets = actor.traitObjects().map((obj) => (obj && obj.note.match(offsetNote) ? Number(RegExp.$1) : 0));\\\\nconst yOffsets = actor.traitObjects().map((obj) => (obj && obj.note.match(offsetNote) ? Number(RegExp.$2) : 0));\\\\nx = xOffsets.reduce((r, offset) => r + offset, x);\\\\ny = yOffsets.reduce((r, offset) => r + offset, y);\\\\n\\\\n// Set Home Position\\\\nthis.setHome(x, y);\\\"\"}","Enemy:struct":"{\"Visual\":\"\",\"AttackAnimation:num\":\"1\",\"EmergeText:eval\":\"false\",\"OffsetX:num\":\"0\",\"OffsetY:num\":\"0\",\"SmoothImage:eval\":\"true\",\"SelectWindow\":\"\",\"FrontViewSelect:eval\":\"false\",\"SideviewSelect:eval\":\"true\",\"NameFontSize:num\":\"22\",\"SvBattlers\":\"\",\"AllowCollapse:eval\":\"false\",\"AnchorX:num\":\"0.5\",\"AnchorY:num\":\"1.0\",\"MotionIdle:str\":\"walk\",\"Shadow:eval\":\"true\",\"Width:num\":\"64\",\"Height:num\":\"64\",\"WtypeId:num\":\"0\"}","HpGauge:struct":"{\"Display\":\"\",\"ShowActorGauge:eval\":\"false\",\"ShowEnemyGauge:eval\":\"true\",\"RequiresDefeat:eval\":\"false\",\"BTestBypass:eval\":\"true\",\"Settings\":\"\",\"AnchorX:num\":\"0.5\",\"AnchorY:num\":\"1.0\",\"Scale:num\":\"0.5\",\"OffsetX:num\":\"0\",\"OffsetY:num\":\"-3\",\"Options\":\"\",\"AddHpGaugeOption:eval\":\"true\",\"AdjustRect:eval\":\"true\",\"Name:str\":\"Show HP Gauge\"}","ActionSequence:struct":"{\"AutoSequences\":\"\",\"AutoMeleeSolo:eval\":\"true\",\"AutoMeleeAoE:eval\":\"true\",\"CastAnimations\":\"\",\"CastCertain:num\":\"120\",\"CastPhysical:num\":\"52\",\"CastMagical:num\":\"51\",\"CounterReflection\":\"\",\"CounterPlayback:eval\":\"true\",\"ReflectAnimation:num\":\"53\",\"ReflectPlayback:eval\":\"true\",\"Stepping\":\"\",\"MeleeDistance:num\":\"24\",\"StepDistanceX:num\":\"48\",\"StepDistanceY:num\":\"0\",\"StepDuration:num\":\"12\"}","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"VisuMZ_1_SkillsStatesCore","status":true,"description":"[RPG Maker MZ] [Tier 1] [Version 1.51] [SkillsStatesCore]","parameters":{"BreakHead":"----------------------------------","SkillsStatesCore":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","Skills:struct":"{\"General\":\"\",\"EnableLayout:eval\":\"true\",\"LayoutStyle:str\":\"upper/left\",\"SkillTypeWindow\":\"\",\"CmdStyle:str\":\"auto\",\"CmdTextAlign:str\":\"left\",\"ListWindow\":\"\",\"ListWindowCols:num\":\"1\",\"ShopStatusWindow\":\"\",\"ShowShopStatus:eval\":\"true\",\"SkillSceneAdjustSkillList:eval\":\"true\",\"SkillMenuStatusRect:func\":\"\\\"const ww = this.shopStatusWidth();\\\\nconst wh = this._itemWindow.height;\\\\nconst wx = Graphics.boxWidth - this.shopStatusWidth();\\\\nconst wy = this._itemWindow.y;\\\\nreturn new Rectangle(wx, wy, ww, wh);\\\"\",\"SkillTypes\":\"\",\"HiddenSkillTypes:arraynum\":\"[]\",\"BattleHiddenSkillTypes:arraynum\":\"[]\",\"IconStypeNorm:num\":\"78\",\"IconStypeMagic:num\":\"79\",\"CustomJS\":\"\",\"SkillConditionJS:func\":\"\\\"// Declare Variables\\\\nconst skill = arguments[0];\\\\nconst user = this;\\\\nconst target = this;\\\\nconst a = this;\\\\nconst b = this;\\\\nlet enabled = true;\\\\n\\\\n// Perform Checks\\\\n\\\\n\\\\n// Return boolean\\\\nreturn enabled;\\\"\"}","Costs:arraystruct":"[\"{\\\"Name:str\\\":\\\"HP\\\",\\\"Settings\\\":\\\"\\\",\\\"Icon:num\\\":\\\"0\\\",\\\"FontColor:str\\\":\\\"20\\\",\\\"FontSize:num\\\":\\\"22\\\",\\\"Cost\\\":\\\"\\\",\\\"CalcJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nlet cost = 0;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nconst note = skill.note;\\\\\\\\nif (note.match(/<HP COST:[ ](\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    cost += Number(RegExp.$1);\\\\\\\\n}\\\\\\\\nif (note.match(/<HP COST:[ ](\\\\\\\\\\\\\\\\d+)([%％])>/i)) {\\\\\\\\n    cost += Math.ceil(Number(RegExp.$1) * user.mhp / 100);\\\\\\\\n}\\\\\\\\nif (note.match(/<JS HP COST>\\\\\\\\\\\\\\\\s*([\\\\\\\\\\\\\\\\s\\\\\\\\\\\\\\\\S]*)\\\\\\\\\\\\\\\\s*<\\\\\\\\\\\\\\\\/JS HP COST>/i)) {\\\\\\\\n    const code = String(RegExp.$1);\\\\\\\\n    eval(code);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Apply Trait Cost Alterations\\\\\\\\nif (cost > 0) {\\\\\\\\n    const rateNote = /<HP COST:[ ](\\\\\\\\\\\\\\\\d+\\\\\\\\\\\\\\\\.?\\\\\\\\\\\\\\\\d*)([%％])>/i;\\\\\\\\n    const rates = user.traitObjects().map((obj) => (obj && obj.note.match(rateNote) ? Number(RegExp.$1) / 100 : 1));\\\\\\\\n    const flatNote = /<HP COST:[ ]([\\\\\\\\\\\\\\\\+\\\\\\\\\\\\\\\\-]\\\\\\\\\\\\\\\\d+)>/i;\\\\\\\\n    const flats = user.traitObjects().map((obj) => (obj && obj.note.match(flatNote) ? Number(RegExp.$1) : 0));\\\\\\\\n    cost = rates.reduce((r, rate) => r * rate, cost);\\\\\\\\n    cost = flats.reduce((r, flat) => r + flat, cost);\\\\\\\\n    cost = Math.max(1, cost);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Set Cost Limits\\\\\\\\nif (note.match(/<HP COST MAX:[ ](\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    cost = Math.min(cost, Number(RegExp.$1));\\\\\\\\n}\\\\\\\\nif (note.match(/<HP COST MIN:[ ](\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    cost = Math.max(cost, Number(RegExp.$1));\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Return cost value\\\\\\\\nreturn Math.round(Math.max(0, cost));\\\\\\\"\\\",\\\"CanPayJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Return Boolean\\\\\\\\nif (cost <= 0) {\\\\\\\\n    return true;\\\\\\\\n} else {\\\\\\\\n    return user._hp > cost;\\\\\\\\n}\\\\\\\"\\\",\\\"PayJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Process Payment\\\\\\\\nuser._hp -= cost;\\\\\\\"\\\",\\\"Windows\\\":\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Return Boolean\\\\\\\\nreturn cost > 0;\\\\\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\nconst settings = arguments[2];\\\\\\\\nconst fontSize = settings.FontSize;\\\\\\\\nconst color = settings.FontColor;\\\\\\\\nconst name = TextManager.hp;\\\\\\\\nconst icon = settings.Icon;\\\\\\\\nlet text = '';\\\\\\\\n\\\\\\\\n// Text: Change Font Size\\\\\\\\ntext += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\FS[%1]'.format(fontSize);\\\\\\\\n\\\\\\\\n// Text: Add Color\\\\\\\\nif (color.match(/#(.*)/i) && Imported.VisuMZ_1_MessageCore) {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\HexColor<%1>'.format(String(RegExp.$1));\\\\\\\\n} else {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\C[%1]'.format(color);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Text: Add Cost\\\\\\\\ntext += '%1 %2'.format(cost, name);\\\\\\\\n\\\\\\\\n// Text: Add Icon\\\\\\\\nif (icon  > 0) {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\I[%1]'.format(icon);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Return text\\\\\\\\nreturn text;\\\\\\\"\\\",\\\"Gauges\\\":\\\"\\\",\\\"GaugeMaxJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Return value\\\\\\\\nreturn user.mhp;\\\\\\\"\\\",\\\"GaugeCurrentJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Return value\\\\\\\\nreturn user.hp;\\\\\\\"\\\",\\\"GaugeDrawJS:func\\\":\\\"\\\\\\\"// Declare Settings\\\\\\\\nconst color1 = ColorManager.hpGaugeColor1();\\\\\\\\nconst color2 = ColorManager.hpGaugeColor2();\\\\\\\\nconst label = TextManager.hpA;\\\\\\\\n\\\\\\\\n// Declare Variables\\\\\\\\nconst sprite = this;\\\\\\\\nconst settings = sprite._costSettings;\\\\\\\\nconst bitmap = sprite.bitmap;\\\\\\\\nconst user = sprite._battler;\\\\\\\\nconst currentValue = sprite.currentDisplayedValue();\\\\\\\\nconst bitmapWidth = sprite.bitmapWidth();\\\\\\\\nconst bitmapHeight = sprite.textHeight ? sprite.textHeight() : sprite.bitmapHeight();\\\\\\\\nconst gaugeHeight = sprite.gaugeHeight();\\\\\\\\n\\\\\\\\n// Draw Gauge\\\\\\\\nconst gx = 0;\\\\\\\\nconst gy = bitmapHeight - gaugeHeight;\\\\\\\\nconst gw = bitmapWidth - gx;\\\\\\\\nconst gh = gaugeHeight;\\\\\\\\nthis.drawFullGauge(color1, color2, gx, gy, gw, gh);\\\\\\\\n\\\\\\\\n// Draw Label\\\\\\\\nconst lx = 4;\\\\\\\\nconst ly = 0;\\\\\\\\nconst lw = bitmapWidth;\\\\\\\\nconst lh = bitmapHeight;\\\\\\\\nsprite.setupLabelFont();\\\\\\\\nbitmap.paintOpacity = 255;\\\\\\\\nbitmap.drawText(label, lx, ly, lw, lh, \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n// Draw Value\\\\\\\\nconst vw = bitmapWidth - 2;\\\\\\\\nconst vh = bitmapHeight;\\\\\\\\nsprite.setupValueFont();\\\\\\\\nbitmap.textColor = ColorManager.hpColor(user);\\\\\\\\nbitmap.drawText(currentValue, 0, 0, vw, vh, \\\\\\\\\\\\\\\"right\\\\\\\\\\\\\\\");\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"MP\\\",\\\"Settings\\\":\\\"\\\",\\\"Icon:num\\\":\\\"0\\\",\\\"FontColor:str\\\":\\\"23\\\",\\\"FontSize:num\\\":\\\"22\\\",\\\"Cost\\\":\\\"\\\",\\\"CalcJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nlet cost = 0;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nconst note = skill.note;\\\\\\\\ncost = Math.floor(skill.mpCost * user.mcr);\\\\\\\\nif (note.match(/<MP COST:[ ](\\\\\\\\\\\\\\\\d+)([%％])>/i)) {\\\\\\\\n    cost += Math.ceil(Number(RegExp.$1) * user.mmp / 100);\\\\\\\\n}\\\\\\\\nif (note.match(/<JS MP COST>\\\\\\\\\\\\\\\\s*([\\\\\\\\\\\\\\\\s\\\\\\\\\\\\\\\\S]*)\\\\\\\\\\\\\\\\s*<\\\\\\\\\\\\\\\\/JS MP COST>/i)) {\\\\\\\\n    const code = String(RegExp.$1);\\\\\\\\n    eval(code);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Apply Trait Cost Alterations\\\\\\\\nif (cost > 0) {\\\\\\\\n    const rateNote = /<MP COST:[ ](\\\\\\\\\\\\\\\\d+\\\\\\\\\\\\\\\\.?\\\\\\\\\\\\\\\\d*)([%％])>/i;\\\\\\\\n    const rates = user.traitObjects().map((obj) => (obj && obj.note.match(rateNote) ? Number(RegExp.$1) / 100 : 1));\\\\\\\\n    const flatNote = /<MP COST:[ ]([\\\\\\\\\\\\\\\\+\\\\\\\\\\\\\\\\-]\\\\\\\\\\\\\\\\d+)>/i;\\\\\\\\n    const flats = user.traitObjects().map((obj) => (obj && obj.note.match(flatNote) ? Number(RegExp.$1) : 0));\\\\\\\\n    cost = rates.reduce((r, rate) => r * rate, cost);\\\\\\\\n    cost = flats.reduce((r, flat) => r + flat, cost);\\\\\\\\n    cost = Math.max(1, cost);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Set Cost Limits\\\\\\\\nif (note.match(/<MP COST MAX:[ ](\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    cost = Math.min(cost, Number(RegExp.$1));\\\\\\\\n}\\\\\\\\nif (note.match(/<MP COST MIN:[ ](\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    cost = Math.max(cost, Number(RegExp.$1));\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Return cost value\\\\\\\\nreturn Math.round(Math.max(0, cost));\\\\\\\"\\\",\\\"CanPayJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Return Boolean\\\\\\\\nreturn user._mp >= cost;\\\\\\\"\\\",\\\"PayJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Process Payment\\\\\\\\nuser._mp -= cost;\\\\\\\"\\\",\\\"Windows\\\":\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Return Boolean\\\\\\\\nreturn cost > 0;\\\\\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\nconst settings = arguments[2];\\\\\\\\nconst fontSize = settings.FontSize;\\\\\\\\nconst color = settings.FontColor;\\\\\\\\nconst name = TextManager.mp;\\\\\\\\nconst icon = settings.Icon;\\\\\\\\nlet text = '';\\\\\\\\n\\\\\\\\n// Text: Change Font Size\\\\\\\\ntext += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\FS[%1]'.format(fontSize);\\\\\\\\n\\\\\\\\n// Text: Add Color\\\\\\\\nif (color.match(/#(.*)/i) && Imported.VisuMZ_1_MessageCore) {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\HexColor<#%1>'.format(String(RegExp.$1));\\\\\\\\n} else {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\C[%1]'.format(color);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Text: Add Cost\\\\\\\\ntext += '%1 %2'.format(cost, name);\\\\\\\\n\\\\\\\\n// Text: Add Icon\\\\\\\\nif (icon  > 0) {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\I[%1]'.format(icon);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Return text\\\\\\\\nreturn text;\\\\\\\"\\\",\\\"Gauges\\\":\\\"\\\",\\\"GaugeMaxJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Return value\\\\\\\\nreturn user.mmp;\\\\\\\"\\\",\\\"GaugeCurrentJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Return value\\\\\\\\nreturn user.mp;\\\\\\\"\\\",\\\"GaugeDrawJS:func\\\":\\\"\\\\\\\"// Declare Settings\\\\\\\\nconst color1 = ColorManager.mpGaugeColor1();\\\\\\\\nconst color2 = ColorManager.mpGaugeColor2();\\\\\\\\nconst label = TextManager.mpA;\\\\\\\\n\\\\\\\\n// Declare Variables\\\\\\\\nconst sprite = this;\\\\\\\\nconst settings = sprite._costSettings;\\\\\\\\nconst bitmap = sprite.bitmap;\\\\\\\\nconst user = sprite._battler;\\\\\\\\nconst currentValue = sprite.currentDisplayedValue();\\\\\\\\nconst bitmapWidth = sprite.bitmapWidth();\\\\\\\\nconst bitmapHeight = sprite.textHeight ? sprite.textHeight() : sprite.bitmapHeight();\\\\\\\\nconst gaugeHeight = sprite.gaugeHeight();\\\\\\\\n\\\\\\\\n// Draw Gauge\\\\\\\\nconst gx = 0;\\\\\\\\nconst gy = bitmapHeight - gaugeHeight;\\\\\\\\nconst gw = bitmapWidth - gx;\\\\\\\\nconst gh = gaugeHeight;\\\\\\\\nthis.drawFullGauge(color1, color2, gx, gy, gw, gh);\\\\\\\\n\\\\\\\\n// Draw Label\\\\\\\\nconst lx = 4;\\\\\\\\nconst ly = 0;\\\\\\\\nconst lw = bitmapWidth;\\\\\\\\nconst lh = bitmapHeight;\\\\\\\\nsprite.setupLabelFont();\\\\\\\\nbitmap.paintOpacity = 255;\\\\\\\\nbitmap.drawText(label, lx, ly, lw, lh, \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n// Draw Value\\\\\\\\nconst vw = bitmapWidth - 2;\\\\\\\\nconst vh = bitmapHeight;\\\\\\\\nsprite.setupValueFont();\\\\\\\\nbitmap.textColor = ColorManager.mpColor(user);\\\\\\\\nbitmap.drawText(currentValue, 0, 0, vw, vh, \\\\\\\\\\\\\\\"right\\\\\\\\\\\\\\\");\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"TP\\\",\\\"Settings\\\":\\\"\\\",\\\"Icon:num\\\":\\\"0\\\",\\\"FontColor:str\\\":\\\"29\\\",\\\"FontSize:num\\\":\\\"22\\\",\\\"Cost\\\":\\\"\\\",\\\"CalcJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nlet cost = 0;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nconst note = skill.note;\\\\\\\\ncost = skill.tpCost;\\\\\\\\nif (note.match(/<TP COST:[ ](\\\\\\\\\\\\\\\\d+)([%％])>/i)) {\\\\\\\\n    cost += Math.ceil(Number(RegExp.$1) * user.maxTp() / 100);\\\\\\\\n}\\\\\\\\nif (note.match(/<JS TP COST>\\\\\\\\\\\\\\\\s*([\\\\\\\\\\\\\\\\s\\\\\\\\\\\\\\\\S]*)\\\\\\\\\\\\\\\\s*<\\\\\\\\\\\\\\\\/JS TP COST>/i)) {\\\\\\\\n    const code = String(RegExp.$1);\\\\\\\\n    eval(code);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Apply Trait Cost Alterations\\\\\\\\nif (cost > 0) {\\\\\\\\n    const rateNote = /<TP COST:[ ](\\\\\\\\\\\\\\\\d+\\\\\\\\\\\\\\\\.?\\\\\\\\\\\\\\\\d*)([%％])>/i;\\\\\\\\n    const rates = user.traitObjects().map((obj) => (obj && obj.note.match(rateNote) ? Number(RegExp.$1) / 100 : 1));\\\\\\\\n    const flatNote = /<TP COST:[ ]([\\\\\\\\\\\\\\\\+\\\\\\\\\\\\\\\\-]\\\\\\\\\\\\\\\\d+)>/i;\\\\\\\\n    const flats = user.traitObjects().map((obj) => (obj && obj.note.match(flatNote) ? Number(RegExp.$1) : 0));\\\\\\\\n    cost = rates.reduce((r, rate) => r * rate, cost);\\\\\\\\n    cost = flats.reduce((r, flat) => r + flat, cost);\\\\\\\\n    cost = Math.max(1, cost);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Set Cost Limits\\\\\\\\nif (note.match(/<TP COST MAX:[ ](\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    cost = Math.min(cost, Number(RegExp.$1));\\\\\\\\n}\\\\\\\\nif (note.match(/<TP COST MIN:[ ](\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    cost = Math.max(cost, Number(RegExp.$1));\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Return cost value\\\\\\\\nreturn Math.round(Math.max(0, cost));\\\\\\\"\\\",\\\"CanPayJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Return Boolean\\\\\\\\nreturn user._tp >= cost;\\\\\\\"\\\",\\\"PayJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Process Payment\\\\\\\\nuser._tp -= cost;\\\\\\\"\\\",\\\"Windows\\\":\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Return Boolean\\\\\\\\nreturn cost > 0;\\\\\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\nconst settings = arguments[2];\\\\\\\\nconst fontSize = settings.FontSize;\\\\\\\\nconst color = settings.FontColor;\\\\\\\\nconst name = TextManager.tp;\\\\\\\\nconst icon = settings.Icon;\\\\\\\\nlet text = '';\\\\\\\\n\\\\\\\\n// Text: Change Font Size\\\\\\\\ntext += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\FS[%1]'.format(fontSize);\\\\\\\\n\\\\\\\\n// Text: Add Color\\\\\\\\nif (color.match(/#(.*)/i) && Imported.VisuMZ_1_MessageCore) {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\HexColor<#%1>'.format(String(RegExp.$1));\\\\\\\\n} else {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\C[%1]'.format(color);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Text: Add Cost\\\\\\\\ntext += '%1 %2'.format(cost, name);\\\\\\\\n\\\\\\\\n// Text: Add Icon\\\\\\\\nif (icon  > 0) {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\I[%1]'.format(icon);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Return text\\\\\\\\nreturn text;\\\\\\\"\\\",\\\"Gauges\\\":\\\"\\\",\\\"GaugeMaxJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Return value\\\\\\\\nreturn user.maxTp();\\\\\\\"\\\",\\\"GaugeCurrentJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Return value\\\\\\\\nreturn user.tp;\\\\\\\"\\\",\\\"GaugeDrawJS:func\\\":\\\"\\\\\\\"// Declare Settings\\\\\\\\nconst color1 = ColorManager.tpGaugeColor1();\\\\\\\\nconst color2 = ColorManager.tpGaugeColor2();\\\\\\\\nconst label = TextManager.tpA;\\\\\\\\n\\\\\\\\n// Declare Variables\\\\\\\\nconst sprite = this;\\\\\\\\nconst settings = sprite._costSettings;\\\\\\\\nconst bitmap = sprite.bitmap;\\\\\\\\nconst user = sprite._battler;\\\\\\\\nconst currentValue = sprite.currentDisplayedValue();\\\\\\\\nconst bitmapWidth = sprite.bitmapWidth();\\\\\\\\nconst bitmapHeight = sprite.textHeight ? sprite.textHeight() : sprite.bitmapHeight();\\\\\\\\nconst gaugeHeight = sprite.gaugeHeight();\\\\\\\\n\\\\\\\\n// Draw Gauge\\\\\\\\nconst gx = 0;\\\\\\\\nconst gy = bitmapHeight - gaugeHeight;\\\\\\\\nconst gw = bitmapWidth - gx;\\\\\\\\nconst gh = gaugeHeight;\\\\\\\\nthis.drawFullGauge(color1, color2, gx, gy, gw, gh);\\\\\\\\n\\\\\\\\n// Draw Label\\\\\\\\nconst lx = 4;\\\\\\\\nconst ly = 0;\\\\\\\\nconst lw = bitmapWidth;\\\\\\\\nconst lh = bitmapHeight;\\\\\\\\nsprite.setupLabelFont();\\\\\\\\nbitmap.paintOpacity = 255;\\\\\\\\nbitmap.drawText(label, lx, ly, lw, lh, \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n// Draw Value\\\\\\\\nconst vw = bitmapWidth - 2;\\\\\\\\nconst vh = bitmapHeight;\\\\\\\\nsprite.setupValueFont();\\\\\\\\nbitmap.textColor = ColorManager.tpColor(user);\\\\\\\\nbitmap.drawText(currentValue, 0, 0, vw, vh, \\\\\\\\\\\\\\\"right\\\\\\\\\\\\\\\");\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"Gold\\\",\\\"Settings\\\":\\\"\\\",\\\"Icon:num\\\":\\\"0\\\",\\\"FontColor:str\\\":\\\"17\\\",\\\"FontSize:num\\\":\\\"22\\\",\\\"Cost\\\":\\\"\\\",\\\"CalcJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nlet cost = 0;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nconst note = skill.note;\\\\\\\\nif (note.match(/<GOLD COST:[ ](\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    cost += Number(RegExp.$1);\\\\\\\\n}\\\\\\\\nif (note.match(/<GOLD COST:[ ](\\\\\\\\\\\\\\\\d+)([%％])>/i)) {\\\\\\\\n    cost += Math.ceil(Number(RegExp.$1) * $gameParty.gold() / 100);\\\\\\\\n}\\\\\\\\nif (note.match(/<JS GOLD COST>\\\\\\\\\\\\\\\\s*([\\\\\\\\\\\\\\\\s\\\\\\\\\\\\\\\\S]*)\\\\\\\\\\\\\\\\s*<\\\\\\\\\\\\\\\\/JS GOLD COST>/i)) {\\\\\\\\n    const code = String(RegExp.$1);\\\\\\\\n    eval(code);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Apply Trait Cost Alterations\\\\\\\\nif (cost > 0) {\\\\\\\\n    const rateNote = /<GOLD COST:[ ](\\\\\\\\\\\\\\\\d+\\\\\\\\\\\\\\\\.?\\\\\\\\\\\\\\\\d*)([%％])>/i;\\\\\\\\n    const rates = user.traitObjects().map((obj) => (obj && obj.note.match(rateNote) ? Number(RegExp.$1) / 100 : 1));\\\\\\\\n    const flatNote = /<GOLD COST:[ ]([\\\\\\\\\\\\\\\\+\\\\\\\\\\\\\\\\-]\\\\\\\\\\\\\\\\d+)>/i;\\\\\\\\n    const flats = user.traitObjects().map((obj) => (obj && obj.note.match(flatNote) ? Number(RegExp.$1) : 0));\\\\\\\\n    cost = rates.reduce((r, rate) => r * rate, cost);\\\\\\\\n    cost = flats.reduce((r, flat) => r + flat, cost);\\\\\\\\n    cost = Math.max(1, cost);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Set Cost Limits\\\\\\\\nif (note.match(/<GOLD COST MAX:[ ](\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    cost = Math.min(cost, Number(RegExp.$1));\\\\\\\\n}\\\\\\\\nif (note.match(/<GOLD COST MIN:[ ](\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    cost = Math.max(cost, Number(RegExp.$1));\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Return cost value\\\\\\\\nreturn Math.round(Math.max(0, cost));\\\\\\\"\\\",\\\"CanPayJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Return Boolean\\\\\\\\nreturn $gameParty.gold() >= cost;\\\\\\\"\\\",\\\"PayJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Process Payment\\\\\\\\n$gameParty.loseGold(cost);\\\\\\\"\\\",\\\"Windows\\\":\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Return Boolean\\\\\\\\nreturn cost > 0;\\\\\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\nconst settings = arguments[2];\\\\\\\\nconst fontSize = settings.FontSize;\\\\\\\\nconst color = settings.FontColor;\\\\\\\\nconst name = TextManager.currencyUnit;\\\\\\\\nconst icon = settings.Icon;\\\\\\\\nlet text = '';\\\\\\\\n\\\\\\\\n// Text: Change Font Size\\\\\\\\ntext += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\FS[%1]'.format(fontSize);\\\\\\\\n\\\\\\\\n// Text: Add Color\\\\\\\\nif (color.match(/#(.*)/i) && Imported.VisuMZ_1_MessageCore) {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\HexColor<#%1>'.format(String(RegExp.$1));\\\\\\\\n} else {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\C[%1]'.format(color);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Text: Add Cost\\\\\\\\ntext += '%1 %2'.format(cost, name);\\\\\\\\n\\\\\\\\n// Text: Add Icon\\\\\\\\nif (icon  > 0) {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\I[%1]'.format(icon);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Return text\\\\\\\\nreturn text;\\\\\\\"\\\",\\\"Gauges\\\":\\\"\\\",\\\"GaugeMaxJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Return value\\\\\\\\nreturn $gameParty.maxGold();\\\\\\\"\\\",\\\"GaugeCurrentJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Return value\\\\\\\\nreturn $gameParty.gold();\\\\\\\"\\\",\\\"GaugeDrawJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst sprite = this;\\\\\\\\nconst settings = sprite._costSettings;\\\\\\\\nconst bitmap = sprite.bitmap;\\\\\\\\nconst user = sprite._battler;\\\\\\\\nconst currentValue = sprite.currentDisplayedValue();\\\\\\\\n\\\\\\\\n// Draw Label\\\\\\\\nconst label = TextManager.currencyUnit;\\\\\\\\nconst lx = 4;\\\\\\\\nconst ly = 0;\\\\\\\\nconst lw = sprite.bitmapWidth();\\\\\\\\nconst lh = sprite.bitmapHeight();\\\\\\\\nsprite.setupLabelFont();\\\\\\\\nbitmap.paintOpacity = 255;\\\\\\\\nbitmap.drawText(label, lx, ly, lw, lh, \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\");\\\\\\\\n\\\\\\\\n// Draw Value\\\\\\\\nconst vw = sprite.bitmapWidth() - 2;\\\\\\\\nconst vh = sprite.bitmapHeight();\\\\\\\\nsprite.setupValueFont();\\\\\\\\nbitmap.textColor = ColorManager.normalColor();\\\\\\\\nbitmap.drawText(currentValue, 0, 0, vw, vh, \\\\\\\\\\\\\\\"right\\\\\\\\\\\\\\\");\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"Potion\\\",\\\"Settings\\\":\\\"\\\",\\\"Icon:num\\\":\\\"176\\\",\\\"FontColor:str\\\":\\\"0\\\",\\\"FontSize:num\\\":\\\"22\\\",\\\"Cost\\\":\\\"\\\",\\\"CalcJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nlet cost = 0;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nconst note = skill.note;\\\\\\\\nif (note.match(/<POTION COST:[ ](\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    cost += Number(RegExp.$1);\\\\\\\\n}\\\\\\\\nif (note.match(/<JS POTION COST>\\\\\\\\\\\\\\\\s*([\\\\\\\\\\\\\\\\s\\\\\\\\\\\\\\\\S]*)\\\\\\\\\\\\\\\\s*<\\\\\\\\\\\\\\\\/JS POTION COST>/i)) {\\\\\\\\n    const code = String(RegExp.$1);\\\\\\\\n    eval(code);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Apply Trait Cost Alterations\\\\\\\\nif (cost > 0) {\\\\\\\\n    const rateNote = /<POTION COST:[ ](\\\\\\\\\\\\\\\\d+\\\\\\\\\\\\\\\\.?\\\\\\\\\\\\\\\\d*)([%％])>/i;\\\\\\\\n    const rates = user.traitObjects().map((obj) => (obj && obj.note.match(rateNote) ? Number(RegExp.$1) / 100 : 1));\\\\\\\\n    const flatNote = /<POTION COST:[ ]([\\\\\\\\\\\\\\\\+\\\\\\\\\\\\\\\\-]\\\\\\\\\\\\\\\\d+)>/i;\\\\\\\\n    const flats = user.traitObjects().map((obj) => (obj && obj.note.match(flatNote) ? Number(RegExp.$1) : 0));\\\\\\\\n    cost = rates.reduce((r, rate) => r * rate, cost);\\\\\\\\n    cost = flats.reduce((r, flat) => r + flat, cost);\\\\\\\\n    cost = Math.max(1, cost);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Set Cost Limits\\\\\\\\nif (note.match(/<POTION COST MAX:[ ](\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    cost = Math.min(cost, Number(RegExp.$1));\\\\\\\\n}\\\\\\\\nif (note.match(/<POTION COST MIN:[ ](\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    cost = Math.max(cost, Number(RegExp.$1));\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Return cost value\\\\\\\\nreturn Math.round(Math.max(0, cost));\\\\\\\"\\\",\\\"CanPayJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\nconst item = $dataItems[7];\\\\\\\\n\\\\\\\\n// Return Boolean\\\\\\\\nif (user.isActor() && cost > 0) {\\\\\\\\n    return $gameParty.numItems(item) >= cost;\\\\\\\\n} else {\\\\\\\\n    return true;\\\\\\\\n}\\\\\\\"\\\",\\\"PayJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\nconst item = $dataItems[7];\\\\\\\\n\\\\\\\\n// Process Payment\\\\\\\\nif (user.isActor()) {\\\\\\\\n    $gameParty.loseItem(item, cost);\\\\\\\\n}\\\\\\\"\\\",\\\"Windows\\\":\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Return Boolean\\\\\\\\nreturn cost > 0;\\\\\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst item = $dataItems[7];\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\nconst settings = arguments[2];\\\\\\\\nconst fontSize = settings.FontSize;\\\\\\\\nconst color = settings.FontColor;\\\\\\\\nconst name = settings.Name;\\\\\\\\nconst icon = settings.Icon;\\\\\\\\nlet text = '';\\\\\\\\n\\\\\\\\n// Text: Change Font Size\\\\\\\\ntext += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\FS[%1]'.format(fontSize);\\\\\\\\n\\\\\\\\n// Text: Add Color\\\\\\\\nif (color.match(/#(.*)/i) && Imported.VisuMZ_1_MessageCore) {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\HexColor<#%1>'.format(String(RegExp.$1));\\\\\\\\n} else {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\C[%1]'.format(color);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Text: Add Cost\\\\\\\\ntext += '×%1'.format(cost);\\\\\\\\n\\\\\\\\n// Text: Add Icon\\\\\\\\ntext += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\I[%1]'.format(item.iconIndex);\\\\\\\\n\\\\\\\\n// Return text\\\\\\\\nreturn text;\\\\\\\"\\\",\\\"Gauges\\\":\\\"\\\",\\\"GaugeMaxJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst item = $dataItems[7];\\\\\\\\n\\\\\\\\n// Return value\\\\\\\\nreturn $gameParty.maxItems(item);\\\\\\\"\\\",\\\"GaugeCurrentJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst item = $dataItems[7];\\\\\\\\n\\\\\\\\n// Return value\\\\\\\\nreturn $gameParty.numItems(item);\\\\\\\"\\\",\\\"GaugeDrawJS:func\\\":\\\"\\\\\\\"// Declare Settings\\\\\\\\nconst color1 = ColorManager.textColor(30);\\\\\\\\nconst color2 = ColorManager.textColor(31);\\\\\\\\n\\\\\\\\n// Declare Variables\\\\\\\\nconst sprite = this;\\\\\\\\nconst settings = sprite._costSettings;\\\\\\\\nconst bitmap = sprite.bitmap;\\\\\\\\nconst user = sprite._battler;\\\\\\\\nconst item = $dataItems[7];\\\\\\\\nconst currentValue = sprite.currentDisplayedValue();\\\\\\\\nconst bitmapWidth = sprite.bitmapWidth();\\\\\\\\nconst bitmapHeight = sprite.textHeight ? sprite.textHeight() : sprite.bitmapHeight();\\\\\\\\nconst gaugeHeight = sprite.gaugeHeight();\\\\\\\\n\\\\\\\\n// Draw Gauge\\\\\\\\nconst gx = 0;\\\\\\\\nconst gy = bitmapHeight - gaugeHeight;\\\\\\\\nconst gw = bitmapWidth - gx;\\\\\\\\nconst gh = gaugeHeight;\\\\\\\\nthis.drawFullGauge(color1, color2, gx, gy, gw, gh);\\\\\\\\n\\\\\\\\n// Draw Icon\\\\\\\\nconst iconIndex = item.iconIndex;\\\\\\\\nconst iconBitmap = ImageManager.loadSystem(\\\\\\\\\\\\\\\"IconSet\\\\\\\\\\\\\\\");\\\\\\\\nconst pw = ImageManager.iconWidth;\\\\\\\\nconst ph = ImageManager.iconHeight;\\\\\\\\nconst sx = (iconIndex % 16) * pw;\\\\\\\\nconst sy = Math.floor(iconIndex / 16) * ph;\\\\\\\\nbitmap.blt(iconBitmap, sx, sy, pw, ph, 0, 0, 24, 24);\\\\\\\\n\\\\\\\\n// Draw Value\\\\\\\\nconst vw = bitmapWidth - 2;\\\\\\\\nconst vh = bitmapHeight;\\\\\\\\nsprite.setupValueFont();\\\\\\\\nbitmap.textColor = ColorManager.normalColor();\\\\\\\\nbitmap.drawText(currentValue, 0, 0, vw, vh, \\\\\\\\\\\\\\\"right\\\\\\\\\\\\\\\");\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"Item Cost\\\",\\\"Settings\\\":\\\"\\\",\\\"Icon:num\\\":\\\"0\\\",\\\"FontColor:str\\\":\\\"0\\\",\\\"FontSize:num\\\":\\\"22\\\",\\\"Cost\\\":\\\"\\\",\\\"CalcJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nlet cost = 0;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\nconst note = skill.note;\\\\\\\\ncost = {\\\\\\\\n    items: {},\\\\\\\\n    weapons: {},\\\\\\\\n    armors: {},\\\\\\\\n};\\\\\\\\n\\\\\\\\n// Gather Cost Notetags\\\\\\\\n{ // Item Costs\\\\\\\\n    const notetag = /<ITEM COST:[ ](\\\\\\\\\\\\\\\\d+)[ ](.*)>/gi;\\\\\\\\n    const matches = note.match(notetag);\\\\\\\\n    if (matches) {\\\\\\\\n        for (const currentMatch of matches) {\\\\\\\\n            currentMatch.match(notetag);\\\\\\\\n            const amount = Number(RegExp.$1);\\\\\\\\n            const name = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n            const entry = $dataItems.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n            if (entry) {\\\\\\\\n                cost.items[entry.id] = amount;\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n{ // Weapon Costs\\\\\\\\n    const notetag = /<WEAPON COST:[ ](\\\\\\\\\\\\\\\\d+)[ ](.*)>/gi;\\\\\\\\n    const matches = note.match(notetag);\\\\\\\\n    if (matches) {\\\\\\\\n        for (const currentMatch of matches) {\\\\\\\\n            currentMatch.match(notetag);\\\\\\\\n            const amount = Number(RegExp.$1);\\\\\\\\n            const name = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n            const entry = $dataWeapons.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n            if (entry) {\\\\\\\\n                cost.weapons[entry.id] = amount;\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n{ // Armor Costs\\\\\\\\n    const notetag = /<ARMOR COST:[ ](\\\\\\\\\\\\\\\\d+)[ ](.*)>/gi;\\\\\\\\n    const matches = note.match(notetag);\\\\\\\\n    if (matches) {\\\\\\\\n        for (const currentMatch of matches) {\\\\\\\\n            currentMatch.match(notetag);\\\\\\\\n            const amount = Number(RegExp.$1);\\\\\\\\n            const name = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n            const entry = $dataArmors.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n            if (entry) {\\\\\\\\n                cost.armors[entry.id] = amount;\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Declare Trait Objects\\\\\\\\nconst traitObjects = user.traitObjects();\\\\\\\\n\\\\\\\\n// Apply Cost Rate Modifiers\\\\\\\\nfor (const traitObject of traitObjects) {\\\\\\\\n    if (!traitObject) continue;\\\\\\\\n    const objNote = traitObject.note || '';\\\\\\\\n    { // Item Cost Rate Modifiers\\\\\\\\n        const notetag = /<ITEM COST:[ ](\\\\\\\\\\\\\\\\d+)([%％])[ ](.*)>/gi;\\\\\\\\n        const matches = objNote.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const rate = Number(RegExp.$1) * 0.01;\\\\\\\\n                const name = String(RegExp.$3).toUpperCase().trim();\\\\\\\\n                const entry = $dataItems.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n                if (entry && cost.items[entry.id]) {\\\\\\\\n                    cost.items[entry.id] = Math.ceil(cost.items[entry.id] * rate);\\\\\\\\n                    if (cost.items[entry.id] <= 0) cost.items[entry.id] = 0;\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n    { // Weapon Cost Rate Modifiers\\\\\\\\n        const notetag = /<WEAPON COST:[ ](\\\\\\\\\\\\\\\\d+)([%％])[ ](.*)>/gi;\\\\\\\\n        const matches = objNote.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const rate = Number(RegExp.$1) * 0.01;\\\\\\\\n                const name = String(RegExp.$3).toUpperCase().trim();\\\\\\\\n                const entry = $dataWeapons.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n                if (entry && cost.weapons[entry.id]) {\\\\\\\\n                    cost.weapons[entry.id] = Math.ceil(cost.weapons[entry.id] * rate);\\\\\\\\n                    if (cost.weapons[entry.id] <= 0) cost.weapons[entry.id] = 0;\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n    { // Armor Cost Rate Modifiers\\\\\\\\n        const notetag = /<ARMOR COST:[ ](\\\\\\\\\\\\\\\\d+)([%％])[ ](.*)>/gi;\\\\\\\\n        const matches = objNote.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const rate = Number(RegExp.$1) * 0.01;\\\\\\\\n                const name = String(RegExp.$3).toUpperCase().trim();\\\\\\\\n                const entry = $dataArmors.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n                if (entry && cost.armors[entry.id]) {\\\\\\\\n                    cost.armors[entry.id] = Math.ceil(cost.armors[entry.id] * rate);\\\\\\\\n                    if (cost.armors[entry.id] <= 0) cost.armors[entry.id] = 0;\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Apply Flat Cost Modifiers\\\\\\\\nfor (const traitObject of traitObjects) {\\\\\\\\n    if (!traitObject) continue;\\\\\\\\n    const objNote = traitObject.note || '';\\\\\\\\n    { // Item Flat Cost Modifiers\\\\\\\\n        const notetag = /<ITEM COST:[ ]([\\\\\\\\\\\\\\\\+\\\\\\\\\\\\\\\\-]\\\\\\\\\\\\\\\\d+)[ ](.*)>/gi;\\\\\\\\n        const matches = objNote.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const flat = Number(RegExp.$1);\\\\\\\\n                const name = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n                const entry = $dataItems.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n                if (entry && cost.items[entry.id]) {\\\\\\\\n                    cost.items[entry.id] += flat;\\\\\\\\n                    if (cost.items[entry.id] <= 0) cost.items[entry.id] = 0;\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n    { // Weapon Flat Cost Modifiers\\\\\\\\n        const notetag = /<WEAPON COST:[ ]([\\\\\\\\\\\\\\\\+\\\\\\\\\\\\\\\\-]\\\\\\\\\\\\\\\\d+)[ ](.*)>/gi;\\\\\\\\n        const matches = objNote.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const flat = Number(RegExp.$1);\\\\\\\\n                const name = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n                const entry = $dataWeapons.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n                if (entry && cost.weapons[entry.id]) {\\\\\\\\n                    cost.weapons[entry.id] += flat;\\\\\\\\n                    if (cost.weapons[entry.id] <= 0) cost.weapons[entry.id] = 0;\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n    { // Armor Flat Cost Modifiers\\\\\\\\n        const notetag = /<ARMOR COST:[ ]([\\\\\\\\\\\\\\\\+\\\\\\\\\\\\\\\\-]\\\\\\\\\\\\\\\\d+)[ ](.*)>/gi;\\\\\\\\n        const matches = objNote.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const flat = Number(RegExp.$1);\\\\\\\\n                const name = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n                const entry = $dataArmors.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n                if (entry && cost.armors[entry.id]) {\\\\\\\\n                    cost.armors[entry.id] += flat;\\\\\\\\n                    if (cost.armors[entry.id] <= 0) cost.armors[entry.id] = 0;\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Set Cost Limits\\\\\\\\n{ // Item Cost Limits\\\\\\\\n    { // Maximum Cost\\\\\\\\n        const notetag = /<ITEM COST MAX:[ ](\\\\\\\\\\\\\\\\d+)[ ](.*)>/gi;\\\\\\\\n        const matches = note.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const max = Number(RegExp.$1);\\\\\\\\n                const name = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n                const entry = $dataItems.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n                if (entry && cost.items[entry.id] !== undefined) {\\\\\\\\n                    cost.items[entry.id] = Math.min(max, cost.items[entry.id]);\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n    { // Minimum Cost\\\\\\\\n        const notetag = /<ITEM COST MIN:[ ](\\\\\\\\\\\\\\\\d+)[ ](.*)>/gi;\\\\\\\\n        const matches = note.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const min = Number(RegExp.$1);\\\\\\\\n                const name = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n                const entry = $dataItems.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n                if (entry && cost.items[entry.id] !== undefined) {\\\\\\\\n                    cost.items[entry.id] = Math.max(min, cost.items[entry.id]);\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n{ // Weapon Cost Limits\\\\\\\\n    { // Maximum Cost\\\\\\\\n        const notetag = /<WEAPON COST MAX:[ ](\\\\\\\\\\\\\\\\d+)[ ](.*)>/gi;\\\\\\\\n        const matches = note.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const max = Number(RegExp.$1);\\\\\\\\n                const name = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n                const entry = $dataWeapons.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n                if (entry && cost.weapons[entry.id] !== undefined) {\\\\\\\\n                    cost.weapons[entry.id] = Math.min(max, cost.weapons[entry.id]);\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n    { // Minimum Cost\\\\\\\\n        const notetag = /<WEAPON COST MIN:[ ](\\\\\\\\\\\\\\\\d+)[ ](.*)>/gi;\\\\\\\\n        const matches = note.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const min = Number(RegExp.$1);\\\\\\\\n                const name = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n                const entry = $dataWeapons.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n                if (entry && cost.weapons[entry.id] !== undefined) {\\\\\\\\n                    cost.weapons[entry.id] = Math.max(min, cost.weapons[entry.id]);\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n{ // Armor Cost Limits\\\\\\\\n    { // Maximum Cost\\\\\\\\n        const notetag = /<ARMOR COST MAX:[ ](\\\\\\\\\\\\\\\\d+)[ ](.*)>/gi;\\\\\\\\n        const matches = note.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const max = Number(RegExp.$1);\\\\\\\\n                const name = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n                const entry = $dataArmors.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n                if (entry && cost.armors[entry.id] !== undefined) {\\\\\\\\n                    cost.armors[entry.id] = Math.min(max, cost.armors[entry.id]);\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n    { // Minimum Cost\\\\\\\\n        const notetag = /<ARMOR COST MIN:[ ](\\\\\\\\\\\\\\\\d+)[ ](.*)>/gi;\\\\\\\\n        const matches = note.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const min = Number(RegExp.$1);\\\\\\\\n                const name = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n                const entry = $dataArmors.find(obj => obj && obj.name.toUpperCase().trim() === name);\\\\\\\\n                if (entry && cost.armors[entry.id] !== undefined) {\\\\\\\\n                    cost.armors[entry.id] = Math.max(min, cost.armors[entry.id]);\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Apply Replacement Costs\\\\\\\\nfor (const traitObject of traitObjects) {\\\\\\\\n    if (!traitObject) continue;\\\\\\\\n    const objNote = traitObject.note || '';\\\\\\\\n    { // Item Replacement Costs\\\\\\\\n        const notetag = /<REPLACE ITEM (.*) COST:[ ](.*)>/gi;\\\\\\\\n        const matches = objNote.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const name1 = String(RegExp.$1).toUpperCase().trim();\\\\\\\\n                const name2 = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n                const entry1 = $dataItems.find(obj => obj && obj.name.toUpperCase().trim() === name1);\\\\\\\\n                const entry2 = $dataItems.find(obj => obj && obj.name.toUpperCase().trim() === name2);\\\\\\\\n                if (entry1 && entry2 && cost.items[entry1.id]) {\\\\\\\\n                    cost.items[entry2.id] = cost.items[entry1.id];\\\\\\\\n                    delete cost.items[entry1.id];\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n    { // Weapon Replacement Costs\\\\\\\\n        const notetag = /<REPLACE WEAPON (.*) COST:[ ](.*)>/gi;\\\\\\\\n        const matches = objNote.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const name1 = String(RegExp.$1).toUpperCase().trim();\\\\\\\\n                const name2 = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n                const entry1 = $dataWeapons.find(obj => obj && obj.name.toUpperCase().trim() === name1);\\\\\\\\n                const entry2 = $dataWeapons.find(obj => obj && obj.name.toUpperCase().trim() === name2);\\\\\\\\n                if (entry1 && entry2 && cost.weapons[entry1.id]) {\\\\\\\\n                    cost.weapons[entry2.id] = cost.weapons[entry1.id];\\\\\\\\n                    delete cost.items[entry1.id];\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n    { // Armor Replacement Costs\\\\\\\\n        const notetag = /<REPLACE ARMOR (.*) COST:[ ](.*)>/gi;\\\\\\\\n        const matches = objNote.match(notetag);\\\\\\\\n        if (matches) {\\\\\\\\n            for (const currentMatch of matches) {\\\\\\\\n                currentMatch.match(notetag);\\\\\\\\n                const name1 = String(RegExp.$1).toUpperCase().trim();\\\\\\\\n                const name2 = String(RegExp.$2).toUpperCase().trim();\\\\\\\\n                const entry1 = $dataArmors.find(obj => obj && obj.name.toUpperCase().trim() === name1);\\\\\\\\n                const entry2 = $dataArmors.find(obj => obj && obj.name.toUpperCase().trim() === name2);\\\\\\\\n                if (entry1 && entry2 && cost.armors[entry1.id]) {\\\\\\\\n                    cost.armors[entry2.id] = cost.armors[entry1.id];\\\\\\\\n                    delete cost.items[entry1.id];\\\\\\\\n                }\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Return cost data\\\\\\\\nreturn cost;\\\\\\\"\\\",\\\"CanPayJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Check Individual Costs\\\\\\\\n{ // Check Item Costs\\\\\\\\n    for (let id in cost.items) {\\\\\\\\n        const obj = $dataItems[id];\\\\\\\\n        if (obj) {\\\\\\\\n            const costAmount = cost.items[id];\\\\\\\\n            const ownedAmount = $gameParty.numItems(obj);\\\\\\\\n            if (costAmount > ownedAmount) return false;\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n{ // Check Weapon Costs\\\\\\\\n    for (let id in cost.weapons) {\\\\\\\\n        const obj = $dataWeapons[id];\\\\\\\\n        if (obj) {\\\\\\\\n            const costAmount = cost.weapons[id];\\\\\\\\n            const ownedAmount = $gameParty.numItems(obj);\\\\\\\\n            if (costAmount > ownedAmount) return false;\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n{ // Check Armor Costs\\\\\\\\n    for (let id in cost.armors) {\\\\\\\\n        const obj = $dataArmors[id];\\\\\\\\n        if (obj) {\\\\\\\\n            const costAmount = cost.armors[id];\\\\\\\\n            const ownedAmount = $gameParty.numItems(obj);\\\\\\\\n            if (costAmount > ownedAmount) return false;\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Return True\\\\\\\\nreturn true;\\\\\\\"\\\",\\\"PayJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Process Payment\\\\\\\\n{ // Check Item Costs\\\\\\\\n    for (let id in cost.items) {\\\\\\\\n        const obj = $dataItems[id];\\\\\\\\n        if (obj && obj.consumable) {\\\\\\\\n            if (obj.itypeId !== 2) {\\\\\\\\n                const costAmount = cost.items[id];\\\\\\\\n                $gameParty.loseItem(obj, costAmount);\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n{ // Check Weapon Costs\\\\\\\\n    for (let id in cost.weapons) {\\\\\\\\n        const obj = $dataWeapons[id];\\\\\\\\n        if (obj) {\\\\\\\\n            const costAmount = cost.weapons[id];\\\\\\\\n            $gameParty.loseItem(obj, costAmount);\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n{ // Check Armor Costs\\\\\\\\n    for (let id in cost.armors) {\\\\\\\\n        const obj = $dataArmors[id];\\\\\\\\n        if (obj) {\\\\\\\\n            const costAmount = cost.armors[id];\\\\\\\\n            $gameParty.loseItem(obj, costAmount);\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n}\\\\\\\"\\\",\\\"Windows\\\":\\\"\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\n\\\\\\\\n// Check Keys\\\\\\\\nconst keys = ['items', 'weapons', 'armors'];\\\\\\\\n\\\\\\\\n// Return False\\\\\\\\nreturn keys.some(key => Object.keys(cost[key]).length > 0);\\\\\\\"\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\nconst skill = arguments[0];\\\\\\\\nconst cost = arguments[1];\\\\\\\\nconst settings = arguments[2];\\\\\\\\nconst fontSize = settings.FontSize;\\\\\\\\nconst color = settings.FontColor;\\\\\\\\nconst name = settings.Name;\\\\\\\\nconst icon = settings.Icon;\\\\\\\\nconst keys = ['items', 'weapons', 'armors'];\\\\\\\\nlet text = '';\\\\\\\\n\\\\\\\\n// Text: Change Font Size\\\\\\\\ntext += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\FS[%1]'.format(fontSize);\\\\\\\\n\\\\\\\\n// Text: Add Color\\\\\\\\nif (color.match(/#(.*)/i) && Imported.VisuMZ_1_MessageCore) {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\HexColor<#%1>'.format(String(RegExp.$1));\\\\\\\\n} else {\\\\\\\\n    text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\C[%1]'.format(color);\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Text: Add Cost\\\\\\\\nfor (const key of keys) {\\\\\\\\n    const database = [$dataItems, $dataWeapons, $dataArmors][keys.indexOf(key)];\\\\\\\\n    const costData = cost[key];\\\\\\\\n    const idList = Object.keys(costData).sort((a, b) => a - b);\\\\\\\\n    for (const id of idList) {\\\\\\\\n        const obj = database[id];\\\\\\\\n        const iconIndex = obj.iconIndex;\\\\\\\\n        const costAmount = costData[id];\\\\\\\\n        text += '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\I[%1]×%2 '.format(iconIndex, costAmount);\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n\\\\\\\\n// Return text\\\\\\\\nreturn text.trim();\\\\\\\"\\\",\\\"Gauges\\\":\\\"\\\",\\\"GaugeMaxJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Return value\\\\\\\\nreturn 0;\\\\\\\"\\\",\\\"GaugeCurrentJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nconst user = this;\\\\\\\\n\\\\\\\\n// Return value\\\\\\\\nreturn 0;\\\\\\\"\\\",\\\"GaugeDrawJS:func\\\":\\\"\\\\\\\"// Don't Draw Anything\\\\\\\\n// This does not work as a gauge.\\\\\\\"\\\"}\"]","Toggles:struct":"{\"Default\":\"\",\"DefaultToggle:eval\":\"true\",\"ToggleOffAnimationID:num\":\"62\",\"Appear\":\"\",\"ToggleOnTextColor:str\":\"24\",\"Vocab\":\"\",\"ToggleType:str\":\"Toggle\",\"ToggleOn:str\":\"\\\\FS[22]\\\\C[0][ON]\",\"ToggleOff:str\":\"\\\\FS[22]\\\\C[8][OFF]\",\"ToggleOffLocation:str\":\"back\"}","Gauge:struct":"{\"Labels\":\"\",\"LabelFontMainType:str\":\"main\",\"MatchLabelColor:eval\":\"true\",\"MatchLabelGaugeColor:num\":\"2\",\"PresetLabelGaugeColor:num\":\"16\",\"LabelOutlineSolid:eval\":\"true\",\"LabelOutlineWidth:num\":\"3\",\"Values\":\"\",\"ValueFontMainType:str\":\"number\",\"ValueOutlineSolid:eval\":\"true\",\"ValueOutlineWidth:num\":\"3\"}","BreakSkills":"----------------------------------","States:struct":"{\"General\":\"\",\"ReapplyRules:str\":\"greater\",\"MaxTurns:num\":\"99\",\"ActionEndUpdate:eval\":\"true\",\"Turns\":\"\",\"ShowTurns:eval\":\"true\",\"TurnFontSize:num\":\"16\",\"TurnOffsetX:num\":\"-4\",\"TurnOffsetY:num\":\"-6\",\"ColorNeutral:str\":\"0\",\"ColorPositive:str\":\"24\",\"ColorNegative:str\":\"27\",\"Data\":\"\",\"ShowData:eval\":\"true\",\"DataFontSize:num\":\"12\",\"DataOffsetX:num\":\"0\",\"DataOffsetY:num\":\"8\",\"CustomJS\":\"\",\"onAddStateJS:func\":\"\\\"// Declare Variables\\\\nconst stateId = arguments[0];\\\\nconst origin = this.getStateOrigin(stateId);\\\\nconst state = $dataStates[stateId];\\\\nconst user = this.getCurrentStateActiveUser();\\\\nconst target = this;\\\\nconst a = origin;\\\\nconst b = this;\\\\n\\\\n// Perform Actions\\\"\",\"onEraseStateJS:func\":\"\\\"// Declare Variables\\\\nconst stateId = arguments[0];\\\\nconst origin = this.getStateOrigin(stateId);\\\\nconst state = $dataStates[stateId];\\\\nconst user = this.getCurrentStateActiveUser();\\\\nconst target = this;\\\\nconst a = origin;\\\\nconst b = this;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"onExpireStateJS:func\":\"\\\"// Declare Variables\\\\nconst stateId = arguments[0];\\\\nconst origin = this.getStateOrigin(stateId);\\\\nconst state = $dataStates[stateId];\\\\nconst user = this.getCurrentStateActiveUser();\\\\nconst target = this;\\\\nconst a = origin;\\\\nconst b = this;\\\\n\\\\n// Perform Actions\\\\n\\\"\"}","Buffs:struct":"{\"General\":\"\",\"ReapplyRules:str\":\"greater\",\"MaxTurns:num\":\"99\",\"Stacking\":\"\",\"StackBuffMax:num\":\"2\",\"StackDebuffMax:num\":\"2\",\"MultiplierJS:func\":\"\\\"// Declare Variables\\\\nconst user = this;\\\\nconst paramId = arguments[0];\\\\nconst buffLevel = arguments[1];\\\\nlet rate = 1;\\\\n\\\\n// Perform Calculations\\\\nrate += buffLevel * 0.25;\\\\n\\\\n// Return Rate\\\\nreturn Math.max(0, rate);\\\"\",\"Turns\":\"\",\"ShowTurns:eval\":\"true\",\"TurnFontSize:num\":\"16\",\"TurnOffsetX:num\":\"-4\",\"TurnOffsetY:num\":\"-6\",\"ColorBuff:str\":\"24\",\"ColorDebuff:str\":\"27\",\"Data\":\"\",\"ShowData:eval\":\"false\",\"DataFontSize:num\":\"12\",\"DataOffsetX:num\":\"0\",\"DataOffsetY:num\":\"8\",\"CustomJS\":\"\",\"onAddBuffJS:func\":\"\\\"// Declare Variables\\\\nconst paramId = arguments[0];\\\\nconst modifier = this._buffs[paramId];\\\\nconst origin = this.getCurrentStateActiveUser();\\\\nconst user = this.getCurrentStateActiveUser();\\\\nconst target = this;\\\\nconst a = origin;\\\\nconst b = this;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"onAddDebuffJS:func\":\"\\\"// Declare Variables\\\\nconst paramId = arguments[0];\\\\nconst modifier = this._buffs[paramId];\\\\nconst origin = this.getCurrentStateActiveUser();\\\\nconst user = this.getCurrentStateActiveUser();\\\\nconst target = this;\\\\nconst a = origin;\\\\nconst b = this;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"onEraseBuffJS:func\":\"\\\"// Declare Variables\\\\nconst paramId = arguments[0];\\\\nconst modifier = this._buffs[paramId];\\\\nconst origin = this.getCurrentStateActiveUser();\\\\nconst user = this.getCurrentStateActiveUser();\\\\nconst target = this;\\\\nconst a = origin;\\\\nconst b = this;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"onEraseDebuffJS:func\":\"\\\"// Declare Variables\\\\nconst paramId = arguments[0];\\\\nconst modifier = this._buffs[paramId];\\\\nconst origin = this.getCurrentStateActiveUser();\\\\nconst user = this.getCurrentStateActiveUser();\\\\nconst target = this;\\\\nconst a = origin;\\\\nconst b = this;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"onExpireBuffJS:func\":\"\\\"// Declare Variables\\\\nconst paramId = arguments[0];\\\\nconst modifier = this._buffs[paramId];\\\\nconst origin = this.getCurrentStateActiveUser();\\\\nconst user = this.getCurrentStateActiveUser();\\\\nconst target = this;\\\\nconst a = origin;\\\\nconst b = this;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"onExpireDebuffJS:func\":\"\\\"// Declare Variables\\\\nconst paramId = arguments[0];\\\\nconst modifier = this._buffs[paramId];\\\\nconst origin = this.getCurrentStateActiveUser();\\\\nconst user = this.getCurrentStateActiveUser();\\\\nconst target = this;\\\\nconst a = origin;\\\\nconst b = this;\\\\n\\\\n// Perform Actions\\\\n\\\"\"}","PassiveStates:struct":"{\"List\":\"\",\"Global:arraynum\":\"[]\",\"Actor:arraynum\":\"[]\",\"Enemy:arraynum\":\"[]\",\"CustomJS\":\"\",\"PassiveConditionJS:func\":\"\\\"// Declare Variables\\\\nconst state = arguments[0];\\\\nconst stateId = state.id;\\\\nconst user = this;\\\\nconst target = this;\\\\nconst a = this;\\\\nconst b = this;\\\\nlet condition = true;\\\\n\\\\n// Perform Checks\\\\n\\\\n\\\\n// Return boolean\\\\nreturn condition;\\\"\"}","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"VisuMZ_1_MessageCore","status":true,"description":"[RPG Maker MZ] [Tier 1] [Version 1.54] [MessageCore]","parameters":{"BreakHead":"----------------------------------","MessageCore":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","General:struct":"{\"MessageWindow\":\"\",\"MessageRows:num\":\"4\",\"MessageWidth:num\":\"1080\",\"FastForwardKey:str\":\"pagedown\",\"MessageTextDelay:num\":\"1\",\"MsgWindowOffsetX:num\":\"+0\",\"MsgWindowOffsetY:num\":\"-72\",\"StretchDimmedBg:eval\":\"true\",\"DefaultOutlineWidth:num\":\"0\",\"EachMessageStart:json\":\"\\\"\\\"\",\"EachMessageEnd:json\":\"\\\"\\\"\",\"NameBoxWindow\":\"\",\"NameBoxWindowDefaultColor:num\":\"0\",\"NameBoxWindowOffsetX:num\":\"0\",\"NameBoxWindowOffsetY:num\":\"0\",\"ChoiceListWindow\":\"\",\"ChoiceWindowLineHeight:num\":\"36\",\"ChoiceWindowMinWidth:num\":\"96\",\"ChoiceWindowMaxRows:num\":\"8\",\"ChoiceWindowMaxCols:num\":\"1\",\"ChoiceWindowTextAlign:str\":\"default\",\"DefaultTextCodes\":\"\",\"RelativePXPY:eval\":\"true\",\"FontBiggerCap:eval\":\"108\",\"FontSmallerCap:eval\":\"12\",\"FontChangeValue:eval\":\"12\"}","AutoColor:struct":"{\"DatabaseHighlighting\":\"\",\"Actors:str\":\"0\",\"Classes:str\":\"0\",\"Skills:str\":\"0\",\"Items:str\":\"0\",\"Weapons:str\":\"0\",\"Armors:str\":\"0\",\"Enemies:str\":\"0\",\"States:str\":\"0\",\"WordHighlighting\":\"\",\"TextColor1:arraystr\":\"[]\",\"TextColor2:arraystr\":\"[]\",\"TextColor3:arraystr\":\"[]\",\"TextColor4:arraystr\":\"[]\",\"TextColor5:arraystr\":\"[]\",\"TextColor6:arraystr\":\"[]\",\"TextColor7:arraystr\":\"[]\",\"TextColor8:arraystr\":\"[]\",\"TextColor9:arraystr\":\"[]\",\"TextColor10:arraystr\":\"[]\",\"TextColor11:arraystr\":\"[]\",\"TextColor12:arraystr\":\"[]\",\"TextColor13:arraystr\":\"[]\",\"TextColor14:arraystr\":\"[]\",\"TextColor15:arraystr\":\"[]\",\"TextColor16:arraystr\":\"[]\",\"TextColor17:arraystr\":\"[]\",\"TextColor18:arraystr\":\"[]\",\"TextColor19:arraystr\":\"[]\",\"TextColor20:arraystr\":\"[]\",\"TextColor21:arraystr\":\"[]\",\"TextColor22:arraystr\":\"[]\",\"TextColor23:arraystr\":\"[]\",\"TextColor24:arraystr\":\"[]\",\"TextColor25:arraystr\":\"[]\",\"TextColor26:arraystr\":\"[]\",\"TextColor27:arraystr\":\"[]\",\"TextColor28:arraystr\":\"[]\",\"TextColor29:arraystr\":\"[]\",\"TextColor30:arraystr\":\"[]\",\"TextColor31:arraystr\":\"[]\"}","CustomFonts:arraystruct":"[]","TextCodeActions:arraystruct":"[\"{\\\"Match:str\\\":\\\"ChangeFace\\\",\\\"Type:str\\\":\\\"\\\\\\\\<(.*?)\\\\\\\\>\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst data = this.obtainEscapeString(textState).split(',');\\\\\\\\nif (this instanceof Window_Message) {\\\\\\\\n    if (textState.drawing) {\\\\\\\\n        const filename = data[0].trim();\\\\\\\\n        const index = parseInt(data[1] || '0');\\\\\\\\n        $gameMessage.setFaceImage(filename, index);\\\\\\\\n        this.loadMessageFace();\\\\\\\\n        const rtl = $gameMessage.isRTL();\\\\\\\\n        const width = ImageManager.faceWidth;\\\\\\\\n        const height = this.innerHeight;\\\\\\\\n        const x = rtl ? this.innerWidth - width - 4 : 4;\\\\\\\\n        this.contents.clearRect(x, 0, width, height);\\\\\\\\n        this._faceBitmap.addLoadListener(this.drawMessageFace.bind(this));\\\\\\\\n    }\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"FaceIndex\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst index = this.obtainEscapeParam(textState);\\\\\\\\nif (this instanceof Window_Message) {\\\\\\\\n    if (textState.drawing) {\\\\\\\\n        const filename = $gameMessage.faceName();\\\\\\\\n        $gameMessage.setFaceImage(filename, index);\\\\\\\\n        this.loadMessageFace();\\\\\\\\n        const rtl = $gameMessage.isRTL();\\\\\\\\n        const width = ImageManager.faceWidth;\\\\\\\\n        const height = this.innerHeight;\\\\\\\\n        const x = rtl ? this.innerWidth - width - 4 : 4;\\\\\\\\n        this.contents.clearRect(x, 0, width, height);\\\\\\\\n        this._faceBitmap.addLoadListener(this.drawMessageFace.bind(this));\\\\\\\\n    }\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"TextDelay\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst delay = this.obtainEscapeParam(textState);\\\\\\\\nif (this instanceof Window_Message) {\\\\\\\\n    if (textState.drawing && this.constructor === Window_Message) {\\\\\\\\n        this.setTextDelay(delay);\\\\\\\\n    }\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"NormalBG\\\",\\\"Type:str\\\":\\\"\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nif (textState.drawing) {\\\\\\\\n    this.setBackgroundType(0);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"DimBG\\\",\\\"Type:str\\\":\\\"\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nif (textState.drawing) {\\\\\\\\n    this.setBackgroundType(1);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"TransparentBG\\\",\\\"Type:str\\\":\\\"\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nif (textState.drawing) {\\\\\\\\n    this.setBackgroundType(2);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"FontChange\\\",\\\"Type:str\\\":\\\"\\\\\\\\<(.*?)\\\\\\\\>\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst fontName = this.obtainEscapeString(textState);\\\\\\\\nthis.contents.fontFace = fontName;\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ResetFont\\\",\\\"Type:str\\\":\\\"\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"this.resetFontSettings();\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ResetColor\\\",\\\"Type:str\\\":\\\"\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"this.resetTextColor();\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"HexColor\\\",\\\"Type:str\\\":\\\"\\\\\\\\<(.*?)\\\\\\\\>\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst hexColor = this.obtainEscapeString(textState);\\\\\\\\nif (!this.isColorLocked() && textState.drawing) {\\\\\\\\n    this.changeTextColor(hexColor);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"OutlineColor\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst colorIndex = this.obtainEscapeParam(textState);\\\\\\\\nif (!this.isColorLocked() && textState.drawing) {\\\\\\\\n    this.changeOutlineColor(ColorManager.textColor(colorIndex));\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"OutlineHexColor\\\",\\\"Type:str\\\":\\\"\\\\\\\\<(.*?)\\\\\\\\>\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst hexColor = this.obtainEscapeString(textState);\\\\\\\\nif (!this.isColorLocked() && textState.drawing) {\\\\\\\\n    this.changeOutlineColor(hexColor);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"OutlineWidth\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst width = this.obtainEscapeParam(textState);\\\\\\\\nif (textState.drawing) {\\\\\\\\n    this.contents.outlineWidth = width;\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"WindowMoveTo\\\",\\\"Type:str\\\":\\\"\\\\\\\\<(.*?)\\\\\\\\>\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst data = this.obtainEscapeString(textState).split(',');\\\\\\\\nif (textState.drawing) {\\\\\\\\n    const x = !!data[0] ? Number(data[0].trim()) : this.x;\\\\\\\\n    const y = !!data[1] ? Number(data[1].trim()) : this.y;\\\\\\\\n    const width = !!data[2] ? Number(data[2].trim()) : this.width;\\\\\\\\n    const height = !!data[3] ? Number(data[3].trim()) : this.height;\\\\\\\\n    const duration = !!data[4] ? Number(data[4].trim()) : 20;\\\\\\\\n    const easingType = !!data[5] ? data[5].trim() : 0;\\\\\\\\n    this.moveTo(x, y, width, height, duration, easingType);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"WindowMoveBy\\\",\\\"Type:str\\\":\\\"\\\\\\\\<(.*?)\\\\\\\\>\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst data = this.obtainEscapeString(textState).split(',');\\\\\\\\nif (textState.drawing) {\\\\\\\\n    const x = !!data[0] ? Number(data[0].trim()) : 0;\\\\\\\\n    const y = !!data[1] ? Number(data[1].trim()) : 0;\\\\\\\\n    const width = !!data[2] ? Number(data[2].trim()) : 0;\\\\\\\\n    const height = !!data[3] ? Number(data[3].trim()) : 0;\\\\\\\\n    const duration = !!data[4] ? Number(data[4].trim()) : 20;\\\\\\\\n    const easingType = !!data[5] ? data[5].trim() : 0;\\\\\\\\n    this.moveBy(x, y, width, height, duration, easingType);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"WindowReset\\\",\\\"Type:str\\\":\\\"\\\",\\\"CommonEvent:num\\\":\\\"0\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nif (textState.drawing) {\\\\\\\\n    const frames = 20;\\\\\\\\n    const easingType = 0;\\\\\\\\n    this.resetRect(frames, easingType);\\\\\\\\n}\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"heart\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"CommonEvent:num\\\":\\\"3\\\",\\\"ActionJS:func\\\":\\\"\\\\\\\"const textState = arguments[0];\\\\\\\\nconst index = this.obtainEscapeParam(textState);\\\\\\\"\\\"}\"]","TextCodeReplace:arraystruct":"[\"{\\\"Match:str\\\":\\\"ActorFace\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const actorId = parseInt(arguments[1]);\\\\\\\\nconst actor = $gameActors.actor(actorId);\\\\\\\\nif (this.constructor === Window_Message && actor) {\\\\\\\\n    $gameMessage.setFaceImage(\\\\\\\\n        actor.faceName(),\\\\\\\\n        actor.faceIndex()\\\\\\\\n    );\\\\\\\\n}\\\\\\\\nreturn '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"PartyFace\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const index = parseInt(arguments[1]) - 1;\\\\\\\\nconst actor = $gameParty.members()[index];\\\\\\\\nif (this.constructor === Window_Message && actor) {\\\\\\\\n    $gameMessage.setFaceImage(\\\\\\\\n        actor.faceName(),\\\\\\\\n        actor.faceIndex()\\\\\\\\n    );\\\\\\\\n}\\\\\\\\nreturn '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Class\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataClasses;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ClassIcon\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataClasses;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst obj = database[id];\\\\\\\\nconst icon = obj ? (obj.iconIndex || 0) : 0;\\\\\\\\nreturn icon ? '\\\\\\\\\\\\\\\\x1bI[%1]'.format(icon) : '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ClassName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataClasses;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Skill\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataSkills;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"SkillIcon\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataSkills;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst obj = database[id];\\\\\\\\nconst icon = obj ? (obj.iconIndex || 0) : 0;\\\\\\\\nreturn icon ? '\\\\\\\\\\\\\\\\x1bI[%1]'.format(icon) : '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"SkillName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataSkills;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Item\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataItems;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ItemIcon\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataItems;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst obj = database[id];\\\\\\\\nconst icon = obj ? (obj.iconIndex || 0) : 0;\\\\\\\\nreturn icon ? '\\\\\\\\\\\\\\\\x1bI[%1]'.format(icon) : '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ItemName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataItems;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ItemQuantity\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataItems;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nreturn $gameParty.numItems(database[id]);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Weapon\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataWeapons;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"WeaponIcon\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataWeapons;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst obj = database[id];\\\\\\\\nconst icon = obj ? (obj.iconIndex || 0) : 0;\\\\\\\\nreturn icon ? '\\\\\\\\\\\\\\\\x1bI[%1]'.format(icon) : '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"WeaponName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataWeapons;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"WeaponQuantity\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataWeapons;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nreturn $gameParty.numItems(database[id]);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Armor\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataArmors;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ArmorIcon\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataArmors;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst obj = database[id];\\\\\\\\nconst icon = obj ? (obj.iconIndex || 0) : 0;\\\\\\\\nreturn icon ? '\\\\\\\\\\\\\\\\x1bI[%1]'.format(icon) : '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ArmorName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataArmors;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"ArmorQuantity\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataArmors;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nreturn $gameParty.numItems(database[id]);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"State\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataStates;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"StateIcon\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataStates;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst obj = database[id];\\\\\\\\nconst icon = obj ? (obj.iconIndex || 0) : 0;\\\\\\\\nreturn icon ? '\\\\\\\\\\\\\\\\x1bI[%1]'.format(icon) : '';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"StateName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataStates;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"LastGainObj\\\",\\\"Type:str\\\":\\\"\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const icon = true;\\\\\\\\nreturn this.lastGainedObjectName(icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"LastGainObjIcon\\\",\\\"Type:str\\\":\\\"\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return this.lastGainedObjectIcon();\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"LastGainObjName\\\",\\\"Type:str\\\":\\\"\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const icon = false;\\\\\\\\nreturn this.lastGainedObjectName(icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"LastGainObjQuantity\\\",\\\"Type:str\\\":\\\"\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return this.lastGainedObjectQuantity();\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Enemy\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataEnemies;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"EnemyName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataEnemies;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Troop\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataTroops;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"TroopName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"const database = $dataTroops;\\\\\\\\nconst id = parseInt(arguments[1]);\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"TroopMember\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"if (!$gameParty.inBattle()) return \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst index = (parseInt(arguments[1]) - 1) || 0;\\\\\\\\nconst member = $gameTroop.members()[index];\\\\\\\\nconst database = $dataEnemies;\\\\\\\\nconst id = member ? member.enemyId() : 0;\\\\\\\\nconst icon = true;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"TroopMemberName\\\",\\\"Type:str\\\":\\\"\\\\\\\\[(\\\\\\\\d+)\\\\\\\\]\\\",\\\"TextStr:str\\\":\\\"Undefined\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"if (!$gameParty.inBattle()) return \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\";\\\\\\\\nconst index = (parseInt(arguments[1]) - 1) || 0;\\\\\\\\nconst member = $gameTroop.members()[index];\\\\\\\\nconst database = $dataEnemies;\\\\\\\\nconst id = member ? member.enemyId() : 0;\\\\\\\\nconst icon = false;\\\\\\\\nreturn this.databaseObjectName(database, id, icon);\\\\\\\"\\\"}\"]","TextMacros:arraystruct":"[\"{\\\"Match:str\\\":\\\"Example Macro\\\",\\\"TextStr:str\\\":\\\"This is the text that will be displayed when you type [Example Macro].\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return 'Text';\\\\\\\"\\\"}\",\"{\\\"Match:str\\\":\\\"Leader\\\",\\\"TextStr:str\\\":\\\"\\\\\\\\P[1]\\\",\\\"TextJS:func\\\":\\\"\\\\\\\"return 'Text';\\\\\\\"\\\"}\"]","Localization:struct":"{\"Main\":\"\",\"Enable:eval\":\"false\",\"CsvFilename:str\":\"Languages.csv\",\"Options\":\"\",\"AddOption:eval\":\"true\",\"AdjustRect:eval\":\"true\",\"Name:str\":\"Text Language\",\"Localized\":\"\",\"DefaultLocale:str\":\"English\",\"Languages:arraystr\":\"[\\\"Bengali\\\",\\\"Chinese(Simplified)\\\",\\\"Chinese(Traditional)\\\",\\\"Czech\\\",\\\"Danish\\\",\\\"Dutch\\\",\\\"English\\\",\\\"Finnish\\\",\\\"French\\\",\\\"German\\\",\\\"Greek\\\",\\\"Hindi\\\",\\\"Hungarian\\\",\\\"Indonesian\\\",\\\"Italian\\\",\\\"Japanese\\\",\\\"Korean\\\",\\\"Norwegian\\\",\\\"Polish\\\",\\\"Portuguese\\\",\\\"Romanian\\\",\\\"Russian\\\",\\\"Slovak\\\",\\\"Spanish\\\",\\\"Swedish\\\",\\\"Tamil\\\",\\\"Thai\\\",\\\"Turkish\\\"]\",\"LangNames\":\"\",\"Bengali:str\":\"বাংলা\",\"Chinese(Simplified):str\":\"简体中文\",\"Chinese(Traditional):str\":\"繁體中文\",\"Czech:str\":\"Čeština\",\"Danish:str\":\"Dansk\",\"Dutch:str\":\"Nederlands\",\"English:str\":\"English\",\"Finnish:str\":\"Suomi\",\"French:str\":\"Français\",\"German:str\":\"Deutsch\",\"Greek:str\":\"Ελληνικά\",\"Hindi:str\":\"हिन्दी\",\"Hungarian:str\":\"Magyar\",\"Indonesian:str\":\"Bahasa Indo\",\"Italian:str\":\"Italiano\",\"Japanese:str\":\"日本語\",\"Korean:str\":\"한국어\",\"Norwegian:str\":\"Norsk\",\"Polish:str\":\"Polski\",\"Portuguese:str\":\"Português\",\"Romanian:str\":\"Română\",\"Russian:str\":\"Русский\",\"Slovak:str\":\"Slovenčina\",\"Spanish:str\":\"Español\",\"Swedish:str\":\"Svenska\",\"Tamil:str\":\"தமிழ்\",\"Thai:str\":\"ไทย\",\"Turkish:str\":\"Türkçe\"}","LanguageFonts:struct":"{\"Bengali:str\":\"rmmz-mainfont\",\"Chinese(Simplified):str\":\"rmmz-mainfont\",\"Chinese(Traditional):str\":\"rmmz-mainfont\",\"Czech:str\":\"rmmz-mainfont\",\"Danish:str\":\"rmmz-mainfont\",\"Dutch:str\":\"rmmz-mainfont\",\"English:str\":\"rmmz-mainfont\",\"Finnish:str\":\"rmmz-mainfont\",\"French:str\":\"rmmz-mainfont\",\"German:str\":\"rmmz-mainfont\",\"Greek:str\":\"rmmz-mainfont\",\"Hindi:str\":\"rmmz-mainfont\",\"Hungarian:str\":\"rmmz-mainfont\",\"Indonesian:str\":\"rmmz-mainfont\",\"Italian:str\":\"rmmz-mainfont\",\"Japanese:str\":\"rmmz-mainfont\",\"Korean:str\":\"rmmz-mainfont\",\"Norwegian:str\":\"rmmz-mainfont\",\"Polish:str\":\"rmmz-mainfont\",\"Portuguese:str\":\"rmmz-mainfont\",\"Romanian:str\":\"rmmz-mainfont\",\"Russian:str\":\"rmmz-mainfont\",\"Slovak:str\":\"rmmz-mainfont\",\"Spanish:str\":\"rmmz-mainfont\",\"Swedish:str\":\"rmmz-mainfont\",\"Tamil:str\":\"rmmz-mainfont\",\"Thai:str\":\"rmmz-mainfont\",\"Turkish:str\":\"rmmz-mainfont\"}","LanguageImages:struct":"{\"ConvertDefault:eval\":\"false\",\"Languages\":\"\",\"Bengali:str\":\"[XX]\",\"Chinese(Simplified):str\":\"[XX]\",\"Chinese(Traditional):str\":\"[XX]\",\"Czech:str\":\"[XX]\",\"Danish:str\":\"[XX]\",\"Dutch:str\":\"[XX]\",\"English:str\":\"[XX]\",\"Finnish:str\":\"[XX]\",\"French:str\":\"[XX]\",\"German:str\":\"[XX]\",\"Greek:str\":\"[XX]\",\"Hindi:str\":\"[XX]\",\"Hungarian:str\":\"[XX]\",\"Indonesian:str\":\"[XX]\",\"Italian:str\":\"[XX]\",\"Japanese:str\":\"[XX]\",\"Korean:str\":\"[XX]\",\"Norwegian:str\":\"[XX]\",\"Polish:str\":\"[XX]\",\"Portuguese:str\":\"[XX]\",\"Romanian:str\":\"[XX]\",\"Russian:str\":\"[XX]\",\"Slovak:str\":\"[XX]\",\"Spanish:str\":\"[XX]\",\"Swedish:str\":\"[XX]\",\"Tamil:str\":\"[XX]\",\"Thai:str\":\"[XX]\",\"Turkish:str\":\"[XX]\"}","TextSpeed:struct":"{\"AddOption:eval\":\"true\",\"AdjustRect:eval\":\"true\",\"Name:str\":\"Text Speed\",\"Default:num\":\"10\",\"Instant:str\":\"Instant\"}","WordWrap:struct":"{\"EnableWordWrap\":\"\",\"MessageWindow:eval\":\"true\",\"HelpWindow:eval\":\"true\",\"Rules\":\"\",\"LineBreakSpace:eval\":\"true\",\"TightWrap:eval\":\"false\",\"EndPadding:num\":\"0\"}","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"VisuMZ_1_OptionsCore","status":true,"description":"[RPG Maker MZ] [Tier 1] [Version 1.28] [OptionsCore]","parameters":{"BreakHead":"----------------------------------","OptionsCore":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","OptionsSettings:struct":"{\"Categories\":\"\",\"CategoryStyle:str\":\"auto\",\"CategoryTextAlign:str\":\"center\",\"Sound\":\"\",\"SFXCursorList:arraystr\":\"[\\\"Default\\\",\\\"Book2\\\",\\\"Coin\\\",\\\"Cursor1\\\",\\\"Cursor2\\\",\\\"Hammer\\\",\\\"Key\\\",\\\"Knock\\\",\\\"Open1\\\",\\\"Open2\\\",\\\"Open3\\\",\\\"Paralyze1\\\"]\",\"SFXOKList:arraystr\":\"[\\\"Default\\\",\\\"Bell3\\\",\\\"Computer\\\",\\\"Decision2\\\",\\\"Flash1\\\",\\\"Bell3\\\",\\\"Cat\\\",\\\"Item1\\\",\\\"Item2\\\",\\\"Item3\\\",\\\"Ice4\\\",\\\"Decision1\\\"]\",\"SFXCancelList:arraystr\":\"[\\\"Default\\\",\\\"Absorb1\\\",\\\"Book1\\\",\\\"Cancel1\\\",\\\"Cancel2\\\",\\\"Raise2\\\",\\\"Skill1\\\",\\\"Dog\\\",\\\"Shot2\\\",\\\"Ice3\\\",\\\"Magic1\\\",\\\"Magic2\\\"]\",\"SFXBuzzerList:arraystr\":\"[\\\"Default\\\",\\\"Buzzer2\\\",\\\"Fall\\\",\\\"Skill2\\\",\\\"Shot3\\\",\\\"Bell1\\\",\\\"Crow\\\",\\\"Horn\\\",\\\"Ice2\\\",\\\"Magic3\\\",\\\"Open4\\\",\\\"Buzzer1\\\"]\",\"Text\":\"\",\"FontFaces:arraystr\":\"[\\\"Default\\\",\\\"Arial\\\",\\\"Candara\\\",\\\"Calibri\\\",\\\"Garamond\\\",\\\"Georgia\\\",\\\"Gill Sans MT\\\",\\\"Helvetica\\\",\\\"Impact\\\",\\\"Lato\\\",\\\"Rockwell\\\",\\\"Segoe UI\\\",\\\"Tahoma\\\",\\\"Times\\\",\\\"Trebuchet MS\\\",\\\"Verdana\\\"]\",\"ButtonAssist\":\"\",\"buttonAssistCategory:str\":\"Switch Category\"}","Categories:arraystruct":"[\"{\\\"Name:str\\\":\\\"General\\\",\\\"Icon:num\\\":\\\"0\\\",\\\"ShowJS:func\\\":\\\"\\\\\\\"// Return Boolean\\\\\\\\nreturn true;\\\\\\\"\\\",\\\"List:arraystruct\\\":\\\"[\\\\\\\"{\\\\\\\\\\\\\\\"Symbol:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"autosave\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Icon:num\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"225\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextStr:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return TextManager.autosaveOption;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Accessibility\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn (\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    Imported.VisuMZ_1_SaveCore &&\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    VisuMZ.SaveCore.Settings.AutosaveOption.AddOption\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"EnableJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ExtJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Functions\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst index = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst title = this.commandName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst rect = this.itemLineRect(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst quarterWidth = rect.width / 4;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst halfWidth = rect.width / 2;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Command Name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetFontSettings();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawTextEx(title, rect.x, rect.y, halfWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Status Text\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst off = 'OFF';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst on  = 'ON';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(!value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(off, rect.x + halfWidth, rect.y, quarterWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(on, rect.x + halfWidth + quarterWidth, rect.y, quarterWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, !value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (this.getConfigValue(symbol) !== lastValue) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, false);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (this.getConfigValue(symbol) !== lastValue) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Data\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconfig[symbol] = ConfigManager[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = config[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Symbol:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Icon:num\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextStr:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\C[16]Screen\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return 'Text';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Accessibility\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"EnableJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ExtJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Functions\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst index = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst title = this.commandName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst rect = this.itemLineRect(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst halfWidth = rect.width / 2;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Command Name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetFontSettings();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawTextEx(title, rect.x, rect.y, halfWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Do Nothing\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Do Nothing\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Do Nothing\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Data\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Do Nothing\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Do Nothing\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Do Nothing\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Symbol:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"displayFPS\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Icon:num\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"245\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextStr:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Display FPS\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return 'Text';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Accessibility\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"EnableJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ExtJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Functions\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst index = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst title = this.commandName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst rect = this.itemLineRect(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst quarterWidth = rect.width / 4;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst halfWidth = rect.width / 2;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Command Name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetFontSettings();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawTextEx(title, rect.x, rect.y, halfWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Status Text\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst off = 'OFF';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst on  = 'ON';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(!value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(off, rect.x + halfWidth, rect.y, quarterWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(on, rect.x + halfWidth + quarterWidth, rect.y, quarterWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, !value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (!value) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    Graphics._fpsCounter._boxDiv.style.display = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"block\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    Graphics._fpsCounter._showFps = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    Graphics._fpsCounter._boxDiv.style.display = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (this.getConfigValue(symbol) !== lastValue) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    Graphics._fpsCounter._boxDiv.style.display = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"block\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    Graphics._fpsCounter._showFps = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, false);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (this.getConfigValue(symbol) !== lastValue) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    Graphics._fpsCounter._boxDiv.style.display = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Data\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGraphics._fpsCounter._boxDiv.style.display = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconfig[symbol] = ConfigManager[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = config[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (config[symbol]) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    Graphics._fpsCounter._boxDiv.style.display = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"block\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    Graphics._fpsCounter._showFps = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Symbol:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"limitFPS\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Icon:num\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"245\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextStr:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Limit FPS\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Accessibility\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"EnableJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ExtJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Functions\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst index = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst title = this.commandName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst rect = this.itemLineRect(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst quarterWidth = rect.width / 4;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst halfWidth = rect.width / 2;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Command Name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetFontSettings();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawTextEx(title, rect.x, rect.y, halfWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Status Text\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst off = 'OFF';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst on  = 'ON';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(!value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(off, rect.x + halfWidth, rect.y, quarterWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(on, rect.x + halfWidth + quarterWidth, rect.y, quarterWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, !value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGraphics._app.ticker.maxFPS = ConfigManager[symbol] ? 60 : 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGraphics._app.ticker.maxFPS = ConfigManager[symbol] ? 60 : 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (this.getConfigValue(symbol) !== lastValue) SoundManager.playCursor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, false);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGraphics._app.ticker.maxFPS = ConfigManager[symbol] ? 60 : 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (this.getConfigValue(symbol) !== lastValue) SoundManager.playCursor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Data\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGraphics._app.ticker.maxFPS = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconfig[symbol] = ConfigManager[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = config[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGraphics._app.ticker.maxFPS = config[symbol] ? 60 : 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Symbol:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"fullScreen\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Icon:num\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"245\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextStr:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Full Screen\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return 'Text';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Accessibility\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn Utils.isNwjs();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"EnableJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ExtJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Functions\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst index = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst title = this.commandName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst rect = this.itemLineRect(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst quarterWidth = rect.width / 4;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst halfWidth = rect.width / 2;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = !!Graphics._isFullScreen();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Command Name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetFontSettings();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawTextEx(title, rect.x, rect.y, halfWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Status Text\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst off = 'Window Mode';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst on  = 'Full Screen';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(!value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(off, rect.x + halfWidth, rect.y, quarterWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(on, rect.x + halfWidth + quarterWidth, rect.y, quarterWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = !!Graphics._isFullScreen();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, !value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nGraphics._switchFullScreen();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = !!Graphics._isFullScreen();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (this.getConfigValue(symbol) !== lastValue) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    Graphics._requestFullScreen();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = !!Graphics._isFullScreen();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, false);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (this.getConfigValue(symbol) !== lastValue) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    Graphics._cancelFullScreen();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Data\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = !!Graphics._isFullScreen();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconfig[symbol] = ConfigManager[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = config[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Symbol:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Icon:num\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"0\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextStr:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\C[16]Volume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return 'Text';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Accessibility\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"EnableJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ExtJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Functions\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst index = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst title = this.commandName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst rect = this.itemLineRect(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst halfWidth = rect.width / 2;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Command Name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetFontSettings();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawTextEx(title, rect.x, rect.y, halfWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Do Nothing\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Do Nothing\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Do Nothing\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Data\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Do Nothing\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Do Nothing\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Do Nothing\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Symbol:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"masterVolume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Icon:num\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"80\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextStr:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Master Volume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return 'Text';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Accessibility\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"EnableJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ExtJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Functions\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst index = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst title = this.commandName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst rect = this.itemLineRect(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst halfWidth = rect.width / 2;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Command Name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetFontSettings();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawTextEx(title, rect.x, rect.y, halfWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Gauge\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst rate = (value / 100).clamp(0, 1);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst gx = rect.x + halfWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst gy = rect.y + rect.height - 14;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst fillW = Math.floor((halfWidth - 2) * rate);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst color0 = ColorManager.gaugeBackColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst color1 = ColorManager.textColor(22);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst color2 = ColorManager.textColor(23);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.contents.fillRect(gx, gy, halfWidth, 12, color0);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.contents.gradientFillRect(gx + 1, gy + 1, fillW, 10, color1, color2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst text = '%1%'.format(value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(text, rect.x + halfWidth, rect.y, halfWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlet value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value >= 100 && (Input.isTriggered(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ok\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") || TouchInput.isClicked())) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    value = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    value += Input.isPressed(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"shift\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") ? 1 : 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    value = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (lastValue !== value) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    WebAudio.setMasterVolume(value / 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlet value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += Input.isPressed(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"shift\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") ? 1 : 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (lastValue !== value) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    WebAudio.setMasterVolume(value / 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlet value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= Input.isPressed(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"shift\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") ? 1 : 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (lastValue !== value) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    WebAudio.setMasterVolume(value / 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Data\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWebAudio.setMasterVolume(100 / 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconfig[symbol] = ConfigManager[symbol].clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = config[symbol].clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nWebAudio.setMasterVolume(ConfigManager[symbol] / 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Symbol:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bgmVolume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Icon:num\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"80\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextStr:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return TextManager.bgmVolume;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Accessibility\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"EnableJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ExtJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Functions\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst index = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst title = this.commandName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst rect = this.itemLineRect(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst halfWidth = rect.width / 2;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Command Name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetFontSettings();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawTextEx(title, rect.x, rect.y, halfWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Gauge\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst rate = (value / 100).clamp(0, 1);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst gx = rect.x + halfWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst gy = rect.y + rect.height - 14;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst fillW = Math.floor((halfWidth - 2) * rate);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst color0 = ColorManager.gaugeBackColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst color1 = ColorManager.textColor(26);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst color2 = ColorManager.textColor(27);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.contents.fillRect(gx, gy, halfWidth, 12, color0);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.contents.gradientFillRect(gx + 1, gy + 1, fillW, 10, color1, color2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst text = '%1%'.format(value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(text, rect.x + halfWidth, rect.y, halfWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlet value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconsole.log((Input.isTriggered(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ok\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") || TouchInput.isClicked()))\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value >= 100 && (Input.isTriggered(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ok\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") || TouchInput.isClicked())) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    value = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    value += Input.isPressed(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"shift\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") ? 1 : 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    value = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (lastValue !== value) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlet value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += Input.isPressed(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"shift\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") ? 1 : 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (lastValue !== value) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlet value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= Input.isPressed(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"shift\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") ? 1 : 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (lastValue !== value) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Data\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = 40;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconfig[symbol] = ConfigManager[symbol].clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = config[symbol].clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Symbol:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"seVolume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Icon:num\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"80\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextStr:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return TextManager.seVolume;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Accessibility\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"EnableJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ExtJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Functions\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst index = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst title = this.commandName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst rect = this.itemLineRect(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst halfWidth = rect.width / 2;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Command Name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetFontSettings();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawTextEx(title, rect.x, rect.y, halfWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Gauge\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst rate = (value / 100).clamp(0, 1);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst gx = rect.x + halfWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst gy = rect.y + rect.height - 14;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst fillW = Math.floor((halfWidth - 2) * rate);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst color0 = ColorManager.gaugeBackColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst color1 = ColorManager.textColor(26);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst color2 = ColorManager.textColor(27);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.contents.fillRect(gx, gy, halfWidth, 12, color0);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.contents.gradientFillRect(gx + 1, gy + 1, fillW, 10, color1, color2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst text = '%1%'.format(value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(text, rect.x + halfWidth, rect.y, halfWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlet value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value >= 100 && (Input.isTriggered(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ok\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") || TouchInput.isClicked())) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    value = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    value += Input.isPressed(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"shift\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") ? 1 : 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    value = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (lastValue !== value) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlet value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += Input.isPressed(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"shift\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") ? 1 : 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (lastValue !== value) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlet value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= Input.isPressed(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"shift\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") ? 1 : 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (lastValue !== value) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Data\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = 40;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconfig[symbol] = ConfigManager[symbol].clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = config[symbol].clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Symbol:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"voiceVolume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Icon:num\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"80\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextStr:str\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"TextJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"return TextManager.voiceVolume;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Accessibility\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn Imported.VisuMZ_2_VoiceActControl;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"EnableJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Boolean\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ExtJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nreturn 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Functions\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst index = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst title = this.commandName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst rect = this.itemLineRect(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst halfWidth = rect.width / 2;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Command Name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetFontSettings();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawTextEx(title, rect.x, rect.y, halfWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Gauge\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst rate = (value / 100).clamp(0, 1);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst gx = rect.x + halfWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst gy = rect.y + rect.height - 14;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst fillW = Math.floor((halfWidth - 2) * rate);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst color0 = ColorManager.gaugeBackColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst color1 = ColorManager.textColor(26);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst color2 = ColorManager.textColor(27);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.contents.fillRect(gx, gy, halfWidth, 12, color0);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.contents.gradientFillRect(gx + 1, gy + 1, fillW, 10, color1, color2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Draw Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst text = '%1%'.format(value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(text, rect.x + halfWidth, rect.y, halfWidth, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\");\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlet value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value >= 100 && (Input.isTriggered(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ok\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") || TouchInput.isClicked())) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    value = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    value += Input.isPressed(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"shift\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") ? 1 : 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    value = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (lastValue !== value) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlet value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += Input.isPressed(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"shift\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") ? 1 : 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (lastValue !== value) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nlet value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst lastValue = value;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= Input.isPressed(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"shift\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\") ? 1 : 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.setConfigValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.redrawItem(this.findSymbol(symbol));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (lastValue !== value) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    this.playCursorSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Data\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = 40;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconfig[symbol] = ConfigManager[symbol].clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadJS:func\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst config = arguments[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst symbol = arguments[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// Return Value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nConfigManager[symbol] = config[symbol].clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\"]\\\"}\"]","Rebind:struct":"{\"General\":\"\",\"EnableRebind:eval\":\"true\",\"keyOrder:arraystr\":\"[\\\"up\\\",\\\"left\\\",\\\"down\\\",\\\"right\\\",\\\"ok\\\",\\\"escape\\\",\\\"shift\\\",\\\"tab\\\",\\\"pageup\\\",\\\"pagedown\\\"]\",\"gamepadOrder:arraystr\":\"[\\\"up\\\",\\\"left\\\",\\\"down\\\",\\\"right\\\",\\\"ok\\\",\\\"cancel\\\",\\\"menu\\\",\\\"shift\\\",\\\"pageup\\\",\\\"pagedown\\\"]\",\"gamepadReset:func\":\"\\\"Input.gamepadMapper = {\\\\n    0: \\\\\\\"ok\\\\\\\", // A\\\\n    1: \\\\\\\"cancel\\\\\\\", // B\\\\n    2: \\\\\\\"shift\\\\\\\", // X\\\\n    3: \\\\\\\"menu\\\\\\\", // Y\\\\n    4: \\\\\\\"pageup\\\\\\\", // LB\\\\n    5: \\\\\\\"pagedown\\\\\\\", // RB\\\\n    12: \\\\\\\"up\\\\\\\", // D-pad up\\\\n    13: \\\\\\\"down\\\\\\\", // D-pad down\\\\n    14: \\\\\\\"left\\\\\\\", // D-pad left\\\\n    15: \\\\\\\"right\\\\\\\" // D-pad right\\\\n};\\\"\",\"Vocab\":\"\",\"ButtonVocab\":\"\",\"up:str\":\"Up\",\"left:str\":\"Left\",\"down:str\":\"Down\",\"right:str\":\"Right\",\"ok:str\":\"Confirm\",\"escape:str\":\"Cancel & Menu\",\"cancel:str\":\"Cancel\",\"menu:str\":\"Menu\",\"pageup:str\":\"Switch Left\",\"pagedown:str\":\"Switch Right\",\"shift:str\":\"Dash\",\"tab:str\":\"Tab\",\"buttonFmt:str\":\"\\\\}Button\\\\{ %1\",\"dpadFmt:str\":\"\\\\}D-Pad\\\\{ %1\",\"ButtonAssistVocab\":\"\",\"removeAssist:str\":\"Remove\",\"resetAssist:str\":\"Reset\",\"confirmAssist:str\":\"Rebind\",\"cancelAssist:str\":\"Exit\",\"HelpVocab\":\"\",\"selectKeyboard:json\":\"\\\"Select a key to rebind/change.\\\"\",\"pressKeyboard:json\":\"\\\"Press a keyboard button to assign this control.\\\"\",\"pressForbidden:json\":\"\\\"That key cannot be bound to a control.\\\"\",\"selectGamepad:json\":\"\\\"Select a button to rebind/change.\\\"\",\"pressGamepad:json\":\"\\\"Press a gamepad button to assign this control.\\\"\",\"buttonForbidden:json\":\"\\\"This button cannot be reassigned.\\\"\",\"noGamepadFound:json\":\"\\\"No gamepad is detected!\\\"\",\"Windows\":\"\",\"HelpWindow\":\"\",\"HelpWindow_BgType:num\":\"0\",\"RebindWindow\":\"\",\"RebindWindow_BgType:num\":\"0\",\"keyNameAlign:str\":\"center\",\"rebindAlign:str\":\"center\",\"RebindWindow_RectJS:func\":\"\\\"const buffer = 48;\\\\nconst ww = Math.ceil((Graphics.boxWidth - (buffer * 2)) * (this.isForGamepad() ? 2/3 : 1));\\\\nconst wh = this.mainAreaHeight() - (buffer * 2);\\\\nconst wx = Math.floor((Graphics.boxWidth - ww) / 2);\\\\nconst wy = this.mainAreaTop() + Math.floor((this.mainAreaHeight() - wh) / 2);\\\\nreturn new Rectangle(wx, wy, ww, wh);\\\"\",\"HelpRebindWindow\":\"\",\"HelpRebindWindow_BgType:num\":\"0\",\"HelpRebindWindow_RectJS:func\":\"\\\"const ww = Math.ceil(Graphics.boxWidth * 2/3);\\\\nconst wh = this.calcWindowHeight(2, false);\\\\nconst wx = Math.floor((Graphics.boxWidth - ww) / 2);\\\\nconst wy = Math.floor((Graphics.boxHeight - wh) / 2);\\\\nreturn new Rectangle(wx, wy, ww, wh);\\\"\"}","ControllerButtons:arraystruct":"[]","MasterVolShortcut:struct":"{\"Shortcut\":\"\",\"Enable:eval\":\"true\",\"change:num\":\"10\",\"Sfx\":\"\",\"VolUpSfx\":\"\",\"upName:str\":\"Up1\",\"upVolume:num\":\"90\",\"upPitch:num\":\"100\",\"upPan:num\":\"0\",\"VolDnSfx\":\"\",\"downName:str\":\"Down1\",\"downVolume:num\":\"90\",\"downPitch:num\":\"100\",\"downPan:num\":\"0\"}","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"VisuMZ_1_EventsMoveCore","status":true,"description":"[RPG Maker MZ] [Tier 1] [Version 1.60] [EventsMoveCore]","parameters":{"BreakHead":"----------------------------------","EventsMoveCore":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","Label:struct":"{\"FontSize:num\":\"22\",\"IconSize:num\":\"26\",\"LineHeight:num\":\"30\",\"OffsetX:num\":\"0\",\"OffsetY:num\":\"12\",\"OpacitySpeed:num\":\"16\",\"VisibleRange:num\":\"30\"}","Icon:struct":"{\"BufferX:num\":\"0\",\"BufferY:num\":\"12\",\"BlendMode:num\":\"0\"}","Template:struct":"{\"Settings\":\"\",\"PreloadMaps:arraynum\":\"[\\\"1\\\",\\\"16\\\"]\",\"Templates\":\"\",\"List:arraystruct\":\"[\\\"{\\\\\\\"Name:str\\\\\\\":\\\\\\\"Eye\\\\\\\",\\\\\\\"MapID:num\\\\\\\":\\\\\\\"16\\\\\\\",\\\\\\\"EventID:num\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"JavaScript\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"PreCopyJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\nconst mapId = arguments[1];\\\\\\\\\\\\\\\\nconst eventId = arguments[2];\\\\\\\\\\\\\\\\nconst target = arguments[3];\\\\\\\\\\\\\\\\nconst player = $gamePlayer;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"PostCopyJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\nconst mapId = arguments[1];\\\\\\\\\\\\\\\\nconst eventId = arguments[2];\\\\\\\\\\\\\\\\nconst target = arguments[3];\\\\\\\\\\\\\\\\nconst player = $gamePlayer;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"PreMorphJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\nconst mapId = arguments[1];\\\\\\\\\\\\\\\\nconst eventId = arguments[2];\\\\\\\\\\\\\\\\nconst target = arguments[3];\\\\\\\\\\\\\\\\nconst player = $gamePlayer;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"PostMorphJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\nconst mapId = arguments[1];\\\\\\\\\\\\\\\\nconst eventId = arguments[2];\\\\\\\\\\\\\\\\nconst target = arguments[3];\\\\\\\\\\\\\\\\nconst player = $gamePlayer;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"PreSpawnJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\nconst mapId = arguments[1];\\\\\\\\\\\\\\\\nconst eventId = arguments[2];\\\\\\\\\\\\\\\\nconst target = arguments[3];\\\\\\\\\\\\\\\\nconst player = $gamePlayer;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"PostSpawnJS:func\\\\\\\":\\\\\\\"\\\\\\\\\\\\\\\"// Declare Constants\\\\\\\\\\\\\\\\nconst mapId = arguments[1];\\\\\\\\\\\\\\\\nconst eventId = arguments[2];\\\\\\\\\\\\\\\\nconst target = arguments[3];\\\\\\\\\\\\\\\\nconst player = $gamePlayer;\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n// Perform Actions\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"\\\\\\\"}\\\"]\",\"JavaScript\":\"\",\"PreCopyJS:func\":\"\\\"// Declare Constants\\\\nconst mapId = arguments[1];\\\\nconst eventId = arguments[2];\\\\nconst target = arguments[3];\\\\nconst player = $gamePlayer;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PostCopyJS:func\":\"\\\"// Declare Constants\\\\nconst mapId = arguments[1];\\\\nconst eventId = arguments[2];\\\\nconst target = arguments[3];\\\\nconst player = $gamePlayer;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PreMorphJS:func\":\"\\\"// Declare Constants\\\\nconst mapId = arguments[1];\\\\nconst eventId = arguments[2];\\\\nconst target = arguments[3];\\\\nconst player = $gamePlayer;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PostMorphJS:func\":\"\\\"// Declare Constants\\\\nconst mapId = arguments[1];\\\\nconst eventId = arguments[2];\\\\nconst target = arguments[3];\\\\nconst player = $gamePlayer;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PreSpawnJS:func\":\"\\\"// Declare Constants\\\\nconst mapId = arguments[1];\\\\nconst eventId = arguments[2];\\\\nconst target = arguments[3];\\\\nconst player = $gamePlayer;\\\\n\\\\n// Perform Actions\\\\n\\\"\",\"PostSpawnJS:func\":\"\\\"// Declare Constants\\\\nconst mapId = arguments[1];\\\\nconst eventId = arguments[2];\\\\nconst target = arguments[3];\\\\nconst player = $gamePlayer;\\\\n\\\\n// Perform Actions\\\\n\\\"\"}","EventBreak":"----------------------------------","Movement:struct":"{\"Dir8\":\"\",\"EnableDir8:eval\":\"true\",\"StrictCollision:eval\":\"true\",\"FavorHorz:eval\":\"true\",\"SlowerSpeed:eval\":\"false\",\"DiagonalSpeedMultiplier:num\":\"0.85\",\"AutoMove\":\"\",\"StopAutoMoveEvents:eval\":\"true\",\"StopAutoMoveMessages:eval\":\"true\",\"Bitmap\":\"\",\"BitmapSmoothing:eval\":\"false\",\"Dash\":\"\",\"DashModifier:num\":\"+1.0\",\"DashOnLadder:eval\":\"false\",\"EnableDashTilt:eval\":\"true\",\"TiltLeft:num\":\"-0.15\",\"TiltRight:num\":\"0.15\",\"TiltVert:num\":\"0.05\",\"EventMove\":\"\",\"RandomMoveWeight:num\":\"0.10\",\"ShiftY:num\":\"-6\",\"PathFind\":\"\",\"PathfindMobileEnabled:eval\":\"false\",\"Shadows\":\"\",\"ShowShadows:eval\":\"false\",\"DefaultShadow:str\":\"Shadow1\",\"TurnInPlace\":\"\",\"EnableTurnInPlace:eval\":\"false\",\"TurnInPlaceDelay:num\":\"10\",\"Vehicle\":\"\",\"BoatSpeed:num\":\"4.0\",\"ShipSpeed:num\":\"5.0\",\"AirshipSpeed:num\":\"6.0\"}","VS8:struct":"{\"Balloons\":\"\",\"AutoBalloon:eval\":\"true\",\"BalloonOffsetX:num\":\"0\",\"BalloonOffsetY:num\":\"12\",\"Icons\":\"\",\"AutoBuffer:eval\":\"true\",\"CarryPose:eval\":\"true\"}","MovementBreak":"----------------------------------","Region:struct":"{\"Allow\":\"\",\"AllAllow:arraynum\":\"[]\",\"WalkAllow:arraynum\":\"[]\",\"PlayerAllow:arraynum\":\"[]\",\"EventAllow:arraynum\":\"[]\",\"VehicleAllow:arraynum\":\"[]\",\"BoatAllow:arraynum\":\"[]\",\"ShipAllow:arraynum\":\"[]\",\"AirshipAllow:arraynum\":\"[]\",\"Forbid\":\"\",\"AllForbid:arraynum\":\"[]\",\"WalkForbid:arraynum\":\"[]\",\"PlayerForbid:arraynum\":\"[\\\"2\\\"]\",\"EventForbid:arraynum\":\"[]\",\"VehicleForbid:arraynum\":\"[]\",\"BoatForbid:arraynum\":\"[]\",\"ShipForbid:arraynum\":\"[]\",\"AirshipForbid:arraynum\":\"[]\",\"Dock\":\"\",\"VehicleDock:arraynum\":\"[]\",\"BoatDock:arraynum\":\"[]\",\"BoatDockRegionOnly:eval\":\"false\",\"ShipDock:arraynum\":\"[]\",\"ShipDockRegionOnly:eval\":\"false\",\"AirshipDock:arraynum\":\"[]\",\"AirshipDockRegionOnly:eval\":\"false\"}","RegionOk:struct":"{\"Region1:num\":\"0\",\"Region2:num\":\"0\",\"Region3:num\":\"0\",\"Region4:num\":\"0\",\"Region5:num\":\"0\",\"Region6:num\":\"0\",\"Region7:num\":\"0\",\"Region8:num\":\"0\",\"Region9:num\":\"0\",\"Region10:num\":\"0\",\"Region11:num\":\"0\",\"Region12:num\":\"0\",\"Region13:num\":\"0\",\"Region14:num\":\"0\",\"Region15:num\":\"0\",\"Region16:num\":\"0\",\"Region17:num\":\"0\",\"Region18:num\":\"0\",\"Region19:num\":\"0\",\"Region20:num\":\"0\",\"Region21:num\":\"0\",\"Region22:num\":\"0\",\"Region23:num\":\"0\",\"Region24:num\":\"0\",\"Region25:num\":\"0\",\"Region26:num\":\"0\",\"Region27:num\":\"0\",\"Region28:num\":\"0\",\"Region29:num\":\"0\",\"Region30:num\":\"0\",\"Region31:num\":\"0\",\"Region32:num\":\"0\",\"Region33:num\":\"0\",\"Region34:num\":\"0\",\"Region35:num\":\"0\",\"Region36:num\":\"0\",\"Region37:num\":\"0\",\"Region38:num\":\"0\",\"Region39:num\":\"0\",\"Region40:num\":\"0\",\"Region41:num\":\"0\",\"Region42:num\":\"0\",\"Region43:num\":\"0\",\"Region44:num\":\"0\",\"Region45:num\":\"0\",\"Region46:num\":\"0\",\"Region47:num\":\"0\",\"Region48:num\":\"0\",\"Region49:num\":\"0\",\"Region50:num\":\"0\",\"Region51:num\":\"0\",\"Region52:num\":\"0\",\"Region53:num\":\"0\",\"Region54:num\":\"0\",\"Region55:num\":\"0\",\"Region56:num\":\"0\",\"Region57:num\":\"0\",\"Region58:num\":\"0\",\"Region59:num\":\"0\",\"Region60:num\":\"0\",\"Region61:num\":\"0\",\"Region62:num\":\"0\",\"Region63:num\":\"0\",\"Region64:num\":\"0\",\"Region65:num\":\"0\",\"Region66:num\":\"0\",\"Region67:num\":\"0\",\"Region68:num\":\"0\",\"Region69:num\":\"0\",\"Region70:num\":\"0\",\"Region71:num\":\"0\",\"Region72:num\":\"0\",\"Region73:num\":\"0\",\"Region74:num\":\"0\",\"Region75:num\":\"0\",\"Region76:num\":\"0\",\"Region77:num\":\"0\",\"Region78:num\":\"0\",\"Region79:num\":\"0\",\"Region80:num\":\"0\",\"Region81:num\":\"0\",\"Region82:num\":\"0\",\"Region83:num\":\"0\",\"Region84:num\":\"0\",\"Region85:num\":\"0\",\"Region86:num\":\"0\",\"Region87:num\":\"0\",\"Region88:num\":\"0\",\"Region89:num\":\"0\",\"Region90:num\":\"0\",\"Region91:num\":\"0\",\"Region92:num\":\"0\",\"Region93:num\":\"0\",\"Region94:num\":\"0\",\"Region95:num\":\"0\",\"Region96:num\":\"0\",\"Region97:num\":\"0\",\"Region98:num\":\"0\",\"Region99:num\":\"0\",\"Region100:num\":\"0\",\"Region101:num\":\"0\",\"Region102:num\":\"0\",\"Region103:num\":\"0\",\"Region104:num\":\"0\",\"Region105:num\":\"0\",\"Region106:num\":\"0\",\"Region107:num\":\"0\",\"Region108:num\":\"0\",\"Region109:num\":\"0\",\"Region110:num\":\"0\",\"Region111:num\":\"0\",\"Region112:num\":\"0\",\"Region113:num\":\"0\",\"Region114:num\":\"0\",\"Region115:num\":\"0\",\"Region116:num\":\"0\",\"Region117:num\":\"0\",\"Region118:num\":\"0\",\"Region119:num\":\"0\",\"Region120:num\":\"0\",\"Region121:num\":\"0\",\"Region122:num\":\"0\",\"Region123:num\":\"0\",\"Region124:num\":\"0\",\"Region125:num\":\"0\",\"Region126:num\":\"0\",\"Region127:num\":\"0\",\"Region128:num\":\"0\",\"Region129:num\":\"0\",\"Region130:num\":\"0\",\"Region131:num\":\"0\",\"Region132:num\":\"0\",\"Region133:num\":\"0\",\"Region134:num\":\"0\",\"Region135:num\":\"0\",\"Region136:num\":\"0\",\"Region137:num\":\"0\",\"Region138:num\":\"0\",\"Region139:num\":\"0\",\"Region140:num\":\"0\",\"Region141:num\":\"0\",\"Region142:num\":\"0\",\"Region143:num\":\"0\",\"Region144:num\":\"0\",\"Region145:num\":\"0\",\"Region146:num\":\"0\",\"Region147:num\":\"0\",\"Region148:num\":\"0\",\"Region149:num\":\"0\",\"Region150:num\":\"0\",\"Region151:num\":\"0\",\"Region152:num\":\"0\",\"Region153:num\":\"0\",\"Region154:num\":\"0\",\"Region155:num\":\"0\",\"Region156:num\":\"0\",\"Region157:num\":\"0\",\"Region158:num\":\"0\",\"Region159:num\":\"0\",\"Region160:num\":\"0\",\"Region161:num\":\"0\",\"Region162:num\":\"0\",\"Region163:num\":\"0\",\"Region164:num\":\"0\",\"Region165:num\":\"0\",\"Region166:num\":\"0\",\"Region167:num\":\"0\",\"Region168:num\":\"0\",\"Region169:num\":\"0\",\"Region170:num\":\"0\",\"Region171:num\":\"0\",\"Region172:num\":\"0\",\"Region173:num\":\"0\",\"Region174:num\":\"0\",\"Region175:num\":\"0\",\"Region176:num\":\"0\",\"Region177:num\":\"0\",\"Region178:num\":\"0\",\"Region179:num\":\"0\",\"Region180:num\":\"0\",\"Region181:num\":\"0\",\"Region182:num\":\"0\",\"Region183:num\":\"0\",\"Region184:num\":\"0\",\"Region185:num\":\"0\",\"Region186:num\":\"0\",\"Region187:num\":\"0\",\"Region188:num\":\"0\",\"Region189:num\":\"0\",\"Region190:num\":\"0\",\"Region191:num\":\"0\",\"Region192:num\":\"0\",\"Region193:num\":\"0\",\"Region194:num\":\"0\",\"Region195:num\":\"0\",\"Region196:num\":\"0\",\"Region197:num\":\"0\",\"Region198:num\":\"0\",\"Region199:num\":\"0\",\"Region200:num\":\"0\",\"Region201:num\":\"0\",\"Region202:num\":\"0\",\"Region203:num\":\"0\",\"Region204:num\":\"0\",\"Region205:num\":\"0\",\"Region206:num\":\"0\",\"Region207:num\":\"0\",\"Region208:num\":\"0\",\"Region209:num\":\"0\",\"Region210:num\":\"0\",\"Region211:num\":\"0\",\"Region212:num\":\"0\",\"Region213:num\":\"0\",\"Region214:num\":\"0\",\"Region215:num\":\"0\",\"Region216:num\":\"0\",\"Region217:num\":\"0\",\"Region218:num\":\"0\",\"Region219:num\":\"0\",\"Region220:num\":\"0\",\"Region221:num\":\"0\",\"Region222:num\":\"0\",\"Region223:num\":\"0\",\"Region224:num\":\"0\",\"Region225:num\":\"0\",\"Region226:num\":\"0\",\"Region227:num\":\"0\",\"Region228:num\":\"0\",\"Region229:num\":\"0\",\"Region230:num\":\"0\",\"Region231:num\":\"0\",\"Region232:num\":\"0\",\"Region233:num\":\"0\",\"Region234:num\":\"0\",\"Region235:num\":\"0\",\"Region236:num\":\"0\",\"Region237:num\":\"0\",\"Region238:num\":\"0\",\"Region239:num\":\"0\",\"Region240:num\":\"0\",\"Region241:num\":\"0\",\"Region242:num\":\"0\",\"Region243:num\":\"0\",\"Region244:num\":\"0\",\"Region245:num\":\"0\",\"Region246:num\":\"0\",\"Region247:num\":\"0\",\"Region248:num\":\"0\",\"Region249:num\":\"0\",\"Region250:num\":\"0\",\"Region251:num\":\"0\",\"Region252:num\":\"0\",\"Region253:num\":\"0\",\"Region254:num\":\"0\",\"Region255:num\":\"0\"}","RegionOkTarget:str":"front","RegionTouch:struct":"{\"Region1:num\":\"0\",\"Region2:num\":\"0\",\"Region3:num\":\"0\",\"Region4:num\":\"0\",\"Region5:num\":\"0\",\"Region6:num\":\"0\",\"Region7:num\":\"0\",\"Region8:num\":\"0\",\"Region9:num\":\"0\",\"Region10:num\":\"0\",\"Region11:num\":\"0\",\"Region12:num\":\"0\",\"Region13:num\":\"0\",\"Region14:num\":\"0\",\"Region15:num\":\"0\",\"Region16:num\":\"0\",\"Region17:num\":\"0\",\"Region18:num\":\"0\",\"Region19:num\":\"0\",\"Region20:num\":\"0\",\"Region21:num\":\"0\",\"Region22:num\":\"0\",\"Region23:num\":\"0\",\"Region24:num\":\"0\",\"Region25:num\":\"0\",\"Region26:num\":\"0\",\"Region27:num\":\"0\",\"Region28:num\":\"0\",\"Region29:num\":\"0\",\"Region30:num\":\"0\",\"Region31:num\":\"0\",\"Region32:num\":\"0\",\"Region33:num\":\"0\",\"Region34:num\":\"0\",\"Region35:num\":\"0\",\"Region36:num\":\"0\",\"Region37:num\":\"0\",\"Region38:num\":\"0\",\"Region39:num\":\"0\",\"Region40:num\":\"0\",\"Region41:num\":\"0\",\"Region42:num\":\"0\",\"Region43:num\":\"0\",\"Region44:num\":\"0\",\"Region45:num\":\"0\",\"Region46:num\":\"0\",\"Region47:num\":\"0\",\"Region48:num\":\"0\",\"Region49:num\":\"0\",\"Region50:num\":\"0\",\"Region51:num\":\"0\",\"Region52:num\":\"0\",\"Region53:num\":\"0\",\"Region54:num\":\"0\",\"Region55:num\":\"0\",\"Region56:num\":\"0\",\"Region57:num\":\"0\",\"Region58:num\":\"0\",\"Region59:num\":\"0\",\"Region60:num\":\"0\",\"Region61:num\":\"0\",\"Region62:num\":\"0\",\"Region63:num\":\"0\",\"Region64:num\":\"0\",\"Region65:num\":\"0\",\"Region66:num\":\"0\",\"Region67:num\":\"0\",\"Region68:num\":\"0\",\"Region69:num\":\"0\",\"Region70:num\":\"0\",\"Region71:num\":\"0\",\"Region72:num\":\"0\",\"Region73:num\":\"0\",\"Region74:num\":\"0\",\"Region75:num\":\"0\",\"Region76:num\":\"0\",\"Region77:num\":\"0\",\"Region78:num\":\"0\",\"Region79:num\":\"0\",\"Region80:num\":\"0\",\"Region81:num\":\"0\",\"Region82:num\":\"0\",\"Region83:num\":\"0\",\"Region84:num\":\"0\",\"Region85:num\":\"0\",\"Region86:num\":\"0\",\"Region87:num\":\"0\",\"Region88:num\":\"0\",\"Region89:num\":\"0\",\"Region90:num\":\"0\",\"Region91:num\":\"0\",\"Region92:num\":\"0\",\"Region93:num\":\"0\",\"Region94:num\":\"0\",\"Region95:num\":\"0\",\"Region96:num\":\"0\",\"Region97:num\":\"0\",\"Region98:num\":\"0\",\"Region99:num\":\"0\",\"Region100:num\":\"0\",\"Region101:num\":\"0\",\"Region102:num\":\"0\",\"Region103:num\":\"0\",\"Region104:num\":\"0\",\"Region105:num\":\"0\",\"Region106:num\":\"0\",\"Region107:num\":\"0\",\"Region108:num\":\"0\",\"Region109:num\":\"0\",\"Region110:num\":\"0\",\"Region111:num\":\"0\",\"Region112:num\":\"0\",\"Region113:num\":\"0\",\"Region114:num\":\"0\",\"Region115:num\":\"0\",\"Region116:num\":\"0\",\"Region117:num\":\"0\",\"Region118:num\":\"0\",\"Region119:num\":\"0\",\"Region120:num\":\"0\",\"Region121:num\":\"0\",\"Region122:num\":\"0\",\"Region123:num\":\"0\",\"Region124:num\":\"0\",\"Region125:num\":\"0\",\"Region126:num\":\"0\",\"Region127:num\":\"0\",\"Region128:num\":\"0\",\"Region129:num\":\"0\",\"Region130:num\":\"0\",\"Region131:num\":\"0\",\"Region132:num\":\"0\",\"Region133:num\":\"0\",\"Region134:num\":\"0\",\"Region135:num\":\"0\",\"Region136:num\":\"0\",\"Region137:num\":\"0\",\"Region138:num\":\"0\",\"Region139:num\":\"0\",\"Region140:num\":\"0\",\"Region141:num\":\"0\",\"Region142:num\":\"0\",\"Region143:num\":\"0\",\"Region144:num\":\"0\",\"Region145:num\":\"0\",\"Region146:num\":\"0\",\"Region147:num\":\"0\",\"Region148:num\":\"0\",\"Region149:num\":\"0\",\"Region150:num\":\"0\",\"Region151:num\":\"0\",\"Region152:num\":\"0\",\"Region153:num\":\"0\",\"Region154:num\":\"0\",\"Region155:num\":\"0\",\"Region156:num\":\"0\",\"Region157:num\":\"0\",\"Region158:num\":\"0\",\"Region159:num\":\"0\",\"Region160:num\":\"0\",\"Region161:num\":\"0\",\"Region162:num\":\"0\",\"Region163:num\":\"0\",\"Region164:num\":\"0\",\"Region165:num\":\"0\",\"Region166:num\":\"0\",\"Region167:num\":\"0\",\"Region168:num\":\"0\",\"Region169:num\":\"0\",\"Region170:num\":\"0\",\"Region171:num\":\"0\",\"Region172:num\":\"0\",\"Region173:num\":\"0\",\"Region174:num\":\"0\",\"Region175:num\":\"0\",\"Region176:num\":\"0\",\"Region177:num\":\"0\",\"Region178:num\":\"0\",\"Region179:num\":\"0\",\"Region180:num\":\"0\",\"Region181:num\":\"0\",\"Region182:num\":\"0\",\"Region183:num\":\"0\",\"Region184:num\":\"0\",\"Region185:num\":\"0\",\"Region186:num\":\"0\",\"Region187:num\":\"0\",\"Region188:num\":\"0\",\"Region189:num\":\"0\",\"Region190:num\":\"0\",\"Region191:num\":\"0\",\"Region192:num\":\"0\",\"Region193:num\":\"0\",\"Region194:num\":\"0\",\"Region195:num\":\"0\",\"Region196:num\":\"0\",\"Region197:num\":\"0\",\"Region198:num\":\"0\",\"Region199:num\":\"0\",\"Region200:num\":\"0\",\"Region201:num\":\"0\",\"Region202:num\":\"0\",\"Region203:num\":\"0\",\"Region204:num\":\"0\",\"Region205:num\":\"0\",\"Region206:num\":\"0\",\"Region207:num\":\"0\",\"Region208:num\":\"0\",\"Region209:num\":\"0\",\"Region210:num\":\"0\",\"Region211:num\":\"0\",\"Region212:num\":\"0\",\"Region213:num\":\"0\",\"Region214:num\":\"0\",\"Region215:num\":\"0\",\"Region216:num\":\"0\",\"Region217:num\":\"0\",\"Region218:num\":\"0\",\"Region219:num\":\"0\",\"Region220:num\":\"0\",\"Region221:num\":\"0\",\"Region222:num\":\"0\",\"Region223:num\":\"0\",\"Region224:num\":\"0\",\"Region225:num\":\"0\",\"Region226:num\":\"0\",\"Region227:num\":\"0\",\"Region228:num\":\"0\",\"Region229:num\":\"0\",\"Region230:num\":\"0\",\"Region231:num\":\"0\",\"Region232:num\":\"0\",\"Region233:num\":\"0\",\"Region234:num\":\"0\",\"Region235:num\":\"0\",\"Region236:num\":\"0\",\"Region237:num\":\"0\",\"Region238:num\":\"0\",\"Region239:num\":\"0\",\"Region240:num\":\"0\",\"Region241:num\":\"0\",\"Region242:num\":\"0\",\"Region243:num\":\"0\",\"Region244:num\":\"0\",\"Region245:num\":\"0\",\"Region246:num\":\"0\",\"Region247:num\":\"0\",\"Region248:num\":\"0\",\"Region249:num\":\"0\",\"Region250:num\":\"0\",\"Region251:num\":\"0\",\"Region252:num\":\"0\",\"Region253:num\":\"0\",\"Region254:num\":\"0\",\"Region255:num\":\"0\"}","TerrainTag:struct":"{\"TerrainTag\":\"\",\"Rope:num\":\"1\"}","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"VisuMZ_2_HorrorEffects","status":true,"description":"[RPG Maker MZ] [Tier 2] [Version 1.05] [HorrorEffects]","parameters":{"BreakHead":"----------------------------------","HorrorEffects":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","Title1Settings:struct":"{\"FilterNoise\":\"\",\"Noise:eval\":\"false\",\"NoiseRate:num\":\"0.3\",\"NoiseAni:eval\":\"true\",\"FilterGlitch\":\"\",\"Glitch:eval\":\"true\",\"GlitchSlices:num\":\"25\",\"GlitchOffset:num\":\"30\",\"GlitchAni:eval\":\"true\",\"GlitchAniFreq:num\":\"300\",\"GlitchAniStr:num\":\"10\",\"FilterTV\":\"\",\"TV:eval\":\"true\",\"TVLineThickness:num\":\"1\",\"TVCorner:num\":\"0.3\",\"TVAni:eval\":\"true\",\"TVAniSpeed:num\":\"0.25\"}","Title2Settings:struct":"{\"FilterNoise\":\"\",\"Noise:eval\":\"false\",\"NoiseRate:num\":\"0.3\",\"NoiseAni:eval\":\"true\",\"FilterGlitch\":\"\",\"Glitch:eval\":\"false\",\"GlitchSlices:num\":\"10\",\"GlitchOffset:num\":\"100\",\"GlitchAni:eval\":\"true\",\"GlitchAniFreq:num\":\"300\",\"GlitchAniStr:num\":\"30\",\"FilterTV\":\"\",\"TV:eval\":\"false\",\"TVLineThickness:num\":\"5\",\"TVCorner:num\":\"0.3\",\"TVAni:eval\":\"true\",\"TVAniSpeed:num\":\"0.25\"}","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"VisuMZ_2_VoiceActControl","status":true,"description":"[RPG Maker MZ] [Tier 2] [Version 1.06] [VoiceActControl]","parameters":{"BreakHead":"----------------------------------","VoiceActControl":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","General":"","newPageRegisterLastSound:eval":"true","stopVoicesOnNewMessage:eval":"true","OptionName:str":"Voice Volume","Sprite:struct":"{\"Show:eval\":\"false\",\"Icons\":\"\",\"iconNoHover:num\":\"20\",\"iconOnHover:num\":\"4\",\"position:num\":\"8\",\"positionOffsetX:num\":\"+0\",\"positionOffsetY:num\":\"+0\",\"Buffer\":\"\",\"bufferLeftSideFaceImage:eval\":\"true\",\"bufferRightSideWordWrap:eval\":\"true\",\"bufferWidth:num\":\"8\"}","Localization:struct":"{}","AutoVA":"","AutoVaListedNames:arraystr":"[]","AutoVaNameTextMarkers:arraystr":"[\"[VA]\",\"Line\"]","AutoVaListedFolders:arraystr":"[]","AutoVaFolderTextMarkers:arraystr":"[\"Voice\",\"Line\"]","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"VisuMZ_2_AniMsgTextEffects","status":true,"description":"[RPG Maker MZ] [Tier 2] [Version 1.04] [AniMsgTextEffects]","parameters":{"BreakHead":"----------------------------------","AniMsgTextEffects":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","TextEffects":"","AngleEffects:arraystruct":"[\"{\\\"Name:str\\\":\\\"Swing\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"15\\\",\\\"PendulumSpeed:num\\\":\\\"0.25\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"0\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowSwing\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"15\\\",\\\"PendulumSpeed:num\\\":\\\"0.10\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"0\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastSwing\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"15\\\",\\\"PendulumSpeed:num\\\":\\\"0.40\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"0\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Wag\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"15\\\",\\\"PendulumSpeed:num\\\":\\\"0.25\\\",\\\"PendulumOffset:num\\\":\\\"8\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"0\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowWag\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"15\\\",\\\"PendulumSpeed:num\\\":\\\"0.10\\\",\\\"PendulumOffset:num\\\":\\\"8\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"0\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastWag\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"15\\\",\\\"PendulumSpeed:num\\\":\\\"0.40\\\",\\\"PendulumOffset:num\\\":\\\"8\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"0\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Jelly\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"15\\\",\\\"PendulumSpeed:num\\\":\\\"0.25\\\",\\\"PendulumOffset:num\\\":\\\"15\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"0\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowJelly\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"15\\\",\\\"PendulumSpeed:num\\\":\\\"0.10\\\",\\\"PendulumOffset:num\\\":\\\"15\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"0\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastJelly\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"15\\\",\\\"PendulumSpeed:num\\\":\\\"0.40\\\",\\\"PendulumOffset:num\\\":\\\"12\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"0\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SpinCW\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"0\\\",\\\"PendulumSpeed:num\\\":\\\"0\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"-2.4\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowSpinCW\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"0\\\",\\\"PendulumSpeed:num\\\":\\\"0\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"-1.8\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastSpinCW\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"0\\\",\\\"PendulumSpeed:num\\\":\\\"0\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"-3.6\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SpinCCW\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"0\\\",\\\"PendulumSpeed:num\\\":\\\"0\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"+2.4\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowSpinCCW\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"0\\\",\\\"PendulumSpeed:num\\\":\\\"0\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"+1.8\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastSpinCCW\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"0\\\",\\\"PendulumSpeed:num\\\":\\\"0\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"+3.6\\\",\\\"RotationOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"RollCW\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"0\\\",\\\"PendulumSpeed:num\\\":\\\"0\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"-2.4\\\",\\\"RotationOffset:num\\\":\\\"-12\\\"}\",\"{\\\"Name:str\\\":\\\"SlowRollCW\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"0\\\",\\\"PendulumSpeed:num\\\":\\\"0\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"-1.8\\\",\\\"RotationOffset:num\\\":\\\"-9\\\"}\",\"{\\\"Name:str\\\":\\\"FastRollCW\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"0\\\",\\\"PendulumSpeed:num\\\":\\\"0\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"-3.6\\\",\\\"RotationOffset:num\\\":\\\"-15\\\"}\",\"{\\\"Name:str\\\":\\\"RollCCW\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"0\\\",\\\"PendulumSpeed:num\\\":\\\"0\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"+2.4\\\",\\\"RotationOffset:num\\\":\\\"12\\\"}\",\"{\\\"Name:str\\\":\\\"SlowRollCCW\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"0\\\",\\\"PendulumSpeed:num\\\":\\\"0\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"+1.8\\\",\\\"RotationOffset:num\\\":\\\"9\\\"}\",\"{\\\"Name:str\\\":\\\"FastRollCCW\\\",\\\"Angles\\\":\\\"\\\",\\\"Pendulum\\\":\\\"\\\",\\\"PendulumArc:num\\\":\\\"0\\\",\\\"PendulumSpeed:num\\\":\\\"0\\\",\\\"PendulumOffset:num\\\":\\\"0\\\",\\\"Rotation\\\":\\\"\\\",\\\"RotationSpeed:num\\\":\\\"+3.6\\\",\\\"RotationOffset:num\\\":\\\"15\\\"}\"]","ColorEffects:arraystruct":"[\"{\\\"Name:str\\\":\\\"Prism\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"#f69679\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"-6\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowPrism\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"#f69679\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"-3\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastPrism\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"#f69679\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"-9\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Rainbow\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"#f69679\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"-6\\\",\\\"InitialHueOffset:num\\\":\\\"36\\\"}\",\"{\\\"Name:str\\\":\\\"SlowRainbow\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"#f69679\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"-3\\\",\\\"InitialHueOffset:num\\\":\\\"36\\\"}\",\"{\\\"Name:str\\\":\\\"FastRainbow\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"#f69679\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"-9\\\",\\\"InitialHueOffset:num\\\":\\\"36\\\"}\",\"{\\\"Name:str\\\":\\\"Gamer\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"#f69679\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"-6\\\",\\\"InitialHueOffset:num\\\":\\\"-216\\\"}\",\"{\\\"Name:str\\\":\\\"SlowGamer\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"#f69679\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"-3\\\",\\\"InitialHueOffset:num\\\":\\\"-216\\\"}\",\"{\\\"Name:str\\\":\\\"FastGamer\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"#f69679\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"-9\\\",\\\"InitialHueOffset:num\\\":\\\"-216\\\"}\",\"{\\\"Name:str\\\":\\\"Red\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"SoftRed\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 0, 0]\\\\\\\",\\\\\\\"[0, 0, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"true\\\"}\",\"{\\\"Name:str\\\":\\\"HardRed\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 0, 0]\\\\\\\",\\\\\\\"[0, 0, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"Green\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[0, 255, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"SoftGreen\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[0, 255, 0, 0]\\\\\\\",\\\\\\\"[0, 0, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"true\\\"}\",\"{\\\"Name:str\\\":\\\"HardGreen\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[0, 255, 0, 0]\\\\\\\",\\\\\\\"[0, 0, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"Blue\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[0, 0, 255, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"SoftBlue\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[0, 0, 255, 0]\\\\\\\",\\\\\\\"[0, 0, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"true\\\"}\",\"{\\\"Name:str\\\":\\\"HardBlue\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[0, 0, 255, 0]\\\\\\\",\\\\\\\"[0, 0, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"Yellow\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 255, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"SoftYellow\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 255, 0, 0]\\\\\\\",\\\\\\\"[0, 0, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"true\\\"}\",\"{\\\"Name:str\\\":\\\"HardYellow\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 255, 0, 0]\\\\\\\",\\\\\\\"[0, 0, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"Cyan\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[0, 255, 255, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"SoftCyan\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[0, 255, 255, 0]\\\\\\\",\\\\\\\"[0, 0, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"true\\\"}\",\"{\\\"Name:str\\\":\\\"HardCyan\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[0, 255, 255, 0]\\\\\\\",\\\\\\\"[0, 0, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"Magenta\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 255, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"SoftMagenta\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 255, 0]\\\\\\\",\\\\\\\"[0, 0, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"true\\\"}\",\"{\\\"Name:str\\\":\\\"HardMagenta\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 255, 0]\\\\\\\",\\\\\\\"[0, 0, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"0\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"RGB\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 0, 0]\\\\\\\",\\\\\\\"[255, 255, 0, 0]\\\\\\\",\\\\\\\"[0, 255, 0, 0]\\\\\\\",\\\\\\\"[0, 255, 255, 0]\\\\\\\",\\\\\\\"[0, 0, 255, 0]\\\\\\\",\\\\\\\"[255, 0, 255, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"20\\\",\\\"InitialToneOffset:num\\\":\\\"-1\\\",\\\"SmoothToneChange:eval\\\":\\\"true\\\"}\",\"{\\\"Name:str\\\":\\\"SlowRGB\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 0, 0]\\\\\\\",\\\\\\\"[255, 255, 0, 0]\\\\\\\",\\\\\\\"[0, 255, 0, 0]\\\\\\\",\\\\\\\"[0, 255, 255, 0]\\\\\\\",\\\\\\\"[0, 0, 255, 0]\\\\\\\",\\\\\\\"[255, 0, 255, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"-1\\\",\\\"SmoothToneChange:eval\\\":\\\"true\\\"}\",\"{\\\"Name:str\\\":\\\"FastRGB\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 0, 0]\\\\\\\",\\\\\\\"[255, 255, 0, 0]\\\\\\\",\\\\\\\"[0, 255, 0, 0]\\\\\\\",\\\\\\\"[0, 255, 255, 0]\\\\\\\",\\\\\\\"[0, 0, 255, 0]\\\\\\\",\\\\\\\"[255, 0, 255, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"10\\\",\\\"InitialToneOffset:num\\\":\\\"-1\\\",\\\"SmoothToneChange:eval\\\":\\\"true\\\"}\",\"{\\\"Name:str\\\":\\\"Fes\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 0, 0]\\\\\\\",\\\\\\\"[0, 255, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"20\\\",\\\"InitialToneOffset:num\\\":\\\"-1\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"SlowFes\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 0, 0]\\\\\\\",\\\\\\\"[0, 255, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"-1\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"FastFes\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 0, 0]\\\\\\\",\\\\\\\"[0, 255, 0, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"10\\\",\\\"InitialToneOffset:num\\\":\\\"-1\\\",\\\"SmoothToneChange:eval\\\":\\\"false\\\"}\",\"{\\\"Name:str\\\":\\\"Gig\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 0, 0]\\\\\\\",\\\\\\\"[0, 255, 0, 0]\\\\\\\",\\\\\\\"[0, 0, 255, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"20\\\",\\\"InitialToneOffset:num\\\":\\\"-1\\\",\\\"SmoothToneChange:eval\\\":\\\"true\\\"}\",\"{\\\"Name:str\\\":\\\"SlowGig\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 0, 0]\\\\\\\",\\\\\\\"[0, 255, 0, 0]\\\\\\\",\\\\\\\"[0, 0, 255, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"30\\\",\\\"InitialToneOffset:num\\\":\\\"-1\\\",\\\"SmoothToneChange:eval\\\":\\\"true\\\"}\",\"{\\\"Name:str\\\":\\\"FastGig\\\",\\\"Color\\\":\\\"\\\",\\\"ForcedColor:str\\\":\\\"\\\",\\\"Hue\\\":\\\"\\\",\\\"HueShift:num\\\":\\\"0\\\",\\\"InitialHueOffset:num\\\":\\\"0\\\",\\\"Tone\\\":\\\"\\\",\\\"colorTones:arrayeval\\\":\\\"[\\\\\\\"[255, 0, 0, 0]\\\\\\\",\\\\\\\"[0, 255, 0, 0]\\\\\\\",\\\\\\\"[0, 0, 255, 0]\\\\\\\"]\\\",\\\"toneDelay:num\\\":\\\"10\\\",\\\"InitialToneOffset:num\\\":\\\"-1\\\",\\\"SmoothToneChange:eval\\\":\\\"true\\\"}\"]","OpacityEffects:arraystruct":"[\"{\\\"Name:str\\\":\\\"Glow\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0.50\\\",\\\"glowSpeed:num\\\":\\\"0.25\\\",\\\"glowOffset:num\\\":\\\"0\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"\\\",\\\"patternDelay:num\\\":\\\"0\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowGlow\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0.50\\\",\\\"glowSpeed:num\\\":\\\"0.10\\\",\\\"glowOffset:num\\\":\\\"0\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"\\\",\\\"patternDelay:num\\\":\\\"0\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastGlow\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0.50\\\",\\\"glowSpeed:num\\\":\\\"0.40\\\",\\\"glowOffset:num\\\":\\\"0\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"\\\",\\\"patternDelay:num\\\":\\\"0\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Flow\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0.50\\\",\\\"glowSpeed:num\\\":\\\"0.25\\\",\\\"glowOffset:num\\\":\\\"2\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"\\\",\\\"patternDelay:num\\\":\\\"0\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowFlow\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0.50\\\",\\\"glowSpeed:num\\\":\\\"0.10\\\",\\\"glowOffset:num\\\":\\\"2\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"\\\",\\\"patternDelay:num\\\":\\\"0\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastFlow\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0.50\\\",\\\"glowSpeed:num\\\":\\\"0.40\\\",\\\"glowOffset:num\\\":\\\"2\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"\\\",\\\"patternDelay:num\\\":\\\"0\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Blink\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0.50\\\",\\\"glowSpeed:num\\\":\\\"0.25\\\",\\\"glowOffset:num\\\":\\\"15\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"\\\",\\\"patternDelay:num\\\":\\\"0\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowBlink\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0.50\\\",\\\"glowSpeed:num\\\":\\\"0.10\\\",\\\"glowOffset:num\\\":\\\"30\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"\\\",\\\"patternDelay:num\\\":\\\"0\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastBlink\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0.50\\\",\\\"glowSpeed:num\\\":\\\"0.40\\\",\\\"glowOffset:num\\\":\\\"8\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"\\\",\\\"patternDelay:num\\\":\\\"0\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Campfire\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0\\\",\\\"glowSpeed:num\\\":\\\"0\\\",\\\"glowOffset:num\\\":\\\"0\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"mmmaaammmaaammmabcdefaaaammmmabcdefmmmaaaa\\\",\\\"patternDelay:num\\\":\\\"2\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Candle\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0\\\",\\\"glowSpeed:num\\\":\\\"0\\\",\\\"glowOffset:num\\\":\\\"0\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"mmmmmaaaaammmmmaaaaaabcdefgabcdefg\\\",\\\"patternDelay:num\\\":\\\"2\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Fade\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0\\\",\\\"glowSpeed:num\\\":\\\"0\\\",\\\"glowOffset:num\\\":\\\"0\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"abcdefghijklmnopqrrqponmlkjihgfedcba\\\",\\\"patternDelay:num\\\":\\\"4\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Flicker\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0\\\",\\\"glowSpeed:num\\\":\\\"0\\\",\\\"glowOffset:num\\\":\\\"0\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"nmonqnmomnmomomno\\\",\\\"patternDelay:num\\\":\\\"4\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Fluorescent\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0\\\",\\\"glowSpeed:num\\\":\\\"0\\\",\\\"glowOffset:num\\\":\\\"0\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"mmamammmmammamamaaamammma\\\",\\\"patternDelay:num\\\":\\\"4\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Halogen\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0\\\",\\\"glowSpeed:num\\\":\\\"0\\\",\\\"glowOffset:num\\\":\\\"0\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"mmnmmommommnonmmonqnmmo\\\",\\\"patternDelay:num\\\":\\\"4\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Strobe\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0\\\",\\\"glowSpeed:num\\\":\\\"0\\\",\\\"glowOffset:num\\\":\\\"0\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"mamamamamama\\\",\\\"patternDelay:num\\\":\\\"4\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Torch\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0\\\",\\\"glowSpeed:num\\\":\\\"0\\\",\\\"glowOffset:num\\\":\\\"0\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"mmmaaaabcdefgmmmmaaaammmaamm\\\",\\\"patternDelay:num\\\":\\\"2\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Underwater\\\",\\\"Opacity\\\":\\\"\\\",\\\"InitialOpacity:num\\\":\\\"255\\\",\\\"Glow\\\":\\\"\\\",\\\"glowRate:num\\\":\\\"0\\\",\\\"glowSpeed:num\\\":\\\"0\\\",\\\"glowOffset:num\\\":\\\"0\\\",\\\"Pattern\\\":\\\"\\\",\\\"pattern:str\\\":\\\"mmnnmmnnnmmnn\\\",\\\"patternDelay:num\\\":\\\"4\\\",\\\"patternOffset:num\\\":\\\"0\\\"}\"]","PositionEffects:arraystruct":"[\"{\\\"Name:str\\\":\\\"Shake\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"2\\\",\\\"ShakeStrengthVert:num\\\":\\\"2\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SoftShake\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"1\\\",\\\"ShakeStrengthVert:num\\\":\\\"1\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"HardShake\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"3\\\",\\\"ShakeStrengthVert:num\\\":\\\"3\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Shiver\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"2\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SoftShiver\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"1\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"HardShiver\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"3\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Vibe\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"2\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SoftVibe\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"1\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"HardVibe\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"3\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Stagger\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"4\\\",\\\"WaveSpeedY:num\\\":\\\"0.25\\\",\\\"WaveOffsetY:num\\\":\\\"15\\\"}\",\"{\\\"Name:str\\\":\\\"SlowStagger\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"4\\\",\\\"WaveSpeedY:num\\\":\\\"0.10\\\",\\\"WaveOffsetY:num\\\":\\\"30\\\"}\",\"{\\\"Name:str\\\":\\\"FastStagger\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"4\\\",\\\"WaveSpeedY:num\\\":\\\"0.50\\\",\\\"WaveOffsetY:num\\\":\\\"30\\\"}\",\"{\\\"Name:str\\\":\\\"Saw\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"3\\\",\\\"WaveSpeedX:num\\\":\\\"0.25\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowSaw\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"3\\\",\\\"WaveSpeedX:num\\\":\\\"0.10\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastSaw\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"3\\\",\\\"WaveSpeedX:num\\\":\\\"0.40\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Bounce\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"3\\\",\\\"WaveSpeedY:num\\\":\\\"0.25\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowBounce\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"3\\\",\\\"WaveSpeedY:num\\\":\\\"0.10\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastBounce\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"3\\\",\\\"WaveSpeedY:num\\\":\\\"0.40\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Wave\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"3\\\",\\\"WaveSpeedX:num\\\":\\\"0.25\\\",\\\"WaveOffsetX:num\\\":\\\"1\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"3\\\",\\\"WaveSpeedY:num\\\":\\\"0.25\\\",\\\"WaveOffsetY:num\\\":\\\"2\\\"}\",\"{\\\"Name:str\\\":\\\"SlowWave\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"3\\\",\\\"WaveSpeedX:num\\\":\\\"0.10\\\",\\\"WaveOffsetX:num\\\":\\\"1\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"3\\\",\\\"WaveSpeedY:num\\\":\\\"0.10\\\",\\\"WaveOffsetY:num\\\":\\\"2\\\"}\",\"{\\\"Name:str\\\":\\\"FastWave\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"3\\\",\\\"WaveSpeedX:num\\\":\\\"0.40\\\",\\\"WaveOffsetX:num\\\":\\\"1\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"3\\\",\\\"WaveSpeedY:num\\\":\\\"0.40\\\",\\\"WaveOffsetY:num\\\":\\\"2\\\"}\",\"{\\\"Name:str\\\":\\\"HorzWave\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"3\\\",\\\"WaveSpeedX:num\\\":\\\"0.25\\\",\\\"WaveOffsetX:num\\\":\\\"1\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowHorzWave\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"3\\\",\\\"WaveSpeedX:num\\\":\\\"0.10\\\",\\\"WaveOffsetX:num\\\":\\\"1\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastHorzWave\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"3\\\",\\\"WaveSpeedX:num\\\":\\\"0.40\\\",\\\"WaveOffsetX:num\\\":\\\"1\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"0\\\",\\\"WaveSpeedY:num\\\":\\\"0\\\",\\\"WaveOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"VertWave\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"3\\\",\\\"WaveSpeedY:num\\\":\\\"0.25\\\",\\\"WaveOffsetY:num\\\":\\\"2\\\"}\",\"{\\\"Name:str\\\":\\\"SlowVertWave\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"3\\\",\\\"WaveSpeedY:num\\\":\\\"0.10\\\",\\\"WaveOffsetY:num\\\":\\\"2\\\"}\",\"{\\\"Name:str\\\":\\\"FastVertWave\\\",\\\"Positioning\\\":\\\"\\\",\\\"Shake\\\":\\\"\\\",\\\"ShakeStrengthHorz:num\\\":\\\"0\\\",\\\"ShakeStrengthVert:num\\\":\\\"0\\\",\\\"WaveX\\\":\\\"\\\",\\\"WaveDistanceX:num\\\":\\\"0\\\",\\\"WaveSpeedX:num\\\":\\\"0\\\",\\\"WaveOffsetX:num\\\":\\\"0\\\",\\\"WaveY\\\":\\\"\\\",\\\"WaveDistanceY:num\\\":\\\"3\\\",\\\"WaveSpeedY:num\\\":\\\"0.40\\\",\\\"WaveOffsetY:num\\\":\\\"2\\\"}\"]","ScaleEffects:arraystruct":"[\"{\\\"Name:str\\\":\\\"HorzCard\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0.10\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0\\\",\\\"PulseSpeedX:num\\\":\\\"0\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0\\\",\\\"PulseSpeedY:num\\\":\\\"0\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowHorzCard\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0.08\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0\\\",\\\"PulseSpeedX:num\\\":\\\"0\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0\\\",\\\"PulseSpeedY:num\\\":\\\"0\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastHorzCard\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0.15\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0\\\",\\\"PulseSpeedX:num\\\":\\\"0\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0\\\",\\\"PulseSpeedY:num\\\":\\\"0\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"VertCard\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0.10\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0\\\",\\\"PulseSpeedX:num\\\":\\\"0\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0\\\",\\\"PulseSpeedY:num\\\":\\\"0\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowVertCard\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0.08\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0\\\",\\\"PulseSpeedX:num\\\":\\\"0\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0\\\",\\\"PulseSpeedY:num\\\":\\\"0\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastVertCard\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0.15\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0\\\",\\\"PulseSpeedX:num\\\":\\\"0\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0\\\",\\\"PulseSpeedY:num\\\":\\\"0\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"HorzRibbon\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0.10\\\",\\\"FlipOffsetX:num\\\":\\\"2\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0\\\",\\\"PulseSpeedX:num\\\":\\\"0\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0\\\",\\\"PulseSpeedY:num\\\":\\\"0\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowHorzRibbon\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0.08\\\",\\\"FlipOffsetX:num\\\":\\\"2\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0\\\",\\\"PulseSpeedX:num\\\":\\\"0\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0\\\",\\\"PulseSpeedY:num\\\":\\\"0\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastHorzRibbon\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0.15\\\",\\\"FlipOffsetX:num\\\":\\\"2\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0\\\",\\\"PulseSpeedX:num\\\":\\\"0\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0\\\",\\\"PulseSpeedY:num\\\":\\\"0\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"VertRibbon\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0.10\\\",\\\"FlipOffsetY:num\\\":\\\"2\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0\\\",\\\"PulseSpeedX:num\\\":\\\"0\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0\\\",\\\"PulseSpeedY:num\\\":\\\"0\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SlowVertRibbon\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0.08\\\",\\\"FlipOffsetY:num\\\":\\\"2\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0\\\",\\\"PulseSpeedX:num\\\":\\\"0\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0\\\",\\\"PulseSpeedY:num\\\":\\\"0\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"FastVertRibbon\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0.15\\\",\\\"FlipOffsetY:num\\\":\\\"2\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0\\\",\\\"PulseSpeedX:num\\\":\\\"0\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0\\\",\\\"PulseSpeedY:num\\\":\\\"0\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Pulse\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0.30\\\",\\\"PulseSpeedX:num\\\":\\\"0.25\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0.30\\\",\\\"PulseSpeedY:num\\\":\\\"0.25\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"SmallPulse\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0.10\\\",\\\"PulseSpeedX:num\\\":\\\"0.25\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0.10\\\",\\\"PulseSpeedY:num\\\":\\\"0.25\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"BigPulse\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0.40\\\",\\\"PulseSpeedX:num\\\":\\\"0.25\\\",\\\"PulseOffsetX:num\\\":\\\"0\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0.40\\\",\\\"PulseSpeedY:num\\\":\\\"0.25\\\",\\\"PulseOffsetY:num\\\":\\\"0\\\"}\",\"{\\\"Name:str\\\":\\\"Jiggle\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0.30\\\",\\\"PulseSpeedX:num\\\":\\\"0.25\\\",\\\"PulseOffsetX:num\\\":\\\"2\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0.30\\\",\\\"PulseSpeedY:num\\\":\\\"0.25\\\",\\\"PulseOffsetY:num\\\":\\\"2\\\"}\",\"{\\\"Name:str\\\":\\\"SmallJiggle\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0.10\\\",\\\"PulseSpeedX:num\\\":\\\"0.25\\\",\\\"PulseOffsetX:num\\\":\\\"2\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0.10\\\",\\\"PulseSpeedY:num\\\":\\\"0.25\\\",\\\"PulseOffsetY:num\\\":\\\"2\\\"}\",\"{\\\"Name:str\\\":\\\"BigJiggle\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0.40\\\",\\\"PulseSpeedX:num\\\":\\\"0.25\\\",\\\"PulseOffsetX:num\\\":\\\"2\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"0.40\\\",\\\"PulseSpeedY:num\\\":\\\"0.25\\\",\\\"PulseOffsetY:num\\\":\\\"2\\\"}\",\"{\\\"Name:str\\\":\\\"Gooey\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0.30\\\",\\\"PulseSpeedX:num\\\":\\\"0.25\\\",\\\"PulseOffsetX:num\\\":\\\"33\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"-0.30\\\",\\\"PulseSpeedY:num\\\":\\\"0.25\\\",\\\"PulseOffsetY:num\\\":\\\"33\\\"}\",\"{\\\"Name:str\\\":\\\"SmallGooey\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0.10\\\",\\\"PulseSpeedX:num\\\":\\\"0.25\\\",\\\"PulseOffsetX:num\\\":\\\"33\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"-0.10\\\",\\\"PulseSpeedY:num\\\":\\\"0.25\\\",\\\"PulseOffsetY:num\\\":\\\"33\\\"}\",\"{\\\"Name:str\\\":\\\"BigGooey\\\",\\\"Scaling\\\":\\\"\\\",\\\"FlipX\\\":\\\"\\\",\\\"FlipSpeedX:num\\\":\\\"0\\\",\\\"FlipOffsetX:num\\\":\\\"0\\\",\\\"FlipY\\\":\\\"\\\",\\\"FlipSpeedY:num\\\":\\\"0\\\",\\\"FlipOffsetY:num\\\":\\\"0\\\",\\\"PulseX\\\":\\\"\\\",\\\"PulseGrowthX:num\\\":\\\"0.40\\\",\\\"PulseSpeedX:num\\\":\\\"0.25\\\",\\\"PulseOffsetX:num\\\":\\\"33\\\",\\\"PulseY\\\":\\\"\\\",\\\"PulseGrowthY:num\\\":\\\"-0.40\\\",\\\"PulseSpeedY:num\\\":\\\"0.25\\\",\\\"PulseOffsetY:num\\\":\\\"33\\\"}\"]","Options:struct":"{\"Options\":\"\",\"AddOption:eval\":\"true\",\"AdjustRect:eval\":\"true\",\"Name:str\":\"Text Effects\"}","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"VisuMZ_2_PictureChoices","status":true,"description":"[RPG Maker MZ] [Tier 2] [Version 1.02] [PictureChoices]","parameters":{"BreakHead":"----------------------------------","PictureChoices":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","AutoClear:eval":"true","SameCheck:eval":"true","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"VisuMZ_2_QTE_TriggerSys","status":true,"description":"[RPG Maker MZ] [Tier 2] [Version 1.03] [QTE_TriggerSys]","parameters":{"BreakHead":"----------------------------------","QTE_TriggerSys":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","WatchDelay:num":"60","GameOver:struct":"{\"DefaultGameOverEvent:num\":\"0\",\"HealOnEvent:eval\":\"true\",\"ClearOnEvent:eval\":\"false\"}","QTE:struct":"{\"EarlyFinishDuration:num\":\"40\",\"ShowQteTimer:eval\":\"true\",\"qteTimerGaugeStyleType:str\":\"Dipper\",\"QteTimerColor1:str\":\"26\",\"QteTimerColor2:str\":\"27\",\"QteTimerWindowRectJS:func\":\"\\\"// Declare Dimensions\\\\nlet width = Math.ceil(Graphics.width / 2);\\\\nlet height = Scene_Base.prototype.calcWindowHeight(1);\\\\nlet x = Math.floor((Graphics.width - width) / 2);\\\\nlet y = Graphics.height - Math.floor(height * 0.6);\\\\ny -= Scene_Base.prototype.calcWindowHeight(4, true);\\\\n\\\\n// Return Rectangle\\\\nreturn new Rectangle(x, y, width, height);\\\"\",\"ShowQteProgress:eval\":\"true\",\"qteProgressGaugeStyleType:str\":\"Arrow\",\"QteProgressColor1:str\":\"17\",\"QteProgressColor2:str\":\"24\",\"QteProgressWindowRectJS:func\":\"\\\"// Declare Dimensions\\\\nlet width = Math.ceil(Graphics.width / 3);\\\\nlet height = Scene_Base.prototype.calcWindowHeight(1);\\\\nlet x = Math.floor((Graphics.width - width) / 2);\\\\nlet y = Graphics.height - Scene_Base.prototype.calcWindowHeight(3, false);\\\\ny -= Scene_Base.prototype.calcWindowHeight(4, true);\\\\n\\\\n// Return Rectangle\\\\nreturn new Rectangle(x, y + 240, width, height);\\\"\",\"ButtonSeqInputBuffer:num\":\"15\",\"TimedHitSuccessFrames:num\":\"12\",\"TimedHitOpacity:num\":\"128\",\"TimedHitMaxSize:num\":\"4.0\",\"TimedSeqSuccessFrames:num\":\"8\",\"TimedSequenceLandPosition:num\":\"30\",\"QteTimingBarWidth:num\":\"600\",\"TimingBarCursorOffsetX:num\":\"+0\",\"TimingBarCursorOffsetY:num\":\"+6\",\"TimingBarFontSize:num\":\"20\",\"TimingBarLabelOffsetX:num\":\"+0\",\"TimingBarLabelOffsetY:num\":\"+4\",\"TimingBarColor1:str\":\"6\",\"TimingBarColor2:str\":\"14\"}","Vocab:struct":"{\"MsgTextAlign:str\":\"center\",\"Message\":\"\",\"ButtonMashTextMsg:json\":\"\\\"Press \\\\\\\\C[27]<OK Button>\\\\\\\\C[0] or \\\\\\\\C[27]Screen Tap\\\\\\\\C[0]\\\\nas many times as you can!\\\"\",\"ButtonSeqTextMsg:json\":\"\\\"Press the above \\\\\\\\C[27]Button Sequence\\\\\\\\c[0] before time runs out!\\\"\",\"DirectionStruggleTextMsg:json\":\"\\\"Cycle through \\\\\\\\C[27]<Left Button>\\\\\\\\c[0] \\\\\\\\C[27]<Right Button>\\\\\\\\c[0] \\\\\\\\C[27]<Up Button>\\\\\\\\c[0] \\\\\\\\C[27]<Down Button>\\\\\\\\c[0] buttons\\\\nrepeatedly to fill the above gauge!\\\"\",\"FillGaugeTextMsg:json\":\"\\\"Press \\\\\\\\C[27]Enter\\\\\\\\C[0] or \\\\\\\\C[27]Click\\\\\\\\C[0]\\\\n\\\"\",\"HoldReleaseTextMsg:json\":\"\\\"Hold \\\\\\\\C[27]<OK Button>\\\\\\\\C[0] or \\\\\\\\C[27]Press Screen\\\\\\\\C[0] until the\\\\nabove gauge is nearly full, then \\\\\\\\C[27]release\\\\\\\\c[0]!\\\"\",\"MarcherTextMsg:json\":\"\\\"Alternate between \\\\\\\\C[27]<Page Up Button>\\\\\\\\c[0] and \\\\\\\\C[27]<Page Down Button>\\\\\\\\c[0] buttons\\\\nrepeatedly to fill the above gauge!\\\"\",\"SwapperTextMsg:json\":\"\\\"Alternate between \\\\\\\\C[27]<OK Button>\\\\\\\\c[0] and \\\\\\\\C[27]<Cancel Button>\\\\\\\\c[0] buttons\\\\nrepeatedly to fill the above gauge!\\\"\",\"TimedHitTextMsg:json\":\"\\\"\\\"\",\"TimedSeqTextMsg:json\":\"\\\"Press the \\\\\\\\C[27]Button Sequence\\\\\\\\C[0] at the right time!\\\"\",\"TimingBarTextMsg:json\":\"\\\"Press \\\\\\\\C[27]<OK Button>\\\\\\\\C[0] or \\\\\\\\C[27]Screen Tap\\\\\\\\C[0] to stop the cursor!\\\"\",\"MessageWindow\":\"\",\"MsgWindowBgType:num\":\"2\",\"MsgWindowRectJS:func\":\"\\\"// Declare Lines\\\\nlet lines = 2;\\\\n\\\\n// Declare Dimensions\\\\nlet width = Graphics.width;\\\\nlet height = Scene_Base.prototype.calcWindowHeight(lines);\\\\nlet x = 0;\\\\nlet y = Graphics.height - height;\\\\ny -= Scene_Base.prototype.calcWindowHeight(4, true);\\\\n\\\\n// Return Rectangle\\\\nreturn new Rectangle(x, y, width, height);\\\"\"}","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"VisuMZ_3_EventSignals","status":true,"description":"[RPG Maker MZ] [Tier 3] [Version 1.01] [EventSignals]","parameters":{"BreakHead":"----------------------------------","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------"}},
{"name":"VisuMZ_3_VisualGaugeStyles","status":true,"description":"[RPG Maker MZ] [Tier 3] [Version 1.03] [VisualGaugeStyles]","parameters":{"BreakHead":"----------------------------------","VisualGaugeStyles":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","Styles:struct":"{\"Structure\":\"\",\"normal:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+0\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"+0\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"arrow:struct\":\"{\\\"gaugeThickness:num\\\":\\\"24\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+8\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-8\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"dipper:struct\":\"{\\\"gaugeThickness:num\\\":\\\"20\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+8\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-12\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"flag:struct\":\"{\\\"gaugeThickness:num\\\":\\\"24\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+0\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-8\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"growth:struct\":\"{\\\"gaugeThickness:num\\\":\\\"24\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+8\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-12\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"lean:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+8\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-8\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"quad:struct\":\"{\\\"gaugeThickness:num\\\":\\\"20\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+8\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-12\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"stagger:struct\":\"{\\\"gaugeThickness:num\\\":\\\"14\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+8\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-8\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"trapezoid:struct\":\"{\\\"gaugeThickness:num\\\":\\\"16\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+8\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-12\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"Steps\":\"\",\"halfstep:struct\":\"{\\\"gaugeThickness:num\\\":\\\"24\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+8\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-12\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"thirdstep:struct\":\"{\\\"gaugeThickness:num\\\":\\\"24\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+8\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-12\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"fourthstep:struct\":\"{\\\"gaugeThickness:num\\\":\\\"24\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+8\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-12\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"fifthstep:struct\":\"{\\\"gaugeThickness:num\\\":\\\"24\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+8\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-12\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"sixthstep:struct\":\"{\\\"gaugeThickness:num\\\":\\\"24\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+8\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-12\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"eighthstep:struct\":\"{\\\"gaugeThickness:num\\\":\\\"24\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+8\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-12\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"tenthstep:struct\":\"{\\\"gaugeThickness:num\\\":\\\"24\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+8\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-12\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"Section\":\"\",\"halfsection:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"thirdsection:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"fourthsection:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"fifthsection:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"sixthsection:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"eighthsection:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"tenthsection:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"Segment\":\"\",\"segmentby10:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"segmentby20:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"segmentby25:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"segmentby50:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"segmentby100:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"segmentby200:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"segmentby250:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"segmentby500:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\",\"segmentby1000:struct\":\"{\\\"gaugeThickness:num\\\":\\\"12\\\",\\\"Label\\\":\\\"\\\",\\\"labelOffsetX:num\\\":\\\"+4\\\",\\\"labelOffsetY:num\\\":\\\"+0\\\",\\\"Value\\\":\\\"\\\",\\\"valueOffsetX:num\\\":\\\"-4\\\",\\\"valueOffsetY:num\\\":\\\"+0\\\"}\"}","DefaultStyles":"","horzStyle:str":"Lean","vertStyle:str":"Arrow","StatusStyles":"","statusHpStyle:str":"Stagger","statusMpStyle:str":"Stagger","statusTpStyle:str":"Stagger","statusTimeStyle:str":"Lean","statusAggroStyle:str":"Lean","BattlerStyles":"","battlerHpStyle:str":"Lean","battlerAggroStyle:str":"Lean","battlerAtbStyle:str":"Lean","battlerEXPStyle:str":"Arrow","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"VisuMZ_4_VariableGauges","status":true,"description":"[RPG Maker MZ] [Tier 4] [Version 1.02] [VariableGauges]","parameters":{"BreakHead":"----------------------------------","VariableGauges":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","Gauge:arraystruct":"[\"{\\\"Key:str\\\":\\\"Food\\\",\\\"VariableID:num\\\":\\\"2\\\",\\\"MaximumJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nlet max = 100;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\n// Insert your calculations here\\\\\\\\n\\\\\\\\n// Return Maximum\\\\\\\\nreturn max;\\\\\\\"\\\",\\\"Colors\\\":\\\"\\\",\\\"Color1:str\\\":\\\"2\\\",\\\"Color2:str\\\":\\\"2\\\",\\\"DefaultVisible\\\":\\\"\\\",\\\"DefaultMapVisible:eval\\\":\\\"false\\\",\\\"DefaultBattleVisible:eval\\\":\\\"false\\\",\\\"IconSettings\\\":\\\"\\\",\\\"IconIndex:num\\\":\\\"87\\\",\\\"IconBuffer:num\\\":\\\"+4\\\",\\\"Screen\\\":\\\"\\\",\\\"Type:str\\\":\\\"vert\\\",\\\"Style:str\\\":\\\"Flag\\\",\\\"PositionJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nlet thick = 48;\\\\\\\\nlet length = 480;\\\\\\\\nlet x = thick + 36;\\\\\\\\nlet y = Graphics.boxHeight / 2;\\\\\\\\n\\\\\\\\n// Check Horizontal\\\\\\\\nconst horz = this.isHorizontal();\\\\\\\\nconst width = horz ? length : thick;\\\\\\\\nconst height = horz ? thick : length;\\\\\\\\n\\\\\\\\n// Return Rectangle\\\\\\\\nreturn new Rectangle(x - 48, y - 260, width, height);\\\\\\\"\\\",\\\"TooltipSettings\\\":\\\"\\\",\\\"TooltipText:json\\\":\\\"\\\\\\\"\\\\\\\"\\\"}\",\"{\\\"Key:str\\\":\\\"Mood\\\",\\\"VariableID:num\\\":\\\"3\\\",\\\"MaximumJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nlet max = 100;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\n// Insert your calculations here\\\\\\\\n\\\\\\\\n// Return Maximum\\\\\\\\nreturn max;\\\\\\\"\\\",\\\"Colors\\\":\\\"\\\",\\\"Color1:str\\\":\\\"3\\\",\\\"Color2:str\\\":\\\"3\\\",\\\"DefaultVisible\\\":\\\"\\\",\\\"DefaultMapVisible:eval\\\":\\\"false\\\",\\\"DefaultBattleVisible:eval\\\":\\\"false\\\",\\\"IconSettings\\\":\\\"\\\",\\\"IconIndex:num\\\":\\\"87\\\",\\\"IconBuffer:num\\\":\\\"+4\\\",\\\"Screen\\\":\\\"\\\",\\\"Type:str\\\":\\\"vert\\\",\\\"Style:str\\\":\\\"Flag\\\",\\\"PositionJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nlet thick = 48;\\\\\\\\nlet length = 480;\\\\\\\\nlet x = thick + 48;\\\\\\\\nlet y = Graphics.boxHeight / 2;\\\\\\\\n\\\\\\\\n// Check Horizontal\\\\\\\\nconst horz = this.isHorizontal();\\\\\\\\nconst width = horz ? length : thick;\\\\\\\\nconst height = horz ? thick : length;\\\\\\\\n\\\\\\\\n// Return Rectangle\\\\\\\\nreturn new Rectangle(x + 50 - 48, y - 260, width, height);\\\\\\\"\\\",\\\"TooltipSettings\\\":\\\"\\\",\\\"TooltipText:json\\\":\\\"\\\\\\\"\\\\\\\"\\\"}\",\"{\\\"Key:str\\\":\\\"WaH_Timer\\\",\\\"VariableID:num\\\":\\\"14\\\",\\\"MaximumJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nlet max = 30;\\\\\\\\n\\\\\\\\n// Calculations\\\\\\\\n// Insert your calculations here\\\\\\\\n\\\\\\\\n// Return Maximum\\\\\\\\nreturn max;\\\\\\\"\\\",\\\"Colors\\\":\\\"\\\",\\\"Color1:str\\\":\\\"2\\\",\\\"Color2:str\\\":\\\"2\\\",\\\"DefaultVisible\\\":\\\"\\\",\\\"DefaultMapVisible:eval\\\":\\\"false\\\",\\\"DefaultBattleVisible:eval\\\":\\\"false\\\",\\\"IconSettings\\\":\\\"\\\",\\\"IconIndex:num\\\":\\\"16\\\",\\\"IconBuffer:num\\\":\\\"+4\\\",\\\"Screen\\\":\\\"\\\",\\\"Type:str\\\":\\\"horz\\\",\\\"Style:str\\\":\\\"Flag\\\",\\\"PositionJS:func\\\":\\\"\\\\\\\"// Declare Variables\\\\\\\\nlet thick = 48;\\\\\\\\nlet length = 480;\\\\\\\\nlet x = Graphics.boxWidth / 2;\\\\\\\\nlet y = 960;\\\\\\\\n\\\\\\\\n// Check Horizontal\\\\\\\\nconst horz = this.isHorizontal();\\\\\\\\nconst width = horz ? length : thick;\\\\\\\\nconst height = horz ? thick : length;\\\\\\\\n\\\\\\\\n// Return Rectangle\\\\\\\\nreturn new Rectangle(x - 224, y - 16, width, height);\\\\\\\"\\\",\\\"TooltipSettings\\\":\\\"\\\",\\\"TooltipText:json\\\":\\\"\\\\\\\"\\\\\\\"\\\"}\"]","Tooltip:struct":"{\"Appearance\":\"\",\"Scale:num\":\"0.6\",\"WindowSkin:str\":\"Window\",\"WindowOpacity:num\":\"240\",\"Offset\":\"\",\"OffsetX:num\":\"+0\",\"OffsetY:num\":\"+0\"}","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"VisuMZ_4_PictureCmnEvts","status":true,"description":"[RPG Maker MZ] [Tier 4] [Version 1.03] [PictureCommonEvents]","parameters":{"BreakHead":"----------------------------------","PictureCommonEvents":"Plugin Parameters","ATTENTION":"READ THE HELP FILE","BreakSettings":"----------------------------------","DefaultGlobal:struct":"{\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[16, 16, 16, 0]\",\"BlendMode:num\":\"0\"}","Set_1_to_10":"","Picture1:struct":"{\"CommonEventID:num\":\"1\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[16, 16, 16, 0]\",\"BlendMode:num\":\"0\"}","Picture2:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture3:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture4:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture5:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture6:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture7:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture8:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture9:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture10:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Set_11_to_20":"","Picture11:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture12:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture13:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture14:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture15:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture16:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture17:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture18:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture19:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture20:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Set_21_to_30":"","Picture21:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture22:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture23:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture24:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture25:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture26:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture27:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture28:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture29:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture30:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Set_31_to_40":"","Picture31:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture32:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture33:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture34:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture35:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture36:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture37:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture38:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture39:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture40:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Set_41_to_50":"","Picture41:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture42:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture43:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture44:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture45:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture46:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture47:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture48:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture49:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture50:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Set_51_to_60":"","Picture51:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture52:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture53:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture54:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture55:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture56:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture57:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture58:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture59:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture60:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Set_61_to_70":"","Picture61:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture62:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture63:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture64:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture65:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture66:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture67:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture68:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture69:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture70:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Set_71_to_80":"","Picture71:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture72:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture73:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture74:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture75:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture76:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture77:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture78:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture79:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture80:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Set_81_to_90":"","Picture81:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture82:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture83:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture84:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture85:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture86:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture87:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture88:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture89:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture90:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Set_91_to_100":"","Picture91:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture92:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture93:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture94:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture95:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture96:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture97:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture98:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture99:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","Picture100:struct":"{\"CommonEventID:num\":\"0\",\"Custom\":\"\",\"UseGlobal:eval\":\"true\",\"OpaqueOnly:eval\":\"true\",\"OpaqueErrorMargin:num\":\"3\",\"ChangeTone:eval\":\"true\",\"HoverTone:eval\":\"[128, 128, 128, 0]\",\"BlendMode:num\":\"0\"}","BreakEnd1":"----------------------------------","End Of":"Plugin Parameters","BreakEnd2":"----------------------------------"}},
{"name":"EliMZ_FontManager","status":true,"description":"♦5.0.1♦ Enable the usage of multiple fonts!","parameters":{"fonts":"[\"{\\\"file\\\":\\\"Comic Kids.ttf\\\",\\\"face\\\":\\\"Main\\\",\\\"size\\\":\\\"36\\\",\\\"sceneList\\\":\\\"[]\\\",\\\"windowList\\\":\\\"[]\\\"}\",\"{\\\"file\\\":\\\"monogram-extended.ttf\\\",\\\"face\\\":\\\"Pixel\\\",\\\"size\\\":\\\"48\\\",\\\"sceneList\\\":\\\"[\\\\\\\"Scene_Battle\\\\\\\"]\\\",\\\"windowList\\\":\\\"[\\\\\\\"Window_Status\\\\\\\",\\\\\\\"Window_Help\\\\\\\"]\\\"}\"]","defaultIndex":"0"}},
{"name":"EliMZ_WindowSkin","status":true,"description":"♦2.0.0♦ Can change the skin and other settings of any window mid-game.","parameters":{"saveChanges":"false","defaultWinSettings":"{\"skin\":\"Window\",\"tone\":\"0,0,0\",\"id\":\"Default\"}","windowList":"[\"{\\\"name\\\":\\\"[\\\\\\\"Window_NameBox\\\\\\\"]\\\",\\\"skin\\\":\\\"Window2\\\",\\\"tone\\\":\\\"0,0,0\\\",\\\"useSceneSkin\\\":\\\"false\\\",\\\"id\\\":\\\"\\\"}\"]","sceneList":"[]","options":"false"}},
{"name":"EliMZ_ButtonCommonEvents","status":true,"description":"♦5.2.3♦ Bind common events to keyboard/gamepad buttons!","parameters":{"presetKeys":"[\"{\\\"key\\\":\\\"m\\\",\\\"id\\\":\\\"2\\\",\\\"isParallel\\\":\\\"false\\\",\\\"overwrite\\\":\\\"false\\\"}\"]","presetKeysGamePad":"[]"}},
{"name":"TextPicture","status":true,"description":"Displays text as a picture.","parameters":{}},
{"name":"MOG_VariableHud","status":true,"description":"(v1.2) Apresenta as variáveis através de Huds.","parameters":{"-> MAIN <<<<<<<<<<<<<<<<<<<<<<<":"","Smart Fade":"false","Auto Fade":"false","Initial Visible":"true","-> HUD 1 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 1 Enable":"true","Hud 1 Mode":"0","Hud 1 Variable ID":"16","Hud 1 Maximum Value":"99999","Hud 1 File Name":"Hud_1","Hud 1 Start Visible":"true","Hud 1 Layout X":"22","Hud 1 Layout Y":"70","Hud 1 Number X":"86","Hud 1 Number Y":"20","Hud 1 Number Align":"0","Hud 1 Font Size":"36","Hud 1 Show Max Value":"false","Hud 1 Show Gauge":"false","Hud 1 Gauge X-Axis":"0","Hud 1 Gauge Y-Axis":"0","":"","-> HUD 2 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 2 Enable":"false","Hud 2 Mode":"0","Hud 2 Variable ID":"31","Hud 2 Maximum Value":"300","Hud 2 File Name":"Hud_2","Hud 2 Start Visible":"true","Hud 2 Layout X":"347","Hud 2 Layout Y":"5","Hud 2 Number X":"-7","Hud 2 Number Y":"10","Hud 2 Number Align":"1","Hud 2 Font Size":"18","Hud 2 Show Max Value":"true","Hud 2 Show Gauge":"false","Hud 2 Gauge X-Axis":"0","Hud 2 Gauge Y-Axis":"0","-> HUD 3 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 3 Enable":"false","Hud 3 Mode":"0","Hud 3 Variable ID":"32","Hud 3 Maximum Value":"999","Hud 3 File Name":"Hud_3","Hud 3 Start Visible":"true","Hud 3 Layout X":"490","Hud 3 Layout Y":"5","Hud 3 Number X":"-7","Hud 3 Number Y":"10","Hud 3 Number Align":"1","Hud 3 Font Size":"18","Hud 3 Show Max Value":"true","Hud 3 Show Gauge":"false","Hud 3 Gauge X-Axis":"0","Hud 3 Gauge Y-Axis":"0","-> HUD 4 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 4 Enable":"false","Hud 4 Mode":"0","Hud 4 Variable ID":"33","Hud 4 Maximum Value":"999","Hud 4 File Name":"Hud_4","Hud 4 Start Visible":"true","Hud 4 Layout X":"730","Hud 4 Layout Y":"230","Hud 4 Number X":"-50","Hud 4 Number Y":"30","Hud 4 Number Align":"1","Hud 4 Font Size":"18","Hud 4 Show Max Value":"false","Hud 4 Show Gauge":"true","Hud 4 Gauge X-Axis":"20","Hud 4 Gauge Y-Axis":"63","-> HUD 5 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 5 Enable":"false","Hud 5 Mode":"0","Hud 5 Variable ID":"34","Hud 5 Maximum Value":"999","Hud 5 File Name":"Hud_5","Hud 5 Start Visible":"true","Hud 5 Layout X":"730","Hud 5 Layout Y":"327","Hud 5 Number X":"-50","Hud 5 Number Y":"30","Hud 5 Number Align":"1","Hud 5 Font Size":"18","Hud 5 Show Max Value":"false","Hud 5 Show Gauge":"true","Hud 5 Gauge X-Axis":"20","Hud 5 Gauge Y-Axis":"63","-> HUD 6 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 6 Enable":"false","Hud 6 Mode":"0","Hud 6 Variable ID":"35","Hud 6 Maximum Value":"999","Hud 6 File Name":"Hud_6","Hud 6 Start Visible":"true","Hud 6 Layout X":"730","Hud 6 Layout Y":"424","Hud 6 Number X":"-50","Hud 6 Number Y":"30","Hud 6 Number Align":"1","Hud 6 Font Size":"18","Hud 6 Show Max Value":"false","Hud 6 Show Gauge":"true","Hud 6 Gauge X-Axis":"20","Hud 6 Gauge Y-Axis":"63","-> HUD 7 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 7 Enable":"false","Hud 7 Mode":"0","Hud 7 Variable ID":"36","Hud 7 Maximum Value":"999999","Hud 7 File Name":"Hud_7","Hud 7 Start Visible":"true","Hud 7 Layout X":"0","Hud 7 Layout Y":"0","Hud 7 Number X":"-10","Hud 7 Number Y":"30","Hud 7 Number Align":"1","Hud 7 Font Size":"18","Hud 7 Show Max Value":"false","Hud 7 Show Gauge":"false","Hud 7 Gauge X-Axis":"0","Hud 7 Gauge Y-Axis":"0","-> HUD 8 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 8 Enable":"false","Hud 8 Mode":"0","Hud 8 Variable ID":"37","Hud 8 Maximum Value":"999999","Hud 8 File Name":"Hud_8","Hud 8 Start Visible":"true","Hud 8 Layout X":"50","Hud 8 Layout Y":"50","Hud 8 Number X":"-10","Hud 8 Number Y":"30","Hud 8 Number Align":"1","Hud 8 Font Size":"18","Hud 8 Show Max Value":"false","Hud 8 Show Gauge":"false","Hud 8 Gauge X-Axis":"0","Hud 8 Gauge Y-Axis":"0","-> HUD 9 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 9 Enable":"false","Hud 9 Mode":"0","Hud 9 Variable ID":"38","Hud 9 Maximum Value":"999999","Hud 9 File Name":"Hud_9","Hud 9 Start Visible":"true","Hud 9 Layout X":"100","Hud 9 Layout Y":"100","Hud 9 Number X":"-10","Hud 9 Number Y":"30","Hud 9 Number Align":"1","Hud 9 Font Size":"18","Hud 9 Show Max Value":"false","Hud 9 Show Gauge":"false","Hud 9 Gauge X-Axis":"0","Hud 9 Gauge Y-Axis":"0","-> HUD 10 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 10 Enable":"false","Hud 10 Mode":"0","Hud 10 Variable ID":"39","Hud 10 Maximum Value":"999999","Hud 10 File Name":"Hud_10","Hud 10 Start Visible":"true","Hud 10 Layout X":"150","Hud 10 Layout Y":"150","Hud 10 Number X":"-10","Hud 10 Number Y":"30","Hud 10 Number Align":"1","Hud 10 Font Size":"18","Hud 10 Show Max Value":"false","Hud 10 Show Gauge":"false","Hud 10 Gauge X-Axis":"0","Hud 10 Gauge Y-Axis":"0","-> HUD 11 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 11 Enable":"false","Hud 11 Mode":"0","Hud 11 Variable ID":"40","Hud 11 Maximum Value":"999999","Hud 11 File Name":"Hud_11","Hud 11 Start Visible":"true","Hud 11 Layout X":"200","Hud 11 Layout Y":"200","Hud 11 Number X":"-10","Hud 11 Number Y":"30","Hud 11 Number Align":"1","Hud 11 Font Size":"18","Hud 11 Show Max Value":"false","Hud 11 Show Gauge":"false","Hud 11 Gauge X-Axis":"0","Hud 11 Gauge Y-Axis":"0","-> HUD 12 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 12 Enable":"false","Hud 12 Mode":"0","Hud 12 Variable ID":"41","Hud 12 Maximum Value":"999999","Hud 12 File Name":"Hud_12","Hud 12 Start Visible":"true","Hud 12 Layout X":"250","Hud 12 Layout Y":"250","Hud 12 Number X":"-10","Hud 12 Number Y":"30","Hud 12 Number Align":"1","Hud 12 Font Size":"18","Hud 12 Show Max Value":"false","Hud 12 Show Gauge":"false","Hud 12 Gauge X-Axis":"0","Hud 12 Gauge Y-Axis":"0","-> HUD 13 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 13 Enable":"false","Hud 13 Mode":"0","Hud 13 Variable ID":"42","Hud 13 Maximum Value":"999999","Hud 13 File Name":"Hud_13","Hud 13 Start Visible":"true","Hud 13 Layout X":"300","Hud 13 Layout Y":"300","Hud 13 Number X":"-10","Hud 13 Number Y":"30","Hud 13 Number Align":"1","Hud 13 Font Size":"18","Hud 13 Show Max Value":"false","Hud 13 Show Gauge":"false","Hud 13 Gauge X-Axis":"0","Hud 13 Gauge Y-Axis":"0","Hud 14 Enable":"false","-> HUD 14 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 14 Mode":"0","Hud 14 Variable ID":"43","Hud 14 Maximum Value":"999999","Hud 14 File Name":"Hud_14","Hud 14 Start Visible":"true","Hud 14 Layout X":"350","Hud 14 Layout Y":"350","Hud 14 Number X":"-10","Hud 14 Number Y":"30","Hud 14 Number Align":"1","Hud 14 Font Size":"18","Hud 14 Show Max Value":"false","Hud 14 Show Gauge":"false","Hud 14 Gauge X-Axis":"0","Hud 14 Gauge Y-Axis":"0","-> HUD 15 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 15 Enable":"false","Hud 15 Mode":"0","Hud 15 Variable ID":"44","Hud 15 Maximum Value":"999999","Hud 15 File Name":"Hud_15","Hud 15 Start Visible":"true","Hud 15 Layout X":"400","Hud 15 Layout Y":"400","Hud 15 Number X":"-10","Hud 15 Number Y":"30","Hud 15 Number Align":"1","Hud 15 Font Size":"18","Hud 15 Show Max Value":"false","Hud 15 Show Gauge":"false","Hud 15 Gauge X-Axis":"0","Hud 15 Gauge Y-Axis":"0","-> HUD 16 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 16 Enable":"false","Hud 16 Mode":"0","Hud 16 Variable ID":"45","Hud 16 Maximum Value":"999999","Hud 16 File Name":"Hud_16","Hud 16 Start Visible":"true","Hud 16 Layout X":"450","Hud 16 Layout Y":"450","Hud 16 Number X":"-10","Hud 16 Number Y":"30","Hud 16 Number Align":"1","Hud 16 Font Size":"18","Hud 16 Show Max Value":"false","Hud 16 Show Gauge":"false","Hud 16 Gauge X-Axis":"0","Hud 16 Gauge Y-Axis":"0","-> HUD 17 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 17 Enable":"false","Hud 17 Mode":"0","Hud 17 Variable ID":"46","Hud 17 Maximum Value":"999999","Hud 17 File Name":"Hud_17","Hud 17 Start Visible":"true","Hud 17 Layout X":"500","Hud 17 Layout Y":"500","Hud 17 Number X":"-10","Hud 17 Number Y":"30","Hud 17 Number Align":"1","Hud 17 Font Size":"18","Hud 17 Show Max Value":"false","Hud 17 Show Gauge":"false","Hud 17 Gauge X-Axis":"0","Hud 17 Gauge Y-Axis":"0","-> HUD 18 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 18 Enable":"false","Hud 18 Mode":"0","Hud 18 Variable ID":"47","Hud 18 Maximum Value":"999999","Hud 18 File Name":"Hud_18","Hud 18 Start Visible":"true","Hud 18 Layout X":"550","Hud 18 Layout Y":"550","Hud 18 Number X":"-10","Hud 18 Number Y":"30","Hud 18 Number Align":"1","Hud 18 Font Size":"18","Hud 18 Show Max Value":"false","Hud 18 Show Gauge":"false","Hud 18 Gauge X-Axis":"0","Hud 18 Gauge Y-Axis":"0","-> HUD 19 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 19 Enable":"false","Hud 19 Mode":"0","Hud 19 Variable ID":"48","Hud 19 Maximum Value":"999999","Hud 19 File Name":"Hud_19","Hud 19 Start Visible":"true","Hud 19 Layout X":"600","Hud 19 Layout Y":"550","Hud 19 Number X":"-10","Hud 19 Number Y":"30","Hud 19 Number Align":"1","Hud 19 Font Size":"18","Hud 19 Show Max Value":"false","Hud 19 Show Gauge":"false","Hud 19 Gauge X-Axis":"0","Hud 19 Gauge Y-Axis":"0","-> HUD 20 <<<<<<<<<<<<<<<<<<<<<<<":"","Hud 20 Enable":"false","Hud 20 Mode":"0","Hud 20 Variable ID":"49","Hud 20 Maximum Value":"999999","Hud 20 File Name":"Hud_20","Hud 20 Start Visible":"true","Hud 20 Layout X":"650","Hud 20 Layout Y":"550","Hud 20 Number X":"-10","Hud 20 Number Y":"30","Hud 20 Number Align":"1","Hud 20 Font Size":"18","Hud 20 Show Max Value":"false","Hud 20 Show Gauge":"false","Hud 20 Gauge X-Axis":"0","Hud 20 Gauge Y-Axis":"0"}},
{"name":"DK_Disable_Player_Movement","status":true,"description":"v.1.0.0 [MV|MZ] Allows you to disable and enable player movement through plugin commands or scripts.","parameters":{}},
{"name":"SimonSays","status":true,"description":"Simon Says Minigame for RPG MAKER MZ. - Created By: Undermax Games | Maxii1996","parameters":{"playerTurnMessage":"Repeat the sequence (PRESS ENTER)","aiTurnMessage":"Watch and remember the sequence","messageFontSize":"36","messageColor":"#5017af","messageOffsetX":"0","messageOffsetY":"96","messageWindowStyle":"0","buttonBorderColor":"#5017af","buttonSize":"200","buttonSpacing":"20","floatSpeed":"0.009","floatAmount":"1.4","cursorSound":"SFX_Button","cursorSoundVolume":"90","cursorSoundPitch":"100","roundIndicatorCompletedColor":"#bbc5f8","roundIndicatorPendingColor":"#a4a4a4","roundIndicatorBorderColor":"#5017af","roundIndicatorSize":"20","roundIndicatorSpacing":"10","roundIndicatorOffsetY":"196","soundTopLeft":"{\"name\":\"SFX_Speech\",\"volume\":\"75\",\"pitch\":\"150\",\"pan\":\"0\"}","soundTopRight":"{\"name\":\"SFX_Speech\",\"volume\":\"75\",\"pitch\":\"75\",\"pan\":\"0\"}","soundBottomLeft":"{\"name\":\"SFX_Speech\",\"volume\":\"75\",\"pitch\":\"100\",\"pan\":\"0\"}","soundBottomRight":"{\"name\":\"SFX_Speech\",\"volume\":\"75\",\"pitch\":\"50\",\"pan\":\"0\"}","progressBarBackColor":"#5017af","progressBarForeColor":"#bbc5f8","progressBarBorderColor":"#5017af","progressBarBorderSize":"2","progressBarWidth":"480","progressBarHeight":"15","progressBarOffsetX":"0","progressBarOffsetY":"-80"}},
{"name":"CustomLogo","status":true,"description":"Shows RPG Maker and user logos at the start of the game.","parameters":{"logo1":"","logo1ImageName":"Splash","logo1Skippable":"true","logo1Coordinate":"","logo1X":"0","logo1Y":"0","logo1Origin":"0","logo1Time":"","logo1FadeinFrames":"60","logo1FadeoutFrames":"60","logo1DurationFrames":"180","logo2":"","logo2ImageName":"","logo2Skippable":"true","logo2Coordinate":"","logo2X":"408","logo2Y":"312","logo2Origin":"0.5","logo2Time":"","logo2FadeinFrames":"12","logo2FadeoutFrames":"12","logo2DurationFrames":"120","logo3":"","logo3ImageName":"","logo3Skippable":"true","logo3Coordinate":"","logo3X":"408","logo3Y":"312","logo3Origin":"0.5","logo3Time":"","logo3FadeinFrames":"12","logo3FadeoutFrames":"12","logo3DurationFrames":"120","allowTotalSkip":"true"}},
{"name":"Mimosa_MouseCursorPlus","status":true,"description":"| Mimosa Mouse Cursor : Version - 1.6.1 | This plugin allows you to change the cursor of your mouse while in the game window!.","parameters":{"enabled":"true","defaultCursor":"{\"name\":\"default\",\"cursorImage\":\"Cursor\",\"cursorAnchor\":\"{\\\"x\\\":0,\\\"y\\\":0}\",\"cursorFrames\":\"1\",\"cursorSpeed\":\"40\",\"clickImage\":\"CursorHover\",\"clickFrames\":\"1\",\"clickSpeed\":\"40\"}","battleCursor":"{\"name\":\"default\",\"cursorImage\":\"\",\"cursorAnchor\":\"{\\\"x\\\":0,\\\"y\\\":0}\",\"cursorFrames\":\"1\",\"cursorSpeed\":\"40\",\"clickImage\":\"\",\"clickFrames\":\"1\",\"clickSpeed\":\"40\"}","menuCursor":"{\"name\":\"default\",\"cursorImage\":\"\",\"cursorAnchor\":\"{\\\"x\\\":0,\\\"y\\\":0}\",\"cursorFrames\":\"1\",\"cursorSpeed\":\"40\",\"clickImage\":\"\",\"clickFrames\":\"1\",\"clickSpeed\":\"40\"}","presets":"[]","pixelPrecision":"true","detectMouseOut":"false"}},
{"name":"Tea_eventTriggerEvent","status":true,"description":"Allow events to trigger other events (Link below leads to YT tutorial for the plugin)","parameters":{}}
];
